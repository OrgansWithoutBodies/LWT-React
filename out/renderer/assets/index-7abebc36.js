function _mergeNamespaces(n2, m2) {
  for (var i = 0; i < m2.length; i++) {
    const e2 = m2[i];
    if (typeof e2 !== "string" && !Array.isArray(e2)) {
      for (const k2 in e2) {
        if (k2 !== "default" && !(k2 in n2)) {
          const d2 = Object.getOwnPropertyDescriptor(e2, k2);
          if (d2) {
            Object.defineProperty(n2, k2, d2.get ? d2 : {
              enumerable: true,
              get: () => e2[k2]
            });
          }
        }
      }
    }
  }
  return Object.freeze(Object.defineProperty(n2, Symbol.toStringTag, { value: "Module" }));
}
var commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
function getDefaultExportFromCjs(x2) {
  return x2 && x2.__esModule && Object.prototype.hasOwnProperty.call(x2, "default") ? x2["default"] : x2;
}
function getAugmentedNamespace(n2) {
  if (n2.__esModule)
    return n2;
  var f2 = n2.default;
  if (typeof f2 == "function") {
    var a = function a2() {
      if (this instanceof a2) {
        return Reflect.construct(f2, arguments, this.constructor);
      }
      return f2.apply(this, arguments);
    };
    a.prototype = f2.prototype;
  } else
    a = {};
  Object.defineProperty(a, "__esModule", { value: true });
  Object.keys(n2).forEach(function(k2) {
    var d2 = Object.getOwnPropertyDescriptor(n2, k2);
    Object.defineProperty(a, k2, d2.get ? d2 : {
      enumerable: true,
      get: function() {
        return n2[k2];
      }
    });
  });
  return a;
}
var jsxRuntime = { exports: {} };
var reactJsxRuntime_production_min = {};
var react = { exports: {} };
var react_production_min = {};
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var l$2 = Symbol.for("react.element"), n$2 = Symbol.for("react.portal"), p$3 = Symbol.for("react.fragment"), q$3 = Symbol.for("react.strict_mode"), r$1 = Symbol.for("react.profiler"), t$1 = Symbol.for("react.provider"), u = Symbol.for("react.context"), v$3 = Symbol.for("react.forward_ref"), w$2 = Symbol.for("react.suspense"), x$2 = Symbol.for("react.memo"), y$2 = Symbol.for("react.lazy"), z$3 = Symbol.iterator;
function A$3(a) {
  if (null === a || "object" !== typeof a)
    return null;
  a = z$3 && a[z$3] || a["@@iterator"];
  return "function" === typeof a ? a : null;
}
var B$2 = { isMounted: function() {
  return false;
}, enqueueForceUpdate: function() {
}, enqueueReplaceState: function() {
}, enqueueSetState: function() {
} }, C$2 = Object.assign, D$2 = {};
function E$2(a, b2, e2) {
  this.props = a;
  this.context = b2;
  this.refs = D$2;
  this.updater = e2 || B$2;
}
E$2.prototype.isReactComponent = {};
E$2.prototype.setState = function(a, b2) {
  if ("object" !== typeof a && "function" !== typeof a && null != a)
    throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
  this.updater.enqueueSetState(this, a, b2, "setState");
};
E$2.prototype.forceUpdate = function(a) {
  this.updater.enqueueForceUpdate(this, a, "forceUpdate");
};
function F$1() {
}
F$1.prototype = E$2.prototype;
function G$2(a, b2, e2) {
  this.props = a;
  this.context = b2;
  this.refs = D$2;
  this.updater = e2 || B$2;
}
var H$2 = G$2.prototype = new F$1();
H$2.constructor = G$2;
C$2(H$2, E$2.prototype);
H$2.isPureReactComponent = true;
var I$2 = Array.isArray, J$1 = Object.prototype.hasOwnProperty, K$2 = { current: null }, L$2 = { key: true, ref: true, __self: true, __source: true };
function M$2(a, b2, e2) {
  var d2, c2 = {}, k2 = null, h2 = null;
  if (null != b2)
    for (d2 in void 0 !== b2.ref && (h2 = b2.ref), void 0 !== b2.key && (k2 = "" + b2.key), b2)
      J$1.call(b2, d2) && !L$2.hasOwnProperty(d2) && (c2[d2] = b2[d2]);
  var g2 = arguments.length - 2;
  if (1 === g2)
    c2.children = e2;
  else if (1 < g2) {
    for (var f2 = Array(g2), m2 = 0; m2 < g2; m2++)
      f2[m2] = arguments[m2 + 2];
    c2.children = f2;
  }
  if (a && a.defaultProps)
    for (d2 in g2 = a.defaultProps, g2)
      void 0 === c2[d2] && (c2[d2] = g2[d2]);
  return { $$typeof: l$2, type: a, key: k2, ref: h2, props: c2, _owner: K$2.current };
}
function N$2(a, b2) {
  return { $$typeof: l$2, type: a.type, key: b2, ref: a.ref, props: a.props, _owner: a._owner };
}
function O$1(a) {
  return "object" === typeof a && null !== a && a.$$typeof === l$2;
}
function escape$1(a) {
  var b2 = { "=": "=0", ":": "=2" };
  return "$" + a.replace(/[=:]/g, function(a2) {
    return b2[a2];
  });
}
var P$2 = /\/+/g;
function Q$2(a, b2) {
  return "object" === typeof a && null !== a && null != a.key ? escape$1("" + a.key) : b2.toString(36);
}
function R$1(a, b2, e2, d2, c2) {
  var k2 = typeof a;
  if ("undefined" === k2 || "boolean" === k2)
    a = null;
  var h2 = false;
  if (null === a)
    h2 = true;
  else
    switch (k2) {
      case "string":
      case "number":
        h2 = true;
        break;
      case "object":
        switch (a.$$typeof) {
          case l$2:
          case n$2:
            h2 = true;
        }
    }
  if (h2)
    return h2 = a, c2 = c2(h2), a = "" === d2 ? "." + Q$2(h2, 0) : d2, I$2(c2) ? (e2 = "", null != a && (e2 = a.replace(P$2, "$&/") + "/"), R$1(c2, b2, e2, "", function(a2) {
      return a2;
    })) : null != c2 && (O$1(c2) && (c2 = N$2(c2, e2 + (!c2.key || h2 && h2.key === c2.key ? "" : ("" + c2.key).replace(P$2, "$&/") + "/") + a)), b2.push(c2)), 1;
  h2 = 0;
  d2 = "" === d2 ? "." : d2 + ":";
  if (I$2(a))
    for (var g2 = 0; g2 < a.length; g2++) {
      k2 = a[g2];
      var f2 = d2 + Q$2(k2, g2);
      h2 += R$1(k2, b2, e2, f2, c2);
    }
  else if (f2 = A$3(a), "function" === typeof f2)
    for (a = f2.call(a), g2 = 0; !(k2 = a.next()).done; )
      k2 = k2.value, f2 = d2 + Q$2(k2, g2++), h2 += R$1(k2, b2, e2, f2, c2);
  else if ("object" === k2)
    throw b2 = String(a), Error("Objects are not valid as a React child (found: " + ("[object Object]" === b2 ? "object with keys {" + Object.keys(a).join(", ") + "}" : b2) + "). If you meant to render a collection of children, use an array instead.");
  return h2;
}
function S$2(a, b2, e2) {
  if (null == a)
    return a;
  var d2 = [], c2 = 0;
  R$1(a, d2, "", "", function(a2) {
    return b2.call(e2, a2, c2++);
  });
  return d2;
}
function T$3(a) {
  if (-1 === a._status) {
    var b2 = a._result;
    b2 = b2();
    b2.then(function(b3) {
      if (0 === a._status || -1 === a._status)
        a._status = 1, a._result = b3;
    }, function(b3) {
      if (0 === a._status || -1 === a._status)
        a._status = 2, a._result = b3;
    });
    -1 === a._status && (a._status = 0, a._result = b2);
  }
  if (1 === a._status)
    return a._result.default;
  throw a._result;
}
var U$2 = { current: null }, V$2 = { transition: null }, W$2 = { ReactCurrentDispatcher: U$2, ReactCurrentBatchConfig: V$2, ReactCurrentOwner: K$2 };
react_production_min.Children = { map: S$2, forEach: function(a, b2, e2) {
  S$2(a, function() {
    b2.apply(this, arguments);
  }, e2);
}, count: function(a) {
  var b2 = 0;
  S$2(a, function() {
    b2++;
  });
  return b2;
}, toArray: function(a) {
  return S$2(a, function(a2) {
    return a2;
  }) || [];
}, only: function(a) {
  if (!O$1(a))
    throw Error("React.Children.only expected to receive a single React element child.");
  return a;
} };
react_production_min.Component = E$2;
react_production_min.Fragment = p$3;
react_production_min.Profiler = r$1;
react_production_min.PureComponent = G$2;
react_production_min.StrictMode = q$3;
react_production_min.Suspense = w$2;
react_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = W$2;
react_production_min.cloneElement = function(a, b2, e2) {
  if (null === a || void 0 === a)
    throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + a + ".");
  var d2 = C$2({}, a.props), c2 = a.key, k2 = a.ref, h2 = a._owner;
  if (null != b2) {
    void 0 !== b2.ref && (k2 = b2.ref, h2 = K$2.current);
    void 0 !== b2.key && (c2 = "" + b2.key);
    if (a.type && a.type.defaultProps)
      var g2 = a.type.defaultProps;
    for (f2 in b2)
      J$1.call(b2, f2) && !L$2.hasOwnProperty(f2) && (d2[f2] = void 0 === b2[f2] && void 0 !== g2 ? g2[f2] : b2[f2]);
  }
  var f2 = arguments.length - 2;
  if (1 === f2)
    d2.children = e2;
  else if (1 < f2) {
    g2 = Array(f2);
    for (var m2 = 0; m2 < f2; m2++)
      g2[m2] = arguments[m2 + 2];
    d2.children = g2;
  }
  return { $$typeof: l$2, type: a.type, key: c2, ref: k2, props: d2, _owner: h2 };
};
react_production_min.createContext = function(a) {
  a = { $$typeof: u, _currentValue: a, _currentValue2: a, _threadCount: 0, Provider: null, Consumer: null, _defaultValue: null, _globalName: null };
  a.Provider = { $$typeof: t$1, _context: a };
  return a.Consumer = a;
};
react_production_min.createElement = M$2;
react_production_min.createFactory = function(a) {
  var b2 = M$2.bind(null, a);
  b2.type = a;
  return b2;
};
react_production_min.createRef = function() {
  return { current: null };
};
react_production_min.forwardRef = function(a) {
  return { $$typeof: v$3, render: a };
};
react_production_min.isValidElement = O$1;
react_production_min.lazy = function(a) {
  return { $$typeof: y$2, _payload: { _status: -1, _result: a }, _init: T$3 };
};
react_production_min.memo = function(a, b2) {
  return { $$typeof: x$2, type: a, compare: void 0 === b2 ? null : b2 };
};
react_production_min.startTransition = function(a) {
  var b2 = V$2.transition;
  V$2.transition = {};
  try {
    a();
  } finally {
    V$2.transition = b2;
  }
};
react_production_min.unstable_act = function() {
  throw Error("act(...) is not supported in production builds of React.");
};
react_production_min.useCallback = function(a, b2) {
  return U$2.current.useCallback(a, b2);
};
react_production_min.useContext = function(a) {
  return U$2.current.useContext(a);
};
react_production_min.useDebugValue = function() {
};
react_production_min.useDeferredValue = function(a) {
  return U$2.current.useDeferredValue(a);
};
react_production_min.useEffect = function(a, b2) {
  return U$2.current.useEffect(a, b2);
};
react_production_min.useId = function() {
  return U$2.current.useId();
};
react_production_min.useImperativeHandle = function(a, b2, e2) {
  return U$2.current.useImperativeHandle(a, b2, e2);
};
react_production_min.useInsertionEffect = function(a, b2) {
  return U$2.current.useInsertionEffect(a, b2);
};
react_production_min.useLayoutEffect = function(a, b2) {
  return U$2.current.useLayoutEffect(a, b2);
};
react_production_min.useMemo = function(a, b2) {
  return U$2.current.useMemo(a, b2);
};
react_production_min.useReducer = function(a, b2, e2) {
  return U$2.current.useReducer(a, b2, e2);
};
react_production_min.useRef = function(a) {
  return U$2.current.useRef(a);
};
react_production_min.useState = function(a) {
  return U$2.current.useState(a);
};
react_production_min.useSyncExternalStore = function(a, b2, e2) {
  return U$2.current.useSyncExternalStore(a, b2, e2);
};
react_production_min.useTransition = function() {
  return U$2.current.useTransition();
};
react_production_min.version = "18.2.0";
{
  react.exports = react_production_min;
}
var reactExports = react.exports;
const React = /* @__PURE__ */ getDefaultExportFromCjs(reactExports);
const React$1 = /* @__PURE__ */ _mergeNamespaces({
  __proto__: null,
  default: React
}, [reactExports]);
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var f$1 = reactExports, k$2 = Symbol.for("react.element"), l$1 = Symbol.for("react.fragment"), m$3 = Object.prototype.hasOwnProperty, n$1 = f$1.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, p$2 = { key: true, ref: true, __self: true, __source: true };
function q$2(c2, a, g2) {
  var b2, d2 = {}, e2 = null, h2 = null;
  void 0 !== g2 && (e2 = "" + g2);
  void 0 !== a.key && (e2 = "" + a.key);
  void 0 !== a.ref && (h2 = a.ref);
  for (b2 in a)
    m$3.call(a, b2) && !p$2.hasOwnProperty(b2) && (d2[b2] = a[b2]);
  if (c2 && c2.defaultProps)
    for (b2 in a = c2.defaultProps, a)
      void 0 === d2[b2] && (d2[b2] = a[b2]);
  return { $$typeof: k$2, type: c2, key: e2, ref: h2, props: d2, _owner: n$1.current };
}
reactJsxRuntime_production_min.Fragment = l$1;
reactJsxRuntime_production_min.jsx = q$2;
reactJsxRuntime_production_min.jsxs = q$2;
{
  jsxRuntime.exports = reactJsxRuntime_production_min;
}
var jsxRuntimeExports = jsxRuntime.exports;
var client = {};
var reactDom = { exports: {} };
var reactDom_production_min = {};
var scheduler = { exports: {} };
var scheduler_production_min = {};
/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
(function(exports) {
  function f2(a, b2) {
    var c2 = a.length;
    a.push(b2);
    a:
      for (; 0 < c2; ) {
        var d2 = c2 - 1 >>> 1, e2 = a[d2];
        if (0 < g2(e2, b2))
          a[d2] = b2, a[c2] = e2, c2 = d2;
        else
          break a;
      }
  }
  function h2(a) {
    return 0 === a.length ? null : a[0];
  }
  function k2(a) {
    if (0 === a.length)
      return null;
    var b2 = a[0], c2 = a.pop();
    if (c2 !== b2) {
      a[0] = c2;
      a:
        for (var d2 = 0, e2 = a.length, w2 = e2 >>> 1; d2 < w2; ) {
          var m2 = 2 * (d2 + 1) - 1, C2 = a[m2], n2 = m2 + 1, x2 = a[n2];
          if (0 > g2(C2, c2))
            n2 < e2 && 0 > g2(x2, C2) ? (a[d2] = x2, a[n2] = c2, d2 = n2) : (a[d2] = C2, a[m2] = c2, d2 = m2);
          else if (n2 < e2 && 0 > g2(x2, c2))
            a[d2] = x2, a[n2] = c2, d2 = n2;
          else
            break a;
        }
    }
    return b2;
  }
  function g2(a, b2) {
    var c2 = a.sortIndex - b2.sortIndex;
    return 0 !== c2 ? c2 : a.id - b2.id;
  }
  if ("object" === typeof performance && "function" === typeof performance.now) {
    var l2 = performance;
    exports.unstable_now = function() {
      return l2.now();
    };
  } else {
    var p2 = Date, q2 = p2.now();
    exports.unstable_now = function() {
      return p2.now() - q2;
    };
  }
  var r2 = [], t2 = [], u2 = 1, v2 = null, y2 = 3, z2 = false, A2 = false, B2 = false, D2 = "function" === typeof setTimeout ? setTimeout : null, E2 = "function" === typeof clearTimeout ? clearTimeout : null, F2 = "undefined" !== typeof setImmediate ? setImmediate : null;
  "undefined" !== typeof navigator && void 0 !== navigator.scheduling && void 0 !== navigator.scheduling.isInputPending && navigator.scheduling.isInputPending.bind(navigator.scheduling);
  function G2(a) {
    for (var b2 = h2(t2); null !== b2; ) {
      if (null === b2.callback)
        k2(t2);
      else if (b2.startTime <= a)
        k2(t2), b2.sortIndex = b2.expirationTime, f2(r2, b2);
      else
        break;
      b2 = h2(t2);
    }
  }
  function H2(a) {
    B2 = false;
    G2(a);
    if (!A2)
      if (null !== h2(r2))
        A2 = true, I2(J2);
      else {
        var b2 = h2(t2);
        null !== b2 && K2(H2, b2.startTime - a);
      }
  }
  function J2(a, b2) {
    A2 = false;
    B2 && (B2 = false, E2(L2), L2 = -1);
    z2 = true;
    var c2 = y2;
    try {
      G2(b2);
      for (v2 = h2(r2); null !== v2 && (!(v2.expirationTime > b2) || a && !M2()); ) {
        var d2 = v2.callback;
        if ("function" === typeof d2) {
          v2.callback = null;
          y2 = v2.priorityLevel;
          var e2 = d2(v2.expirationTime <= b2);
          b2 = exports.unstable_now();
          "function" === typeof e2 ? v2.callback = e2 : v2 === h2(r2) && k2(r2);
          G2(b2);
        } else
          k2(r2);
        v2 = h2(r2);
      }
      if (null !== v2)
        var w2 = true;
      else {
        var m2 = h2(t2);
        null !== m2 && K2(H2, m2.startTime - b2);
        w2 = false;
      }
      return w2;
    } finally {
      v2 = null, y2 = c2, z2 = false;
    }
  }
  var N2 = false, O2 = null, L2 = -1, P2 = 5, Q2 = -1;
  function M2() {
    return exports.unstable_now() - Q2 < P2 ? false : true;
  }
  function R2() {
    if (null !== O2) {
      var a = exports.unstable_now();
      Q2 = a;
      var b2 = true;
      try {
        b2 = O2(true, a);
      } finally {
        b2 ? S2() : (N2 = false, O2 = null);
      }
    } else
      N2 = false;
  }
  var S2;
  if ("function" === typeof F2)
    S2 = function() {
      F2(R2);
    };
  else if ("undefined" !== typeof MessageChannel) {
    var T2 = new MessageChannel(), U2 = T2.port2;
    T2.port1.onmessage = R2;
    S2 = function() {
      U2.postMessage(null);
    };
  } else
    S2 = function() {
      D2(R2, 0);
    };
  function I2(a) {
    O2 = a;
    N2 || (N2 = true, S2());
  }
  function K2(a, b2) {
    L2 = D2(function() {
      a(exports.unstable_now());
    }, b2);
  }
  exports.unstable_IdlePriority = 5;
  exports.unstable_ImmediatePriority = 1;
  exports.unstable_LowPriority = 4;
  exports.unstable_NormalPriority = 3;
  exports.unstable_Profiling = null;
  exports.unstable_UserBlockingPriority = 2;
  exports.unstable_cancelCallback = function(a) {
    a.callback = null;
  };
  exports.unstable_continueExecution = function() {
    A2 || z2 || (A2 = true, I2(J2));
  };
  exports.unstable_forceFrameRate = function(a) {
    0 > a || 125 < a ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : P2 = 0 < a ? Math.floor(1e3 / a) : 5;
  };
  exports.unstable_getCurrentPriorityLevel = function() {
    return y2;
  };
  exports.unstable_getFirstCallbackNode = function() {
    return h2(r2);
  };
  exports.unstable_next = function(a) {
    switch (y2) {
      case 1:
      case 2:
      case 3:
        var b2 = 3;
        break;
      default:
        b2 = y2;
    }
    var c2 = y2;
    y2 = b2;
    try {
      return a();
    } finally {
      y2 = c2;
    }
  };
  exports.unstable_pauseExecution = function() {
  };
  exports.unstable_requestPaint = function() {
  };
  exports.unstable_runWithPriority = function(a, b2) {
    switch (a) {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
        break;
      default:
        a = 3;
    }
    var c2 = y2;
    y2 = a;
    try {
      return b2();
    } finally {
      y2 = c2;
    }
  };
  exports.unstable_scheduleCallback = function(a, b2, c2) {
    var d2 = exports.unstable_now();
    "object" === typeof c2 && null !== c2 ? (c2 = c2.delay, c2 = "number" === typeof c2 && 0 < c2 ? d2 + c2 : d2) : c2 = d2;
    switch (a) {
      case 1:
        var e2 = -1;
        break;
      case 2:
        e2 = 250;
        break;
      case 5:
        e2 = 1073741823;
        break;
      case 4:
        e2 = 1e4;
        break;
      default:
        e2 = 5e3;
    }
    e2 = c2 + e2;
    a = { id: u2++, callback: b2, priorityLevel: a, startTime: c2, expirationTime: e2, sortIndex: -1 };
    c2 > d2 ? (a.sortIndex = c2, f2(t2, a), null === h2(r2) && a === h2(t2) && (B2 ? (E2(L2), L2 = -1) : B2 = true, K2(H2, c2 - d2))) : (a.sortIndex = e2, f2(r2, a), A2 || z2 || (A2 = true, I2(J2)));
    return a;
  };
  exports.unstable_shouldYield = M2;
  exports.unstable_wrapCallback = function(a) {
    var b2 = y2;
    return function() {
      var c2 = y2;
      y2 = b2;
      try {
        return a.apply(this, arguments);
      } finally {
        y2 = c2;
      }
    };
  };
})(scheduler_production_min);
{
  scheduler.exports = scheduler_production_min;
}
var schedulerExports = scheduler.exports;
/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var aa = reactExports, ca = schedulerExports;
function p$1(a) {
  for (var b2 = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, c2 = 1; c2 < arguments.length; c2++)
    b2 += "&args[]=" + encodeURIComponent(arguments[c2]);
  return "Minified React error #" + a + "; visit " + b2 + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
}
var da = /* @__PURE__ */ new Set(), ea = {};
function fa(a, b2) {
  ha(a, b2);
  ha(a + "Capture", b2);
}
function ha(a, b2) {
  ea[a] = b2;
  for (a = 0; a < b2.length; a++)
    da.add(b2[a]);
}
var ia = !("undefined" === typeof window || "undefined" === typeof window.document || "undefined" === typeof window.document.createElement), ja = Object.prototype.hasOwnProperty, ka = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/, la = {}, ma = {};
function oa(a) {
  if (ja.call(ma, a))
    return true;
  if (ja.call(la, a))
    return false;
  if (ka.test(a))
    return ma[a] = true;
  la[a] = true;
  return false;
}
function pa(a, b2, c2, d2) {
  if (null !== c2 && 0 === c2.type)
    return false;
  switch (typeof b2) {
    case "function":
    case "symbol":
      return true;
    case "boolean":
      if (d2)
        return false;
      if (null !== c2)
        return !c2.acceptsBooleans;
      a = a.toLowerCase().slice(0, 5);
      return "data-" !== a && "aria-" !== a;
    default:
      return false;
  }
}
function qa(a, b2, c2, d2) {
  if (null === b2 || "undefined" === typeof b2 || pa(a, b2, c2, d2))
    return true;
  if (d2)
    return false;
  if (null !== c2)
    switch (c2.type) {
      case 3:
        return !b2;
      case 4:
        return false === b2;
      case 5:
        return isNaN(b2);
      case 6:
        return isNaN(b2) || 1 > b2;
    }
  return false;
}
function v$2(a, b2, c2, d2, e2, f2, g2) {
  this.acceptsBooleans = 2 === b2 || 3 === b2 || 4 === b2;
  this.attributeName = d2;
  this.attributeNamespace = e2;
  this.mustUseProperty = c2;
  this.propertyName = a;
  this.type = b2;
  this.sanitizeURL = f2;
  this.removeEmptyString = g2;
}
var z$2 = {};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a) {
  z$2[a] = new v$2(a, 0, false, a, null, false, false);
});
[["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(a) {
  var b2 = a[0];
  z$2[b2] = new v$2(b2, 1, false, a[1], null, false, false);
});
["contentEditable", "draggable", "spellCheck", "value"].forEach(function(a) {
  z$2[a] = new v$2(a, 2, false, a.toLowerCase(), null, false, false);
});
["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(a) {
  z$2[a] = new v$2(a, 2, false, a, null, false, false);
});
"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a) {
  z$2[a] = new v$2(a, 3, false, a.toLowerCase(), null, false, false);
});
["checked", "multiple", "muted", "selected"].forEach(function(a) {
  z$2[a] = new v$2(a, 3, true, a, null, false, false);
});
["capture", "download"].forEach(function(a) {
  z$2[a] = new v$2(a, 4, false, a, null, false, false);
});
["cols", "rows", "size", "span"].forEach(function(a) {
  z$2[a] = new v$2(a, 6, false, a, null, false, false);
});
["rowSpan", "start"].forEach(function(a) {
  z$2[a] = new v$2(a, 5, false, a.toLowerCase(), null, false, false);
});
var ra = /[\-:]([a-z])/g;
function sa(a) {
  return a[1].toUpperCase();
}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a) {
  var b2 = a.replace(
    ra,
    sa
  );
  z$2[b2] = new v$2(b2, 1, false, a, null, false, false);
});
"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a) {
  var b2 = a.replace(ra, sa);
  z$2[b2] = new v$2(b2, 1, false, a, "http://www.w3.org/1999/xlink", false, false);
});
["xml:base", "xml:lang", "xml:space"].forEach(function(a) {
  var b2 = a.replace(ra, sa);
  z$2[b2] = new v$2(b2, 1, false, a, "http://www.w3.org/XML/1998/namespace", false, false);
});
["tabIndex", "crossOrigin"].forEach(function(a) {
  z$2[a] = new v$2(a, 1, false, a.toLowerCase(), null, false, false);
});
z$2.xlinkHref = new v$2("xlinkHref", 1, false, "xlink:href", "http://www.w3.org/1999/xlink", true, false);
["src", "href", "action", "formAction"].forEach(function(a) {
  z$2[a] = new v$2(a, 1, false, a.toLowerCase(), null, true, true);
});
function ta(a, b2, c2, d2) {
  var e2 = z$2.hasOwnProperty(b2) ? z$2[b2] : null;
  if (null !== e2 ? 0 !== e2.type : d2 || !(2 < b2.length) || "o" !== b2[0] && "O" !== b2[0] || "n" !== b2[1] && "N" !== b2[1])
    qa(b2, c2, e2, d2) && (c2 = null), d2 || null === e2 ? oa(b2) && (null === c2 ? a.removeAttribute(b2) : a.setAttribute(b2, "" + c2)) : e2.mustUseProperty ? a[e2.propertyName] = null === c2 ? 3 === e2.type ? false : "" : c2 : (b2 = e2.attributeName, d2 = e2.attributeNamespace, null === c2 ? a.removeAttribute(b2) : (e2 = e2.type, c2 = 3 === e2 || 4 === e2 && true === c2 ? "" : "" + c2, d2 ? a.setAttributeNS(d2, b2, c2) : a.setAttribute(b2, c2)));
}
var ua = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, va = Symbol.for("react.element"), wa = Symbol.for("react.portal"), ya = Symbol.for("react.fragment"), za = Symbol.for("react.strict_mode"), Aa = Symbol.for("react.profiler"), Ba = Symbol.for("react.provider"), Ca = Symbol.for("react.context"), Da = Symbol.for("react.forward_ref"), Ea = Symbol.for("react.suspense"), Fa = Symbol.for("react.suspense_list"), Ga = Symbol.for("react.memo"), Ha = Symbol.for("react.lazy");
var Ia = Symbol.for("react.offscreen");
var Ja = Symbol.iterator;
function Ka(a) {
  if (null === a || "object" !== typeof a)
    return null;
  a = Ja && a[Ja] || a["@@iterator"];
  return "function" === typeof a ? a : null;
}
var A$2 = Object.assign, La;
function Ma(a) {
  if (void 0 === La)
    try {
      throw Error();
    } catch (c2) {
      var b2 = c2.stack.trim().match(/\n( *(at )?)/);
      La = b2 && b2[1] || "";
    }
  return "\n" + La + a;
}
var Na = false;
function Oa(a, b2) {
  if (!a || Na)
    return "";
  Na = true;
  var c2 = Error.prepareStackTrace;
  Error.prepareStackTrace = void 0;
  try {
    if (b2)
      if (b2 = function() {
        throw Error();
      }, Object.defineProperty(b2.prototype, "props", { set: function() {
        throw Error();
      } }), "object" === typeof Reflect && Reflect.construct) {
        try {
          Reflect.construct(b2, []);
        } catch (l2) {
          var d2 = l2;
        }
        Reflect.construct(a, [], b2);
      } else {
        try {
          b2.call();
        } catch (l2) {
          d2 = l2;
        }
        a.call(b2.prototype);
      }
    else {
      try {
        throw Error();
      } catch (l2) {
        d2 = l2;
      }
      a();
    }
  } catch (l2) {
    if (l2 && d2 && "string" === typeof l2.stack) {
      for (var e2 = l2.stack.split("\n"), f2 = d2.stack.split("\n"), g2 = e2.length - 1, h2 = f2.length - 1; 1 <= g2 && 0 <= h2 && e2[g2] !== f2[h2]; )
        h2--;
      for (; 1 <= g2 && 0 <= h2; g2--, h2--)
        if (e2[g2] !== f2[h2]) {
          if (1 !== g2 || 1 !== h2) {
            do
              if (g2--, h2--, 0 > h2 || e2[g2] !== f2[h2]) {
                var k2 = "\n" + e2[g2].replace(" at new ", " at ");
                a.displayName && k2.includes("<anonymous>") && (k2 = k2.replace("<anonymous>", a.displayName));
                return k2;
              }
            while (1 <= g2 && 0 <= h2);
          }
          break;
        }
    }
  } finally {
    Na = false, Error.prepareStackTrace = c2;
  }
  return (a = a ? a.displayName || a.name : "") ? Ma(a) : "";
}
function Pa(a) {
  switch (a.tag) {
    case 5:
      return Ma(a.type);
    case 16:
      return Ma("Lazy");
    case 13:
      return Ma("Suspense");
    case 19:
      return Ma("SuspenseList");
    case 0:
    case 2:
    case 15:
      return a = Oa(a.type, false), a;
    case 11:
      return a = Oa(a.type.render, false), a;
    case 1:
      return a = Oa(a.type, true), a;
    default:
      return "";
  }
}
function Qa(a) {
  if (null == a)
    return null;
  if ("function" === typeof a)
    return a.displayName || a.name || null;
  if ("string" === typeof a)
    return a;
  switch (a) {
    case ya:
      return "Fragment";
    case wa:
      return "Portal";
    case Aa:
      return "Profiler";
    case za:
      return "StrictMode";
    case Ea:
      return "Suspense";
    case Fa:
      return "SuspenseList";
  }
  if ("object" === typeof a)
    switch (a.$$typeof) {
      case Ca:
        return (a.displayName || "Context") + ".Consumer";
      case Ba:
        return (a._context.displayName || "Context") + ".Provider";
      case Da:
        var b2 = a.render;
        a = a.displayName;
        a || (a = b2.displayName || b2.name || "", a = "" !== a ? "ForwardRef(" + a + ")" : "ForwardRef");
        return a;
      case Ga:
        return b2 = a.displayName || null, null !== b2 ? b2 : Qa(a.type) || "Memo";
      case Ha:
        b2 = a._payload;
        a = a._init;
        try {
          return Qa(a(b2));
        } catch (c2) {
        }
    }
  return null;
}
function Ra(a) {
  var b2 = a.type;
  switch (a.tag) {
    case 24:
      return "Cache";
    case 9:
      return (b2.displayName || "Context") + ".Consumer";
    case 10:
      return (b2._context.displayName || "Context") + ".Provider";
    case 18:
      return "DehydratedFragment";
    case 11:
      return a = b2.render, a = a.displayName || a.name || "", b2.displayName || ("" !== a ? "ForwardRef(" + a + ")" : "ForwardRef");
    case 7:
      return "Fragment";
    case 5:
      return b2;
    case 4:
      return "Portal";
    case 3:
      return "Root";
    case 6:
      return "Text";
    case 16:
      return Qa(b2);
    case 8:
      return b2 === za ? "StrictMode" : "Mode";
    case 22:
      return "Offscreen";
    case 12:
      return "Profiler";
    case 21:
      return "Scope";
    case 13:
      return "Suspense";
    case 19:
      return "SuspenseList";
    case 25:
      return "TracingMarker";
    case 1:
    case 0:
    case 17:
    case 2:
    case 14:
    case 15:
      if ("function" === typeof b2)
        return b2.displayName || b2.name || null;
      if ("string" === typeof b2)
        return b2;
  }
  return null;
}
function Sa(a) {
  switch (typeof a) {
    case "boolean":
    case "number":
    case "string":
    case "undefined":
      return a;
    case "object":
      return a;
    default:
      return "";
  }
}
function Ta(a) {
  var b2 = a.type;
  return (a = a.nodeName) && "input" === a.toLowerCase() && ("checkbox" === b2 || "radio" === b2);
}
function Ua(a) {
  var b2 = Ta(a) ? "checked" : "value", c2 = Object.getOwnPropertyDescriptor(a.constructor.prototype, b2), d2 = "" + a[b2];
  if (!a.hasOwnProperty(b2) && "undefined" !== typeof c2 && "function" === typeof c2.get && "function" === typeof c2.set) {
    var e2 = c2.get, f2 = c2.set;
    Object.defineProperty(a, b2, { configurable: true, get: function() {
      return e2.call(this);
    }, set: function(a2) {
      d2 = "" + a2;
      f2.call(this, a2);
    } });
    Object.defineProperty(a, b2, { enumerable: c2.enumerable });
    return { getValue: function() {
      return d2;
    }, setValue: function(a2) {
      d2 = "" + a2;
    }, stopTracking: function() {
      a._valueTracker = null;
      delete a[b2];
    } };
  }
}
function Va(a) {
  a._valueTracker || (a._valueTracker = Ua(a));
}
function Wa(a) {
  if (!a)
    return false;
  var b2 = a._valueTracker;
  if (!b2)
    return true;
  var c2 = b2.getValue();
  var d2 = "";
  a && (d2 = Ta(a) ? a.checked ? "true" : "false" : a.value);
  a = d2;
  return a !== c2 ? (b2.setValue(a), true) : false;
}
function Xa(a) {
  a = a || ("undefined" !== typeof document ? document : void 0);
  if ("undefined" === typeof a)
    return null;
  try {
    return a.activeElement || a.body;
  } catch (b2) {
    return a.body;
  }
}
function Ya(a, b2) {
  var c2 = b2.checked;
  return A$2({}, b2, { defaultChecked: void 0, defaultValue: void 0, value: void 0, checked: null != c2 ? c2 : a._wrapperState.initialChecked });
}
function Za(a, b2) {
  var c2 = null == b2.defaultValue ? "" : b2.defaultValue, d2 = null != b2.checked ? b2.checked : b2.defaultChecked;
  c2 = Sa(null != b2.value ? b2.value : c2);
  a._wrapperState = { initialChecked: d2, initialValue: c2, controlled: "checkbox" === b2.type || "radio" === b2.type ? null != b2.checked : null != b2.value };
}
function ab(a, b2) {
  b2 = b2.checked;
  null != b2 && ta(a, "checked", b2, false);
}
function bb(a, b2) {
  ab(a, b2);
  var c2 = Sa(b2.value), d2 = b2.type;
  if (null != c2)
    if ("number" === d2) {
      if (0 === c2 && "" === a.value || a.value != c2)
        a.value = "" + c2;
    } else
      a.value !== "" + c2 && (a.value = "" + c2);
  else if ("submit" === d2 || "reset" === d2) {
    a.removeAttribute("value");
    return;
  }
  b2.hasOwnProperty("value") ? cb(a, b2.type, c2) : b2.hasOwnProperty("defaultValue") && cb(a, b2.type, Sa(b2.defaultValue));
  null == b2.checked && null != b2.defaultChecked && (a.defaultChecked = !!b2.defaultChecked);
}
function db(a, b2, c2) {
  if (b2.hasOwnProperty("value") || b2.hasOwnProperty("defaultValue")) {
    var d2 = b2.type;
    if (!("submit" !== d2 && "reset" !== d2 || void 0 !== b2.value && null !== b2.value))
      return;
    b2 = "" + a._wrapperState.initialValue;
    c2 || b2 === a.value || (a.value = b2);
    a.defaultValue = b2;
  }
  c2 = a.name;
  "" !== c2 && (a.name = "");
  a.defaultChecked = !!a._wrapperState.initialChecked;
  "" !== c2 && (a.name = c2);
}
function cb(a, b2, c2) {
  if ("number" !== b2 || Xa(a.ownerDocument) !== a)
    null == c2 ? a.defaultValue = "" + a._wrapperState.initialValue : a.defaultValue !== "" + c2 && (a.defaultValue = "" + c2);
}
var eb = Array.isArray;
function fb(a, b2, c2, d2) {
  a = a.options;
  if (b2) {
    b2 = {};
    for (var e2 = 0; e2 < c2.length; e2++)
      b2["$" + c2[e2]] = true;
    for (c2 = 0; c2 < a.length; c2++)
      e2 = b2.hasOwnProperty("$" + a[c2].value), a[c2].selected !== e2 && (a[c2].selected = e2), e2 && d2 && (a[c2].defaultSelected = true);
  } else {
    c2 = "" + Sa(c2);
    b2 = null;
    for (e2 = 0; e2 < a.length; e2++) {
      if (a[e2].value === c2) {
        a[e2].selected = true;
        d2 && (a[e2].defaultSelected = true);
        return;
      }
      null !== b2 || a[e2].disabled || (b2 = a[e2]);
    }
    null !== b2 && (b2.selected = true);
  }
}
function gb(a, b2) {
  if (null != b2.dangerouslySetInnerHTML)
    throw Error(p$1(91));
  return A$2({}, b2, { value: void 0, defaultValue: void 0, children: "" + a._wrapperState.initialValue });
}
function hb(a, b2) {
  var c2 = b2.value;
  if (null == c2) {
    c2 = b2.children;
    b2 = b2.defaultValue;
    if (null != c2) {
      if (null != b2)
        throw Error(p$1(92));
      if (eb(c2)) {
        if (1 < c2.length)
          throw Error(p$1(93));
        c2 = c2[0];
      }
      b2 = c2;
    }
    null == b2 && (b2 = "");
    c2 = b2;
  }
  a._wrapperState = { initialValue: Sa(c2) };
}
function ib(a, b2) {
  var c2 = Sa(b2.value), d2 = Sa(b2.defaultValue);
  null != c2 && (c2 = "" + c2, c2 !== a.value && (a.value = c2), null == b2.defaultValue && a.defaultValue !== c2 && (a.defaultValue = c2));
  null != d2 && (a.defaultValue = "" + d2);
}
function jb(a) {
  var b2 = a.textContent;
  b2 === a._wrapperState.initialValue && "" !== b2 && null !== b2 && (a.value = b2);
}
function kb(a) {
  switch (a) {
    case "svg":
      return "http://www.w3.org/2000/svg";
    case "math":
      return "http://www.w3.org/1998/Math/MathML";
    default:
      return "http://www.w3.org/1999/xhtml";
  }
}
function lb(a, b2) {
  return null == a || "http://www.w3.org/1999/xhtml" === a ? kb(b2) : "http://www.w3.org/2000/svg" === a && "foreignObject" === b2 ? "http://www.w3.org/1999/xhtml" : a;
}
var mb, nb = function(a) {
  return "undefined" !== typeof MSApp && MSApp.execUnsafeLocalFunction ? function(b2, c2, d2, e2) {
    MSApp.execUnsafeLocalFunction(function() {
      return a(b2, c2, d2, e2);
    });
  } : a;
}(function(a, b2) {
  if ("http://www.w3.org/2000/svg" !== a.namespaceURI || "innerHTML" in a)
    a.innerHTML = b2;
  else {
    mb = mb || document.createElement("div");
    mb.innerHTML = "<svg>" + b2.valueOf().toString() + "</svg>";
    for (b2 = mb.firstChild; a.firstChild; )
      a.removeChild(a.firstChild);
    for (; b2.firstChild; )
      a.appendChild(b2.firstChild);
  }
});
function ob(a, b2) {
  if (b2) {
    var c2 = a.firstChild;
    if (c2 && c2 === a.lastChild && 3 === c2.nodeType) {
      c2.nodeValue = b2;
      return;
    }
  }
  a.textContent = b2;
}
var pb = {
  animationIterationCount: true,
  aspectRatio: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  columns: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridArea: true,
  gridRow: true,
  gridRowEnd: true,
  gridRowSpan: true,
  gridRowStart: true,
  gridColumn: true,
  gridColumnEnd: true,
  gridColumnSpan: true,
  gridColumnStart: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
}, qb = ["Webkit", "ms", "Moz", "O"];
Object.keys(pb).forEach(function(a) {
  qb.forEach(function(b2) {
    b2 = b2 + a.charAt(0).toUpperCase() + a.substring(1);
    pb[b2] = pb[a];
  });
});
function rb(a, b2, c2) {
  return null == b2 || "boolean" === typeof b2 || "" === b2 ? "" : c2 || "number" !== typeof b2 || 0 === b2 || pb.hasOwnProperty(a) && pb[a] ? ("" + b2).trim() : b2 + "px";
}
function sb(a, b2) {
  a = a.style;
  for (var c2 in b2)
    if (b2.hasOwnProperty(c2)) {
      var d2 = 0 === c2.indexOf("--"), e2 = rb(c2, b2[c2], d2);
      "float" === c2 && (c2 = "cssFloat");
      d2 ? a.setProperty(c2, e2) : a[c2] = e2;
    }
}
var tb = A$2({ menuitem: true }, { area: true, base: true, br: true, col: true, embed: true, hr: true, img: true, input: true, keygen: true, link: true, meta: true, param: true, source: true, track: true, wbr: true });
function ub(a, b2) {
  if (b2) {
    if (tb[a] && (null != b2.children || null != b2.dangerouslySetInnerHTML))
      throw Error(p$1(137, a));
    if (null != b2.dangerouslySetInnerHTML) {
      if (null != b2.children)
        throw Error(p$1(60));
      if ("object" !== typeof b2.dangerouslySetInnerHTML || !("__html" in b2.dangerouslySetInnerHTML))
        throw Error(p$1(61));
    }
    if (null != b2.style && "object" !== typeof b2.style)
      throw Error(p$1(62));
  }
}
function vb(a, b2) {
  if (-1 === a.indexOf("-"))
    return "string" === typeof b2.is;
  switch (a) {
    case "annotation-xml":
    case "color-profile":
    case "font-face":
    case "font-face-src":
    case "font-face-uri":
    case "font-face-format":
    case "font-face-name":
    case "missing-glyph":
      return false;
    default:
      return true;
  }
}
var wb = null;
function xb(a) {
  a = a.target || a.srcElement || window;
  a.correspondingUseElement && (a = a.correspondingUseElement);
  return 3 === a.nodeType ? a.parentNode : a;
}
var yb = null, zb = null, Ab = null;
function Bb(a) {
  if (a = Cb(a)) {
    if ("function" !== typeof yb)
      throw Error(p$1(280));
    var b2 = a.stateNode;
    b2 && (b2 = Db(b2), yb(a.stateNode, a.type, b2));
  }
}
function Eb(a) {
  zb ? Ab ? Ab.push(a) : Ab = [a] : zb = a;
}
function Fb() {
  if (zb) {
    var a = zb, b2 = Ab;
    Ab = zb = null;
    Bb(a);
    if (b2)
      for (a = 0; a < b2.length; a++)
        Bb(b2[a]);
  }
}
function Gb(a, b2) {
  return a(b2);
}
function Hb() {
}
var Ib = false;
function Jb(a, b2, c2) {
  if (Ib)
    return a(b2, c2);
  Ib = true;
  try {
    return Gb(a, b2, c2);
  } finally {
    if (Ib = false, null !== zb || null !== Ab)
      Hb(), Fb();
  }
}
function Kb(a, b2) {
  var c2 = a.stateNode;
  if (null === c2)
    return null;
  var d2 = Db(c2);
  if (null === d2)
    return null;
  c2 = d2[b2];
  a:
    switch (b2) {
      case "onClick":
      case "onClickCapture":
      case "onDoubleClick":
      case "onDoubleClickCapture":
      case "onMouseDown":
      case "onMouseDownCapture":
      case "onMouseMove":
      case "onMouseMoveCapture":
      case "onMouseUp":
      case "onMouseUpCapture":
      case "onMouseEnter":
        (d2 = !d2.disabled) || (a = a.type, d2 = !("button" === a || "input" === a || "select" === a || "textarea" === a));
        a = !d2;
        break a;
      default:
        a = false;
    }
  if (a)
    return null;
  if (c2 && "function" !== typeof c2)
    throw Error(p$1(231, b2, typeof c2));
  return c2;
}
var Lb = false;
if (ia)
  try {
    var Mb = {};
    Object.defineProperty(Mb, "passive", { get: function() {
      Lb = true;
    } });
    window.addEventListener("test", Mb, Mb);
    window.removeEventListener("test", Mb, Mb);
  } catch (a) {
    Lb = false;
  }
function Nb(a, b2, c2, d2, e2, f2, g2, h2, k2) {
  var l2 = Array.prototype.slice.call(arguments, 3);
  try {
    b2.apply(c2, l2);
  } catch (m2) {
    this.onError(m2);
  }
}
var Ob = false, Pb = null, Qb = false, Rb = null, Sb = { onError: function(a) {
  Ob = true;
  Pb = a;
} };
function Tb(a, b2, c2, d2, e2, f2, g2, h2, k2) {
  Ob = false;
  Pb = null;
  Nb.apply(Sb, arguments);
}
function Ub(a, b2, c2, d2, e2, f2, g2, h2, k2) {
  Tb.apply(this, arguments);
  if (Ob) {
    if (Ob) {
      var l2 = Pb;
      Ob = false;
      Pb = null;
    } else
      throw Error(p$1(198));
    Qb || (Qb = true, Rb = l2);
  }
}
function Vb(a) {
  var b2 = a, c2 = a;
  if (a.alternate)
    for (; b2.return; )
      b2 = b2.return;
  else {
    a = b2;
    do
      b2 = a, 0 !== (b2.flags & 4098) && (c2 = b2.return), a = b2.return;
    while (a);
  }
  return 3 === b2.tag ? c2 : null;
}
function Wb(a) {
  if (13 === a.tag) {
    var b2 = a.memoizedState;
    null === b2 && (a = a.alternate, null !== a && (b2 = a.memoizedState));
    if (null !== b2)
      return b2.dehydrated;
  }
  return null;
}
function Xb(a) {
  if (Vb(a) !== a)
    throw Error(p$1(188));
}
function Yb(a) {
  var b2 = a.alternate;
  if (!b2) {
    b2 = Vb(a);
    if (null === b2)
      throw Error(p$1(188));
    return b2 !== a ? null : a;
  }
  for (var c2 = a, d2 = b2; ; ) {
    var e2 = c2.return;
    if (null === e2)
      break;
    var f2 = e2.alternate;
    if (null === f2) {
      d2 = e2.return;
      if (null !== d2) {
        c2 = d2;
        continue;
      }
      break;
    }
    if (e2.child === f2.child) {
      for (f2 = e2.child; f2; ) {
        if (f2 === c2)
          return Xb(e2), a;
        if (f2 === d2)
          return Xb(e2), b2;
        f2 = f2.sibling;
      }
      throw Error(p$1(188));
    }
    if (c2.return !== d2.return)
      c2 = e2, d2 = f2;
    else {
      for (var g2 = false, h2 = e2.child; h2; ) {
        if (h2 === c2) {
          g2 = true;
          c2 = e2;
          d2 = f2;
          break;
        }
        if (h2 === d2) {
          g2 = true;
          d2 = e2;
          c2 = f2;
          break;
        }
        h2 = h2.sibling;
      }
      if (!g2) {
        for (h2 = f2.child; h2; ) {
          if (h2 === c2) {
            g2 = true;
            c2 = f2;
            d2 = e2;
            break;
          }
          if (h2 === d2) {
            g2 = true;
            d2 = f2;
            c2 = e2;
            break;
          }
          h2 = h2.sibling;
        }
        if (!g2)
          throw Error(p$1(189));
      }
    }
    if (c2.alternate !== d2)
      throw Error(p$1(190));
  }
  if (3 !== c2.tag)
    throw Error(p$1(188));
  return c2.stateNode.current === c2 ? a : b2;
}
function Zb(a) {
  a = Yb(a);
  return null !== a ? $b(a) : null;
}
function $b(a) {
  if (5 === a.tag || 6 === a.tag)
    return a;
  for (a = a.child; null !== a; ) {
    var b2 = $b(a);
    if (null !== b2)
      return b2;
    a = a.sibling;
  }
  return null;
}
var ac = ca.unstable_scheduleCallback, bc = ca.unstable_cancelCallback, cc = ca.unstable_shouldYield, dc = ca.unstable_requestPaint, B$1 = ca.unstable_now, ec = ca.unstable_getCurrentPriorityLevel, fc = ca.unstable_ImmediatePriority, gc = ca.unstable_UserBlockingPriority, hc = ca.unstable_NormalPriority, ic = ca.unstable_LowPriority, jc = ca.unstable_IdlePriority, kc = null, lc = null;
function mc(a) {
  if (lc && "function" === typeof lc.onCommitFiberRoot)
    try {
      lc.onCommitFiberRoot(kc, a, void 0, 128 === (a.current.flags & 128));
    } catch (b2) {
    }
}
var oc = Math.clz32 ? Math.clz32 : nc, pc = Math.log, qc = Math.LN2;
function nc(a) {
  a >>>= 0;
  return 0 === a ? 32 : 31 - (pc(a) / qc | 0) | 0;
}
var rc = 64, sc = 4194304;
function tc(a) {
  switch (a & -a) {
    case 1:
      return 1;
    case 2:
      return 2;
    case 4:
      return 4;
    case 8:
      return 8;
    case 16:
      return 16;
    case 32:
      return 32;
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return a & 4194240;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return a & 130023424;
    case 134217728:
      return 134217728;
    case 268435456:
      return 268435456;
    case 536870912:
      return 536870912;
    case 1073741824:
      return 1073741824;
    default:
      return a;
  }
}
function uc(a, b2) {
  var c2 = a.pendingLanes;
  if (0 === c2)
    return 0;
  var d2 = 0, e2 = a.suspendedLanes, f2 = a.pingedLanes, g2 = c2 & 268435455;
  if (0 !== g2) {
    var h2 = g2 & ~e2;
    0 !== h2 ? d2 = tc(h2) : (f2 &= g2, 0 !== f2 && (d2 = tc(f2)));
  } else
    g2 = c2 & ~e2, 0 !== g2 ? d2 = tc(g2) : 0 !== f2 && (d2 = tc(f2));
  if (0 === d2)
    return 0;
  if (0 !== b2 && b2 !== d2 && 0 === (b2 & e2) && (e2 = d2 & -d2, f2 = b2 & -b2, e2 >= f2 || 16 === e2 && 0 !== (f2 & 4194240)))
    return b2;
  0 !== (d2 & 4) && (d2 |= c2 & 16);
  b2 = a.entangledLanes;
  if (0 !== b2)
    for (a = a.entanglements, b2 &= d2; 0 < b2; )
      c2 = 31 - oc(b2), e2 = 1 << c2, d2 |= a[c2], b2 &= ~e2;
  return d2;
}
function vc(a, b2) {
  switch (a) {
    case 1:
    case 2:
    case 4:
      return b2 + 250;
    case 8:
    case 16:
    case 32:
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return b2 + 5e3;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return -1;
    case 134217728:
    case 268435456:
    case 536870912:
    case 1073741824:
      return -1;
    default:
      return -1;
  }
}
function wc(a, b2) {
  for (var c2 = a.suspendedLanes, d2 = a.pingedLanes, e2 = a.expirationTimes, f2 = a.pendingLanes; 0 < f2; ) {
    var g2 = 31 - oc(f2), h2 = 1 << g2, k2 = e2[g2];
    if (-1 === k2) {
      if (0 === (h2 & c2) || 0 !== (h2 & d2))
        e2[g2] = vc(h2, b2);
    } else
      k2 <= b2 && (a.expiredLanes |= h2);
    f2 &= ~h2;
  }
}
function xc(a) {
  a = a.pendingLanes & -1073741825;
  return 0 !== a ? a : a & 1073741824 ? 1073741824 : 0;
}
function yc() {
  var a = rc;
  rc <<= 1;
  0 === (rc & 4194240) && (rc = 64);
  return a;
}
function zc(a) {
  for (var b2 = [], c2 = 0; 31 > c2; c2++)
    b2.push(a);
  return b2;
}
function Ac(a, b2, c2) {
  a.pendingLanes |= b2;
  536870912 !== b2 && (a.suspendedLanes = 0, a.pingedLanes = 0);
  a = a.eventTimes;
  b2 = 31 - oc(b2);
  a[b2] = c2;
}
function Bc(a, b2) {
  var c2 = a.pendingLanes & ~b2;
  a.pendingLanes = b2;
  a.suspendedLanes = 0;
  a.pingedLanes = 0;
  a.expiredLanes &= b2;
  a.mutableReadLanes &= b2;
  a.entangledLanes &= b2;
  b2 = a.entanglements;
  var d2 = a.eventTimes;
  for (a = a.expirationTimes; 0 < c2; ) {
    var e2 = 31 - oc(c2), f2 = 1 << e2;
    b2[e2] = 0;
    d2[e2] = -1;
    a[e2] = -1;
    c2 &= ~f2;
  }
}
function Cc(a, b2) {
  var c2 = a.entangledLanes |= b2;
  for (a = a.entanglements; c2; ) {
    var d2 = 31 - oc(c2), e2 = 1 << d2;
    e2 & b2 | a[d2] & b2 && (a[d2] |= b2);
    c2 &= ~e2;
  }
}
var C$1 = 0;
function Dc(a) {
  a &= -a;
  return 1 < a ? 4 < a ? 0 !== (a & 268435455) ? 16 : 536870912 : 4 : 1;
}
var Ec, Fc, Gc, Hc, Ic, Jc = false, Kc = [], Lc = null, Mc = null, Nc = null, Oc = /* @__PURE__ */ new Map(), Pc = /* @__PURE__ */ new Map(), Qc = [], Rc = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");
function Sc(a, b2) {
  switch (a) {
    case "focusin":
    case "focusout":
      Lc = null;
      break;
    case "dragenter":
    case "dragleave":
      Mc = null;
      break;
    case "mouseover":
    case "mouseout":
      Nc = null;
      break;
    case "pointerover":
    case "pointerout":
      Oc.delete(b2.pointerId);
      break;
    case "gotpointercapture":
    case "lostpointercapture":
      Pc.delete(b2.pointerId);
  }
}
function Tc(a, b2, c2, d2, e2, f2) {
  if (null === a || a.nativeEvent !== f2)
    return a = { blockedOn: b2, domEventName: c2, eventSystemFlags: d2, nativeEvent: f2, targetContainers: [e2] }, null !== b2 && (b2 = Cb(b2), null !== b2 && Fc(b2)), a;
  a.eventSystemFlags |= d2;
  b2 = a.targetContainers;
  null !== e2 && -1 === b2.indexOf(e2) && b2.push(e2);
  return a;
}
function Uc(a, b2, c2, d2, e2) {
  switch (b2) {
    case "focusin":
      return Lc = Tc(Lc, a, b2, c2, d2, e2), true;
    case "dragenter":
      return Mc = Tc(Mc, a, b2, c2, d2, e2), true;
    case "mouseover":
      return Nc = Tc(Nc, a, b2, c2, d2, e2), true;
    case "pointerover":
      var f2 = e2.pointerId;
      Oc.set(f2, Tc(Oc.get(f2) || null, a, b2, c2, d2, e2));
      return true;
    case "gotpointercapture":
      return f2 = e2.pointerId, Pc.set(f2, Tc(Pc.get(f2) || null, a, b2, c2, d2, e2)), true;
  }
  return false;
}
function Vc(a) {
  var b2 = Wc(a.target);
  if (null !== b2) {
    var c2 = Vb(b2);
    if (null !== c2) {
      if (b2 = c2.tag, 13 === b2) {
        if (b2 = Wb(c2), null !== b2) {
          a.blockedOn = b2;
          Ic(a.priority, function() {
            Gc(c2);
          });
          return;
        }
      } else if (3 === b2 && c2.stateNode.current.memoizedState.isDehydrated) {
        a.blockedOn = 3 === c2.tag ? c2.stateNode.containerInfo : null;
        return;
      }
    }
  }
  a.blockedOn = null;
}
function Xc(a) {
  if (null !== a.blockedOn)
    return false;
  for (var b2 = a.targetContainers; 0 < b2.length; ) {
    var c2 = Yc(a.domEventName, a.eventSystemFlags, b2[0], a.nativeEvent);
    if (null === c2) {
      c2 = a.nativeEvent;
      var d2 = new c2.constructor(c2.type, c2);
      wb = d2;
      c2.target.dispatchEvent(d2);
      wb = null;
    } else
      return b2 = Cb(c2), null !== b2 && Fc(b2), a.blockedOn = c2, false;
    b2.shift();
  }
  return true;
}
function Zc(a, b2, c2) {
  Xc(a) && c2.delete(b2);
}
function $c() {
  Jc = false;
  null !== Lc && Xc(Lc) && (Lc = null);
  null !== Mc && Xc(Mc) && (Mc = null);
  null !== Nc && Xc(Nc) && (Nc = null);
  Oc.forEach(Zc);
  Pc.forEach(Zc);
}
function ad(a, b2) {
  a.blockedOn === b2 && (a.blockedOn = null, Jc || (Jc = true, ca.unstable_scheduleCallback(ca.unstable_NormalPriority, $c)));
}
function bd(a) {
  function b2(b3) {
    return ad(b3, a);
  }
  if (0 < Kc.length) {
    ad(Kc[0], a);
    for (var c2 = 1; c2 < Kc.length; c2++) {
      var d2 = Kc[c2];
      d2.blockedOn === a && (d2.blockedOn = null);
    }
  }
  null !== Lc && ad(Lc, a);
  null !== Mc && ad(Mc, a);
  null !== Nc && ad(Nc, a);
  Oc.forEach(b2);
  Pc.forEach(b2);
  for (c2 = 0; c2 < Qc.length; c2++)
    d2 = Qc[c2], d2.blockedOn === a && (d2.blockedOn = null);
  for (; 0 < Qc.length && (c2 = Qc[0], null === c2.blockedOn); )
    Vc(c2), null === c2.blockedOn && Qc.shift();
}
var cd = ua.ReactCurrentBatchConfig, dd = true;
function ed(a, b2, c2, d2) {
  var e2 = C$1, f2 = cd.transition;
  cd.transition = null;
  try {
    C$1 = 1, fd(a, b2, c2, d2);
  } finally {
    C$1 = e2, cd.transition = f2;
  }
}
function gd(a, b2, c2, d2) {
  var e2 = C$1, f2 = cd.transition;
  cd.transition = null;
  try {
    C$1 = 4, fd(a, b2, c2, d2);
  } finally {
    C$1 = e2, cd.transition = f2;
  }
}
function fd(a, b2, c2, d2) {
  if (dd) {
    var e2 = Yc(a, b2, c2, d2);
    if (null === e2)
      hd(a, b2, d2, id, c2), Sc(a, d2);
    else if (Uc(e2, a, b2, c2, d2))
      d2.stopPropagation();
    else if (Sc(a, d2), b2 & 4 && -1 < Rc.indexOf(a)) {
      for (; null !== e2; ) {
        var f2 = Cb(e2);
        null !== f2 && Ec(f2);
        f2 = Yc(a, b2, c2, d2);
        null === f2 && hd(a, b2, d2, id, c2);
        if (f2 === e2)
          break;
        e2 = f2;
      }
      null !== e2 && d2.stopPropagation();
    } else
      hd(a, b2, d2, null, c2);
  }
}
var id = null;
function Yc(a, b2, c2, d2) {
  id = null;
  a = xb(d2);
  a = Wc(a);
  if (null !== a)
    if (b2 = Vb(a), null === b2)
      a = null;
    else if (c2 = b2.tag, 13 === c2) {
      a = Wb(b2);
      if (null !== a)
        return a;
      a = null;
    } else if (3 === c2) {
      if (b2.stateNode.current.memoizedState.isDehydrated)
        return 3 === b2.tag ? b2.stateNode.containerInfo : null;
      a = null;
    } else
      b2 !== a && (a = null);
  id = a;
  return null;
}
function jd(a) {
  switch (a) {
    case "cancel":
    case "click":
    case "close":
    case "contextmenu":
    case "copy":
    case "cut":
    case "auxclick":
    case "dblclick":
    case "dragend":
    case "dragstart":
    case "drop":
    case "focusin":
    case "focusout":
    case "input":
    case "invalid":
    case "keydown":
    case "keypress":
    case "keyup":
    case "mousedown":
    case "mouseup":
    case "paste":
    case "pause":
    case "play":
    case "pointercancel":
    case "pointerdown":
    case "pointerup":
    case "ratechange":
    case "reset":
    case "resize":
    case "seeked":
    case "submit":
    case "touchcancel":
    case "touchend":
    case "touchstart":
    case "volumechange":
    case "change":
    case "selectionchange":
    case "textInput":
    case "compositionstart":
    case "compositionend":
    case "compositionupdate":
    case "beforeblur":
    case "afterblur":
    case "beforeinput":
    case "blur":
    case "fullscreenchange":
    case "focus":
    case "hashchange":
    case "popstate":
    case "select":
    case "selectstart":
      return 1;
    case "drag":
    case "dragenter":
    case "dragexit":
    case "dragleave":
    case "dragover":
    case "mousemove":
    case "mouseout":
    case "mouseover":
    case "pointermove":
    case "pointerout":
    case "pointerover":
    case "scroll":
    case "toggle":
    case "touchmove":
    case "wheel":
    case "mouseenter":
    case "mouseleave":
    case "pointerenter":
    case "pointerleave":
      return 4;
    case "message":
      switch (ec()) {
        case fc:
          return 1;
        case gc:
          return 4;
        case hc:
        case ic:
          return 16;
        case jc:
          return 536870912;
        default:
          return 16;
      }
    default:
      return 16;
  }
}
var kd = null, ld = null, md = null;
function nd() {
  if (md)
    return md;
  var a, b2 = ld, c2 = b2.length, d2, e2 = "value" in kd ? kd.value : kd.textContent, f2 = e2.length;
  for (a = 0; a < c2 && b2[a] === e2[a]; a++)
    ;
  var g2 = c2 - a;
  for (d2 = 1; d2 <= g2 && b2[c2 - d2] === e2[f2 - d2]; d2++)
    ;
  return md = e2.slice(a, 1 < d2 ? 1 - d2 : void 0);
}
function od(a) {
  var b2 = a.keyCode;
  "charCode" in a ? (a = a.charCode, 0 === a && 13 === b2 && (a = 13)) : a = b2;
  10 === a && (a = 13);
  return 32 <= a || 13 === a ? a : 0;
}
function pd() {
  return true;
}
function qd() {
  return false;
}
function rd(a) {
  function b2(b3, d2, e2, f2, g2) {
    this._reactName = b3;
    this._targetInst = e2;
    this.type = d2;
    this.nativeEvent = f2;
    this.target = g2;
    this.currentTarget = null;
    for (var c2 in a)
      a.hasOwnProperty(c2) && (b3 = a[c2], this[c2] = b3 ? b3(f2) : f2[c2]);
    this.isDefaultPrevented = (null != f2.defaultPrevented ? f2.defaultPrevented : false === f2.returnValue) ? pd : qd;
    this.isPropagationStopped = qd;
    return this;
  }
  A$2(b2.prototype, { preventDefault: function() {
    this.defaultPrevented = true;
    var a2 = this.nativeEvent;
    a2 && (a2.preventDefault ? a2.preventDefault() : "unknown" !== typeof a2.returnValue && (a2.returnValue = false), this.isDefaultPrevented = pd);
  }, stopPropagation: function() {
    var a2 = this.nativeEvent;
    a2 && (a2.stopPropagation ? a2.stopPropagation() : "unknown" !== typeof a2.cancelBubble && (a2.cancelBubble = true), this.isPropagationStopped = pd);
  }, persist: function() {
  }, isPersistent: pd });
  return b2;
}
var sd = { eventPhase: 0, bubbles: 0, cancelable: 0, timeStamp: function(a) {
  return a.timeStamp || Date.now();
}, defaultPrevented: 0, isTrusted: 0 }, td = rd(sd), ud = A$2({}, sd, { view: 0, detail: 0 }), vd = rd(ud), wd, xd, yd, Ad = A$2({}, ud, { screenX: 0, screenY: 0, clientX: 0, clientY: 0, pageX: 0, pageY: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, getModifierState: zd, button: 0, buttons: 0, relatedTarget: function(a) {
  return void 0 === a.relatedTarget ? a.fromElement === a.srcElement ? a.toElement : a.fromElement : a.relatedTarget;
}, movementX: function(a) {
  if ("movementX" in a)
    return a.movementX;
  a !== yd && (yd && "mousemove" === a.type ? (wd = a.screenX - yd.screenX, xd = a.screenY - yd.screenY) : xd = wd = 0, yd = a);
  return wd;
}, movementY: function(a) {
  return "movementY" in a ? a.movementY : xd;
} }), Bd = rd(Ad), Cd = A$2({}, Ad, { dataTransfer: 0 }), Dd = rd(Cd), Ed = A$2({}, ud, { relatedTarget: 0 }), Fd = rd(Ed), Gd = A$2({}, sd, { animationName: 0, elapsedTime: 0, pseudoElement: 0 }), Hd = rd(Gd), Id = A$2({}, sd, { clipboardData: function(a) {
  return "clipboardData" in a ? a.clipboardData : window.clipboardData;
} }), Jd = rd(Id), Kd = A$2({}, sd, { data: 0 }), Ld = rd(Kd), Md = {
  Esc: "Escape",
  Spacebar: " ",
  Left: "ArrowLeft",
  Up: "ArrowUp",
  Right: "ArrowRight",
  Down: "ArrowDown",
  Del: "Delete",
  Win: "OS",
  Menu: "ContextMenu",
  Apps: "ContextMenu",
  Scroll: "ScrollLock",
  MozPrintableKey: "Unidentified"
}, Nd = {
  8: "Backspace",
  9: "Tab",
  12: "Clear",
  13: "Enter",
  16: "Shift",
  17: "Control",
  18: "Alt",
  19: "Pause",
  20: "CapsLock",
  27: "Escape",
  32: " ",
  33: "PageUp",
  34: "PageDown",
  35: "End",
  36: "Home",
  37: "ArrowLeft",
  38: "ArrowUp",
  39: "ArrowRight",
  40: "ArrowDown",
  45: "Insert",
  46: "Delete",
  112: "F1",
  113: "F2",
  114: "F3",
  115: "F4",
  116: "F5",
  117: "F6",
  118: "F7",
  119: "F8",
  120: "F9",
  121: "F10",
  122: "F11",
  123: "F12",
  144: "NumLock",
  145: "ScrollLock",
  224: "Meta"
}, Od = { Alt: "altKey", Control: "ctrlKey", Meta: "metaKey", Shift: "shiftKey" };
function Pd(a) {
  var b2 = this.nativeEvent;
  return b2.getModifierState ? b2.getModifierState(a) : (a = Od[a]) ? !!b2[a] : false;
}
function zd() {
  return Pd;
}
var Qd = A$2({}, ud, { key: function(a) {
  if (a.key) {
    var b2 = Md[a.key] || a.key;
    if ("Unidentified" !== b2)
      return b2;
  }
  return "keypress" === a.type ? (a = od(a), 13 === a ? "Enter" : String.fromCharCode(a)) : "keydown" === a.type || "keyup" === a.type ? Nd[a.keyCode] || "Unidentified" : "";
}, code: 0, location: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, repeat: 0, locale: 0, getModifierState: zd, charCode: function(a) {
  return "keypress" === a.type ? od(a) : 0;
}, keyCode: function(a) {
  return "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0;
}, which: function(a) {
  return "keypress" === a.type ? od(a) : "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0;
} }), Rd = rd(Qd), Sd = A$2({}, Ad, { pointerId: 0, width: 0, height: 0, pressure: 0, tangentialPressure: 0, tiltX: 0, tiltY: 0, twist: 0, pointerType: 0, isPrimary: 0 }), Td = rd(Sd), Ud = A$2({}, ud, { touches: 0, targetTouches: 0, changedTouches: 0, altKey: 0, metaKey: 0, ctrlKey: 0, shiftKey: 0, getModifierState: zd }), Vd = rd(Ud), Wd = A$2({}, sd, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 }), Xd = rd(Wd), Yd = A$2({}, Ad, {
  deltaX: function(a) {
    return "deltaX" in a ? a.deltaX : "wheelDeltaX" in a ? -a.wheelDeltaX : 0;
  },
  deltaY: function(a) {
    return "deltaY" in a ? a.deltaY : "wheelDeltaY" in a ? -a.wheelDeltaY : "wheelDelta" in a ? -a.wheelDelta : 0;
  },
  deltaZ: 0,
  deltaMode: 0
}), Zd = rd(Yd), $d = [9, 13, 27, 32], ae$1 = ia && "CompositionEvent" in window, be$1 = null;
ia && "documentMode" in document && (be$1 = document.documentMode);
var ce$1 = ia && "TextEvent" in window && !be$1, de$1 = ia && (!ae$1 || be$1 && 8 < be$1 && 11 >= be$1), ee$1 = String.fromCharCode(32), fe$1 = false;
function ge$1(a, b2) {
  switch (a) {
    case "keyup":
      return -1 !== $d.indexOf(b2.keyCode);
    case "keydown":
      return 229 !== b2.keyCode;
    case "keypress":
    case "mousedown":
    case "focusout":
      return true;
    default:
      return false;
  }
}
function he$1(a) {
  a = a.detail;
  return "object" === typeof a && "data" in a ? a.data : null;
}
var ie$1 = false;
function je$1(a, b2) {
  switch (a) {
    case "compositionend":
      return he$1(b2);
    case "keypress":
      if (32 !== b2.which)
        return null;
      fe$1 = true;
      return ee$1;
    case "textInput":
      return a = b2.data, a === ee$1 && fe$1 ? null : a;
    default:
      return null;
  }
}
function ke$1(a, b2) {
  if (ie$1)
    return "compositionend" === a || !ae$1 && ge$1(a, b2) ? (a = nd(), md = ld = kd = null, ie$1 = false, a) : null;
  switch (a) {
    case "paste":
      return null;
    case "keypress":
      if (!(b2.ctrlKey || b2.altKey || b2.metaKey) || b2.ctrlKey && b2.altKey) {
        if (b2.char && 1 < b2.char.length)
          return b2.char;
        if (b2.which)
          return String.fromCharCode(b2.which);
      }
      return null;
    case "compositionend":
      return de$1 && "ko" !== b2.locale ? null : b2.data;
    default:
      return null;
  }
}
var le$1 = { color: true, date: true, datetime: true, "datetime-local": true, email: true, month: true, number: true, password: true, range: true, search: true, tel: true, text: true, time: true, url: true, week: true };
function me(a) {
  var b2 = a && a.nodeName && a.nodeName.toLowerCase();
  return "input" === b2 ? !!le$1[a.type] : "textarea" === b2 ? true : false;
}
function ne$1(a, b2, c2, d2) {
  Eb(d2);
  b2 = oe$1(b2, "onChange");
  0 < b2.length && (c2 = new td("onChange", "change", null, c2, d2), a.push({ event: c2, listeners: b2 }));
}
var pe$1 = null, qe$1 = null;
function re$1(a) {
  se$1(a, 0);
}
function te$1(a) {
  var b2 = ue(a);
  if (Wa(b2))
    return a;
}
function ve$1(a, b2) {
  if ("change" === a)
    return b2;
}
var we$1 = false;
if (ia) {
  var xe$1;
  if (ia) {
    var ye$1 = "oninput" in document;
    if (!ye$1) {
      var ze$1 = document.createElement("div");
      ze$1.setAttribute("oninput", "return;");
      ye$1 = "function" === typeof ze$1.oninput;
    }
    xe$1 = ye$1;
  } else
    xe$1 = false;
  we$1 = xe$1 && (!document.documentMode || 9 < document.documentMode);
}
function Ae$1() {
  pe$1 && (pe$1.detachEvent("onpropertychange", Be$1), qe$1 = pe$1 = null);
}
function Be$1(a) {
  if ("value" === a.propertyName && te$1(qe$1)) {
    var b2 = [];
    ne$1(b2, qe$1, a, xb(a));
    Jb(re$1, b2);
  }
}
function Ce(a, b2, c2) {
  "focusin" === a ? (Ae$1(), pe$1 = b2, qe$1 = c2, pe$1.attachEvent("onpropertychange", Be$1)) : "focusout" === a && Ae$1();
}
function De$1(a) {
  if ("selectionchange" === a || "keyup" === a || "keydown" === a)
    return te$1(qe$1);
}
function Ee$1(a, b2) {
  if ("click" === a)
    return te$1(b2);
}
function Fe$1(a, b2) {
  if ("input" === a || "change" === a)
    return te$1(b2);
}
function Ge(a, b2) {
  return a === b2 && (0 !== a || 1 / a === 1 / b2) || a !== a && b2 !== b2;
}
var He$1 = "function" === typeof Object.is ? Object.is : Ge;
function Ie(a, b2) {
  if (He$1(a, b2))
    return true;
  if ("object" !== typeof a || null === a || "object" !== typeof b2 || null === b2)
    return false;
  var c2 = Object.keys(a), d2 = Object.keys(b2);
  if (c2.length !== d2.length)
    return false;
  for (d2 = 0; d2 < c2.length; d2++) {
    var e2 = c2[d2];
    if (!ja.call(b2, e2) || !He$1(a[e2], b2[e2]))
      return false;
  }
  return true;
}
function Je(a) {
  for (; a && a.firstChild; )
    a = a.firstChild;
  return a;
}
function Ke(a, b2) {
  var c2 = Je(a);
  a = 0;
  for (var d2; c2; ) {
    if (3 === c2.nodeType) {
      d2 = a + c2.textContent.length;
      if (a <= b2 && d2 >= b2)
        return { node: c2, offset: b2 - a };
      a = d2;
    }
    a: {
      for (; c2; ) {
        if (c2.nextSibling) {
          c2 = c2.nextSibling;
          break a;
        }
        c2 = c2.parentNode;
      }
      c2 = void 0;
    }
    c2 = Je(c2);
  }
}
function Le(a, b2) {
  return a && b2 ? a === b2 ? true : a && 3 === a.nodeType ? false : b2 && 3 === b2.nodeType ? Le(a, b2.parentNode) : "contains" in a ? a.contains(b2) : a.compareDocumentPosition ? !!(a.compareDocumentPosition(b2) & 16) : false : false;
}
function Me$1() {
  for (var a = window, b2 = Xa(); b2 instanceof a.HTMLIFrameElement; ) {
    try {
      var c2 = "string" === typeof b2.contentWindow.location.href;
    } catch (d2) {
      c2 = false;
    }
    if (c2)
      a = b2.contentWindow;
    else
      break;
    b2 = Xa(a.document);
  }
  return b2;
}
function Ne$1(a) {
  var b2 = a && a.nodeName && a.nodeName.toLowerCase();
  return b2 && ("input" === b2 && ("text" === a.type || "search" === a.type || "tel" === a.type || "url" === a.type || "password" === a.type) || "textarea" === b2 || "true" === a.contentEditable);
}
function Oe$1(a) {
  var b2 = Me$1(), c2 = a.focusedElem, d2 = a.selectionRange;
  if (b2 !== c2 && c2 && c2.ownerDocument && Le(c2.ownerDocument.documentElement, c2)) {
    if (null !== d2 && Ne$1(c2)) {
      if (b2 = d2.start, a = d2.end, void 0 === a && (a = b2), "selectionStart" in c2)
        c2.selectionStart = b2, c2.selectionEnd = Math.min(a, c2.value.length);
      else if (a = (b2 = c2.ownerDocument || document) && b2.defaultView || window, a.getSelection) {
        a = a.getSelection();
        var e2 = c2.textContent.length, f2 = Math.min(d2.start, e2);
        d2 = void 0 === d2.end ? f2 : Math.min(d2.end, e2);
        !a.extend && f2 > d2 && (e2 = d2, d2 = f2, f2 = e2);
        e2 = Ke(c2, f2);
        var g2 = Ke(
          c2,
          d2
        );
        e2 && g2 && (1 !== a.rangeCount || a.anchorNode !== e2.node || a.anchorOffset !== e2.offset || a.focusNode !== g2.node || a.focusOffset !== g2.offset) && (b2 = b2.createRange(), b2.setStart(e2.node, e2.offset), a.removeAllRanges(), f2 > d2 ? (a.addRange(b2), a.extend(g2.node, g2.offset)) : (b2.setEnd(g2.node, g2.offset), a.addRange(b2)));
      }
    }
    b2 = [];
    for (a = c2; a = a.parentNode; )
      1 === a.nodeType && b2.push({ element: a, left: a.scrollLeft, top: a.scrollTop });
    "function" === typeof c2.focus && c2.focus();
    for (c2 = 0; c2 < b2.length; c2++)
      a = b2[c2], a.element.scrollLeft = a.left, a.element.scrollTop = a.top;
  }
}
var Pe = ia && "documentMode" in document && 11 >= document.documentMode, Qe = null, Re$1 = null, Se$1 = null, Te$1 = false;
function Ue(a, b2, c2) {
  var d2 = c2.window === c2 ? c2.document : 9 === c2.nodeType ? c2 : c2.ownerDocument;
  Te$1 || null == Qe || Qe !== Xa(d2) || (d2 = Qe, "selectionStart" in d2 && Ne$1(d2) ? d2 = { start: d2.selectionStart, end: d2.selectionEnd } : (d2 = (d2.ownerDocument && d2.ownerDocument.defaultView || window).getSelection(), d2 = { anchorNode: d2.anchorNode, anchorOffset: d2.anchorOffset, focusNode: d2.focusNode, focusOffset: d2.focusOffset }), Se$1 && Ie(Se$1, d2) || (Se$1 = d2, d2 = oe$1(Re$1, "onSelect"), 0 < d2.length && (b2 = new td("onSelect", "select", null, b2, c2), a.push({ event: b2, listeners: d2 }), b2.target = Qe)));
}
function Ve$1(a, b2) {
  var c2 = {};
  c2[a.toLowerCase()] = b2.toLowerCase();
  c2["Webkit" + a] = "webkit" + b2;
  c2["Moz" + a] = "moz" + b2;
  return c2;
}
var We = { animationend: Ve$1("Animation", "AnimationEnd"), animationiteration: Ve$1("Animation", "AnimationIteration"), animationstart: Ve$1("Animation", "AnimationStart"), transitionend: Ve$1("Transition", "TransitionEnd") }, Xe = {}, Ye$1 = {};
ia && (Ye$1 = document.createElement("div").style, "AnimationEvent" in window || (delete We.animationend.animation, delete We.animationiteration.animation, delete We.animationstart.animation), "TransitionEvent" in window || delete We.transitionend.transition);
function Ze(a) {
  if (Xe[a])
    return Xe[a];
  if (!We[a])
    return a;
  var b2 = We[a], c2;
  for (c2 in b2)
    if (b2.hasOwnProperty(c2) && c2 in Ye$1)
      return Xe[a] = b2[c2];
  return a;
}
var $e$1 = Ze("animationend"), af = Ze("animationiteration"), bf = Ze("animationstart"), cf = Ze("transitionend"), df = /* @__PURE__ */ new Map(), ef = "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");
function ff(a, b2) {
  df.set(a, b2);
  fa(b2, [a]);
}
for (var gf = 0; gf < ef.length; gf++) {
  var hf = ef[gf], jf = hf.toLowerCase(), kf = hf[0].toUpperCase() + hf.slice(1);
  ff(jf, "on" + kf);
}
ff($e$1, "onAnimationEnd");
ff(af, "onAnimationIteration");
ff(bf, "onAnimationStart");
ff("dblclick", "onDoubleClick");
ff("focusin", "onFocus");
ff("focusout", "onBlur");
ff(cf, "onTransitionEnd");
ha("onMouseEnter", ["mouseout", "mouseover"]);
ha("onMouseLeave", ["mouseout", "mouseover"]);
ha("onPointerEnter", ["pointerout", "pointerover"]);
ha("onPointerLeave", ["pointerout", "pointerover"]);
fa("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" "));
fa("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));
fa("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]);
fa("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" "));
fa("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" "));
fa("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
var lf = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "), mf = new Set("cancel close invalid load scroll toggle".split(" ").concat(lf));
function nf(a, b2, c2) {
  var d2 = a.type || "unknown-event";
  a.currentTarget = c2;
  Ub(d2, b2, void 0, a);
  a.currentTarget = null;
}
function se$1(a, b2) {
  b2 = 0 !== (b2 & 4);
  for (var c2 = 0; c2 < a.length; c2++) {
    var d2 = a[c2], e2 = d2.event;
    d2 = d2.listeners;
    a: {
      var f2 = void 0;
      if (b2)
        for (var g2 = d2.length - 1; 0 <= g2; g2--) {
          var h2 = d2[g2], k2 = h2.instance, l2 = h2.currentTarget;
          h2 = h2.listener;
          if (k2 !== f2 && e2.isPropagationStopped())
            break a;
          nf(e2, h2, l2);
          f2 = k2;
        }
      else
        for (g2 = 0; g2 < d2.length; g2++) {
          h2 = d2[g2];
          k2 = h2.instance;
          l2 = h2.currentTarget;
          h2 = h2.listener;
          if (k2 !== f2 && e2.isPropagationStopped())
            break a;
          nf(e2, h2, l2);
          f2 = k2;
        }
    }
  }
  if (Qb)
    throw a = Rb, Qb = false, Rb = null, a;
}
function D$1(a, b2) {
  var c2 = b2[of$1];
  void 0 === c2 && (c2 = b2[of$1] = /* @__PURE__ */ new Set());
  var d2 = a + "__bubble";
  c2.has(d2) || (pf(b2, a, 2, false), c2.add(d2));
}
function qf(a, b2, c2) {
  var d2 = 0;
  b2 && (d2 |= 4);
  pf(c2, a, d2, b2);
}
var rf = "_reactListening" + Math.random().toString(36).slice(2);
function sf(a) {
  if (!a[rf]) {
    a[rf] = true;
    da.forEach(function(b3) {
      "selectionchange" !== b3 && (mf.has(b3) || qf(b3, false, a), qf(b3, true, a));
    });
    var b2 = 9 === a.nodeType ? a : a.ownerDocument;
    null === b2 || b2[rf] || (b2[rf] = true, qf("selectionchange", false, b2));
  }
}
function pf(a, b2, c2, d2) {
  switch (jd(b2)) {
    case 1:
      var e2 = ed;
      break;
    case 4:
      e2 = gd;
      break;
    default:
      e2 = fd;
  }
  c2 = e2.bind(null, b2, c2, a);
  e2 = void 0;
  !Lb || "touchstart" !== b2 && "touchmove" !== b2 && "wheel" !== b2 || (e2 = true);
  d2 ? void 0 !== e2 ? a.addEventListener(b2, c2, { capture: true, passive: e2 }) : a.addEventListener(b2, c2, true) : void 0 !== e2 ? a.addEventListener(b2, c2, { passive: e2 }) : a.addEventListener(b2, c2, false);
}
function hd(a, b2, c2, d2, e2) {
  var f2 = d2;
  if (0 === (b2 & 1) && 0 === (b2 & 2) && null !== d2)
    a:
      for (; ; ) {
        if (null === d2)
          return;
        var g2 = d2.tag;
        if (3 === g2 || 4 === g2) {
          var h2 = d2.stateNode.containerInfo;
          if (h2 === e2 || 8 === h2.nodeType && h2.parentNode === e2)
            break;
          if (4 === g2)
            for (g2 = d2.return; null !== g2; ) {
              var k2 = g2.tag;
              if (3 === k2 || 4 === k2) {
                if (k2 = g2.stateNode.containerInfo, k2 === e2 || 8 === k2.nodeType && k2.parentNode === e2)
                  return;
              }
              g2 = g2.return;
            }
          for (; null !== h2; ) {
            g2 = Wc(h2);
            if (null === g2)
              return;
            k2 = g2.tag;
            if (5 === k2 || 6 === k2) {
              d2 = f2 = g2;
              continue a;
            }
            h2 = h2.parentNode;
          }
        }
        d2 = d2.return;
      }
  Jb(function() {
    var d3 = f2, e3 = xb(c2), g3 = [];
    a: {
      var h3 = df.get(a);
      if (void 0 !== h3) {
        var k3 = td, n2 = a;
        switch (a) {
          case "keypress":
            if (0 === od(c2))
              break a;
          case "keydown":
          case "keyup":
            k3 = Rd;
            break;
          case "focusin":
            n2 = "focus";
            k3 = Fd;
            break;
          case "focusout":
            n2 = "blur";
            k3 = Fd;
            break;
          case "beforeblur":
          case "afterblur":
            k3 = Fd;
            break;
          case "click":
            if (2 === c2.button)
              break a;
          case "auxclick":
          case "dblclick":
          case "mousedown":
          case "mousemove":
          case "mouseup":
          case "mouseout":
          case "mouseover":
          case "contextmenu":
            k3 = Bd;
            break;
          case "drag":
          case "dragend":
          case "dragenter":
          case "dragexit":
          case "dragleave":
          case "dragover":
          case "dragstart":
          case "drop":
            k3 = Dd;
            break;
          case "touchcancel":
          case "touchend":
          case "touchmove":
          case "touchstart":
            k3 = Vd;
            break;
          case $e$1:
          case af:
          case bf:
            k3 = Hd;
            break;
          case cf:
            k3 = Xd;
            break;
          case "scroll":
            k3 = vd;
            break;
          case "wheel":
            k3 = Zd;
            break;
          case "copy":
          case "cut":
          case "paste":
            k3 = Jd;
            break;
          case "gotpointercapture":
          case "lostpointercapture":
          case "pointercancel":
          case "pointerdown":
          case "pointermove":
          case "pointerout":
          case "pointerover":
          case "pointerup":
            k3 = Td;
        }
        var t2 = 0 !== (b2 & 4), J2 = !t2 && "scroll" === a, x2 = t2 ? null !== h3 ? h3 + "Capture" : null : h3;
        t2 = [];
        for (var w2 = d3, u2; null !== w2; ) {
          u2 = w2;
          var F2 = u2.stateNode;
          5 === u2.tag && null !== F2 && (u2 = F2, null !== x2 && (F2 = Kb(w2, x2), null != F2 && t2.push(tf(w2, F2, u2))));
          if (J2)
            break;
          w2 = w2.return;
        }
        0 < t2.length && (h3 = new k3(h3, n2, null, c2, e3), g3.push({ event: h3, listeners: t2 }));
      }
    }
    if (0 === (b2 & 7)) {
      a: {
        h3 = "mouseover" === a || "pointerover" === a;
        k3 = "mouseout" === a || "pointerout" === a;
        if (h3 && c2 !== wb && (n2 = c2.relatedTarget || c2.fromElement) && (Wc(n2) || n2[uf]))
          break a;
        if (k3 || h3) {
          h3 = e3.window === e3 ? e3 : (h3 = e3.ownerDocument) ? h3.defaultView || h3.parentWindow : window;
          if (k3) {
            if (n2 = c2.relatedTarget || c2.toElement, k3 = d3, n2 = n2 ? Wc(n2) : null, null !== n2 && (J2 = Vb(n2), n2 !== J2 || 5 !== n2.tag && 6 !== n2.tag))
              n2 = null;
          } else
            k3 = null, n2 = d3;
          if (k3 !== n2) {
            t2 = Bd;
            F2 = "onMouseLeave";
            x2 = "onMouseEnter";
            w2 = "mouse";
            if ("pointerout" === a || "pointerover" === a)
              t2 = Td, F2 = "onPointerLeave", x2 = "onPointerEnter", w2 = "pointer";
            J2 = null == k3 ? h3 : ue(k3);
            u2 = null == n2 ? h3 : ue(n2);
            h3 = new t2(F2, w2 + "leave", k3, c2, e3);
            h3.target = J2;
            h3.relatedTarget = u2;
            F2 = null;
            Wc(e3) === d3 && (t2 = new t2(x2, w2 + "enter", n2, c2, e3), t2.target = u2, t2.relatedTarget = J2, F2 = t2);
            J2 = F2;
            if (k3 && n2)
              b: {
                t2 = k3;
                x2 = n2;
                w2 = 0;
                for (u2 = t2; u2; u2 = vf(u2))
                  w2++;
                u2 = 0;
                for (F2 = x2; F2; F2 = vf(F2))
                  u2++;
                for (; 0 < w2 - u2; )
                  t2 = vf(t2), w2--;
                for (; 0 < u2 - w2; )
                  x2 = vf(x2), u2--;
                for (; w2--; ) {
                  if (t2 === x2 || null !== x2 && t2 === x2.alternate)
                    break b;
                  t2 = vf(t2);
                  x2 = vf(x2);
                }
                t2 = null;
              }
            else
              t2 = null;
            null !== k3 && wf(g3, h3, k3, t2, false);
            null !== n2 && null !== J2 && wf(g3, J2, n2, t2, true);
          }
        }
      }
      a: {
        h3 = d3 ? ue(d3) : window;
        k3 = h3.nodeName && h3.nodeName.toLowerCase();
        if ("select" === k3 || "input" === k3 && "file" === h3.type)
          var na = ve$1;
        else if (me(h3))
          if (we$1)
            na = Fe$1;
          else {
            na = De$1;
            var xa = Ce;
          }
        else
          (k3 = h3.nodeName) && "input" === k3.toLowerCase() && ("checkbox" === h3.type || "radio" === h3.type) && (na = Ee$1);
        if (na && (na = na(a, d3))) {
          ne$1(g3, na, c2, e3);
          break a;
        }
        xa && xa(a, h3, d3);
        "focusout" === a && (xa = h3._wrapperState) && xa.controlled && "number" === h3.type && cb(h3, "number", h3.value);
      }
      xa = d3 ? ue(d3) : window;
      switch (a) {
        case "focusin":
          if (me(xa) || "true" === xa.contentEditable)
            Qe = xa, Re$1 = d3, Se$1 = null;
          break;
        case "focusout":
          Se$1 = Re$1 = Qe = null;
          break;
        case "mousedown":
          Te$1 = true;
          break;
        case "contextmenu":
        case "mouseup":
        case "dragend":
          Te$1 = false;
          Ue(g3, c2, e3);
          break;
        case "selectionchange":
          if (Pe)
            break;
        case "keydown":
        case "keyup":
          Ue(g3, c2, e3);
      }
      var $a;
      if (ae$1)
        b: {
          switch (a) {
            case "compositionstart":
              var ba = "onCompositionStart";
              break b;
            case "compositionend":
              ba = "onCompositionEnd";
              break b;
            case "compositionupdate":
              ba = "onCompositionUpdate";
              break b;
          }
          ba = void 0;
        }
      else
        ie$1 ? ge$1(a, c2) && (ba = "onCompositionEnd") : "keydown" === a && 229 === c2.keyCode && (ba = "onCompositionStart");
      ba && (de$1 && "ko" !== c2.locale && (ie$1 || "onCompositionStart" !== ba ? "onCompositionEnd" === ba && ie$1 && ($a = nd()) : (kd = e3, ld = "value" in kd ? kd.value : kd.textContent, ie$1 = true)), xa = oe$1(d3, ba), 0 < xa.length && (ba = new Ld(ba, a, null, c2, e3), g3.push({ event: ba, listeners: xa }), $a ? ba.data = $a : ($a = he$1(c2), null !== $a && (ba.data = $a))));
      if ($a = ce$1 ? je$1(a, c2) : ke$1(a, c2))
        d3 = oe$1(d3, "onBeforeInput"), 0 < d3.length && (e3 = new Ld("onBeforeInput", "beforeinput", null, c2, e3), g3.push({ event: e3, listeners: d3 }), e3.data = $a);
    }
    se$1(g3, b2);
  });
}
function tf(a, b2, c2) {
  return { instance: a, listener: b2, currentTarget: c2 };
}
function oe$1(a, b2) {
  for (var c2 = b2 + "Capture", d2 = []; null !== a; ) {
    var e2 = a, f2 = e2.stateNode;
    5 === e2.tag && null !== f2 && (e2 = f2, f2 = Kb(a, c2), null != f2 && d2.unshift(tf(a, f2, e2)), f2 = Kb(a, b2), null != f2 && d2.push(tf(a, f2, e2)));
    a = a.return;
  }
  return d2;
}
function vf(a) {
  if (null === a)
    return null;
  do
    a = a.return;
  while (a && 5 !== a.tag);
  return a ? a : null;
}
function wf(a, b2, c2, d2, e2) {
  for (var f2 = b2._reactName, g2 = []; null !== c2 && c2 !== d2; ) {
    var h2 = c2, k2 = h2.alternate, l2 = h2.stateNode;
    if (null !== k2 && k2 === d2)
      break;
    5 === h2.tag && null !== l2 && (h2 = l2, e2 ? (k2 = Kb(c2, f2), null != k2 && g2.unshift(tf(c2, k2, h2))) : e2 || (k2 = Kb(c2, f2), null != k2 && g2.push(tf(c2, k2, h2))));
    c2 = c2.return;
  }
  0 !== g2.length && a.push({ event: b2, listeners: g2 });
}
var xf = /\r\n?/g, yf = /\u0000|\uFFFD/g;
function zf(a) {
  return ("string" === typeof a ? a : "" + a).replace(xf, "\n").replace(yf, "");
}
function Af(a, b2, c2) {
  b2 = zf(b2);
  if (zf(a) !== b2 && c2)
    throw Error(p$1(425));
}
function Bf() {
}
var Cf = null, Df = null;
function Ef(a, b2) {
  return "textarea" === a || "noscript" === a || "string" === typeof b2.children || "number" === typeof b2.children || "object" === typeof b2.dangerouslySetInnerHTML && null !== b2.dangerouslySetInnerHTML && null != b2.dangerouslySetInnerHTML.__html;
}
var Ff = "function" === typeof setTimeout ? setTimeout : void 0, Gf = "function" === typeof clearTimeout ? clearTimeout : void 0, Hf = "function" === typeof Promise ? Promise : void 0, Jf = "function" === typeof queueMicrotask ? queueMicrotask : "undefined" !== typeof Hf ? function(a) {
  return Hf.resolve(null).then(a).catch(If);
} : Ff;
function If(a) {
  setTimeout(function() {
    throw a;
  });
}
function Kf(a, b2) {
  var c2 = b2, d2 = 0;
  do {
    var e2 = c2.nextSibling;
    a.removeChild(c2);
    if (e2 && 8 === e2.nodeType)
      if (c2 = e2.data, "/$" === c2) {
        if (0 === d2) {
          a.removeChild(e2);
          bd(b2);
          return;
        }
        d2--;
      } else
        "$" !== c2 && "$?" !== c2 && "$!" !== c2 || d2++;
    c2 = e2;
  } while (c2);
  bd(b2);
}
function Lf(a) {
  for (; null != a; a = a.nextSibling) {
    var b2 = a.nodeType;
    if (1 === b2 || 3 === b2)
      break;
    if (8 === b2) {
      b2 = a.data;
      if ("$" === b2 || "$!" === b2 || "$?" === b2)
        break;
      if ("/$" === b2)
        return null;
    }
  }
  return a;
}
function Mf(a) {
  a = a.previousSibling;
  for (var b2 = 0; a; ) {
    if (8 === a.nodeType) {
      var c2 = a.data;
      if ("$" === c2 || "$!" === c2 || "$?" === c2) {
        if (0 === b2)
          return a;
        b2--;
      } else
        "/$" === c2 && b2++;
    }
    a = a.previousSibling;
  }
  return null;
}
var Nf = Math.random().toString(36).slice(2), Of = "__reactFiber$" + Nf, Pf = "__reactProps$" + Nf, uf = "__reactContainer$" + Nf, of$1 = "__reactEvents$" + Nf, Qf = "__reactListeners$" + Nf, Rf = "__reactHandles$" + Nf;
function Wc(a) {
  var b2 = a[Of];
  if (b2)
    return b2;
  for (var c2 = a.parentNode; c2; ) {
    if (b2 = c2[uf] || c2[Of]) {
      c2 = b2.alternate;
      if (null !== b2.child || null !== c2 && null !== c2.child)
        for (a = Mf(a); null !== a; ) {
          if (c2 = a[Of])
            return c2;
          a = Mf(a);
        }
      return b2;
    }
    a = c2;
    c2 = a.parentNode;
  }
  return null;
}
function Cb(a) {
  a = a[Of] || a[uf];
  return !a || 5 !== a.tag && 6 !== a.tag && 13 !== a.tag && 3 !== a.tag ? null : a;
}
function ue(a) {
  if (5 === a.tag || 6 === a.tag)
    return a.stateNode;
  throw Error(p$1(33));
}
function Db(a) {
  return a[Pf] || null;
}
var Sf = [], Tf = -1;
function Uf(a) {
  return { current: a };
}
function E$1(a) {
  0 > Tf || (a.current = Sf[Tf], Sf[Tf] = null, Tf--);
}
function G$1(a, b2) {
  Tf++;
  Sf[Tf] = a.current;
  a.current = b2;
}
var Vf = {}, H$1 = Uf(Vf), Wf = Uf(false), Xf = Vf;
function Yf(a, b2) {
  var c2 = a.type.contextTypes;
  if (!c2)
    return Vf;
  var d2 = a.stateNode;
  if (d2 && d2.__reactInternalMemoizedUnmaskedChildContext === b2)
    return d2.__reactInternalMemoizedMaskedChildContext;
  var e2 = {}, f2;
  for (f2 in c2)
    e2[f2] = b2[f2];
  d2 && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = b2, a.__reactInternalMemoizedMaskedChildContext = e2);
  return e2;
}
function Zf(a) {
  a = a.childContextTypes;
  return null !== a && void 0 !== a;
}
function $f() {
  E$1(Wf);
  E$1(H$1);
}
function ag(a, b2, c2) {
  if (H$1.current !== Vf)
    throw Error(p$1(168));
  G$1(H$1, b2);
  G$1(Wf, c2);
}
function bg(a, b2, c2) {
  var d2 = a.stateNode;
  b2 = b2.childContextTypes;
  if ("function" !== typeof d2.getChildContext)
    return c2;
  d2 = d2.getChildContext();
  for (var e2 in d2)
    if (!(e2 in b2))
      throw Error(p$1(108, Ra(a) || "Unknown", e2));
  return A$2({}, c2, d2);
}
function cg(a) {
  a = (a = a.stateNode) && a.__reactInternalMemoizedMergedChildContext || Vf;
  Xf = H$1.current;
  G$1(H$1, a);
  G$1(Wf, Wf.current);
  return true;
}
function dg(a, b2, c2) {
  var d2 = a.stateNode;
  if (!d2)
    throw Error(p$1(169));
  c2 ? (a = bg(a, b2, Xf), d2.__reactInternalMemoizedMergedChildContext = a, E$1(Wf), E$1(H$1), G$1(H$1, a)) : E$1(Wf);
  G$1(Wf, c2);
}
var eg = null, fg = false, gg = false;
function hg(a) {
  null === eg ? eg = [a] : eg.push(a);
}
function ig(a) {
  fg = true;
  hg(a);
}
function jg() {
  if (!gg && null !== eg) {
    gg = true;
    var a = 0, b2 = C$1;
    try {
      var c2 = eg;
      for (C$1 = 1; a < c2.length; a++) {
        var d2 = c2[a];
        do
          d2 = d2(true);
        while (null !== d2);
      }
      eg = null;
      fg = false;
    } catch (e2) {
      throw null !== eg && (eg = eg.slice(a + 1)), ac(fc, jg), e2;
    } finally {
      C$1 = b2, gg = false;
    }
  }
  return null;
}
var kg = [], lg = 0, mg = null, ng = 0, og = [], pg = 0, qg = null, rg = 1, sg = "";
function tg(a, b2) {
  kg[lg++] = ng;
  kg[lg++] = mg;
  mg = a;
  ng = b2;
}
function ug(a, b2, c2) {
  og[pg++] = rg;
  og[pg++] = sg;
  og[pg++] = qg;
  qg = a;
  var d2 = rg;
  a = sg;
  var e2 = 32 - oc(d2) - 1;
  d2 &= ~(1 << e2);
  c2 += 1;
  var f2 = 32 - oc(b2) + e2;
  if (30 < f2) {
    var g2 = e2 - e2 % 5;
    f2 = (d2 & (1 << g2) - 1).toString(32);
    d2 >>= g2;
    e2 -= g2;
    rg = 1 << 32 - oc(b2) + e2 | c2 << e2 | d2;
    sg = f2 + a;
  } else
    rg = 1 << f2 | c2 << e2 | d2, sg = a;
}
function vg(a) {
  null !== a.return && (tg(a, 1), ug(a, 1, 0));
}
function wg(a) {
  for (; a === mg; )
    mg = kg[--lg], kg[lg] = null, ng = kg[--lg], kg[lg] = null;
  for (; a === qg; )
    qg = og[--pg], og[pg] = null, sg = og[--pg], og[pg] = null, rg = og[--pg], og[pg] = null;
}
var xg = null, yg = null, I$1 = false, zg = null;
function Ag(a, b2) {
  var c2 = Bg(5, null, null, 0);
  c2.elementType = "DELETED";
  c2.stateNode = b2;
  c2.return = a;
  b2 = a.deletions;
  null === b2 ? (a.deletions = [c2], a.flags |= 16) : b2.push(c2);
}
function Cg(a, b2) {
  switch (a.tag) {
    case 5:
      var c2 = a.type;
      b2 = 1 !== b2.nodeType || c2.toLowerCase() !== b2.nodeName.toLowerCase() ? null : b2;
      return null !== b2 ? (a.stateNode = b2, xg = a, yg = Lf(b2.firstChild), true) : false;
    case 6:
      return b2 = "" === a.pendingProps || 3 !== b2.nodeType ? null : b2, null !== b2 ? (a.stateNode = b2, xg = a, yg = null, true) : false;
    case 13:
      return b2 = 8 !== b2.nodeType ? null : b2, null !== b2 ? (c2 = null !== qg ? { id: rg, overflow: sg } : null, a.memoizedState = { dehydrated: b2, treeContext: c2, retryLane: 1073741824 }, c2 = Bg(18, null, null, 0), c2.stateNode = b2, c2.return = a, a.child = c2, xg = a, yg = null, true) : false;
    default:
      return false;
  }
}
function Dg(a) {
  return 0 !== (a.mode & 1) && 0 === (a.flags & 128);
}
function Eg(a) {
  if (I$1) {
    var b2 = yg;
    if (b2) {
      var c2 = b2;
      if (!Cg(a, b2)) {
        if (Dg(a))
          throw Error(p$1(418));
        b2 = Lf(c2.nextSibling);
        var d2 = xg;
        b2 && Cg(a, b2) ? Ag(d2, c2) : (a.flags = a.flags & -4097 | 2, I$1 = false, xg = a);
      }
    } else {
      if (Dg(a))
        throw Error(p$1(418));
      a.flags = a.flags & -4097 | 2;
      I$1 = false;
      xg = a;
    }
  }
}
function Fg(a) {
  for (a = a.return; null !== a && 5 !== a.tag && 3 !== a.tag && 13 !== a.tag; )
    a = a.return;
  xg = a;
}
function Gg(a) {
  if (a !== xg)
    return false;
  if (!I$1)
    return Fg(a), I$1 = true, false;
  var b2;
  (b2 = 3 !== a.tag) && !(b2 = 5 !== a.tag) && (b2 = a.type, b2 = "head" !== b2 && "body" !== b2 && !Ef(a.type, a.memoizedProps));
  if (b2 && (b2 = yg)) {
    if (Dg(a))
      throw Hg(), Error(p$1(418));
    for (; b2; )
      Ag(a, b2), b2 = Lf(b2.nextSibling);
  }
  Fg(a);
  if (13 === a.tag) {
    a = a.memoizedState;
    a = null !== a ? a.dehydrated : null;
    if (!a)
      throw Error(p$1(317));
    a: {
      a = a.nextSibling;
      for (b2 = 0; a; ) {
        if (8 === a.nodeType) {
          var c2 = a.data;
          if ("/$" === c2) {
            if (0 === b2) {
              yg = Lf(a.nextSibling);
              break a;
            }
            b2--;
          } else
            "$" !== c2 && "$!" !== c2 && "$?" !== c2 || b2++;
        }
        a = a.nextSibling;
      }
      yg = null;
    }
  } else
    yg = xg ? Lf(a.stateNode.nextSibling) : null;
  return true;
}
function Hg() {
  for (var a = yg; a; )
    a = Lf(a.nextSibling);
}
function Ig() {
  yg = xg = null;
  I$1 = false;
}
function Jg(a) {
  null === zg ? zg = [a] : zg.push(a);
}
var Kg = ua.ReactCurrentBatchConfig;
function Lg(a, b2) {
  if (a && a.defaultProps) {
    b2 = A$2({}, b2);
    a = a.defaultProps;
    for (var c2 in a)
      void 0 === b2[c2] && (b2[c2] = a[c2]);
    return b2;
  }
  return b2;
}
var Mg = Uf(null), Ng = null, Og = null, Pg = null;
function Qg() {
  Pg = Og = Ng = null;
}
function Rg(a) {
  var b2 = Mg.current;
  E$1(Mg);
  a._currentValue = b2;
}
function Sg(a, b2, c2) {
  for (; null !== a; ) {
    var d2 = a.alternate;
    (a.childLanes & b2) !== b2 ? (a.childLanes |= b2, null !== d2 && (d2.childLanes |= b2)) : null !== d2 && (d2.childLanes & b2) !== b2 && (d2.childLanes |= b2);
    if (a === c2)
      break;
    a = a.return;
  }
}
function Tg(a, b2) {
  Ng = a;
  Pg = Og = null;
  a = a.dependencies;
  null !== a && null !== a.firstContext && (0 !== (a.lanes & b2) && (Ug = true), a.firstContext = null);
}
function Vg(a) {
  var b2 = a._currentValue;
  if (Pg !== a)
    if (a = { context: a, memoizedValue: b2, next: null }, null === Og) {
      if (null === Ng)
        throw Error(p$1(308));
      Og = a;
      Ng.dependencies = { lanes: 0, firstContext: a };
    } else
      Og = Og.next = a;
  return b2;
}
var Wg = null;
function Xg(a) {
  null === Wg ? Wg = [a] : Wg.push(a);
}
function Yg(a, b2, c2, d2) {
  var e2 = b2.interleaved;
  null === e2 ? (c2.next = c2, Xg(b2)) : (c2.next = e2.next, e2.next = c2);
  b2.interleaved = c2;
  return Zg(a, d2);
}
function Zg(a, b2) {
  a.lanes |= b2;
  var c2 = a.alternate;
  null !== c2 && (c2.lanes |= b2);
  c2 = a;
  for (a = a.return; null !== a; )
    a.childLanes |= b2, c2 = a.alternate, null !== c2 && (c2.childLanes |= b2), c2 = a, a = a.return;
  return 3 === c2.tag ? c2.stateNode : null;
}
var $g = false;
function ah(a) {
  a.updateQueue = { baseState: a.memoizedState, firstBaseUpdate: null, lastBaseUpdate: null, shared: { pending: null, interleaved: null, lanes: 0 }, effects: null };
}
function bh(a, b2) {
  a = a.updateQueue;
  b2.updateQueue === a && (b2.updateQueue = { baseState: a.baseState, firstBaseUpdate: a.firstBaseUpdate, lastBaseUpdate: a.lastBaseUpdate, shared: a.shared, effects: a.effects });
}
function ch(a, b2) {
  return { eventTime: a, lane: b2, tag: 0, payload: null, callback: null, next: null };
}
function dh(a, b2, c2) {
  var d2 = a.updateQueue;
  if (null === d2)
    return null;
  d2 = d2.shared;
  if (0 !== (K$1 & 2)) {
    var e2 = d2.pending;
    null === e2 ? b2.next = b2 : (b2.next = e2.next, e2.next = b2);
    d2.pending = b2;
    return Zg(a, c2);
  }
  e2 = d2.interleaved;
  null === e2 ? (b2.next = b2, Xg(d2)) : (b2.next = e2.next, e2.next = b2);
  d2.interleaved = b2;
  return Zg(a, c2);
}
function eh(a, b2, c2) {
  b2 = b2.updateQueue;
  if (null !== b2 && (b2 = b2.shared, 0 !== (c2 & 4194240))) {
    var d2 = b2.lanes;
    d2 &= a.pendingLanes;
    c2 |= d2;
    b2.lanes = c2;
    Cc(a, c2);
  }
}
function fh(a, b2) {
  var c2 = a.updateQueue, d2 = a.alternate;
  if (null !== d2 && (d2 = d2.updateQueue, c2 === d2)) {
    var e2 = null, f2 = null;
    c2 = c2.firstBaseUpdate;
    if (null !== c2) {
      do {
        var g2 = { eventTime: c2.eventTime, lane: c2.lane, tag: c2.tag, payload: c2.payload, callback: c2.callback, next: null };
        null === f2 ? e2 = f2 = g2 : f2 = f2.next = g2;
        c2 = c2.next;
      } while (null !== c2);
      null === f2 ? e2 = f2 = b2 : f2 = f2.next = b2;
    } else
      e2 = f2 = b2;
    c2 = { baseState: d2.baseState, firstBaseUpdate: e2, lastBaseUpdate: f2, shared: d2.shared, effects: d2.effects };
    a.updateQueue = c2;
    return;
  }
  a = c2.lastBaseUpdate;
  null === a ? c2.firstBaseUpdate = b2 : a.next = b2;
  c2.lastBaseUpdate = b2;
}
function gh(a, b2, c2, d2) {
  var e2 = a.updateQueue;
  $g = false;
  var f2 = e2.firstBaseUpdate, g2 = e2.lastBaseUpdate, h2 = e2.shared.pending;
  if (null !== h2) {
    e2.shared.pending = null;
    var k2 = h2, l2 = k2.next;
    k2.next = null;
    null === g2 ? f2 = l2 : g2.next = l2;
    g2 = k2;
    var m2 = a.alternate;
    null !== m2 && (m2 = m2.updateQueue, h2 = m2.lastBaseUpdate, h2 !== g2 && (null === h2 ? m2.firstBaseUpdate = l2 : h2.next = l2, m2.lastBaseUpdate = k2));
  }
  if (null !== f2) {
    var q2 = e2.baseState;
    g2 = 0;
    m2 = l2 = k2 = null;
    h2 = f2;
    do {
      var r2 = h2.lane, y2 = h2.eventTime;
      if ((d2 & r2) === r2) {
        null !== m2 && (m2 = m2.next = {
          eventTime: y2,
          lane: 0,
          tag: h2.tag,
          payload: h2.payload,
          callback: h2.callback,
          next: null
        });
        a: {
          var n2 = a, t2 = h2;
          r2 = b2;
          y2 = c2;
          switch (t2.tag) {
            case 1:
              n2 = t2.payload;
              if ("function" === typeof n2) {
                q2 = n2.call(y2, q2, r2);
                break a;
              }
              q2 = n2;
              break a;
            case 3:
              n2.flags = n2.flags & -65537 | 128;
            case 0:
              n2 = t2.payload;
              r2 = "function" === typeof n2 ? n2.call(y2, q2, r2) : n2;
              if (null === r2 || void 0 === r2)
                break a;
              q2 = A$2({}, q2, r2);
              break a;
            case 2:
              $g = true;
          }
        }
        null !== h2.callback && 0 !== h2.lane && (a.flags |= 64, r2 = e2.effects, null === r2 ? e2.effects = [h2] : r2.push(h2));
      } else
        y2 = { eventTime: y2, lane: r2, tag: h2.tag, payload: h2.payload, callback: h2.callback, next: null }, null === m2 ? (l2 = m2 = y2, k2 = q2) : m2 = m2.next = y2, g2 |= r2;
      h2 = h2.next;
      if (null === h2)
        if (h2 = e2.shared.pending, null === h2)
          break;
        else
          r2 = h2, h2 = r2.next, r2.next = null, e2.lastBaseUpdate = r2, e2.shared.pending = null;
    } while (1);
    null === m2 && (k2 = q2);
    e2.baseState = k2;
    e2.firstBaseUpdate = l2;
    e2.lastBaseUpdate = m2;
    b2 = e2.shared.interleaved;
    if (null !== b2) {
      e2 = b2;
      do
        g2 |= e2.lane, e2 = e2.next;
      while (e2 !== b2);
    } else
      null === f2 && (e2.shared.lanes = 0);
    hh |= g2;
    a.lanes = g2;
    a.memoizedState = q2;
  }
}
function ih(a, b2, c2) {
  a = b2.effects;
  b2.effects = null;
  if (null !== a)
    for (b2 = 0; b2 < a.length; b2++) {
      var d2 = a[b2], e2 = d2.callback;
      if (null !== e2) {
        d2.callback = null;
        d2 = c2;
        if ("function" !== typeof e2)
          throw Error(p$1(191, e2));
        e2.call(d2);
      }
    }
}
var jh = new aa.Component().refs;
function kh(a, b2, c2, d2) {
  b2 = a.memoizedState;
  c2 = c2(d2, b2);
  c2 = null === c2 || void 0 === c2 ? b2 : A$2({}, b2, c2);
  a.memoizedState = c2;
  0 === a.lanes && (a.updateQueue.baseState = c2);
}
var nh = { isMounted: function(a) {
  return (a = a._reactInternals) ? Vb(a) === a : false;
}, enqueueSetState: function(a, b2, c2) {
  a = a._reactInternals;
  var d2 = L$1(), e2 = lh(a), f2 = ch(d2, e2);
  f2.payload = b2;
  void 0 !== c2 && null !== c2 && (f2.callback = c2);
  b2 = dh(a, f2, e2);
  null !== b2 && (mh(b2, a, e2, d2), eh(b2, a, e2));
}, enqueueReplaceState: function(a, b2, c2) {
  a = a._reactInternals;
  var d2 = L$1(), e2 = lh(a), f2 = ch(d2, e2);
  f2.tag = 1;
  f2.payload = b2;
  void 0 !== c2 && null !== c2 && (f2.callback = c2);
  b2 = dh(a, f2, e2);
  null !== b2 && (mh(b2, a, e2, d2), eh(b2, a, e2));
}, enqueueForceUpdate: function(a, b2) {
  a = a._reactInternals;
  var c2 = L$1(), d2 = lh(a), e2 = ch(c2, d2);
  e2.tag = 2;
  void 0 !== b2 && null !== b2 && (e2.callback = b2);
  b2 = dh(a, e2, d2);
  null !== b2 && (mh(b2, a, d2, c2), eh(b2, a, d2));
} };
function oh(a, b2, c2, d2, e2, f2, g2) {
  a = a.stateNode;
  return "function" === typeof a.shouldComponentUpdate ? a.shouldComponentUpdate(d2, f2, g2) : b2.prototype && b2.prototype.isPureReactComponent ? !Ie(c2, d2) || !Ie(e2, f2) : true;
}
function ph(a, b2, c2) {
  var d2 = false, e2 = Vf;
  var f2 = b2.contextType;
  "object" === typeof f2 && null !== f2 ? f2 = Vg(f2) : (e2 = Zf(b2) ? Xf : H$1.current, d2 = b2.contextTypes, f2 = (d2 = null !== d2 && void 0 !== d2) ? Yf(a, e2) : Vf);
  b2 = new b2(c2, f2);
  a.memoizedState = null !== b2.state && void 0 !== b2.state ? b2.state : null;
  b2.updater = nh;
  a.stateNode = b2;
  b2._reactInternals = a;
  d2 && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = e2, a.__reactInternalMemoizedMaskedChildContext = f2);
  return b2;
}
function qh(a, b2, c2, d2) {
  a = b2.state;
  "function" === typeof b2.componentWillReceiveProps && b2.componentWillReceiveProps(c2, d2);
  "function" === typeof b2.UNSAFE_componentWillReceiveProps && b2.UNSAFE_componentWillReceiveProps(c2, d2);
  b2.state !== a && nh.enqueueReplaceState(b2, b2.state, null);
}
function rh(a, b2, c2, d2) {
  var e2 = a.stateNode;
  e2.props = c2;
  e2.state = a.memoizedState;
  e2.refs = jh;
  ah(a);
  var f2 = b2.contextType;
  "object" === typeof f2 && null !== f2 ? e2.context = Vg(f2) : (f2 = Zf(b2) ? Xf : H$1.current, e2.context = Yf(a, f2));
  e2.state = a.memoizedState;
  f2 = b2.getDerivedStateFromProps;
  "function" === typeof f2 && (kh(a, b2, f2, c2), e2.state = a.memoizedState);
  "function" === typeof b2.getDerivedStateFromProps || "function" === typeof e2.getSnapshotBeforeUpdate || "function" !== typeof e2.UNSAFE_componentWillMount && "function" !== typeof e2.componentWillMount || (b2 = e2.state, "function" === typeof e2.componentWillMount && e2.componentWillMount(), "function" === typeof e2.UNSAFE_componentWillMount && e2.UNSAFE_componentWillMount(), b2 !== e2.state && nh.enqueueReplaceState(e2, e2.state, null), gh(a, c2, e2, d2), e2.state = a.memoizedState);
  "function" === typeof e2.componentDidMount && (a.flags |= 4194308);
}
function sh(a, b2, c2) {
  a = c2.ref;
  if (null !== a && "function" !== typeof a && "object" !== typeof a) {
    if (c2._owner) {
      c2 = c2._owner;
      if (c2) {
        if (1 !== c2.tag)
          throw Error(p$1(309));
        var d2 = c2.stateNode;
      }
      if (!d2)
        throw Error(p$1(147, a));
      var e2 = d2, f2 = "" + a;
      if (null !== b2 && null !== b2.ref && "function" === typeof b2.ref && b2.ref._stringRef === f2)
        return b2.ref;
      b2 = function(a2) {
        var b3 = e2.refs;
        b3 === jh && (b3 = e2.refs = {});
        null === a2 ? delete b3[f2] : b3[f2] = a2;
      };
      b2._stringRef = f2;
      return b2;
    }
    if ("string" !== typeof a)
      throw Error(p$1(284));
    if (!c2._owner)
      throw Error(p$1(290, a));
  }
  return a;
}
function th(a, b2) {
  a = Object.prototype.toString.call(b2);
  throw Error(p$1(31, "[object Object]" === a ? "object with keys {" + Object.keys(b2).join(", ") + "}" : a));
}
function uh(a) {
  var b2 = a._init;
  return b2(a._payload);
}
function vh(a) {
  function b2(b3, c3) {
    if (a) {
      var d3 = b3.deletions;
      null === d3 ? (b3.deletions = [c3], b3.flags |= 16) : d3.push(c3);
    }
  }
  function c2(c3, d3) {
    if (!a)
      return null;
    for (; null !== d3; )
      b2(c3, d3), d3 = d3.sibling;
    return null;
  }
  function d2(a2, b3) {
    for (a2 = /* @__PURE__ */ new Map(); null !== b3; )
      null !== b3.key ? a2.set(b3.key, b3) : a2.set(b3.index, b3), b3 = b3.sibling;
    return a2;
  }
  function e2(a2, b3) {
    a2 = wh(a2, b3);
    a2.index = 0;
    a2.sibling = null;
    return a2;
  }
  function f2(b3, c3, d3) {
    b3.index = d3;
    if (!a)
      return b3.flags |= 1048576, c3;
    d3 = b3.alternate;
    if (null !== d3)
      return d3 = d3.index, d3 < c3 ? (b3.flags |= 2, c3) : d3;
    b3.flags |= 2;
    return c3;
  }
  function g2(b3) {
    a && null === b3.alternate && (b3.flags |= 2);
    return b3;
  }
  function h2(a2, b3, c3, d3) {
    if (null === b3 || 6 !== b3.tag)
      return b3 = xh(c3, a2.mode, d3), b3.return = a2, b3;
    b3 = e2(b3, c3);
    b3.return = a2;
    return b3;
  }
  function k2(a2, b3, c3, d3) {
    var f3 = c3.type;
    if (f3 === ya)
      return m2(a2, b3, c3.props.children, d3, c3.key);
    if (null !== b3 && (b3.elementType === f3 || "object" === typeof f3 && null !== f3 && f3.$$typeof === Ha && uh(f3) === b3.type))
      return d3 = e2(b3, c3.props), d3.ref = sh(a2, b3, c3), d3.return = a2, d3;
    d3 = yh(c3.type, c3.key, c3.props, null, a2.mode, d3);
    d3.ref = sh(a2, b3, c3);
    d3.return = a2;
    return d3;
  }
  function l2(a2, b3, c3, d3) {
    if (null === b3 || 4 !== b3.tag || b3.stateNode.containerInfo !== c3.containerInfo || b3.stateNode.implementation !== c3.implementation)
      return b3 = zh(c3, a2.mode, d3), b3.return = a2, b3;
    b3 = e2(b3, c3.children || []);
    b3.return = a2;
    return b3;
  }
  function m2(a2, b3, c3, d3, f3) {
    if (null === b3 || 7 !== b3.tag)
      return b3 = Ah(c3, a2.mode, d3, f3), b3.return = a2, b3;
    b3 = e2(b3, c3);
    b3.return = a2;
    return b3;
  }
  function q2(a2, b3, c3) {
    if ("string" === typeof b3 && "" !== b3 || "number" === typeof b3)
      return b3 = xh("" + b3, a2.mode, c3), b3.return = a2, b3;
    if ("object" === typeof b3 && null !== b3) {
      switch (b3.$$typeof) {
        case va:
          return c3 = yh(b3.type, b3.key, b3.props, null, a2.mode, c3), c3.ref = sh(a2, null, b3), c3.return = a2, c3;
        case wa:
          return b3 = zh(b3, a2.mode, c3), b3.return = a2, b3;
        case Ha:
          var d3 = b3._init;
          return q2(a2, d3(b3._payload), c3);
      }
      if (eb(b3) || Ka(b3))
        return b3 = Ah(b3, a2.mode, c3, null), b3.return = a2, b3;
      th(a2, b3);
    }
    return null;
  }
  function r2(a2, b3, c3, d3) {
    var e3 = null !== b3 ? b3.key : null;
    if ("string" === typeof c3 && "" !== c3 || "number" === typeof c3)
      return null !== e3 ? null : h2(a2, b3, "" + c3, d3);
    if ("object" === typeof c3 && null !== c3) {
      switch (c3.$$typeof) {
        case va:
          return c3.key === e3 ? k2(a2, b3, c3, d3) : null;
        case wa:
          return c3.key === e3 ? l2(a2, b3, c3, d3) : null;
        case Ha:
          return e3 = c3._init, r2(
            a2,
            b3,
            e3(c3._payload),
            d3
          );
      }
      if (eb(c3) || Ka(c3))
        return null !== e3 ? null : m2(a2, b3, c3, d3, null);
      th(a2, c3);
    }
    return null;
  }
  function y2(a2, b3, c3, d3, e3) {
    if ("string" === typeof d3 && "" !== d3 || "number" === typeof d3)
      return a2 = a2.get(c3) || null, h2(b3, a2, "" + d3, e3);
    if ("object" === typeof d3 && null !== d3) {
      switch (d3.$$typeof) {
        case va:
          return a2 = a2.get(null === d3.key ? c3 : d3.key) || null, k2(b3, a2, d3, e3);
        case wa:
          return a2 = a2.get(null === d3.key ? c3 : d3.key) || null, l2(b3, a2, d3, e3);
        case Ha:
          var f3 = d3._init;
          return y2(a2, b3, c3, f3(d3._payload), e3);
      }
      if (eb(d3) || Ka(d3))
        return a2 = a2.get(c3) || null, m2(b3, a2, d3, e3, null);
      th(b3, d3);
    }
    return null;
  }
  function n2(e3, g3, h3, k3) {
    for (var l3 = null, m3 = null, u2 = g3, w2 = g3 = 0, x2 = null; null !== u2 && w2 < h3.length; w2++) {
      u2.index > w2 ? (x2 = u2, u2 = null) : x2 = u2.sibling;
      var n3 = r2(e3, u2, h3[w2], k3);
      if (null === n3) {
        null === u2 && (u2 = x2);
        break;
      }
      a && u2 && null === n3.alternate && b2(e3, u2);
      g3 = f2(n3, g3, w2);
      null === m3 ? l3 = n3 : m3.sibling = n3;
      m3 = n3;
      u2 = x2;
    }
    if (w2 === h3.length)
      return c2(e3, u2), I$1 && tg(e3, w2), l3;
    if (null === u2) {
      for (; w2 < h3.length; w2++)
        u2 = q2(e3, h3[w2], k3), null !== u2 && (g3 = f2(u2, g3, w2), null === m3 ? l3 = u2 : m3.sibling = u2, m3 = u2);
      I$1 && tg(e3, w2);
      return l3;
    }
    for (u2 = d2(e3, u2); w2 < h3.length; w2++)
      x2 = y2(u2, e3, w2, h3[w2], k3), null !== x2 && (a && null !== x2.alternate && u2.delete(null === x2.key ? w2 : x2.key), g3 = f2(x2, g3, w2), null === m3 ? l3 = x2 : m3.sibling = x2, m3 = x2);
    a && u2.forEach(function(a2) {
      return b2(e3, a2);
    });
    I$1 && tg(e3, w2);
    return l3;
  }
  function t2(e3, g3, h3, k3) {
    var l3 = Ka(h3);
    if ("function" !== typeof l3)
      throw Error(p$1(150));
    h3 = l3.call(h3);
    if (null == h3)
      throw Error(p$1(151));
    for (var u2 = l3 = null, m3 = g3, w2 = g3 = 0, x2 = null, n3 = h3.next(); null !== m3 && !n3.done; w2++, n3 = h3.next()) {
      m3.index > w2 ? (x2 = m3, m3 = null) : x2 = m3.sibling;
      var t3 = r2(e3, m3, n3.value, k3);
      if (null === t3) {
        null === m3 && (m3 = x2);
        break;
      }
      a && m3 && null === t3.alternate && b2(e3, m3);
      g3 = f2(t3, g3, w2);
      null === u2 ? l3 = t3 : u2.sibling = t3;
      u2 = t3;
      m3 = x2;
    }
    if (n3.done)
      return c2(
        e3,
        m3
      ), I$1 && tg(e3, w2), l3;
    if (null === m3) {
      for (; !n3.done; w2++, n3 = h3.next())
        n3 = q2(e3, n3.value, k3), null !== n3 && (g3 = f2(n3, g3, w2), null === u2 ? l3 = n3 : u2.sibling = n3, u2 = n3);
      I$1 && tg(e3, w2);
      return l3;
    }
    for (m3 = d2(e3, m3); !n3.done; w2++, n3 = h3.next())
      n3 = y2(m3, e3, w2, n3.value, k3), null !== n3 && (a && null !== n3.alternate && m3.delete(null === n3.key ? w2 : n3.key), g3 = f2(n3, g3, w2), null === u2 ? l3 = n3 : u2.sibling = n3, u2 = n3);
    a && m3.forEach(function(a2) {
      return b2(e3, a2);
    });
    I$1 && tg(e3, w2);
    return l3;
  }
  function J2(a2, d3, f3, h3) {
    "object" === typeof f3 && null !== f3 && f3.type === ya && null === f3.key && (f3 = f3.props.children);
    if ("object" === typeof f3 && null !== f3) {
      switch (f3.$$typeof) {
        case va:
          a: {
            for (var k3 = f3.key, l3 = d3; null !== l3; ) {
              if (l3.key === k3) {
                k3 = f3.type;
                if (k3 === ya) {
                  if (7 === l3.tag) {
                    c2(a2, l3.sibling);
                    d3 = e2(l3, f3.props.children);
                    d3.return = a2;
                    a2 = d3;
                    break a;
                  }
                } else if (l3.elementType === k3 || "object" === typeof k3 && null !== k3 && k3.$$typeof === Ha && uh(k3) === l3.type) {
                  c2(a2, l3.sibling);
                  d3 = e2(l3, f3.props);
                  d3.ref = sh(a2, l3, f3);
                  d3.return = a2;
                  a2 = d3;
                  break a;
                }
                c2(a2, l3);
                break;
              } else
                b2(a2, l3);
              l3 = l3.sibling;
            }
            f3.type === ya ? (d3 = Ah(f3.props.children, a2.mode, h3, f3.key), d3.return = a2, a2 = d3) : (h3 = yh(f3.type, f3.key, f3.props, null, a2.mode, h3), h3.ref = sh(a2, d3, f3), h3.return = a2, a2 = h3);
          }
          return g2(a2);
        case wa:
          a: {
            for (l3 = f3.key; null !== d3; ) {
              if (d3.key === l3)
                if (4 === d3.tag && d3.stateNode.containerInfo === f3.containerInfo && d3.stateNode.implementation === f3.implementation) {
                  c2(a2, d3.sibling);
                  d3 = e2(d3, f3.children || []);
                  d3.return = a2;
                  a2 = d3;
                  break a;
                } else {
                  c2(a2, d3);
                  break;
                }
              else
                b2(a2, d3);
              d3 = d3.sibling;
            }
            d3 = zh(f3, a2.mode, h3);
            d3.return = a2;
            a2 = d3;
          }
          return g2(a2);
        case Ha:
          return l3 = f3._init, J2(a2, d3, l3(f3._payload), h3);
      }
      if (eb(f3))
        return n2(a2, d3, f3, h3);
      if (Ka(f3))
        return t2(a2, d3, f3, h3);
      th(a2, f3);
    }
    return "string" === typeof f3 && "" !== f3 || "number" === typeof f3 ? (f3 = "" + f3, null !== d3 && 6 === d3.tag ? (c2(a2, d3.sibling), d3 = e2(d3, f3), d3.return = a2, a2 = d3) : (c2(a2, d3), d3 = xh(f3, a2.mode, h3), d3.return = a2, a2 = d3), g2(a2)) : c2(a2, d3);
  }
  return J2;
}
var Bh = vh(true), Ch = vh(false), Dh = {}, Eh = Uf(Dh), Fh = Uf(Dh), Gh = Uf(Dh);
function Hh(a) {
  if (a === Dh)
    throw Error(p$1(174));
  return a;
}
function Ih(a, b2) {
  G$1(Gh, b2);
  G$1(Fh, a);
  G$1(Eh, Dh);
  a = b2.nodeType;
  switch (a) {
    case 9:
    case 11:
      b2 = (b2 = b2.documentElement) ? b2.namespaceURI : lb(null, "");
      break;
    default:
      a = 8 === a ? b2.parentNode : b2, b2 = a.namespaceURI || null, a = a.tagName, b2 = lb(b2, a);
  }
  E$1(Eh);
  G$1(Eh, b2);
}
function Jh() {
  E$1(Eh);
  E$1(Fh);
  E$1(Gh);
}
function Kh(a) {
  Hh(Gh.current);
  var b2 = Hh(Eh.current);
  var c2 = lb(b2, a.type);
  b2 !== c2 && (G$1(Fh, a), G$1(Eh, c2));
}
function Lh(a) {
  Fh.current === a && (E$1(Eh), E$1(Fh));
}
var M$1 = Uf(0);
function Mh(a) {
  for (var b2 = a; null !== b2; ) {
    if (13 === b2.tag) {
      var c2 = b2.memoizedState;
      if (null !== c2 && (c2 = c2.dehydrated, null === c2 || "$?" === c2.data || "$!" === c2.data))
        return b2;
    } else if (19 === b2.tag && void 0 !== b2.memoizedProps.revealOrder) {
      if (0 !== (b2.flags & 128))
        return b2;
    } else if (null !== b2.child) {
      b2.child.return = b2;
      b2 = b2.child;
      continue;
    }
    if (b2 === a)
      break;
    for (; null === b2.sibling; ) {
      if (null === b2.return || b2.return === a)
        return null;
      b2 = b2.return;
    }
    b2.sibling.return = b2.return;
    b2 = b2.sibling;
  }
  return null;
}
var Nh = [];
function Oh() {
  for (var a = 0; a < Nh.length; a++)
    Nh[a]._workInProgressVersionPrimary = null;
  Nh.length = 0;
}
var Ph = ua.ReactCurrentDispatcher, Qh = ua.ReactCurrentBatchConfig, Rh = 0, N$1 = null, O = null, P$1 = null, Sh = false, Th = false, Uh = 0, Vh = 0;
function Q$1() {
  throw Error(p$1(321));
}
function Wh(a, b2) {
  if (null === b2)
    return false;
  for (var c2 = 0; c2 < b2.length && c2 < a.length; c2++)
    if (!He$1(a[c2], b2[c2]))
      return false;
  return true;
}
function Xh(a, b2, c2, d2, e2, f2) {
  Rh = f2;
  N$1 = b2;
  b2.memoizedState = null;
  b2.updateQueue = null;
  b2.lanes = 0;
  Ph.current = null === a || null === a.memoizedState ? Yh : Zh;
  a = c2(d2, e2);
  if (Th) {
    f2 = 0;
    do {
      Th = false;
      Uh = 0;
      if (25 <= f2)
        throw Error(p$1(301));
      f2 += 1;
      P$1 = O = null;
      b2.updateQueue = null;
      Ph.current = $h;
      a = c2(d2, e2);
    } while (Th);
  }
  Ph.current = ai;
  b2 = null !== O && null !== O.next;
  Rh = 0;
  P$1 = O = N$1 = null;
  Sh = false;
  if (b2)
    throw Error(p$1(300));
  return a;
}
function bi() {
  var a = 0 !== Uh;
  Uh = 0;
  return a;
}
function ci() {
  var a = { memoizedState: null, baseState: null, baseQueue: null, queue: null, next: null };
  null === P$1 ? N$1.memoizedState = P$1 = a : P$1 = P$1.next = a;
  return P$1;
}
function di() {
  if (null === O) {
    var a = N$1.alternate;
    a = null !== a ? a.memoizedState : null;
  } else
    a = O.next;
  var b2 = null === P$1 ? N$1.memoizedState : P$1.next;
  if (null !== b2)
    P$1 = b2, O = a;
  else {
    if (null === a)
      throw Error(p$1(310));
    O = a;
    a = { memoizedState: O.memoizedState, baseState: O.baseState, baseQueue: O.baseQueue, queue: O.queue, next: null };
    null === P$1 ? N$1.memoizedState = P$1 = a : P$1 = P$1.next = a;
  }
  return P$1;
}
function ei(a, b2) {
  return "function" === typeof b2 ? b2(a) : b2;
}
function fi(a) {
  var b2 = di(), c2 = b2.queue;
  if (null === c2)
    throw Error(p$1(311));
  c2.lastRenderedReducer = a;
  var d2 = O, e2 = d2.baseQueue, f2 = c2.pending;
  if (null !== f2) {
    if (null !== e2) {
      var g2 = e2.next;
      e2.next = f2.next;
      f2.next = g2;
    }
    d2.baseQueue = e2 = f2;
    c2.pending = null;
  }
  if (null !== e2) {
    f2 = e2.next;
    d2 = d2.baseState;
    var h2 = g2 = null, k2 = null, l2 = f2;
    do {
      var m2 = l2.lane;
      if ((Rh & m2) === m2)
        null !== k2 && (k2 = k2.next = { lane: 0, action: l2.action, hasEagerState: l2.hasEagerState, eagerState: l2.eagerState, next: null }), d2 = l2.hasEagerState ? l2.eagerState : a(d2, l2.action);
      else {
        var q2 = {
          lane: m2,
          action: l2.action,
          hasEagerState: l2.hasEagerState,
          eagerState: l2.eagerState,
          next: null
        };
        null === k2 ? (h2 = k2 = q2, g2 = d2) : k2 = k2.next = q2;
        N$1.lanes |= m2;
        hh |= m2;
      }
      l2 = l2.next;
    } while (null !== l2 && l2 !== f2);
    null === k2 ? g2 = d2 : k2.next = h2;
    He$1(d2, b2.memoizedState) || (Ug = true);
    b2.memoizedState = d2;
    b2.baseState = g2;
    b2.baseQueue = k2;
    c2.lastRenderedState = d2;
  }
  a = c2.interleaved;
  if (null !== a) {
    e2 = a;
    do
      f2 = e2.lane, N$1.lanes |= f2, hh |= f2, e2 = e2.next;
    while (e2 !== a);
  } else
    null === e2 && (c2.lanes = 0);
  return [b2.memoizedState, c2.dispatch];
}
function gi(a) {
  var b2 = di(), c2 = b2.queue;
  if (null === c2)
    throw Error(p$1(311));
  c2.lastRenderedReducer = a;
  var d2 = c2.dispatch, e2 = c2.pending, f2 = b2.memoizedState;
  if (null !== e2) {
    c2.pending = null;
    var g2 = e2 = e2.next;
    do
      f2 = a(f2, g2.action), g2 = g2.next;
    while (g2 !== e2);
    He$1(f2, b2.memoizedState) || (Ug = true);
    b2.memoizedState = f2;
    null === b2.baseQueue && (b2.baseState = f2);
    c2.lastRenderedState = f2;
  }
  return [f2, d2];
}
function hi() {
}
function ii(a, b2) {
  var c2 = N$1, d2 = di(), e2 = b2(), f2 = !He$1(d2.memoizedState, e2);
  f2 && (d2.memoizedState = e2, Ug = true);
  d2 = d2.queue;
  ji(ki.bind(null, c2, d2, a), [a]);
  if (d2.getSnapshot !== b2 || f2 || null !== P$1 && P$1.memoizedState.tag & 1) {
    c2.flags |= 2048;
    li(9, mi.bind(null, c2, d2, e2, b2), void 0, null);
    if (null === R)
      throw Error(p$1(349));
    0 !== (Rh & 30) || ni(c2, b2, e2);
  }
  return e2;
}
function ni(a, b2, c2) {
  a.flags |= 16384;
  a = { getSnapshot: b2, value: c2 };
  b2 = N$1.updateQueue;
  null === b2 ? (b2 = { lastEffect: null, stores: null }, N$1.updateQueue = b2, b2.stores = [a]) : (c2 = b2.stores, null === c2 ? b2.stores = [a] : c2.push(a));
}
function mi(a, b2, c2, d2) {
  b2.value = c2;
  b2.getSnapshot = d2;
  oi(b2) && pi(a);
}
function ki(a, b2, c2) {
  return c2(function() {
    oi(b2) && pi(a);
  });
}
function oi(a) {
  var b2 = a.getSnapshot;
  a = a.value;
  try {
    var c2 = b2();
    return !He$1(a, c2);
  } catch (d2) {
    return true;
  }
}
function pi(a) {
  var b2 = Zg(a, 1);
  null !== b2 && mh(b2, a, 1, -1);
}
function qi(a) {
  var b2 = ci();
  "function" === typeof a && (a = a());
  b2.memoizedState = b2.baseState = a;
  a = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: ei, lastRenderedState: a };
  b2.queue = a;
  a = a.dispatch = ri.bind(null, N$1, a);
  return [b2.memoizedState, a];
}
function li(a, b2, c2, d2) {
  a = { tag: a, create: b2, destroy: c2, deps: d2, next: null };
  b2 = N$1.updateQueue;
  null === b2 ? (b2 = { lastEffect: null, stores: null }, N$1.updateQueue = b2, b2.lastEffect = a.next = a) : (c2 = b2.lastEffect, null === c2 ? b2.lastEffect = a.next = a : (d2 = c2.next, c2.next = a, a.next = d2, b2.lastEffect = a));
  return a;
}
function si() {
  return di().memoizedState;
}
function ti(a, b2, c2, d2) {
  var e2 = ci();
  N$1.flags |= a;
  e2.memoizedState = li(1 | b2, c2, void 0, void 0 === d2 ? null : d2);
}
function ui(a, b2, c2, d2) {
  var e2 = di();
  d2 = void 0 === d2 ? null : d2;
  var f2 = void 0;
  if (null !== O) {
    var g2 = O.memoizedState;
    f2 = g2.destroy;
    if (null !== d2 && Wh(d2, g2.deps)) {
      e2.memoizedState = li(b2, c2, f2, d2);
      return;
    }
  }
  N$1.flags |= a;
  e2.memoizedState = li(1 | b2, c2, f2, d2);
}
function vi(a, b2) {
  return ti(8390656, 8, a, b2);
}
function ji(a, b2) {
  return ui(2048, 8, a, b2);
}
function wi(a, b2) {
  return ui(4, 2, a, b2);
}
function xi(a, b2) {
  return ui(4, 4, a, b2);
}
function yi(a, b2) {
  if ("function" === typeof b2)
    return a = a(), b2(a), function() {
      b2(null);
    };
  if (null !== b2 && void 0 !== b2)
    return a = a(), b2.current = a, function() {
      b2.current = null;
    };
}
function zi(a, b2, c2) {
  c2 = null !== c2 && void 0 !== c2 ? c2.concat([a]) : null;
  return ui(4, 4, yi.bind(null, b2, a), c2);
}
function Ai() {
}
function Bi(a, b2) {
  var c2 = di();
  b2 = void 0 === b2 ? null : b2;
  var d2 = c2.memoizedState;
  if (null !== d2 && null !== b2 && Wh(b2, d2[1]))
    return d2[0];
  c2.memoizedState = [a, b2];
  return a;
}
function Ci(a, b2) {
  var c2 = di();
  b2 = void 0 === b2 ? null : b2;
  var d2 = c2.memoizedState;
  if (null !== d2 && null !== b2 && Wh(b2, d2[1]))
    return d2[0];
  a = a();
  c2.memoizedState = [a, b2];
  return a;
}
function Di(a, b2, c2) {
  if (0 === (Rh & 21))
    return a.baseState && (a.baseState = false, Ug = true), a.memoizedState = c2;
  He$1(c2, b2) || (c2 = yc(), N$1.lanes |= c2, hh |= c2, a.baseState = true);
  return b2;
}
function Ei(a, b2) {
  var c2 = C$1;
  C$1 = 0 !== c2 && 4 > c2 ? c2 : 4;
  a(true);
  var d2 = Qh.transition;
  Qh.transition = {};
  try {
    a(false), b2();
  } finally {
    C$1 = c2, Qh.transition = d2;
  }
}
function Fi() {
  return di().memoizedState;
}
function Gi(a, b2, c2) {
  var d2 = lh(a);
  c2 = { lane: d2, action: c2, hasEagerState: false, eagerState: null, next: null };
  if (Hi(a))
    Ii(b2, c2);
  else if (c2 = Yg(a, b2, c2, d2), null !== c2) {
    var e2 = L$1();
    mh(c2, a, d2, e2);
    Ji(c2, b2, d2);
  }
}
function ri(a, b2, c2) {
  var d2 = lh(a), e2 = { lane: d2, action: c2, hasEagerState: false, eagerState: null, next: null };
  if (Hi(a))
    Ii(b2, e2);
  else {
    var f2 = a.alternate;
    if (0 === a.lanes && (null === f2 || 0 === f2.lanes) && (f2 = b2.lastRenderedReducer, null !== f2))
      try {
        var g2 = b2.lastRenderedState, h2 = f2(g2, c2);
        e2.hasEagerState = true;
        e2.eagerState = h2;
        if (He$1(h2, g2)) {
          var k2 = b2.interleaved;
          null === k2 ? (e2.next = e2, Xg(b2)) : (e2.next = k2.next, k2.next = e2);
          b2.interleaved = e2;
          return;
        }
      } catch (l2) {
      } finally {
      }
    c2 = Yg(a, b2, e2, d2);
    null !== c2 && (e2 = L$1(), mh(c2, a, d2, e2), Ji(c2, b2, d2));
  }
}
function Hi(a) {
  var b2 = a.alternate;
  return a === N$1 || null !== b2 && b2 === N$1;
}
function Ii(a, b2) {
  Th = Sh = true;
  var c2 = a.pending;
  null === c2 ? b2.next = b2 : (b2.next = c2.next, c2.next = b2);
  a.pending = b2;
}
function Ji(a, b2, c2) {
  if (0 !== (c2 & 4194240)) {
    var d2 = b2.lanes;
    d2 &= a.pendingLanes;
    c2 |= d2;
    b2.lanes = c2;
    Cc(a, c2);
  }
}
var ai = { readContext: Vg, useCallback: Q$1, useContext: Q$1, useEffect: Q$1, useImperativeHandle: Q$1, useInsertionEffect: Q$1, useLayoutEffect: Q$1, useMemo: Q$1, useReducer: Q$1, useRef: Q$1, useState: Q$1, useDebugValue: Q$1, useDeferredValue: Q$1, useTransition: Q$1, useMutableSource: Q$1, useSyncExternalStore: Q$1, useId: Q$1, unstable_isNewReconciler: false }, Yh = { readContext: Vg, useCallback: function(a, b2) {
  ci().memoizedState = [a, void 0 === b2 ? null : b2];
  return a;
}, useContext: Vg, useEffect: vi, useImperativeHandle: function(a, b2, c2) {
  c2 = null !== c2 && void 0 !== c2 ? c2.concat([a]) : null;
  return ti(
    4194308,
    4,
    yi.bind(null, b2, a),
    c2
  );
}, useLayoutEffect: function(a, b2) {
  return ti(4194308, 4, a, b2);
}, useInsertionEffect: function(a, b2) {
  return ti(4, 2, a, b2);
}, useMemo: function(a, b2) {
  var c2 = ci();
  b2 = void 0 === b2 ? null : b2;
  a = a();
  c2.memoizedState = [a, b2];
  return a;
}, useReducer: function(a, b2, c2) {
  var d2 = ci();
  b2 = void 0 !== c2 ? c2(b2) : b2;
  d2.memoizedState = d2.baseState = b2;
  a = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: a, lastRenderedState: b2 };
  d2.queue = a;
  a = a.dispatch = Gi.bind(null, N$1, a);
  return [d2.memoizedState, a];
}, useRef: function(a) {
  var b2 = ci();
  a = { current: a };
  return b2.memoizedState = a;
}, useState: qi, useDebugValue: Ai, useDeferredValue: function(a) {
  return ci().memoizedState = a;
}, useTransition: function() {
  var a = qi(false), b2 = a[0];
  a = Ei.bind(null, a[1]);
  ci().memoizedState = a;
  return [b2, a];
}, useMutableSource: function() {
}, useSyncExternalStore: function(a, b2, c2) {
  var d2 = N$1, e2 = ci();
  if (I$1) {
    if (void 0 === c2)
      throw Error(p$1(407));
    c2 = c2();
  } else {
    c2 = b2();
    if (null === R)
      throw Error(p$1(349));
    0 !== (Rh & 30) || ni(d2, b2, c2);
  }
  e2.memoizedState = c2;
  var f2 = { value: c2, getSnapshot: b2 };
  e2.queue = f2;
  vi(ki.bind(
    null,
    d2,
    f2,
    a
  ), [a]);
  d2.flags |= 2048;
  li(9, mi.bind(null, d2, f2, c2, b2), void 0, null);
  return c2;
}, useId: function() {
  var a = ci(), b2 = R.identifierPrefix;
  if (I$1) {
    var c2 = sg;
    var d2 = rg;
    c2 = (d2 & ~(1 << 32 - oc(d2) - 1)).toString(32) + c2;
    b2 = ":" + b2 + "R" + c2;
    c2 = Uh++;
    0 < c2 && (b2 += "H" + c2.toString(32));
    b2 += ":";
  } else
    c2 = Vh++, b2 = ":" + b2 + "r" + c2.toString(32) + ":";
  return a.memoizedState = b2;
}, unstable_isNewReconciler: false }, Zh = {
  readContext: Vg,
  useCallback: Bi,
  useContext: Vg,
  useEffect: ji,
  useImperativeHandle: zi,
  useInsertionEffect: wi,
  useLayoutEffect: xi,
  useMemo: Ci,
  useReducer: fi,
  useRef: si,
  useState: function() {
    return fi(ei);
  },
  useDebugValue: Ai,
  useDeferredValue: function(a) {
    var b2 = di();
    return Di(b2, O.memoizedState, a);
  },
  useTransition: function() {
    var a = fi(ei)[0], b2 = di().memoizedState;
    return [a, b2];
  },
  useMutableSource: hi,
  useSyncExternalStore: ii,
  useId: Fi,
  unstable_isNewReconciler: false
}, $h = { readContext: Vg, useCallback: Bi, useContext: Vg, useEffect: ji, useImperativeHandle: zi, useInsertionEffect: wi, useLayoutEffect: xi, useMemo: Ci, useReducer: gi, useRef: si, useState: function() {
  return gi(ei);
}, useDebugValue: Ai, useDeferredValue: function(a) {
  var b2 = di();
  return null === O ? b2.memoizedState = a : Di(b2, O.memoizedState, a);
}, useTransition: function() {
  var a = gi(ei)[0], b2 = di().memoizedState;
  return [a, b2];
}, useMutableSource: hi, useSyncExternalStore: ii, useId: Fi, unstable_isNewReconciler: false };
function Ki(a, b2) {
  try {
    var c2 = "", d2 = b2;
    do
      c2 += Pa(d2), d2 = d2.return;
    while (d2);
    var e2 = c2;
  } catch (f2) {
    e2 = "\nError generating stack: " + f2.message + "\n" + f2.stack;
  }
  return { value: a, source: b2, stack: e2, digest: null };
}
function Li(a, b2, c2) {
  return { value: a, source: null, stack: null != c2 ? c2 : null, digest: null != b2 ? b2 : null };
}
function Mi(a, b2) {
  try {
    console.error(b2.value);
  } catch (c2) {
    setTimeout(function() {
      throw c2;
    });
  }
}
var Ni = "function" === typeof WeakMap ? WeakMap : Map;
function Oi(a, b2, c2) {
  c2 = ch(-1, c2);
  c2.tag = 3;
  c2.payload = { element: null };
  var d2 = b2.value;
  c2.callback = function() {
    Pi || (Pi = true, Qi = d2);
    Mi(a, b2);
  };
  return c2;
}
function Ri(a, b2, c2) {
  c2 = ch(-1, c2);
  c2.tag = 3;
  var d2 = a.type.getDerivedStateFromError;
  if ("function" === typeof d2) {
    var e2 = b2.value;
    c2.payload = function() {
      return d2(e2);
    };
    c2.callback = function() {
      Mi(a, b2);
    };
  }
  var f2 = a.stateNode;
  null !== f2 && "function" === typeof f2.componentDidCatch && (c2.callback = function() {
    Mi(a, b2);
    "function" !== typeof d2 && (null === Si ? Si = /* @__PURE__ */ new Set([this]) : Si.add(this));
    var c3 = b2.stack;
    this.componentDidCatch(b2.value, { componentStack: null !== c3 ? c3 : "" });
  });
  return c2;
}
function Ti(a, b2, c2) {
  var d2 = a.pingCache;
  if (null === d2) {
    d2 = a.pingCache = new Ni();
    var e2 = /* @__PURE__ */ new Set();
    d2.set(b2, e2);
  } else
    e2 = d2.get(b2), void 0 === e2 && (e2 = /* @__PURE__ */ new Set(), d2.set(b2, e2));
  e2.has(c2) || (e2.add(c2), a = Ui.bind(null, a, b2, c2), b2.then(a, a));
}
function Vi(a) {
  do {
    var b2;
    if (b2 = 13 === a.tag)
      b2 = a.memoizedState, b2 = null !== b2 ? null !== b2.dehydrated ? true : false : true;
    if (b2)
      return a;
    a = a.return;
  } while (null !== a);
  return null;
}
function Wi(a, b2, c2, d2, e2) {
  if (0 === (a.mode & 1))
    return a === b2 ? a.flags |= 65536 : (a.flags |= 128, c2.flags |= 131072, c2.flags &= -52805, 1 === c2.tag && (null === c2.alternate ? c2.tag = 17 : (b2 = ch(-1, 1), b2.tag = 2, dh(c2, b2, 1))), c2.lanes |= 1), a;
  a.flags |= 65536;
  a.lanes = e2;
  return a;
}
var Xi = ua.ReactCurrentOwner, Ug = false;
function Yi(a, b2, c2, d2) {
  b2.child = null === a ? Ch(b2, null, c2, d2) : Bh(b2, a.child, c2, d2);
}
function Zi(a, b2, c2, d2, e2) {
  c2 = c2.render;
  var f2 = b2.ref;
  Tg(b2, e2);
  d2 = Xh(a, b2, c2, d2, f2, e2);
  c2 = bi();
  if (null !== a && !Ug)
    return b2.updateQueue = a.updateQueue, b2.flags &= -2053, a.lanes &= ~e2, $i(a, b2, e2);
  I$1 && c2 && vg(b2);
  b2.flags |= 1;
  Yi(a, b2, d2, e2);
  return b2.child;
}
function aj(a, b2, c2, d2, e2) {
  if (null === a) {
    var f2 = c2.type;
    if ("function" === typeof f2 && !bj(f2) && void 0 === f2.defaultProps && null === c2.compare && void 0 === c2.defaultProps)
      return b2.tag = 15, b2.type = f2, cj(a, b2, f2, d2, e2);
    a = yh(c2.type, null, d2, b2, b2.mode, e2);
    a.ref = b2.ref;
    a.return = b2;
    return b2.child = a;
  }
  f2 = a.child;
  if (0 === (a.lanes & e2)) {
    var g2 = f2.memoizedProps;
    c2 = c2.compare;
    c2 = null !== c2 ? c2 : Ie;
    if (c2(g2, d2) && a.ref === b2.ref)
      return $i(a, b2, e2);
  }
  b2.flags |= 1;
  a = wh(f2, d2);
  a.ref = b2.ref;
  a.return = b2;
  return b2.child = a;
}
function cj(a, b2, c2, d2, e2) {
  if (null !== a) {
    var f2 = a.memoizedProps;
    if (Ie(f2, d2) && a.ref === b2.ref)
      if (Ug = false, b2.pendingProps = d2 = f2, 0 !== (a.lanes & e2))
        0 !== (a.flags & 131072) && (Ug = true);
      else
        return b2.lanes = a.lanes, $i(a, b2, e2);
  }
  return dj(a, b2, c2, d2, e2);
}
function ej(a, b2, c2) {
  var d2 = b2.pendingProps, e2 = d2.children, f2 = null !== a ? a.memoizedState : null;
  if ("hidden" === d2.mode)
    if (0 === (b2.mode & 1))
      b2.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }, G$1(fj, gj), gj |= c2;
    else {
      if (0 === (c2 & 1073741824))
        return a = null !== f2 ? f2.baseLanes | c2 : c2, b2.lanes = b2.childLanes = 1073741824, b2.memoizedState = { baseLanes: a, cachePool: null, transitions: null }, b2.updateQueue = null, G$1(fj, gj), gj |= a, null;
      b2.memoizedState = { baseLanes: 0, cachePool: null, transitions: null };
      d2 = null !== f2 ? f2.baseLanes : c2;
      G$1(fj, gj);
      gj |= d2;
    }
  else
    null !== f2 ? (d2 = f2.baseLanes | c2, b2.memoizedState = null) : d2 = c2, G$1(fj, gj), gj |= d2;
  Yi(a, b2, e2, c2);
  return b2.child;
}
function hj(a, b2) {
  var c2 = b2.ref;
  if (null === a && null !== c2 || null !== a && a.ref !== c2)
    b2.flags |= 512, b2.flags |= 2097152;
}
function dj(a, b2, c2, d2, e2) {
  var f2 = Zf(c2) ? Xf : H$1.current;
  f2 = Yf(b2, f2);
  Tg(b2, e2);
  c2 = Xh(a, b2, c2, d2, f2, e2);
  d2 = bi();
  if (null !== a && !Ug)
    return b2.updateQueue = a.updateQueue, b2.flags &= -2053, a.lanes &= ~e2, $i(a, b2, e2);
  I$1 && d2 && vg(b2);
  b2.flags |= 1;
  Yi(a, b2, c2, e2);
  return b2.child;
}
function ij(a, b2, c2, d2, e2) {
  if (Zf(c2)) {
    var f2 = true;
    cg(b2);
  } else
    f2 = false;
  Tg(b2, e2);
  if (null === b2.stateNode)
    jj(a, b2), ph(b2, c2, d2), rh(b2, c2, d2, e2), d2 = true;
  else if (null === a) {
    var g2 = b2.stateNode, h2 = b2.memoizedProps;
    g2.props = h2;
    var k2 = g2.context, l2 = c2.contextType;
    "object" === typeof l2 && null !== l2 ? l2 = Vg(l2) : (l2 = Zf(c2) ? Xf : H$1.current, l2 = Yf(b2, l2));
    var m2 = c2.getDerivedStateFromProps, q2 = "function" === typeof m2 || "function" === typeof g2.getSnapshotBeforeUpdate;
    q2 || "function" !== typeof g2.UNSAFE_componentWillReceiveProps && "function" !== typeof g2.componentWillReceiveProps || (h2 !== d2 || k2 !== l2) && qh(b2, g2, d2, l2);
    $g = false;
    var r2 = b2.memoizedState;
    g2.state = r2;
    gh(b2, d2, g2, e2);
    k2 = b2.memoizedState;
    h2 !== d2 || r2 !== k2 || Wf.current || $g ? ("function" === typeof m2 && (kh(b2, c2, m2, d2), k2 = b2.memoizedState), (h2 = $g || oh(b2, c2, h2, d2, r2, k2, l2)) ? (q2 || "function" !== typeof g2.UNSAFE_componentWillMount && "function" !== typeof g2.componentWillMount || ("function" === typeof g2.componentWillMount && g2.componentWillMount(), "function" === typeof g2.UNSAFE_componentWillMount && g2.UNSAFE_componentWillMount()), "function" === typeof g2.componentDidMount && (b2.flags |= 4194308)) : ("function" === typeof g2.componentDidMount && (b2.flags |= 4194308), b2.memoizedProps = d2, b2.memoizedState = k2), g2.props = d2, g2.state = k2, g2.context = l2, d2 = h2) : ("function" === typeof g2.componentDidMount && (b2.flags |= 4194308), d2 = false);
  } else {
    g2 = b2.stateNode;
    bh(a, b2);
    h2 = b2.memoizedProps;
    l2 = b2.type === b2.elementType ? h2 : Lg(b2.type, h2);
    g2.props = l2;
    q2 = b2.pendingProps;
    r2 = g2.context;
    k2 = c2.contextType;
    "object" === typeof k2 && null !== k2 ? k2 = Vg(k2) : (k2 = Zf(c2) ? Xf : H$1.current, k2 = Yf(b2, k2));
    var y2 = c2.getDerivedStateFromProps;
    (m2 = "function" === typeof y2 || "function" === typeof g2.getSnapshotBeforeUpdate) || "function" !== typeof g2.UNSAFE_componentWillReceiveProps && "function" !== typeof g2.componentWillReceiveProps || (h2 !== q2 || r2 !== k2) && qh(b2, g2, d2, k2);
    $g = false;
    r2 = b2.memoizedState;
    g2.state = r2;
    gh(b2, d2, g2, e2);
    var n2 = b2.memoizedState;
    h2 !== q2 || r2 !== n2 || Wf.current || $g ? ("function" === typeof y2 && (kh(b2, c2, y2, d2), n2 = b2.memoizedState), (l2 = $g || oh(b2, c2, l2, d2, r2, n2, k2) || false) ? (m2 || "function" !== typeof g2.UNSAFE_componentWillUpdate && "function" !== typeof g2.componentWillUpdate || ("function" === typeof g2.componentWillUpdate && g2.componentWillUpdate(d2, n2, k2), "function" === typeof g2.UNSAFE_componentWillUpdate && g2.UNSAFE_componentWillUpdate(d2, n2, k2)), "function" === typeof g2.componentDidUpdate && (b2.flags |= 4), "function" === typeof g2.getSnapshotBeforeUpdate && (b2.flags |= 1024)) : ("function" !== typeof g2.componentDidUpdate || h2 === a.memoizedProps && r2 === a.memoizedState || (b2.flags |= 4), "function" !== typeof g2.getSnapshotBeforeUpdate || h2 === a.memoizedProps && r2 === a.memoizedState || (b2.flags |= 1024), b2.memoizedProps = d2, b2.memoizedState = n2), g2.props = d2, g2.state = n2, g2.context = k2, d2 = l2) : ("function" !== typeof g2.componentDidUpdate || h2 === a.memoizedProps && r2 === a.memoizedState || (b2.flags |= 4), "function" !== typeof g2.getSnapshotBeforeUpdate || h2 === a.memoizedProps && r2 === a.memoizedState || (b2.flags |= 1024), d2 = false);
  }
  return kj(a, b2, c2, d2, f2, e2);
}
function kj(a, b2, c2, d2, e2, f2) {
  hj(a, b2);
  var g2 = 0 !== (b2.flags & 128);
  if (!d2 && !g2)
    return e2 && dg(b2, c2, false), $i(a, b2, f2);
  d2 = b2.stateNode;
  Xi.current = b2;
  var h2 = g2 && "function" !== typeof c2.getDerivedStateFromError ? null : d2.render();
  b2.flags |= 1;
  null !== a && g2 ? (b2.child = Bh(b2, a.child, null, f2), b2.child = Bh(b2, null, h2, f2)) : Yi(a, b2, h2, f2);
  b2.memoizedState = d2.state;
  e2 && dg(b2, c2, true);
  return b2.child;
}
function lj(a) {
  var b2 = a.stateNode;
  b2.pendingContext ? ag(a, b2.pendingContext, b2.pendingContext !== b2.context) : b2.context && ag(a, b2.context, false);
  Ih(a, b2.containerInfo);
}
function mj(a, b2, c2, d2, e2) {
  Ig();
  Jg(e2);
  b2.flags |= 256;
  Yi(a, b2, c2, d2);
  return b2.child;
}
var nj = { dehydrated: null, treeContext: null, retryLane: 0 };
function oj(a) {
  return { baseLanes: a, cachePool: null, transitions: null };
}
function pj(a, b2, c2) {
  var d2 = b2.pendingProps, e2 = M$1.current, f2 = false, g2 = 0 !== (b2.flags & 128), h2;
  (h2 = g2) || (h2 = null !== a && null === a.memoizedState ? false : 0 !== (e2 & 2));
  if (h2)
    f2 = true, b2.flags &= -129;
  else if (null === a || null !== a.memoizedState)
    e2 |= 1;
  G$1(M$1, e2 & 1);
  if (null === a) {
    Eg(b2);
    a = b2.memoizedState;
    if (null !== a && (a = a.dehydrated, null !== a))
      return 0 === (b2.mode & 1) ? b2.lanes = 1 : "$!" === a.data ? b2.lanes = 8 : b2.lanes = 1073741824, null;
    g2 = d2.children;
    a = d2.fallback;
    return f2 ? (d2 = b2.mode, f2 = b2.child, g2 = { mode: "hidden", children: g2 }, 0 === (d2 & 1) && null !== f2 ? (f2.childLanes = 0, f2.pendingProps = g2) : f2 = qj(g2, d2, 0, null), a = Ah(a, d2, c2, null), f2.return = b2, a.return = b2, f2.sibling = a, b2.child = f2, b2.child.memoizedState = oj(c2), b2.memoizedState = nj, a) : rj(b2, g2);
  }
  e2 = a.memoizedState;
  if (null !== e2 && (h2 = e2.dehydrated, null !== h2))
    return sj(a, b2, g2, d2, h2, e2, c2);
  if (f2) {
    f2 = d2.fallback;
    g2 = b2.mode;
    e2 = a.child;
    h2 = e2.sibling;
    var k2 = { mode: "hidden", children: d2.children };
    0 === (g2 & 1) && b2.child !== e2 ? (d2 = b2.child, d2.childLanes = 0, d2.pendingProps = k2, b2.deletions = null) : (d2 = wh(e2, k2), d2.subtreeFlags = e2.subtreeFlags & 14680064);
    null !== h2 ? f2 = wh(h2, f2) : (f2 = Ah(f2, g2, c2, null), f2.flags |= 2);
    f2.return = b2;
    d2.return = b2;
    d2.sibling = f2;
    b2.child = d2;
    d2 = f2;
    f2 = b2.child;
    g2 = a.child.memoizedState;
    g2 = null === g2 ? oj(c2) : { baseLanes: g2.baseLanes | c2, cachePool: null, transitions: g2.transitions };
    f2.memoizedState = g2;
    f2.childLanes = a.childLanes & ~c2;
    b2.memoizedState = nj;
    return d2;
  }
  f2 = a.child;
  a = f2.sibling;
  d2 = wh(f2, { mode: "visible", children: d2.children });
  0 === (b2.mode & 1) && (d2.lanes = c2);
  d2.return = b2;
  d2.sibling = null;
  null !== a && (c2 = b2.deletions, null === c2 ? (b2.deletions = [a], b2.flags |= 16) : c2.push(a));
  b2.child = d2;
  b2.memoizedState = null;
  return d2;
}
function rj(a, b2) {
  b2 = qj({ mode: "visible", children: b2 }, a.mode, 0, null);
  b2.return = a;
  return a.child = b2;
}
function tj(a, b2, c2, d2) {
  null !== d2 && Jg(d2);
  Bh(b2, a.child, null, c2);
  a = rj(b2, b2.pendingProps.children);
  a.flags |= 2;
  b2.memoizedState = null;
  return a;
}
function sj(a, b2, c2, d2, e2, f2, g2) {
  if (c2) {
    if (b2.flags & 256)
      return b2.flags &= -257, d2 = Li(Error(p$1(422))), tj(a, b2, g2, d2);
    if (null !== b2.memoizedState)
      return b2.child = a.child, b2.flags |= 128, null;
    f2 = d2.fallback;
    e2 = b2.mode;
    d2 = qj({ mode: "visible", children: d2.children }, e2, 0, null);
    f2 = Ah(f2, e2, g2, null);
    f2.flags |= 2;
    d2.return = b2;
    f2.return = b2;
    d2.sibling = f2;
    b2.child = d2;
    0 !== (b2.mode & 1) && Bh(b2, a.child, null, g2);
    b2.child.memoizedState = oj(g2);
    b2.memoizedState = nj;
    return f2;
  }
  if (0 === (b2.mode & 1))
    return tj(a, b2, g2, null);
  if ("$!" === e2.data) {
    d2 = e2.nextSibling && e2.nextSibling.dataset;
    if (d2)
      var h2 = d2.dgst;
    d2 = h2;
    f2 = Error(p$1(419));
    d2 = Li(f2, d2, void 0);
    return tj(a, b2, g2, d2);
  }
  h2 = 0 !== (g2 & a.childLanes);
  if (Ug || h2) {
    d2 = R;
    if (null !== d2) {
      switch (g2 & -g2) {
        case 4:
          e2 = 2;
          break;
        case 16:
          e2 = 8;
          break;
        case 64:
        case 128:
        case 256:
        case 512:
        case 1024:
        case 2048:
        case 4096:
        case 8192:
        case 16384:
        case 32768:
        case 65536:
        case 131072:
        case 262144:
        case 524288:
        case 1048576:
        case 2097152:
        case 4194304:
        case 8388608:
        case 16777216:
        case 33554432:
        case 67108864:
          e2 = 32;
          break;
        case 536870912:
          e2 = 268435456;
          break;
        default:
          e2 = 0;
      }
      e2 = 0 !== (e2 & (d2.suspendedLanes | g2)) ? 0 : e2;
      0 !== e2 && e2 !== f2.retryLane && (f2.retryLane = e2, Zg(a, e2), mh(d2, a, e2, -1));
    }
    uj();
    d2 = Li(Error(p$1(421)));
    return tj(a, b2, g2, d2);
  }
  if ("$?" === e2.data)
    return b2.flags |= 128, b2.child = a.child, b2 = vj.bind(null, a), e2._reactRetry = b2, null;
  a = f2.treeContext;
  yg = Lf(e2.nextSibling);
  xg = b2;
  I$1 = true;
  zg = null;
  null !== a && (og[pg++] = rg, og[pg++] = sg, og[pg++] = qg, rg = a.id, sg = a.overflow, qg = b2);
  b2 = rj(b2, d2.children);
  b2.flags |= 4096;
  return b2;
}
function wj(a, b2, c2) {
  a.lanes |= b2;
  var d2 = a.alternate;
  null !== d2 && (d2.lanes |= b2);
  Sg(a.return, b2, c2);
}
function xj(a, b2, c2, d2, e2) {
  var f2 = a.memoizedState;
  null === f2 ? a.memoizedState = { isBackwards: b2, rendering: null, renderingStartTime: 0, last: d2, tail: c2, tailMode: e2 } : (f2.isBackwards = b2, f2.rendering = null, f2.renderingStartTime = 0, f2.last = d2, f2.tail = c2, f2.tailMode = e2);
}
function yj(a, b2, c2) {
  var d2 = b2.pendingProps, e2 = d2.revealOrder, f2 = d2.tail;
  Yi(a, b2, d2.children, c2);
  d2 = M$1.current;
  if (0 !== (d2 & 2))
    d2 = d2 & 1 | 2, b2.flags |= 128;
  else {
    if (null !== a && 0 !== (a.flags & 128))
      a:
        for (a = b2.child; null !== a; ) {
          if (13 === a.tag)
            null !== a.memoizedState && wj(a, c2, b2);
          else if (19 === a.tag)
            wj(a, c2, b2);
          else if (null !== a.child) {
            a.child.return = a;
            a = a.child;
            continue;
          }
          if (a === b2)
            break a;
          for (; null === a.sibling; ) {
            if (null === a.return || a.return === b2)
              break a;
            a = a.return;
          }
          a.sibling.return = a.return;
          a = a.sibling;
        }
    d2 &= 1;
  }
  G$1(M$1, d2);
  if (0 === (b2.mode & 1))
    b2.memoizedState = null;
  else
    switch (e2) {
      case "forwards":
        c2 = b2.child;
        for (e2 = null; null !== c2; )
          a = c2.alternate, null !== a && null === Mh(a) && (e2 = c2), c2 = c2.sibling;
        c2 = e2;
        null === c2 ? (e2 = b2.child, b2.child = null) : (e2 = c2.sibling, c2.sibling = null);
        xj(b2, false, e2, c2, f2);
        break;
      case "backwards":
        c2 = null;
        e2 = b2.child;
        for (b2.child = null; null !== e2; ) {
          a = e2.alternate;
          if (null !== a && null === Mh(a)) {
            b2.child = e2;
            break;
          }
          a = e2.sibling;
          e2.sibling = c2;
          c2 = e2;
          e2 = a;
        }
        xj(b2, true, c2, null, f2);
        break;
      case "together":
        xj(b2, false, null, null, void 0);
        break;
      default:
        b2.memoizedState = null;
    }
  return b2.child;
}
function jj(a, b2) {
  0 === (b2.mode & 1) && null !== a && (a.alternate = null, b2.alternate = null, b2.flags |= 2);
}
function $i(a, b2, c2) {
  null !== a && (b2.dependencies = a.dependencies);
  hh |= b2.lanes;
  if (0 === (c2 & b2.childLanes))
    return null;
  if (null !== a && b2.child !== a.child)
    throw Error(p$1(153));
  if (null !== b2.child) {
    a = b2.child;
    c2 = wh(a, a.pendingProps);
    b2.child = c2;
    for (c2.return = b2; null !== a.sibling; )
      a = a.sibling, c2 = c2.sibling = wh(a, a.pendingProps), c2.return = b2;
    c2.sibling = null;
  }
  return b2.child;
}
function zj(a, b2, c2) {
  switch (b2.tag) {
    case 3:
      lj(b2);
      Ig();
      break;
    case 5:
      Kh(b2);
      break;
    case 1:
      Zf(b2.type) && cg(b2);
      break;
    case 4:
      Ih(b2, b2.stateNode.containerInfo);
      break;
    case 10:
      var d2 = b2.type._context, e2 = b2.memoizedProps.value;
      G$1(Mg, d2._currentValue);
      d2._currentValue = e2;
      break;
    case 13:
      d2 = b2.memoizedState;
      if (null !== d2) {
        if (null !== d2.dehydrated)
          return G$1(M$1, M$1.current & 1), b2.flags |= 128, null;
        if (0 !== (c2 & b2.child.childLanes))
          return pj(a, b2, c2);
        G$1(M$1, M$1.current & 1);
        a = $i(a, b2, c2);
        return null !== a ? a.sibling : null;
      }
      G$1(M$1, M$1.current & 1);
      break;
    case 19:
      d2 = 0 !== (c2 & b2.childLanes);
      if (0 !== (a.flags & 128)) {
        if (d2)
          return yj(a, b2, c2);
        b2.flags |= 128;
      }
      e2 = b2.memoizedState;
      null !== e2 && (e2.rendering = null, e2.tail = null, e2.lastEffect = null);
      G$1(M$1, M$1.current);
      if (d2)
        break;
      else
        return null;
    case 22:
    case 23:
      return b2.lanes = 0, ej(a, b2, c2);
  }
  return $i(a, b2, c2);
}
var Aj, Bj, Cj, Dj;
Aj = function(a, b2) {
  for (var c2 = b2.child; null !== c2; ) {
    if (5 === c2.tag || 6 === c2.tag)
      a.appendChild(c2.stateNode);
    else if (4 !== c2.tag && null !== c2.child) {
      c2.child.return = c2;
      c2 = c2.child;
      continue;
    }
    if (c2 === b2)
      break;
    for (; null === c2.sibling; ) {
      if (null === c2.return || c2.return === b2)
        return;
      c2 = c2.return;
    }
    c2.sibling.return = c2.return;
    c2 = c2.sibling;
  }
};
Bj = function() {
};
Cj = function(a, b2, c2, d2) {
  var e2 = a.memoizedProps;
  if (e2 !== d2) {
    a = b2.stateNode;
    Hh(Eh.current);
    var f2 = null;
    switch (c2) {
      case "input":
        e2 = Ya(a, e2);
        d2 = Ya(a, d2);
        f2 = [];
        break;
      case "select":
        e2 = A$2({}, e2, { value: void 0 });
        d2 = A$2({}, d2, { value: void 0 });
        f2 = [];
        break;
      case "textarea":
        e2 = gb(a, e2);
        d2 = gb(a, d2);
        f2 = [];
        break;
      default:
        "function" !== typeof e2.onClick && "function" === typeof d2.onClick && (a.onclick = Bf);
    }
    ub(c2, d2);
    var g2;
    c2 = null;
    for (l2 in e2)
      if (!d2.hasOwnProperty(l2) && e2.hasOwnProperty(l2) && null != e2[l2])
        if ("style" === l2) {
          var h2 = e2[l2];
          for (g2 in h2)
            h2.hasOwnProperty(g2) && (c2 || (c2 = {}), c2[g2] = "");
        } else
          "dangerouslySetInnerHTML" !== l2 && "children" !== l2 && "suppressContentEditableWarning" !== l2 && "suppressHydrationWarning" !== l2 && "autoFocus" !== l2 && (ea.hasOwnProperty(l2) ? f2 || (f2 = []) : (f2 = f2 || []).push(l2, null));
    for (l2 in d2) {
      var k2 = d2[l2];
      h2 = null != e2 ? e2[l2] : void 0;
      if (d2.hasOwnProperty(l2) && k2 !== h2 && (null != k2 || null != h2))
        if ("style" === l2)
          if (h2) {
            for (g2 in h2)
              !h2.hasOwnProperty(g2) || k2 && k2.hasOwnProperty(g2) || (c2 || (c2 = {}), c2[g2] = "");
            for (g2 in k2)
              k2.hasOwnProperty(g2) && h2[g2] !== k2[g2] && (c2 || (c2 = {}), c2[g2] = k2[g2]);
          } else
            c2 || (f2 || (f2 = []), f2.push(
              l2,
              c2
            )), c2 = k2;
        else
          "dangerouslySetInnerHTML" === l2 ? (k2 = k2 ? k2.__html : void 0, h2 = h2 ? h2.__html : void 0, null != k2 && h2 !== k2 && (f2 = f2 || []).push(l2, k2)) : "children" === l2 ? "string" !== typeof k2 && "number" !== typeof k2 || (f2 = f2 || []).push(l2, "" + k2) : "suppressContentEditableWarning" !== l2 && "suppressHydrationWarning" !== l2 && (ea.hasOwnProperty(l2) ? (null != k2 && "onScroll" === l2 && D$1("scroll", a), f2 || h2 === k2 || (f2 = [])) : (f2 = f2 || []).push(l2, k2));
    }
    c2 && (f2 = f2 || []).push("style", c2);
    var l2 = f2;
    if (b2.updateQueue = l2)
      b2.flags |= 4;
  }
};
Dj = function(a, b2, c2, d2) {
  c2 !== d2 && (b2.flags |= 4);
};
function Ej(a, b2) {
  if (!I$1)
    switch (a.tailMode) {
      case "hidden":
        b2 = a.tail;
        for (var c2 = null; null !== b2; )
          null !== b2.alternate && (c2 = b2), b2 = b2.sibling;
        null === c2 ? a.tail = null : c2.sibling = null;
        break;
      case "collapsed":
        c2 = a.tail;
        for (var d2 = null; null !== c2; )
          null !== c2.alternate && (d2 = c2), c2 = c2.sibling;
        null === d2 ? b2 || null === a.tail ? a.tail = null : a.tail.sibling = null : d2.sibling = null;
    }
}
function S$1(a) {
  var b2 = null !== a.alternate && a.alternate.child === a.child, c2 = 0, d2 = 0;
  if (b2)
    for (var e2 = a.child; null !== e2; )
      c2 |= e2.lanes | e2.childLanes, d2 |= e2.subtreeFlags & 14680064, d2 |= e2.flags & 14680064, e2.return = a, e2 = e2.sibling;
  else
    for (e2 = a.child; null !== e2; )
      c2 |= e2.lanes | e2.childLanes, d2 |= e2.subtreeFlags, d2 |= e2.flags, e2.return = a, e2 = e2.sibling;
  a.subtreeFlags |= d2;
  a.childLanes = c2;
  return b2;
}
function Fj(a, b2, c2) {
  var d2 = b2.pendingProps;
  wg(b2);
  switch (b2.tag) {
    case 2:
    case 16:
    case 15:
    case 0:
    case 11:
    case 7:
    case 8:
    case 12:
    case 9:
    case 14:
      return S$1(b2), null;
    case 1:
      return Zf(b2.type) && $f(), S$1(b2), null;
    case 3:
      d2 = b2.stateNode;
      Jh();
      E$1(Wf);
      E$1(H$1);
      Oh();
      d2.pendingContext && (d2.context = d2.pendingContext, d2.pendingContext = null);
      if (null === a || null === a.child)
        Gg(b2) ? b2.flags |= 4 : null === a || a.memoizedState.isDehydrated && 0 === (b2.flags & 256) || (b2.flags |= 1024, null !== zg && (Gj(zg), zg = null));
      Bj(a, b2);
      S$1(b2);
      return null;
    case 5:
      Lh(b2);
      var e2 = Hh(Gh.current);
      c2 = b2.type;
      if (null !== a && null != b2.stateNode)
        Cj(a, b2, c2, d2, e2), a.ref !== b2.ref && (b2.flags |= 512, b2.flags |= 2097152);
      else {
        if (!d2) {
          if (null === b2.stateNode)
            throw Error(p$1(166));
          S$1(b2);
          return null;
        }
        a = Hh(Eh.current);
        if (Gg(b2)) {
          d2 = b2.stateNode;
          c2 = b2.type;
          var f2 = b2.memoizedProps;
          d2[Of] = b2;
          d2[Pf] = f2;
          a = 0 !== (b2.mode & 1);
          switch (c2) {
            case "dialog":
              D$1("cancel", d2);
              D$1("close", d2);
              break;
            case "iframe":
            case "object":
            case "embed":
              D$1("load", d2);
              break;
            case "video":
            case "audio":
              for (e2 = 0; e2 < lf.length; e2++)
                D$1(lf[e2], d2);
              break;
            case "source":
              D$1("error", d2);
              break;
            case "img":
            case "image":
            case "link":
              D$1(
                "error",
                d2
              );
              D$1("load", d2);
              break;
            case "details":
              D$1("toggle", d2);
              break;
            case "input":
              Za(d2, f2);
              D$1("invalid", d2);
              break;
            case "select":
              d2._wrapperState = { wasMultiple: !!f2.multiple };
              D$1("invalid", d2);
              break;
            case "textarea":
              hb(d2, f2), D$1("invalid", d2);
          }
          ub(c2, f2);
          e2 = null;
          for (var g2 in f2)
            if (f2.hasOwnProperty(g2)) {
              var h2 = f2[g2];
              "children" === g2 ? "string" === typeof h2 ? d2.textContent !== h2 && (true !== f2.suppressHydrationWarning && Af(d2.textContent, h2, a), e2 = ["children", h2]) : "number" === typeof h2 && d2.textContent !== "" + h2 && (true !== f2.suppressHydrationWarning && Af(
                d2.textContent,
                h2,
                a
              ), e2 = ["children", "" + h2]) : ea.hasOwnProperty(g2) && null != h2 && "onScroll" === g2 && D$1("scroll", d2);
            }
          switch (c2) {
            case "input":
              Va(d2);
              db(d2, f2, true);
              break;
            case "textarea":
              Va(d2);
              jb(d2);
              break;
            case "select":
            case "option":
              break;
            default:
              "function" === typeof f2.onClick && (d2.onclick = Bf);
          }
          d2 = e2;
          b2.updateQueue = d2;
          null !== d2 && (b2.flags |= 4);
        } else {
          g2 = 9 === e2.nodeType ? e2 : e2.ownerDocument;
          "http://www.w3.org/1999/xhtml" === a && (a = kb(c2));
          "http://www.w3.org/1999/xhtml" === a ? "script" === c2 ? (a = g2.createElement("div"), a.innerHTML = "<script><\/script>", a = a.removeChild(a.firstChild)) : "string" === typeof d2.is ? a = g2.createElement(c2, { is: d2.is }) : (a = g2.createElement(c2), "select" === c2 && (g2 = a, d2.multiple ? g2.multiple = true : d2.size && (g2.size = d2.size))) : a = g2.createElementNS(a, c2);
          a[Of] = b2;
          a[Pf] = d2;
          Aj(a, b2, false, false);
          b2.stateNode = a;
          a: {
            g2 = vb(c2, d2);
            switch (c2) {
              case "dialog":
                D$1("cancel", a);
                D$1("close", a);
                e2 = d2;
                break;
              case "iframe":
              case "object":
              case "embed":
                D$1("load", a);
                e2 = d2;
                break;
              case "video":
              case "audio":
                for (e2 = 0; e2 < lf.length; e2++)
                  D$1(lf[e2], a);
                e2 = d2;
                break;
              case "source":
                D$1("error", a);
                e2 = d2;
                break;
              case "img":
              case "image":
              case "link":
                D$1(
                  "error",
                  a
                );
                D$1("load", a);
                e2 = d2;
                break;
              case "details":
                D$1("toggle", a);
                e2 = d2;
                break;
              case "input":
                Za(a, d2);
                e2 = Ya(a, d2);
                D$1("invalid", a);
                break;
              case "option":
                e2 = d2;
                break;
              case "select":
                a._wrapperState = { wasMultiple: !!d2.multiple };
                e2 = A$2({}, d2, { value: void 0 });
                D$1("invalid", a);
                break;
              case "textarea":
                hb(a, d2);
                e2 = gb(a, d2);
                D$1("invalid", a);
                break;
              default:
                e2 = d2;
            }
            ub(c2, e2);
            h2 = e2;
            for (f2 in h2)
              if (h2.hasOwnProperty(f2)) {
                var k2 = h2[f2];
                "style" === f2 ? sb(a, k2) : "dangerouslySetInnerHTML" === f2 ? (k2 = k2 ? k2.__html : void 0, null != k2 && nb(a, k2)) : "children" === f2 ? "string" === typeof k2 ? ("textarea" !== c2 || "" !== k2) && ob(a, k2) : "number" === typeof k2 && ob(a, "" + k2) : "suppressContentEditableWarning" !== f2 && "suppressHydrationWarning" !== f2 && "autoFocus" !== f2 && (ea.hasOwnProperty(f2) ? null != k2 && "onScroll" === f2 && D$1("scroll", a) : null != k2 && ta(a, f2, k2, g2));
              }
            switch (c2) {
              case "input":
                Va(a);
                db(a, d2, false);
                break;
              case "textarea":
                Va(a);
                jb(a);
                break;
              case "option":
                null != d2.value && a.setAttribute("value", "" + Sa(d2.value));
                break;
              case "select":
                a.multiple = !!d2.multiple;
                f2 = d2.value;
                null != f2 ? fb(a, !!d2.multiple, f2, false) : null != d2.defaultValue && fb(
                  a,
                  !!d2.multiple,
                  d2.defaultValue,
                  true
                );
                break;
              default:
                "function" === typeof e2.onClick && (a.onclick = Bf);
            }
            switch (c2) {
              case "button":
              case "input":
              case "select":
              case "textarea":
                d2 = !!d2.autoFocus;
                break a;
              case "img":
                d2 = true;
                break a;
              default:
                d2 = false;
            }
          }
          d2 && (b2.flags |= 4);
        }
        null !== b2.ref && (b2.flags |= 512, b2.flags |= 2097152);
      }
      S$1(b2);
      return null;
    case 6:
      if (a && null != b2.stateNode)
        Dj(a, b2, a.memoizedProps, d2);
      else {
        if ("string" !== typeof d2 && null === b2.stateNode)
          throw Error(p$1(166));
        c2 = Hh(Gh.current);
        Hh(Eh.current);
        if (Gg(b2)) {
          d2 = b2.stateNode;
          c2 = b2.memoizedProps;
          d2[Of] = b2;
          if (f2 = d2.nodeValue !== c2) {
            if (a = xg, null !== a)
              switch (a.tag) {
                case 3:
                  Af(d2.nodeValue, c2, 0 !== (a.mode & 1));
                  break;
                case 5:
                  true !== a.memoizedProps.suppressHydrationWarning && Af(d2.nodeValue, c2, 0 !== (a.mode & 1));
              }
          }
          f2 && (b2.flags |= 4);
        } else
          d2 = (9 === c2.nodeType ? c2 : c2.ownerDocument).createTextNode(d2), d2[Of] = b2, b2.stateNode = d2;
      }
      S$1(b2);
      return null;
    case 13:
      E$1(M$1);
      d2 = b2.memoizedState;
      if (null === a || null !== a.memoizedState && null !== a.memoizedState.dehydrated) {
        if (I$1 && null !== yg && 0 !== (b2.mode & 1) && 0 === (b2.flags & 128))
          Hg(), Ig(), b2.flags |= 98560, f2 = false;
        else if (f2 = Gg(b2), null !== d2 && null !== d2.dehydrated) {
          if (null === a) {
            if (!f2)
              throw Error(p$1(318));
            f2 = b2.memoizedState;
            f2 = null !== f2 ? f2.dehydrated : null;
            if (!f2)
              throw Error(p$1(317));
            f2[Of] = b2;
          } else
            Ig(), 0 === (b2.flags & 128) && (b2.memoizedState = null), b2.flags |= 4;
          S$1(b2);
          f2 = false;
        } else
          null !== zg && (Gj(zg), zg = null), f2 = true;
        if (!f2)
          return b2.flags & 65536 ? b2 : null;
      }
      if (0 !== (b2.flags & 128))
        return b2.lanes = c2, b2;
      d2 = null !== d2;
      d2 !== (null !== a && null !== a.memoizedState) && d2 && (b2.child.flags |= 8192, 0 !== (b2.mode & 1) && (null === a || 0 !== (M$1.current & 1) ? 0 === T$2 && (T$2 = 3) : uj()));
      null !== b2.updateQueue && (b2.flags |= 4);
      S$1(b2);
      return null;
    case 4:
      return Jh(), Bj(a, b2), null === a && sf(b2.stateNode.containerInfo), S$1(b2), null;
    case 10:
      return Rg(b2.type._context), S$1(b2), null;
    case 17:
      return Zf(b2.type) && $f(), S$1(b2), null;
    case 19:
      E$1(M$1);
      f2 = b2.memoizedState;
      if (null === f2)
        return S$1(b2), null;
      d2 = 0 !== (b2.flags & 128);
      g2 = f2.rendering;
      if (null === g2)
        if (d2)
          Ej(f2, false);
        else {
          if (0 !== T$2 || null !== a && 0 !== (a.flags & 128))
            for (a = b2.child; null !== a; ) {
              g2 = Mh(a);
              if (null !== g2) {
                b2.flags |= 128;
                Ej(f2, false);
                d2 = g2.updateQueue;
                null !== d2 && (b2.updateQueue = d2, b2.flags |= 4);
                b2.subtreeFlags = 0;
                d2 = c2;
                for (c2 = b2.child; null !== c2; )
                  f2 = c2, a = d2, f2.flags &= 14680066, g2 = f2.alternate, null === g2 ? (f2.childLanes = 0, f2.lanes = a, f2.child = null, f2.subtreeFlags = 0, f2.memoizedProps = null, f2.memoizedState = null, f2.updateQueue = null, f2.dependencies = null, f2.stateNode = null) : (f2.childLanes = g2.childLanes, f2.lanes = g2.lanes, f2.child = g2.child, f2.subtreeFlags = 0, f2.deletions = null, f2.memoizedProps = g2.memoizedProps, f2.memoizedState = g2.memoizedState, f2.updateQueue = g2.updateQueue, f2.type = g2.type, a = g2.dependencies, f2.dependencies = null === a ? null : { lanes: a.lanes, firstContext: a.firstContext }), c2 = c2.sibling;
                G$1(M$1, M$1.current & 1 | 2);
                return b2.child;
              }
              a = a.sibling;
            }
          null !== f2.tail && B$1() > Hj && (b2.flags |= 128, d2 = true, Ej(f2, false), b2.lanes = 4194304);
        }
      else {
        if (!d2)
          if (a = Mh(g2), null !== a) {
            if (b2.flags |= 128, d2 = true, c2 = a.updateQueue, null !== c2 && (b2.updateQueue = c2, b2.flags |= 4), Ej(f2, true), null === f2.tail && "hidden" === f2.tailMode && !g2.alternate && !I$1)
              return S$1(b2), null;
          } else
            2 * B$1() - f2.renderingStartTime > Hj && 1073741824 !== c2 && (b2.flags |= 128, d2 = true, Ej(f2, false), b2.lanes = 4194304);
        f2.isBackwards ? (g2.sibling = b2.child, b2.child = g2) : (c2 = f2.last, null !== c2 ? c2.sibling = g2 : b2.child = g2, f2.last = g2);
      }
      if (null !== f2.tail)
        return b2 = f2.tail, f2.rendering = b2, f2.tail = b2.sibling, f2.renderingStartTime = B$1(), b2.sibling = null, c2 = M$1.current, G$1(M$1, d2 ? c2 & 1 | 2 : c2 & 1), b2;
      S$1(b2);
      return null;
    case 22:
    case 23:
      return Ij(), d2 = null !== b2.memoizedState, null !== a && null !== a.memoizedState !== d2 && (b2.flags |= 8192), d2 && 0 !== (b2.mode & 1) ? 0 !== (gj & 1073741824) && (S$1(b2), b2.subtreeFlags & 6 && (b2.flags |= 8192)) : S$1(b2), null;
    case 24:
      return null;
    case 25:
      return null;
  }
  throw Error(p$1(156, b2.tag));
}
function Jj(a, b2) {
  wg(b2);
  switch (b2.tag) {
    case 1:
      return Zf(b2.type) && $f(), a = b2.flags, a & 65536 ? (b2.flags = a & -65537 | 128, b2) : null;
    case 3:
      return Jh(), E$1(Wf), E$1(H$1), Oh(), a = b2.flags, 0 !== (a & 65536) && 0 === (a & 128) ? (b2.flags = a & -65537 | 128, b2) : null;
    case 5:
      return Lh(b2), null;
    case 13:
      E$1(M$1);
      a = b2.memoizedState;
      if (null !== a && null !== a.dehydrated) {
        if (null === b2.alternate)
          throw Error(p$1(340));
        Ig();
      }
      a = b2.flags;
      return a & 65536 ? (b2.flags = a & -65537 | 128, b2) : null;
    case 19:
      return E$1(M$1), null;
    case 4:
      return Jh(), null;
    case 10:
      return Rg(b2.type._context), null;
    case 22:
    case 23:
      return Ij(), null;
    case 24:
      return null;
    default:
      return null;
  }
}
var Kj = false, U$1 = false, Lj = "function" === typeof WeakSet ? WeakSet : Set, V$1 = null;
function Mj(a, b2) {
  var c2 = a.ref;
  if (null !== c2)
    if ("function" === typeof c2)
      try {
        c2(null);
      } catch (d2) {
        W$1(a, b2, d2);
      }
    else
      c2.current = null;
}
function Nj(a, b2, c2) {
  try {
    c2();
  } catch (d2) {
    W$1(a, b2, d2);
  }
}
var Oj = false;
function Pj(a, b2) {
  Cf = dd;
  a = Me$1();
  if (Ne$1(a)) {
    if ("selectionStart" in a)
      var c2 = { start: a.selectionStart, end: a.selectionEnd };
    else
      a: {
        c2 = (c2 = a.ownerDocument) && c2.defaultView || window;
        var d2 = c2.getSelection && c2.getSelection();
        if (d2 && 0 !== d2.rangeCount) {
          c2 = d2.anchorNode;
          var e2 = d2.anchorOffset, f2 = d2.focusNode;
          d2 = d2.focusOffset;
          try {
            c2.nodeType, f2.nodeType;
          } catch (F2) {
            c2 = null;
            break a;
          }
          var g2 = 0, h2 = -1, k2 = -1, l2 = 0, m2 = 0, q2 = a, r2 = null;
          b:
            for (; ; ) {
              for (var y2; ; ) {
                q2 !== c2 || 0 !== e2 && 3 !== q2.nodeType || (h2 = g2 + e2);
                q2 !== f2 || 0 !== d2 && 3 !== q2.nodeType || (k2 = g2 + d2);
                3 === q2.nodeType && (g2 += q2.nodeValue.length);
                if (null === (y2 = q2.firstChild))
                  break;
                r2 = q2;
                q2 = y2;
              }
              for (; ; ) {
                if (q2 === a)
                  break b;
                r2 === c2 && ++l2 === e2 && (h2 = g2);
                r2 === f2 && ++m2 === d2 && (k2 = g2);
                if (null !== (y2 = q2.nextSibling))
                  break;
                q2 = r2;
                r2 = q2.parentNode;
              }
              q2 = y2;
            }
          c2 = -1 === h2 || -1 === k2 ? null : { start: h2, end: k2 };
        } else
          c2 = null;
      }
    c2 = c2 || { start: 0, end: 0 };
  } else
    c2 = null;
  Df = { focusedElem: a, selectionRange: c2 };
  dd = false;
  for (V$1 = b2; null !== V$1; )
    if (b2 = V$1, a = b2.child, 0 !== (b2.subtreeFlags & 1028) && null !== a)
      a.return = b2, V$1 = a;
    else
      for (; null !== V$1; ) {
        b2 = V$1;
        try {
          var n2 = b2.alternate;
          if (0 !== (b2.flags & 1024))
            switch (b2.tag) {
              case 0:
              case 11:
              case 15:
                break;
              case 1:
                if (null !== n2) {
                  var t2 = n2.memoizedProps, J2 = n2.memoizedState, x2 = b2.stateNode, w2 = x2.getSnapshotBeforeUpdate(b2.elementType === b2.type ? t2 : Lg(b2.type, t2), J2);
                  x2.__reactInternalSnapshotBeforeUpdate = w2;
                }
                break;
              case 3:
                var u2 = b2.stateNode.containerInfo;
                1 === u2.nodeType ? u2.textContent = "" : 9 === u2.nodeType && u2.documentElement && u2.removeChild(u2.documentElement);
                break;
              case 5:
              case 6:
              case 4:
              case 17:
                break;
              default:
                throw Error(p$1(163));
            }
        } catch (F2) {
          W$1(b2, b2.return, F2);
        }
        a = b2.sibling;
        if (null !== a) {
          a.return = b2.return;
          V$1 = a;
          break;
        }
        V$1 = b2.return;
      }
  n2 = Oj;
  Oj = false;
  return n2;
}
function Qj(a, b2, c2) {
  var d2 = b2.updateQueue;
  d2 = null !== d2 ? d2.lastEffect : null;
  if (null !== d2) {
    var e2 = d2 = d2.next;
    do {
      if ((e2.tag & a) === a) {
        var f2 = e2.destroy;
        e2.destroy = void 0;
        void 0 !== f2 && Nj(b2, c2, f2);
      }
      e2 = e2.next;
    } while (e2 !== d2);
  }
}
function Rj(a, b2) {
  b2 = b2.updateQueue;
  b2 = null !== b2 ? b2.lastEffect : null;
  if (null !== b2) {
    var c2 = b2 = b2.next;
    do {
      if ((c2.tag & a) === a) {
        var d2 = c2.create;
        c2.destroy = d2();
      }
      c2 = c2.next;
    } while (c2 !== b2);
  }
}
function Sj(a) {
  var b2 = a.ref;
  if (null !== b2) {
    var c2 = a.stateNode;
    switch (a.tag) {
      case 5:
        a = c2;
        break;
      default:
        a = c2;
    }
    "function" === typeof b2 ? b2(a) : b2.current = a;
  }
}
function Tj(a) {
  var b2 = a.alternate;
  null !== b2 && (a.alternate = null, Tj(b2));
  a.child = null;
  a.deletions = null;
  a.sibling = null;
  5 === a.tag && (b2 = a.stateNode, null !== b2 && (delete b2[Of], delete b2[Pf], delete b2[of$1], delete b2[Qf], delete b2[Rf]));
  a.stateNode = null;
  a.return = null;
  a.dependencies = null;
  a.memoizedProps = null;
  a.memoizedState = null;
  a.pendingProps = null;
  a.stateNode = null;
  a.updateQueue = null;
}
function Uj(a) {
  return 5 === a.tag || 3 === a.tag || 4 === a.tag;
}
function Vj(a) {
  a:
    for (; ; ) {
      for (; null === a.sibling; ) {
        if (null === a.return || Uj(a.return))
          return null;
        a = a.return;
      }
      a.sibling.return = a.return;
      for (a = a.sibling; 5 !== a.tag && 6 !== a.tag && 18 !== a.tag; ) {
        if (a.flags & 2)
          continue a;
        if (null === a.child || 4 === a.tag)
          continue a;
        else
          a.child.return = a, a = a.child;
      }
      if (!(a.flags & 2))
        return a.stateNode;
    }
}
function Wj(a, b2, c2) {
  var d2 = a.tag;
  if (5 === d2 || 6 === d2)
    a = a.stateNode, b2 ? 8 === c2.nodeType ? c2.parentNode.insertBefore(a, b2) : c2.insertBefore(a, b2) : (8 === c2.nodeType ? (b2 = c2.parentNode, b2.insertBefore(a, c2)) : (b2 = c2, b2.appendChild(a)), c2 = c2._reactRootContainer, null !== c2 && void 0 !== c2 || null !== b2.onclick || (b2.onclick = Bf));
  else if (4 !== d2 && (a = a.child, null !== a))
    for (Wj(a, b2, c2), a = a.sibling; null !== a; )
      Wj(a, b2, c2), a = a.sibling;
}
function Xj(a, b2, c2) {
  var d2 = a.tag;
  if (5 === d2 || 6 === d2)
    a = a.stateNode, b2 ? c2.insertBefore(a, b2) : c2.appendChild(a);
  else if (4 !== d2 && (a = a.child, null !== a))
    for (Xj(a, b2, c2), a = a.sibling; null !== a; )
      Xj(a, b2, c2), a = a.sibling;
}
var X$1 = null, Yj = false;
function Zj(a, b2, c2) {
  for (c2 = c2.child; null !== c2; )
    ak(a, b2, c2), c2 = c2.sibling;
}
function ak(a, b2, c2) {
  if (lc && "function" === typeof lc.onCommitFiberUnmount)
    try {
      lc.onCommitFiberUnmount(kc, c2);
    } catch (h2) {
    }
  switch (c2.tag) {
    case 5:
      U$1 || Mj(c2, b2);
    case 6:
      var d2 = X$1, e2 = Yj;
      X$1 = null;
      Zj(a, b2, c2);
      X$1 = d2;
      Yj = e2;
      null !== X$1 && (Yj ? (a = X$1, c2 = c2.stateNode, 8 === a.nodeType ? a.parentNode.removeChild(c2) : a.removeChild(c2)) : X$1.removeChild(c2.stateNode));
      break;
    case 18:
      null !== X$1 && (Yj ? (a = X$1, c2 = c2.stateNode, 8 === a.nodeType ? Kf(a.parentNode, c2) : 1 === a.nodeType && Kf(a, c2), bd(a)) : Kf(X$1, c2.stateNode));
      break;
    case 4:
      d2 = X$1;
      e2 = Yj;
      X$1 = c2.stateNode.containerInfo;
      Yj = true;
      Zj(a, b2, c2);
      X$1 = d2;
      Yj = e2;
      break;
    case 0:
    case 11:
    case 14:
    case 15:
      if (!U$1 && (d2 = c2.updateQueue, null !== d2 && (d2 = d2.lastEffect, null !== d2))) {
        e2 = d2 = d2.next;
        do {
          var f2 = e2, g2 = f2.destroy;
          f2 = f2.tag;
          void 0 !== g2 && (0 !== (f2 & 2) ? Nj(c2, b2, g2) : 0 !== (f2 & 4) && Nj(c2, b2, g2));
          e2 = e2.next;
        } while (e2 !== d2);
      }
      Zj(a, b2, c2);
      break;
    case 1:
      if (!U$1 && (Mj(c2, b2), d2 = c2.stateNode, "function" === typeof d2.componentWillUnmount))
        try {
          d2.props = c2.memoizedProps, d2.state = c2.memoizedState, d2.componentWillUnmount();
        } catch (h2) {
          W$1(c2, b2, h2);
        }
      Zj(a, b2, c2);
      break;
    case 21:
      Zj(a, b2, c2);
      break;
    case 22:
      c2.mode & 1 ? (U$1 = (d2 = U$1) || null !== c2.memoizedState, Zj(a, b2, c2), U$1 = d2) : Zj(a, b2, c2);
      break;
    default:
      Zj(a, b2, c2);
  }
}
function bk(a) {
  var b2 = a.updateQueue;
  if (null !== b2) {
    a.updateQueue = null;
    var c2 = a.stateNode;
    null === c2 && (c2 = a.stateNode = new Lj());
    b2.forEach(function(b3) {
      var d2 = ck.bind(null, a, b3);
      c2.has(b3) || (c2.add(b3), b3.then(d2, d2));
    });
  }
}
function dk(a, b2) {
  var c2 = b2.deletions;
  if (null !== c2)
    for (var d2 = 0; d2 < c2.length; d2++) {
      var e2 = c2[d2];
      try {
        var f2 = a, g2 = b2, h2 = g2;
        a:
          for (; null !== h2; ) {
            switch (h2.tag) {
              case 5:
                X$1 = h2.stateNode;
                Yj = false;
                break a;
              case 3:
                X$1 = h2.stateNode.containerInfo;
                Yj = true;
                break a;
              case 4:
                X$1 = h2.stateNode.containerInfo;
                Yj = true;
                break a;
            }
            h2 = h2.return;
          }
        if (null === X$1)
          throw Error(p$1(160));
        ak(f2, g2, e2);
        X$1 = null;
        Yj = false;
        var k2 = e2.alternate;
        null !== k2 && (k2.return = null);
        e2.return = null;
      } catch (l2) {
        W$1(e2, b2, l2);
      }
    }
  if (b2.subtreeFlags & 12854)
    for (b2 = b2.child; null !== b2; )
      ek(b2, a), b2 = b2.sibling;
}
function ek(a, b2) {
  var c2 = a.alternate, d2 = a.flags;
  switch (a.tag) {
    case 0:
    case 11:
    case 14:
    case 15:
      dk(b2, a);
      fk(a);
      if (d2 & 4) {
        try {
          Qj(3, a, a.return), Rj(3, a);
        } catch (t2) {
          W$1(a, a.return, t2);
        }
        try {
          Qj(5, a, a.return);
        } catch (t2) {
          W$1(a, a.return, t2);
        }
      }
      break;
    case 1:
      dk(b2, a);
      fk(a);
      d2 & 512 && null !== c2 && Mj(c2, c2.return);
      break;
    case 5:
      dk(b2, a);
      fk(a);
      d2 & 512 && null !== c2 && Mj(c2, c2.return);
      if (a.flags & 32) {
        var e2 = a.stateNode;
        try {
          ob(e2, "");
        } catch (t2) {
          W$1(a, a.return, t2);
        }
      }
      if (d2 & 4 && (e2 = a.stateNode, null != e2)) {
        var f2 = a.memoizedProps, g2 = null !== c2 ? c2.memoizedProps : f2, h2 = a.type, k2 = a.updateQueue;
        a.updateQueue = null;
        if (null !== k2)
          try {
            "input" === h2 && "radio" === f2.type && null != f2.name && ab(e2, f2);
            vb(h2, g2);
            var l2 = vb(h2, f2);
            for (g2 = 0; g2 < k2.length; g2 += 2) {
              var m2 = k2[g2], q2 = k2[g2 + 1];
              "style" === m2 ? sb(e2, q2) : "dangerouslySetInnerHTML" === m2 ? nb(e2, q2) : "children" === m2 ? ob(e2, q2) : ta(e2, m2, q2, l2);
            }
            switch (h2) {
              case "input":
                bb(e2, f2);
                break;
              case "textarea":
                ib(e2, f2);
                break;
              case "select":
                var r2 = e2._wrapperState.wasMultiple;
                e2._wrapperState.wasMultiple = !!f2.multiple;
                var y2 = f2.value;
                null != y2 ? fb(e2, !!f2.multiple, y2, false) : r2 !== !!f2.multiple && (null != f2.defaultValue ? fb(
                  e2,
                  !!f2.multiple,
                  f2.defaultValue,
                  true
                ) : fb(e2, !!f2.multiple, f2.multiple ? [] : "", false));
            }
            e2[Pf] = f2;
          } catch (t2) {
            W$1(a, a.return, t2);
          }
      }
      break;
    case 6:
      dk(b2, a);
      fk(a);
      if (d2 & 4) {
        if (null === a.stateNode)
          throw Error(p$1(162));
        e2 = a.stateNode;
        f2 = a.memoizedProps;
        try {
          e2.nodeValue = f2;
        } catch (t2) {
          W$1(a, a.return, t2);
        }
      }
      break;
    case 3:
      dk(b2, a);
      fk(a);
      if (d2 & 4 && null !== c2 && c2.memoizedState.isDehydrated)
        try {
          bd(b2.containerInfo);
        } catch (t2) {
          W$1(a, a.return, t2);
        }
      break;
    case 4:
      dk(b2, a);
      fk(a);
      break;
    case 13:
      dk(b2, a);
      fk(a);
      e2 = a.child;
      e2.flags & 8192 && (f2 = null !== e2.memoizedState, e2.stateNode.isHidden = f2, !f2 || null !== e2.alternate && null !== e2.alternate.memoizedState || (gk = B$1()));
      d2 & 4 && bk(a);
      break;
    case 22:
      m2 = null !== c2 && null !== c2.memoizedState;
      a.mode & 1 ? (U$1 = (l2 = U$1) || m2, dk(b2, a), U$1 = l2) : dk(b2, a);
      fk(a);
      if (d2 & 8192) {
        l2 = null !== a.memoizedState;
        if ((a.stateNode.isHidden = l2) && !m2 && 0 !== (a.mode & 1))
          for (V$1 = a, m2 = a.child; null !== m2; ) {
            for (q2 = V$1 = m2; null !== V$1; ) {
              r2 = V$1;
              y2 = r2.child;
              switch (r2.tag) {
                case 0:
                case 11:
                case 14:
                case 15:
                  Qj(4, r2, r2.return);
                  break;
                case 1:
                  Mj(r2, r2.return);
                  var n2 = r2.stateNode;
                  if ("function" === typeof n2.componentWillUnmount) {
                    d2 = r2;
                    c2 = r2.return;
                    try {
                      b2 = d2, n2.props = b2.memoizedProps, n2.state = b2.memoizedState, n2.componentWillUnmount();
                    } catch (t2) {
                      W$1(d2, c2, t2);
                    }
                  }
                  break;
                case 5:
                  Mj(r2, r2.return);
                  break;
                case 22:
                  if (null !== r2.memoizedState) {
                    hk(q2);
                    continue;
                  }
              }
              null !== y2 ? (y2.return = r2, V$1 = y2) : hk(q2);
            }
            m2 = m2.sibling;
          }
        a:
          for (m2 = null, q2 = a; ; ) {
            if (5 === q2.tag) {
              if (null === m2) {
                m2 = q2;
                try {
                  e2 = q2.stateNode, l2 ? (f2 = e2.style, "function" === typeof f2.setProperty ? f2.setProperty("display", "none", "important") : f2.display = "none") : (h2 = q2.stateNode, k2 = q2.memoizedProps.style, g2 = void 0 !== k2 && null !== k2 && k2.hasOwnProperty("display") ? k2.display : null, h2.style.display = rb("display", g2));
                } catch (t2) {
                  W$1(a, a.return, t2);
                }
              }
            } else if (6 === q2.tag) {
              if (null === m2)
                try {
                  q2.stateNode.nodeValue = l2 ? "" : q2.memoizedProps;
                } catch (t2) {
                  W$1(a, a.return, t2);
                }
            } else if ((22 !== q2.tag && 23 !== q2.tag || null === q2.memoizedState || q2 === a) && null !== q2.child) {
              q2.child.return = q2;
              q2 = q2.child;
              continue;
            }
            if (q2 === a)
              break a;
            for (; null === q2.sibling; ) {
              if (null === q2.return || q2.return === a)
                break a;
              m2 === q2 && (m2 = null);
              q2 = q2.return;
            }
            m2 === q2 && (m2 = null);
            q2.sibling.return = q2.return;
            q2 = q2.sibling;
          }
      }
      break;
    case 19:
      dk(b2, a);
      fk(a);
      d2 & 4 && bk(a);
      break;
    case 21:
      break;
    default:
      dk(
        b2,
        a
      ), fk(a);
  }
}
function fk(a) {
  var b2 = a.flags;
  if (b2 & 2) {
    try {
      a: {
        for (var c2 = a.return; null !== c2; ) {
          if (Uj(c2)) {
            var d2 = c2;
            break a;
          }
          c2 = c2.return;
        }
        throw Error(p$1(160));
      }
      switch (d2.tag) {
        case 5:
          var e2 = d2.stateNode;
          d2.flags & 32 && (ob(e2, ""), d2.flags &= -33);
          var f2 = Vj(a);
          Xj(a, f2, e2);
          break;
        case 3:
        case 4:
          var g2 = d2.stateNode.containerInfo, h2 = Vj(a);
          Wj(a, h2, g2);
          break;
        default:
          throw Error(p$1(161));
      }
    } catch (k2) {
      W$1(a, a.return, k2);
    }
    a.flags &= -3;
  }
  b2 & 4096 && (a.flags &= -4097);
}
function ik(a, b2, c2) {
  V$1 = a;
  jk(a);
}
function jk(a, b2, c2) {
  for (var d2 = 0 !== (a.mode & 1); null !== V$1; ) {
    var e2 = V$1, f2 = e2.child;
    if (22 === e2.tag && d2) {
      var g2 = null !== e2.memoizedState || Kj;
      if (!g2) {
        var h2 = e2.alternate, k2 = null !== h2 && null !== h2.memoizedState || U$1;
        h2 = Kj;
        var l2 = U$1;
        Kj = g2;
        if ((U$1 = k2) && !l2)
          for (V$1 = e2; null !== V$1; )
            g2 = V$1, k2 = g2.child, 22 === g2.tag && null !== g2.memoizedState ? kk(e2) : null !== k2 ? (k2.return = g2, V$1 = k2) : kk(e2);
        for (; null !== f2; )
          V$1 = f2, jk(f2), f2 = f2.sibling;
        V$1 = e2;
        Kj = h2;
        U$1 = l2;
      }
      lk(a);
    } else
      0 !== (e2.subtreeFlags & 8772) && null !== f2 ? (f2.return = e2, V$1 = f2) : lk(a);
  }
}
function lk(a) {
  for (; null !== V$1; ) {
    var b2 = V$1;
    if (0 !== (b2.flags & 8772)) {
      var c2 = b2.alternate;
      try {
        if (0 !== (b2.flags & 8772))
          switch (b2.tag) {
            case 0:
            case 11:
            case 15:
              U$1 || Rj(5, b2);
              break;
            case 1:
              var d2 = b2.stateNode;
              if (b2.flags & 4 && !U$1)
                if (null === c2)
                  d2.componentDidMount();
                else {
                  var e2 = b2.elementType === b2.type ? c2.memoizedProps : Lg(b2.type, c2.memoizedProps);
                  d2.componentDidUpdate(e2, c2.memoizedState, d2.__reactInternalSnapshotBeforeUpdate);
                }
              var f2 = b2.updateQueue;
              null !== f2 && ih(b2, f2, d2);
              break;
            case 3:
              var g2 = b2.updateQueue;
              if (null !== g2) {
                c2 = null;
                if (null !== b2.child)
                  switch (b2.child.tag) {
                    case 5:
                      c2 = b2.child.stateNode;
                      break;
                    case 1:
                      c2 = b2.child.stateNode;
                  }
                ih(b2, g2, c2);
              }
              break;
            case 5:
              var h2 = b2.stateNode;
              if (null === c2 && b2.flags & 4) {
                c2 = h2;
                var k2 = b2.memoizedProps;
                switch (b2.type) {
                  case "button":
                  case "input":
                  case "select":
                  case "textarea":
                    k2.autoFocus && c2.focus();
                    break;
                  case "img":
                    k2.src && (c2.src = k2.src);
                }
              }
              break;
            case 6:
              break;
            case 4:
              break;
            case 12:
              break;
            case 13:
              if (null === b2.memoizedState) {
                var l2 = b2.alternate;
                if (null !== l2) {
                  var m2 = l2.memoizedState;
                  if (null !== m2) {
                    var q2 = m2.dehydrated;
                    null !== q2 && bd(q2);
                  }
                }
              }
              break;
            case 19:
            case 17:
            case 21:
            case 22:
            case 23:
            case 25:
              break;
            default:
              throw Error(p$1(163));
          }
        U$1 || b2.flags & 512 && Sj(b2);
      } catch (r2) {
        W$1(b2, b2.return, r2);
      }
    }
    if (b2 === a) {
      V$1 = null;
      break;
    }
    c2 = b2.sibling;
    if (null !== c2) {
      c2.return = b2.return;
      V$1 = c2;
      break;
    }
    V$1 = b2.return;
  }
}
function hk(a) {
  for (; null !== V$1; ) {
    var b2 = V$1;
    if (b2 === a) {
      V$1 = null;
      break;
    }
    var c2 = b2.sibling;
    if (null !== c2) {
      c2.return = b2.return;
      V$1 = c2;
      break;
    }
    V$1 = b2.return;
  }
}
function kk(a) {
  for (; null !== V$1; ) {
    var b2 = V$1;
    try {
      switch (b2.tag) {
        case 0:
        case 11:
        case 15:
          var c2 = b2.return;
          try {
            Rj(4, b2);
          } catch (k2) {
            W$1(b2, c2, k2);
          }
          break;
        case 1:
          var d2 = b2.stateNode;
          if ("function" === typeof d2.componentDidMount) {
            var e2 = b2.return;
            try {
              d2.componentDidMount();
            } catch (k2) {
              W$1(b2, e2, k2);
            }
          }
          var f2 = b2.return;
          try {
            Sj(b2);
          } catch (k2) {
            W$1(b2, f2, k2);
          }
          break;
        case 5:
          var g2 = b2.return;
          try {
            Sj(b2);
          } catch (k2) {
            W$1(b2, g2, k2);
          }
      }
    } catch (k2) {
      W$1(b2, b2.return, k2);
    }
    if (b2 === a) {
      V$1 = null;
      break;
    }
    var h2 = b2.sibling;
    if (null !== h2) {
      h2.return = b2.return;
      V$1 = h2;
      break;
    }
    V$1 = b2.return;
  }
}
var mk = Math.ceil, nk = ua.ReactCurrentDispatcher, ok = ua.ReactCurrentOwner, pk = ua.ReactCurrentBatchConfig, K$1 = 0, R = null, Y$1 = null, Z$1 = 0, gj = 0, fj = Uf(0), T$2 = 0, qk = null, hh = 0, rk = 0, sk = 0, tk = null, uk = null, gk = 0, Hj = Infinity, vk = null, Pi = false, Qi = null, Si = null, wk = false, xk = null, yk = 0, zk = 0, Ak = null, Bk = -1, Ck = 0;
function L$1() {
  return 0 !== (K$1 & 6) ? B$1() : -1 !== Bk ? Bk : Bk = B$1();
}
function lh(a) {
  if (0 === (a.mode & 1))
    return 1;
  if (0 !== (K$1 & 2) && 0 !== Z$1)
    return Z$1 & -Z$1;
  if (null !== Kg.transition)
    return 0 === Ck && (Ck = yc()), Ck;
  a = C$1;
  if (0 !== a)
    return a;
  a = window.event;
  a = void 0 === a ? 16 : jd(a.type);
  return a;
}
function mh(a, b2, c2, d2) {
  if (50 < zk)
    throw zk = 0, Ak = null, Error(p$1(185));
  Ac(a, c2, d2);
  if (0 === (K$1 & 2) || a !== R)
    a === R && (0 === (K$1 & 2) && (rk |= c2), 4 === T$2 && Dk(a, Z$1)), Ek(a, d2), 1 === c2 && 0 === K$1 && 0 === (b2.mode & 1) && (Hj = B$1() + 500, fg && jg());
}
function Ek(a, b2) {
  var c2 = a.callbackNode;
  wc(a, b2);
  var d2 = uc(a, a === R ? Z$1 : 0);
  if (0 === d2)
    null !== c2 && bc(c2), a.callbackNode = null, a.callbackPriority = 0;
  else if (b2 = d2 & -d2, a.callbackPriority !== b2) {
    null != c2 && bc(c2);
    if (1 === b2)
      0 === a.tag ? ig(Fk.bind(null, a)) : hg(Fk.bind(null, a)), Jf(function() {
        0 === (K$1 & 6) && jg();
      }), c2 = null;
    else {
      switch (Dc(d2)) {
        case 1:
          c2 = fc;
          break;
        case 4:
          c2 = gc;
          break;
        case 16:
          c2 = hc;
          break;
        case 536870912:
          c2 = jc;
          break;
        default:
          c2 = hc;
      }
      c2 = Gk(c2, Hk.bind(null, a));
    }
    a.callbackPriority = b2;
    a.callbackNode = c2;
  }
}
function Hk(a, b2) {
  Bk = -1;
  Ck = 0;
  if (0 !== (K$1 & 6))
    throw Error(p$1(327));
  var c2 = a.callbackNode;
  if (Ik() && a.callbackNode !== c2)
    return null;
  var d2 = uc(a, a === R ? Z$1 : 0);
  if (0 === d2)
    return null;
  if (0 !== (d2 & 30) || 0 !== (d2 & a.expiredLanes) || b2)
    b2 = Jk(a, d2);
  else {
    b2 = d2;
    var e2 = K$1;
    K$1 |= 2;
    var f2 = Kk();
    if (R !== a || Z$1 !== b2)
      vk = null, Hj = B$1() + 500, Lk(a, b2);
    do
      try {
        Mk();
        break;
      } catch (h2) {
        Nk(a, h2);
      }
    while (1);
    Qg();
    nk.current = f2;
    K$1 = e2;
    null !== Y$1 ? b2 = 0 : (R = null, Z$1 = 0, b2 = T$2);
  }
  if (0 !== b2) {
    2 === b2 && (e2 = xc(a), 0 !== e2 && (d2 = e2, b2 = Ok(a, e2)));
    if (1 === b2)
      throw c2 = qk, Lk(a, 0), Dk(a, d2), Ek(a, B$1()), c2;
    if (6 === b2)
      Dk(a, d2);
    else {
      e2 = a.current.alternate;
      if (0 === (d2 & 30) && !Pk(e2) && (b2 = Jk(a, d2), 2 === b2 && (f2 = xc(a), 0 !== f2 && (d2 = f2, b2 = Ok(a, f2))), 1 === b2))
        throw c2 = qk, Lk(a, 0), Dk(a, d2), Ek(a, B$1()), c2;
      a.finishedWork = e2;
      a.finishedLanes = d2;
      switch (b2) {
        case 0:
        case 1:
          throw Error(p$1(345));
        case 2:
          Qk(a, uk, vk);
          break;
        case 3:
          Dk(a, d2);
          if ((d2 & 130023424) === d2 && (b2 = gk + 500 - B$1(), 10 < b2)) {
            if (0 !== uc(a, 0))
              break;
            e2 = a.suspendedLanes;
            if ((e2 & d2) !== d2) {
              L$1();
              a.pingedLanes |= a.suspendedLanes & e2;
              break;
            }
            a.timeoutHandle = Ff(Qk.bind(null, a, uk, vk), b2);
            break;
          }
          Qk(a, uk, vk);
          break;
        case 4:
          Dk(a, d2);
          if ((d2 & 4194240) === d2)
            break;
          b2 = a.eventTimes;
          for (e2 = -1; 0 < d2; ) {
            var g2 = 31 - oc(d2);
            f2 = 1 << g2;
            g2 = b2[g2];
            g2 > e2 && (e2 = g2);
            d2 &= ~f2;
          }
          d2 = e2;
          d2 = B$1() - d2;
          d2 = (120 > d2 ? 120 : 480 > d2 ? 480 : 1080 > d2 ? 1080 : 1920 > d2 ? 1920 : 3e3 > d2 ? 3e3 : 4320 > d2 ? 4320 : 1960 * mk(d2 / 1960)) - d2;
          if (10 < d2) {
            a.timeoutHandle = Ff(Qk.bind(null, a, uk, vk), d2);
            break;
          }
          Qk(a, uk, vk);
          break;
        case 5:
          Qk(a, uk, vk);
          break;
        default:
          throw Error(p$1(329));
      }
    }
  }
  Ek(a, B$1());
  return a.callbackNode === c2 ? Hk.bind(null, a) : null;
}
function Ok(a, b2) {
  var c2 = tk;
  a.current.memoizedState.isDehydrated && (Lk(a, b2).flags |= 256);
  a = Jk(a, b2);
  2 !== a && (b2 = uk, uk = c2, null !== b2 && Gj(b2));
  return a;
}
function Gj(a) {
  null === uk ? uk = a : uk.push.apply(uk, a);
}
function Pk(a) {
  for (var b2 = a; ; ) {
    if (b2.flags & 16384) {
      var c2 = b2.updateQueue;
      if (null !== c2 && (c2 = c2.stores, null !== c2))
        for (var d2 = 0; d2 < c2.length; d2++) {
          var e2 = c2[d2], f2 = e2.getSnapshot;
          e2 = e2.value;
          try {
            if (!He$1(f2(), e2))
              return false;
          } catch (g2) {
            return false;
          }
        }
    }
    c2 = b2.child;
    if (b2.subtreeFlags & 16384 && null !== c2)
      c2.return = b2, b2 = c2;
    else {
      if (b2 === a)
        break;
      for (; null === b2.sibling; ) {
        if (null === b2.return || b2.return === a)
          return true;
        b2 = b2.return;
      }
      b2.sibling.return = b2.return;
      b2 = b2.sibling;
    }
  }
  return true;
}
function Dk(a, b2) {
  b2 &= ~sk;
  b2 &= ~rk;
  a.suspendedLanes |= b2;
  a.pingedLanes &= ~b2;
  for (a = a.expirationTimes; 0 < b2; ) {
    var c2 = 31 - oc(b2), d2 = 1 << c2;
    a[c2] = -1;
    b2 &= ~d2;
  }
}
function Fk(a) {
  if (0 !== (K$1 & 6))
    throw Error(p$1(327));
  Ik();
  var b2 = uc(a, 0);
  if (0 === (b2 & 1))
    return Ek(a, B$1()), null;
  var c2 = Jk(a, b2);
  if (0 !== a.tag && 2 === c2) {
    var d2 = xc(a);
    0 !== d2 && (b2 = d2, c2 = Ok(a, d2));
  }
  if (1 === c2)
    throw c2 = qk, Lk(a, 0), Dk(a, b2), Ek(a, B$1()), c2;
  if (6 === c2)
    throw Error(p$1(345));
  a.finishedWork = a.current.alternate;
  a.finishedLanes = b2;
  Qk(a, uk, vk);
  Ek(a, B$1());
  return null;
}
function Rk(a, b2) {
  var c2 = K$1;
  K$1 |= 1;
  try {
    return a(b2);
  } finally {
    K$1 = c2, 0 === K$1 && (Hj = B$1() + 500, fg && jg());
  }
}
function Sk(a) {
  null !== xk && 0 === xk.tag && 0 === (K$1 & 6) && Ik();
  var b2 = K$1;
  K$1 |= 1;
  var c2 = pk.transition, d2 = C$1;
  try {
    if (pk.transition = null, C$1 = 1, a)
      return a();
  } finally {
    C$1 = d2, pk.transition = c2, K$1 = b2, 0 === (K$1 & 6) && jg();
  }
}
function Ij() {
  gj = fj.current;
  E$1(fj);
}
function Lk(a, b2) {
  a.finishedWork = null;
  a.finishedLanes = 0;
  var c2 = a.timeoutHandle;
  -1 !== c2 && (a.timeoutHandle = -1, Gf(c2));
  if (null !== Y$1)
    for (c2 = Y$1.return; null !== c2; ) {
      var d2 = c2;
      wg(d2);
      switch (d2.tag) {
        case 1:
          d2 = d2.type.childContextTypes;
          null !== d2 && void 0 !== d2 && $f();
          break;
        case 3:
          Jh();
          E$1(Wf);
          E$1(H$1);
          Oh();
          break;
        case 5:
          Lh(d2);
          break;
        case 4:
          Jh();
          break;
        case 13:
          E$1(M$1);
          break;
        case 19:
          E$1(M$1);
          break;
        case 10:
          Rg(d2.type._context);
          break;
        case 22:
        case 23:
          Ij();
      }
      c2 = c2.return;
    }
  R = a;
  Y$1 = a = wh(a.current, null);
  Z$1 = gj = b2;
  T$2 = 0;
  qk = null;
  sk = rk = hh = 0;
  uk = tk = null;
  if (null !== Wg) {
    for (b2 = 0; b2 < Wg.length; b2++)
      if (c2 = Wg[b2], d2 = c2.interleaved, null !== d2) {
        c2.interleaved = null;
        var e2 = d2.next, f2 = c2.pending;
        if (null !== f2) {
          var g2 = f2.next;
          f2.next = e2;
          d2.next = g2;
        }
        c2.pending = d2;
      }
    Wg = null;
  }
  return a;
}
function Nk(a, b2) {
  do {
    var c2 = Y$1;
    try {
      Qg();
      Ph.current = ai;
      if (Sh) {
        for (var d2 = N$1.memoizedState; null !== d2; ) {
          var e2 = d2.queue;
          null !== e2 && (e2.pending = null);
          d2 = d2.next;
        }
        Sh = false;
      }
      Rh = 0;
      P$1 = O = N$1 = null;
      Th = false;
      Uh = 0;
      ok.current = null;
      if (null === c2 || null === c2.return) {
        T$2 = 1;
        qk = b2;
        Y$1 = null;
        break;
      }
      a: {
        var f2 = a, g2 = c2.return, h2 = c2, k2 = b2;
        b2 = Z$1;
        h2.flags |= 32768;
        if (null !== k2 && "object" === typeof k2 && "function" === typeof k2.then) {
          var l2 = k2, m2 = h2, q2 = m2.tag;
          if (0 === (m2.mode & 1) && (0 === q2 || 11 === q2 || 15 === q2)) {
            var r2 = m2.alternate;
            r2 ? (m2.updateQueue = r2.updateQueue, m2.memoizedState = r2.memoizedState, m2.lanes = r2.lanes) : (m2.updateQueue = null, m2.memoizedState = null);
          }
          var y2 = Vi(g2);
          if (null !== y2) {
            y2.flags &= -257;
            Wi(y2, g2, h2, f2, b2);
            y2.mode & 1 && Ti(f2, l2, b2);
            b2 = y2;
            k2 = l2;
            var n2 = b2.updateQueue;
            if (null === n2) {
              var t2 = /* @__PURE__ */ new Set();
              t2.add(k2);
              b2.updateQueue = t2;
            } else
              n2.add(k2);
            break a;
          } else {
            if (0 === (b2 & 1)) {
              Ti(f2, l2, b2);
              uj();
              break a;
            }
            k2 = Error(p$1(426));
          }
        } else if (I$1 && h2.mode & 1) {
          var J2 = Vi(g2);
          if (null !== J2) {
            0 === (J2.flags & 65536) && (J2.flags |= 256);
            Wi(J2, g2, h2, f2, b2);
            Jg(Ki(k2, h2));
            break a;
          }
        }
        f2 = k2 = Ki(k2, h2);
        4 !== T$2 && (T$2 = 2);
        null === tk ? tk = [f2] : tk.push(f2);
        f2 = g2;
        do {
          switch (f2.tag) {
            case 3:
              f2.flags |= 65536;
              b2 &= -b2;
              f2.lanes |= b2;
              var x2 = Oi(f2, k2, b2);
              fh(f2, x2);
              break a;
            case 1:
              h2 = k2;
              var w2 = f2.type, u2 = f2.stateNode;
              if (0 === (f2.flags & 128) && ("function" === typeof w2.getDerivedStateFromError || null !== u2 && "function" === typeof u2.componentDidCatch && (null === Si || !Si.has(u2)))) {
                f2.flags |= 65536;
                b2 &= -b2;
                f2.lanes |= b2;
                var F2 = Ri(f2, h2, b2);
                fh(f2, F2);
                break a;
              }
          }
          f2 = f2.return;
        } while (null !== f2);
      }
      Tk(c2);
    } catch (na) {
      b2 = na;
      Y$1 === c2 && null !== c2 && (Y$1 = c2 = c2.return);
      continue;
    }
    break;
  } while (1);
}
function Kk() {
  var a = nk.current;
  nk.current = ai;
  return null === a ? ai : a;
}
function uj() {
  if (0 === T$2 || 3 === T$2 || 2 === T$2)
    T$2 = 4;
  null === R || 0 === (hh & 268435455) && 0 === (rk & 268435455) || Dk(R, Z$1);
}
function Jk(a, b2) {
  var c2 = K$1;
  K$1 |= 2;
  var d2 = Kk();
  if (R !== a || Z$1 !== b2)
    vk = null, Lk(a, b2);
  do
    try {
      Uk();
      break;
    } catch (e2) {
      Nk(a, e2);
    }
  while (1);
  Qg();
  K$1 = c2;
  nk.current = d2;
  if (null !== Y$1)
    throw Error(p$1(261));
  R = null;
  Z$1 = 0;
  return T$2;
}
function Uk() {
  for (; null !== Y$1; )
    Vk(Y$1);
}
function Mk() {
  for (; null !== Y$1 && !cc(); )
    Vk(Y$1);
}
function Vk(a) {
  var b2 = Wk(a.alternate, a, gj);
  a.memoizedProps = a.pendingProps;
  null === b2 ? Tk(a) : Y$1 = b2;
  ok.current = null;
}
function Tk(a) {
  var b2 = a;
  do {
    var c2 = b2.alternate;
    a = b2.return;
    if (0 === (b2.flags & 32768)) {
      if (c2 = Fj(c2, b2, gj), null !== c2) {
        Y$1 = c2;
        return;
      }
    } else {
      c2 = Jj(c2, b2);
      if (null !== c2) {
        c2.flags &= 32767;
        Y$1 = c2;
        return;
      }
      if (null !== a)
        a.flags |= 32768, a.subtreeFlags = 0, a.deletions = null;
      else {
        T$2 = 6;
        Y$1 = null;
        return;
      }
    }
    b2 = b2.sibling;
    if (null !== b2) {
      Y$1 = b2;
      return;
    }
    Y$1 = b2 = a;
  } while (null !== b2);
  0 === T$2 && (T$2 = 5);
}
function Qk(a, b2, c2) {
  var d2 = C$1, e2 = pk.transition;
  try {
    pk.transition = null, C$1 = 1, Xk(a, b2, c2, d2);
  } finally {
    pk.transition = e2, C$1 = d2;
  }
  return null;
}
function Xk(a, b2, c2, d2) {
  do
    Ik();
  while (null !== xk);
  if (0 !== (K$1 & 6))
    throw Error(p$1(327));
  c2 = a.finishedWork;
  var e2 = a.finishedLanes;
  if (null === c2)
    return null;
  a.finishedWork = null;
  a.finishedLanes = 0;
  if (c2 === a.current)
    throw Error(p$1(177));
  a.callbackNode = null;
  a.callbackPriority = 0;
  var f2 = c2.lanes | c2.childLanes;
  Bc(a, f2);
  a === R && (Y$1 = R = null, Z$1 = 0);
  0 === (c2.subtreeFlags & 2064) && 0 === (c2.flags & 2064) || wk || (wk = true, Gk(hc, function() {
    Ik();
    return null;
  }));
  f2 = 0 !== (c2.flags & 15990);
  if (0 !== (c2.subtreeFlags & 15990) || f2) {
    f2 = pk.transition;
    pk.transition = null;
    var g2 = C$1;
    C$1 = 1;
    var h2 = K$1;
    K$1 |= 4;
    ok.current = null;
    Pj(a, c2);
    ek(c2, a);
    Oe$1(Df);
    dd = !!Cf;
    Df = Cf = null;
    a.current = c2;
    ik(c2);
    dc();
    K$1 = h2;
    C$1 = g2;
    pk.transition = f2;
  } else
    a.current = c2;
  wk && (wk = false, xk = a, yk = e2);
  f2 = a.pendingLanes;
  0 === f2 && (Si = null);
  mc(c2.stateNode);
  Ek(a, B$1());
  if (null !== b2)
    for (d2 = a.onRecoverableError, c2 = 0; c2 < b2.length; c2++)
      e2 = b2[c2], d2(e2.value, { componentStack: e2.stack, digest: e2.digest });
  if (Pi)
    throw Pi = false, a = Qi, Qi = null, a;
  0 !== (yk & 1) && 0 !== a.tag && Ik();
  f2 = a.pendingLanes;
  0 !== (f2 & 1) ? a === Ak ? zk++ : (zk = 0, Ak = a) : zk = 0;
  jg();
  return null;
}
function Ik() {
  if (null !== xk) {
    var a = Dc(yk), b2 = pk.transition, c2 = C$1;
    try {
      pk.transition = null;
      C$1 = 16 > a ? 16 : a;
      if (null === xk)
        var d2 = false;
      else {
        a = xk;
        xk = null;
        yk = 0;
        if (0 !== (K$1 & 6))
          throw Error(p$1(331));
        var e2 = K$1;
        K$1 |= 4;
        for (V$1 = a.current; null !== V$1; ) {
          var f2 = V$1, g2 = f2.child;
          if (0 !== (V$1.flags & 16)) {
            var h2 = f2.deletions;
            if (null !== h2) {
              for (var k2 = 0; k2 < h2.length; k2++) {
                var l2 = h2[k2];
                for (V$1 = l2; null !== V$1; ) {
                  var m2 = V$1;
                  switch (m2.tag) {
                    case 0:
                    case 11:
                    case 15:
                      Qj(8, m2, f2);
                  }
                  var q2 = m2.child;
                  if (null !== q2)
                    q2.return = m2, V$1 = q2;
                  else
                    for (; null !== V$1; ) {
                      m2 = V$1;
                      var r2 = m2.sibling, y2 = m2.return;
                      Tj(m2);
                      if (m2 === l2) {
                        V$1 = null;
                        break;
                      }
                      if (null !== r2) {
                        r2.return = y2;
                        V$1 = r2;
                        break;
                      }
                      V$1 = y2;
                    }
                }
              }
              var n2 = f2.alternate;
              if (null !== n2) {
                var t2 = n2.child;
                if (null !== t2) {
                  n2.child = null;
                  do {
                    var J2 = t2.sibling;
                    t2.sibling = null;
                    t2 = J2;
                  } while (null !== t2);
                }
              }
              V$1 = f2;
            }
          }
          if (0 !== (f2.subtreeFlags & 2064) && null !== g2)
            g2.return = f2, V$1 = g2;
          else
            b:
              for (; null !== V$1; ) {
                f2 = V$1;
                if (0 !== (f2.flags & 2048))
                  switch (f2.tag) {
                    case 0:
                    case 11:
                    case 15:
                      Qj(9, f2, f2.return);
                  }
                var x2 = f2.sibling;
                if (null !== x2) {
                  x2.return = f2.return;
                  V$1 = x2;
                  break b;
                }
                V$1 = f2.return;
              }
        }
        var w2 = a.current;
        for (V$1 = w2; null !== V$1; ) {
          g2 = V$1;
          var u2 = g2.child;
          if (0 !== (g2.subtreeFlags & 2064) && null !== u2)
            u2.return = g2, V$1 = u2;
          else
            b:
              for (g2 = w2; null !== V$1; ) {
                h2 = V$1;
                if (0 !== (h2.flags & 2048))
                  try {
                    switch (h2.tag) {
                      case 0:
                      case 11:
                      case 15:
                        Rj(9, h2);
                    }
                  } catch (na) {
                    W$1(h2, h2.return, na);
                  }
                if (h2 === g2) {
                  V$1 = null;
                  break b;
                }
                var F2 = h2.sibling;
                if (null !== F2) {
                  F2.return = h2.return;
                  V$1 = F2;
                  break b;
                }
                V$1 = h2.return;
              }
        }
        K$1 = e2;
        jg();
        if (lc && "function" === typeof lc.onPostCommitFiberRoot)
          try {
            lc.onPostCommitFiberRoot(kc, a);
          } catch (na) {
          }
        d2 = true;
      }
      return d2;
    } finally {
      C$1 = c2, pk.transition = b2;
    }
  }
  return false;
}
function Yk(a, b2, c2) {
  b2 = Ki(c2, b2);
  b2 = Oi(a, b2, 1);
  a = dh(a, b2, 1);
  b2 = L$1();
  null !== a && (Ac(a, 1, b2), Ek(a, b2));
}
function W$1(a, b2, c2) {
  if (3 === a.tag)
    Yk(a, a, c2);
  else
    for (; null !== b2; ) {
      if (3 === b2.tag) {
        Yk(b2, a, c2);
        break;
      } else if (1 === b2.tag) {
        var d2 = b2.stateNode;
        if ("function" === typeof b2.type.getDerivedStateFromError || "function" === typeof d2.componentDidCatch && (null === Si || !Si.has(d2))) {
          a = Ki(c2, a);
          a = Ri(b2, a, 1);
          b2 = dh(b2, a, 1);
          a = L$1();
          null !== b2 && (Ac(b2, 1, a), Ek(b2, a));
          break;
        }
      }
      b2 = b2.return;
    }
}
function Ui(a, b2, c2) {
  var d2 = a.pingCache;
  null !== d2 && d2.delete(b2);
  b2 = L$1();
  a.pingedLanes |= a.suspendedLanes & c2;
  R === a && (Z$1 & c2) === c2 && (4 === T$2 || 3 === T$2 && (Z$1 & 130023424) === Z$1 && 500 > B$1() - gk ? Lk(a, 0) : sk |= c2);
  Ek(a, b2);
}
function Zk(a, b2) {
  0 === b2 && (0 === (a.mode & 1) ? b2 = 1 : (b2 = sc, sc <<= 1, 0 === (sc & 130023424) && (sc = 4194304)));
  var c2 = L$1();
  a = Zg(a, b2);
  null !== a && (Ac(a, b2, c2), Ek(a, c2));
}
function vj(a) {
  var b2 = a.memoizedState, c2 = 0;
  null !== b2 && (c2 = b2.retryLane);
  Zk(a, c2);
}
function ck(a, b2) {
  var c2 = 0;
  switch (a.tag) {
    case 13:
      var d2 = a.stateNode;
      var e2 = a.memoizedState;
      null !== e2 && (c2 = e2.retryLane);
      break;
    case 19:
      d2 = a.stateNode;
      break;
    default:
      throw Error(p$1(314));
  }
  null !== d2 && d2.delete(b2);
  Zk(a, c2);
}
var Wk;
Wk = function(a, b2, c2) {
  if (null !== a)
    if (a.memoizedProps !== b2.pendingProps || Wf.current)
      Ug = true;
    else {
      if (0 === (a.lanes & c2) && 0 === (b2.flags & 128))
        return Ug = false, zj(a, b2, c2);
      Ug = 0 !== (a.flags & 131072) ? true : false;
    }
  else
    Ug = false, I$1 && 0 !== (b2.flags & 1048576) && ug(b2, ng, b2.index);
  b2.lanes = 0;
  switch (b2.tag) {
    case 2:
      var d2 = b2.type;
      jj(a, b2);
      a = b2.pendingProps;
      var e2 = Yf(b2, H$1.current);
      Tg(b2, c2);
      e2 = Xh(null, b2, d2, a, e2, c2);
      var f2 = bi();
      b2.flags |= 1;
      "object" === typeof e2 && null !== e2 && "function" === typeof e2.render && void 0 === e2.$$typeof ? (b2.tag = 1, b2.memoizedState = null, b2.updateQueue = null, Zf(d2) ? (f2 = true, cg(b2)) : f2 = false, b2.memoizedState = null !== e2.state && void 0 !== e2.state ? e2.state : null, ah(b2), e2.updater = nh, b2.stateNode = e2, e2._reactInternals = b2, rh(b2, d2, a, c2), b2 = kj(null, b2, d2, true, f2, c2)) : (b2.tag = 0, I$1 && f2 && vg(b2), Yi(null, b2, e2, c2), b2 = b2.child);
      return b2;
    case 16:
      d2 = b2.elementType;
      a: {
        jj(a, b2);
        a = b2.pendingProps;
        e2 = d2._init;
        d2 = e2(d2._payload);
        b2.type = d2;
        e2 = b2.tag = $k(d2);
        a = Lg(d2, a);
        switch (e2) {
          case 0:
            b2 = dj(null, b2, d2, a, c2);
            break a;
          case 1:
            b2 = ij(null, b2, d2, a, c2);
            break a;
          case 11:
            b2 = Zi(null, b2, d2, a, c2);
            break a;
          case 14:
            b2 = aj(null, b2, d2, Lg(d2.type, a), c2);
            break a;
        }
        throw Error(p$1(
          306,
          d2,
          ""
        ));
      }
      return b2;
    case 0:
      return d2 = b2.type, e2 = b2.pendingProps, e2 = b2.elementType === d2 ? e2 : Lg(d2, e2), dj(a, b2, d2, e2, c2);
    case 1:
      return d2 = b2.type, e2 = b2.pendingProps, e2 = b2.elementType === d2 ? e2 : Lg(d2, e2), ij(a, b2, d2, e2, c2);
    case 3:
      a: {
        lj(b2);
        if (null === a)
          throw Error(p$1(387));
        d2 = b2.pendingProps;
        f2 = b2.memoizedState;
        e2 = f2.element;
        bh(a, b2);
        gh(b2, d2, null, c2);
        var g2 = b2.memoizedState;
        d2 = g2.element;
        if (f2.isDehydrated)
          if (f2 = { element: d2, isDehydrated: false, cache: g2.cache, pendingSuspenseBoundaries: g2.pendingSuspenseBoundaries, transitions: g2.transitions }, b2.updateQueue.baseState = f2, b2.memoizedState = f2, b2.flags & 256) {
            e2 = Ki(Error(p$1(423)), b2);
            b2 = mj(a, b2, d2, c2, e2);
            break a;
          } else if (d2 !== e2) {
            e2 = Ki(Error(p$1(424)), b2);
            b2 = mj(a, b2, d2, c2, e2);
            break a;
          } else
            for (yg = Lf(b2.stateNode.containerInfo.firstChild), xg = b2, I$1 = true, zg = null, c2 = Ch(b2, null, d2, c2), b2.child = c2; c2; )
              c2.flags = c2.flags & -3 | 4096, c2 = c2.sibling;
        else {
          Ig();
          if (d2 === e2) {
            b2 = $i(a, b2, c2);
            break a;
          }
          Yi(a, b2, d2, c2);
        }
        b2 = b2.child;
      }
      return b2;
    case 5:
      return Kh(b2), null === a && Eg(b2), d2 = b2.type, e2 = b2.pendingProps, f2 = null !== a ? a.memoizedProps : null, g2 = e2.children, Ef(d2, e2) ? g2 = null : null !== f2 && Ef(d2, f2) && (b2.flags |= 32), hj(a, b2), Yi(a, b2, g2, c2), b2.child;
    case 6:
      return null === a && Eg(b2), null;
    case 13:
      return pj(a, b2, c2);
    case 4:
      return Ih(b2, b2.stateNode.containerInfo), d2 = b2.pendingProps, null === a ? b2.child = Bh(b2, null, d2, c2) : Yi(a, b2, d2, c2), b2.child;
    case 11:
      return d2 = b2.type, e2 = b2.pendingProps, e2 = b2.elementType === d2 ? e2 : Lg(d2, e2), Zi(a, b2, d2, e2, c2);
    case 7:
      return Yi(a, b2, b2.pendingProps, c2), b2.child;
    case 8:
      return Yi(a, b2, b2.pendingProps.children, c2), b2.child;
    case 12:
      return Yi(a, b2, b2.pendingProps.children, c2), b2.child;
    case 10:
      a: {
        d2 = b2.type._context;
        e2 = b2.pendingProps;
        f2 = b2.memoizedProps;
        g2 = e2.value;
        G$1(Mg, d2._currentValue);
        d2._currentValue = g2;
        if (null !== f2)
          if (He$1(f2.value, g2)) {
            if (f2.children === e2.children && !Wf.current) {
              b2 = $i(a, b2, c2);
              break a;
            }
          } else
            for (f2 = b2.child, null !== f2 && (f2.return = b2); null !== f2; ) {
              var h2 = f2.dependencies;
              if (null !== h2) {
                g2 = f2.child;
                for (var k2 = h2.firstContext; null !== k2; ) {
                  if (k2.context === d2) {
                    if (1 === f2.tag) {
                      k2 = ch(-1, c2 & -c2);
                      k2.tag = 2;
                      var l2 = f2.updateQueue;
                      if (null !== l2) {
                        l2 = l2.shared;
                        var m2 = l2.pending;
                        null === m2 ? k2.next = k2 : (k2.next = m2.next, m2.next = k2);
                        l2.pending = k2;
                      }
                    }
                    f2.lanes |= c2;
                    k2 = f2.alternate;
                    null !== k2 && (k2.lanes |= c2);
                    Sg(
                      f2.return,
                      c2,
                      b2
                    );
                    h2.lanes |= c2;
                    break;
                  }
                  k2 = k2.next;
                }
              } else if (10 === f2.tag)
                g2 = f2.type === b2.type ? null : f2.child;
              else if (18 === f2.tag) {
                g2 = f2.return;
                if (null === g2)
                  throw Error(p$1(341));
                g2.lanes |= c2;
                h2 = g2.alternate;
                null !== h2 && (h2.lanes |= c2);
                Sg(g2, c2, b2);
                g2 = f2.sibling;
              } else
                g2 = f2.child;
              if (null !== g2)
                g2.return = f2;
              else
                for (g2 = f2; null !== g2; ) {
                  if (g2 === b2) {
                    g2 = null;
                    break;
                  }
                  f2 = g2.sibling;
                  if (null !== f2) {
                    f2.return = g2.return;
                    g2 = f2;
                    break;
                  }
                  g2 = g2.return;
                }
              f2 = g2;
            }
        Yi(a, b2, e2.children, c2);
        b2 = b2.child;
      }
      return b2;
    case 9:
      return e2 = b2.type, d2 = b2.pendingProps.children, Tg(b2, c2), e2 = Vg(e2), d2 = d2(e2), b2.flags |= 1, Yi(a, b2, d2, c2), b2.child;
    case 14:
      return d2 = b2.type, e2 = Lg(d2, b2.pendingProps), e2 = Lg(d2.type, e2), aj(a, b2, d2, e2, c2);
    case 15:
      return cj(a, b2, b2.type, b2.pendingProps, c2);
    case 17:
      return d2 = b2.type, e2 = b2.pendingProps, e2 = b2.elementType === d2 ? e2 : Lg(d2, e2), jj(a, b2), b2.tag = 1, Zf(d2) ? (a = true, cg(b2)) : a = false, Tg(b2, c2), ph(b2, d2, e2), rh(b2, d2, e2, c2), kj(null, b2, d2, true, a, c2);
    case 19:
      return yj(a, b2, c2);
    case 22:
      return ej(a, b2, c2);
  }
  throw Error(p$1(156, b2.tag));
};
function Gk(a, b2) {
  return ac(a, b2);
}
function al(a, b2, c2, d2) {
  this.tag = a;
  this.key = c2;
  this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
  this.index = 0;
  this.ref = null;
  this.pendingProps = b2;
  this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
  this.mode = d2;
  this.subtreeFlags = this.flags = 0;
  this.deletions = null;
  this.childLanes = this.lanes = 0;
  this.alternate = null;
}
function Bg(a, b2, c2, d2) {
  return new al(a, b2, c2, d2);
}
function bj(a) {
  a = a.prototype;
  return !(!a || !a.isReactComponent);
}
function $k(a) {
  if ("function" === typeof a)
    return bj(a) ? 1 : 0;
  if (void 0 !== a && null !== a) {
    a = a.$$typeof;
    if (a === Da)
      return 11;
    if (a === Ga)
      return 14;
  }
  return 2;
}
function wh(a, b2) {
  var c2 = a.alternate;
  null === c2 ? (c2 = Bg(a.tag, b2, a.key, a.mode), c2.elementType = a.elementType, c2.type = a.type, c2.stateNode = a.stateNode, c2.alternate = a, a.alternate = c2) : (c2.pendingProps = b2, c2.type = a.type, c2.flags = 0, c2.subtreeFlags = 0, c2.deletions = null);
  c2.flags = a.flags & 14680064;
  c2.childLanes = a.childLanes;
  c2.lanes = a.lanes;
  c2.child = a.child;
  c2.memoizedProps = a.memoizedProps;
  c2.memoizedState = a.memoizedState;
  c2.updateQueue = a.updateQueue;
  b2 = a.dependencies;
  c2.dependencies = null === b2 ? null : { lanes: b2.lanes, firstContext: b2.firstContext };
  c2.sibling = a.sibling;
  c2.index = a.index;
  c2.ref = a.ref;
  return c2;
}
function yh(a, b2, c2, d2, e2, f2) {
  var g2 = 2;
  d2 = a;
  if ("function" === typeof a)
    bj(a) && (g2 = 1);
  else if ("string" === typeof a)
    g2 = 5;
  else
    a:
      switch (a) {
        case ya:
          return Ah(c2.children, e2, f2, b2);
        case za:
          g2 = 8;
          e2 |= 8;
          break;
        case Aa:
          return a = Bg(12, c2, b2, e2 | 2), a.elementType = Aa, a.lanes = f2, a;
        case Ea:
          return a = Bg(13, c2, b2, e2), a.elementType = Ea, a.lanes = f2, a;
        case Fa:
          return a = Bg(19, c2, b2, e2), a.elementType = Fa, a.lanes = f2, a;
        case Ia:
          return qj(c2, e2, f2, b2);
        default:
          if ("object" === typeof a && null !== a)
            switch (a.$$typeof) {
              case Ba:
                g2 = 10;
                break a;
              case Ca:
                g2 = 9;
                break a;
              case Da:
                g2 = 11;
                break a;
              case Ga:
                g2 = 14;
                break a;
              case Ha:
                g2 = 16;
                d2 = null;
                break a;
            }
          throw Error(p$1(130, null == a ? a : typeof a, ""));
      }
  b2 = Bg(g2, c2, b2, e2);
  b2.elementType = a;
  b2.type = d2;
  b2.lanes = f2;
  return b2;
}
function Ah(a, b2, c2, d2) {
  a = Bg(7, a, d2, b2);
  a.lanes = c2;
  return a;
}
function qj(a, b2, c2, d2) {
  a = Bg(22, a, d2, b2);
  a.elementType = Ia;
  a.lanes = c2;
  a.stateNode = { isHidden: false };
  return a;
}
function xh(a, b2, c2) {
  a = Bg(6, a, null, b2);
  a.lanes = c2;
  return a;
}
function zh(a, b2, c2) {
  b2 = Bg(4, null !== a.children ? a.children : [], a.key, b2);
  b2.lanes = c2;
  b2.stateNode = { containerInfo: a.containerInfo, pendingChildren: null, implementation: a.implementation };
  return b2;
}
function bl(a, b2, c2, d2, e2) {
  this.tag = b2;
  this.containerInfo = a;
  this.finishedWork = this.pingCache = this.current = this.pendingChildren = null;
  this.timeoutHandle = -1;
  this.callbackNode = this.pendingContext = this.context = null;
  this.callbackPriority = 0;
  this.eventTimes = zc(0);
  this.expirationTimes = zc(-1);
  this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0;
  this.entanglements = zc(0);
  this.identifierPrefix = d2;
  this.onRecoverableError = e2;
  this.mutableSourceEagerHydrationData = null;
}
function cl(a, b2, c2, d2, e2, f2, g2, h2, k2) {
  a = new bl(a, b2, c2, h2, k2);
  1 === b2 ? (b2 = 1, true === f2 && (b2 |= 8)) : b2 = 0;
  f2 = Bg(3, null, null, b2);
  a.current = f2;
  f2.stateNode = a;
  f2.memoizedState = { element: d2, isDehydrated: c2, cache: null, transitions: null, pendingSuspenseBoundaries: null };
  ah(f2);
  return a;
}
function dl(a, b2, c2) {
  var d2 = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;
  return { $$typeof: wa, key: null == d2 ? null : "" + d2, children: a, containerInfo: b2, implementation: c2 };
}
function el(a) {
  if (!a)
    return Vf;
  a = a._reactInternals;
  a: {
    if (Vb(a) !== a || 1 !== a.tag)
      throw Error(p$1(170));
    var b2 = a;
    do {
      switch (b2.tag) {
        case 3:
          b2 = b2.stateNode.context;
          break a;
        case 1:
          if (Zf(b2.type)) {
            b2 = b2.stateNode.__reactInternalMemoizedMergedChildContext;
            break a;
          }
      }
      b2 = b2.return;
    } while (null !== b2);
    throw Error(p$1(171));
  }
  if (1 === a.tag) {
    var c2 = a.type;
    if (Zf(c2))
      return bg(a, c2, b2);
  }
  return b2;
}
function fl(a, b2, c2, d2, e2, f2, g2, h2, k2) {
  a = cl(c2, d2, true, a, e2, f2, g2, h2, k2);
  a.context = el(null);
  c2 = a.current;
  d2 = L$1();
  e2 = lh(c2);
  f2 = ch(d2, e2);
  f2.callback = void 0 !== b2 && null !== b2 ? b2 : null;
  dh(c2, f2, e2);
  a.current.lanes = e2;
  Ac(a, e2, d2);
  Ek(a, d2);
  return a;
}
function gl(a, b2, c2, d2) {
  var e2 = b2.current, f2 = L$1(), g2 = lh(e2);
  c2 = el(c2);
  null === b2.context ? b2.context = c2 : b2.pendingContext = c2;
  b2 = ch(f2, g2);
  b2.payload = { element: a };
  d2 = void 0 === d2 ? null : d2;
  null !== d2 && (b2.callback = d2);
  a = dh(e2, b2, g2);
  null !== a && (mh(a, e2, g2, f2), eh(a, e2, g2));
  return g2;
}
function hl(a) {
  a = a.current;
  if (!a.child)
    return null;
  switch (a.child.tag) {
    case 5:
      return a.child.stateNode;
    default:
      return a.child.stateNode;
  }
}
function il(a, b2) {
  a = a.memoizedState;
  if (null !== a && null !== a.dehydrated) {
    var c2 = a.retryLane;
    a.retryLane = 0 !== c2 && c2 < b2 ? c2 : b2;
  }
}
function jl(a, b2) {
  il(a, b2);
  (a = a.alternate) && il(a, b2);
}
function kl() {
  return null;
}
var ll = "function" === typeof reportError ? reportError : function(a) {
  console.error(a);
};
function ml(a) {
  this._internalRoot = a;
}
nl.prototype.render = ml.prototype.render = function(a) {
  var b2 = this._internalRoot;
  if (null === b2)
    throw Error(p$1(409));
  gl(a, b2, null, null);
};
nl.prototype.unmount = ml.prototype.unmount = function() {
  var a = this._internalRoot;
  if (null !== a) {
    this._internalRoot = null;
    var b2 = a.containerInfo;
    Sk(function() {
      gl(null, a, null, null);
    });
    b2[uf] = null;
  }
};
function nl(a) {
  this._internalRoot = a;
}
nl.prototype.unstable_scheduleHydration = function(a) {
  if (a) {
    var b2 = Hc();
    a = { blockedOn: null, target: a, priority: b2 };
    for (var c2 = 0; c2 < Qc.length && 0 !== b2 && b2 < Qc[c2].priority; c2++)
      ;
    Qc.splice(c2, 0, a);
    0 === c2 && Vc(a);
  }
};
function ol(a) {
  return !(!a || 1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType);
}
function pl(a) {
  return !(!a || 1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType && (8 !== a.nodeType || " react-mount-point-unstable " !== a.nodeValue));
}
function ql() {
}
function rl(a, b2, c2, d2, e2) {
  if (e2) {
    if ("function" === typeof d2) {
      var f2 = d2;
      d2 = function() {
        var a2 = hl(g2);
        f2.call(a2);
      };
    }
    var g2 = fl(b2, d2, a, 0, null, false, false, "", ql);
    a._reactRootContainer = g2;
    a[uf] = g2.current;
    sf(8 === a.nodeType ? a.parentNode : a);
    Sk();
    return g2;
  }
  for (; e2 = a.lastChild; )
    a.removeChild(e2);
  if ("function" === typeof d2) {
    var h2 = d2;
    d2 = function() {
      var a2 = hl(k2);
      h2.call(a2);
    };
  }
  var k2 = cl(a, 0, false, null, null, false, false, "", ql);
  a._reactRootContainer = k2;
  a[uf] = k2.current;
  sf(8 === a.nodeType ? a.parentNode : a);
  Sk(function() {
    gl(b2, k2, c2, d2);
  });
  return k2;
}
function sl(a, b2, c2, d2, e2) {
  var f2 = c2._reactRootContainer;
  if (f2) {
    var g2 = f2;
    if ("function" === typeof e2) {
      var h2 = e2;
      e2 = function() {
        var a2 = hl(g2);
        h2.call(a2);
      };
    }
    gl(b2, g2, a, e2);
  } else
    g2 = rl(c2, b2, a, e2, d2);
  return hl(g2);
}
Ec = function(a) {
  switch (a.tag) {
    case 3:
      var b2 = a.stateNode;
      if (b2.current.memoizedState.isDehydrated) {
        var c2 = tc(b2.pendingLanes);
        0 !== c2 && (Cc(b2, c2 | 1), Ek(b2, B$1()), 0 === (K$1 & 6) && (Hj = B$1() + 500, jg()));
      }
      break;
    case 13:
      Sk(function() {
        var b3 = Zg(a, 1);
        if (null !== b3) {
          var c3 = L$1();
          mh(b3, a, 1, c3);
        }
      }), jl(a, 1);
  }
};
Fc = function(a) {
  if (13 === a.tag) {
    var b2 = Zg(a, 134217728);
    if (null !== b2) {
      var c2 = L$1();
      mh(b2, a, 134217728, c2);
    }
    jl(a, 134217728);
  }
};
Gc = function(a) {
  if (13 === a.tag) {
    var b2 = lh(a), c2 = Zg(a, b2);
    if (null !== c2) {
      var d2 = L$1();
      mh(c2, a, b2, d2);
    }
    jl(a, b2);
  }
};
Hc = function() {
  return C$1;
};
Ic = function(a, b2) {
  var c2 = C$1;
  try {
    return C$1 = a, b2();
  } finally {
    C$1 = c2;
  }
};
yb = function(a, b2, c2) {
  switch (b2) {
    case "input":
      bb(a, c2);
      b2 = c2.name;
      if ("radio" === c2.type && null != b2) {
        for (c2 = a; c2.parentNode; )
          c2 = c2.parentNode;
        c2 = c2.querySelectorAll("input[name=" + JSON.stringify("" + b2) + '][type="radio"]');
        for (b2 = 0; b2 < c2.length; b2++) {
          var d2 = c2[b2];
          if (d2 !== a && d2.form === a.form) {
            var e2 = Db(d2);
            if (!e2)
              throw Error(p$1(90));
            Wa(d2);
            bb(d2, e2);
          }
        }
      }
      break;
    case "textarea":
      ib(a, c2);
      break;
    case "select":
      b2 = c2.value, null != b2 && fb(a, !!c2.multiple, b2, false);
  }
};
Gb = Rk;
Hb = Sk;
var tl = { usingClientEntryPoint: false, Events: [Cb, ue, Db, Eb, Fb, Rk] }, ul = { findFiberByHostInstance: Wc, bundleType: 0, version: "18.2.0", rendererPackageName: "react-dom" };
var vl = { bundleType: ul.bundleType, version: ul.version, rendererPackageName: ul.rendererPackageName, rendererConfig: ul.rendererConfig, overrideHookState: null, overrideHookStateDeletePath: null, overrideHookStateRenamePath: null, overrideProps: null, overridePropsDeletePath: null, overridePropsRenamePath: null, setErrorHandler: null, setSuspenseHandler: null, scheduleUpdate: null, currentDispatcherRef: ua.ReactCurrentDispatcher, findHostInstanceByFiber: function(a) {
  a = Zb(a);
  return null === a ? null : a.stateNode;
}, findFiberByHostInstance: ul.findFiberByHostInstance || kl, findHostInstancesForRefresh: null, scheduleRefresh: null, scheduleRoot: null, setRefreshHandler: null, getCurrentFiber: null, reconcilerVersion: "18.2.0-next-9e3b772b8-20220608" };
if ("undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
  var wl = __REACT_DEVTOOLS_GLOBAL_HOOK__;
  if (!wl.isDisabled && wl.supportsFiber)
    try {
      kc = wl.inject(vl), lc = wl;
    } catch (a) {
    }
}
reactDom_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = tl;
reactDom_production_min.createPortal = function(a, b2) {
  var c2 = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;
  if (!ol(b2))
    throw Error(p$1(200));
  return dl(a, b2, null, c2);
};
reactDom_production_min.createRoot = function(a, b2) {
  if (!ol(a))
    throw Error(p$1(299));
  var c2 = false, d2 = "", e2 = ll;
  null !== b2 && void 0 !== b2 && (true === b2.unstable_strictMode && (c2 = true), void 0 !== b2.identifierPrefix && (d2 = b2.identifierPrefix), void 0 !== b2.onRecoverableError && (e2 = b2.onRecoverableError));
  b2 = cl(a, 1, false, null, null, c2, false, d2, e2);
  a[uf] = b2.current;
  sf(8 === a.nodeType ? a.parentNode : a);
  return new ml(b2);
};
reactDom_production_min.findDOMNode = function(a) {
  if (null == a)
    return null;
  if (1 === a.nodeType)
    return a;
  var b2 = a._reactInternals;
  if (void 0 === b2) {
    if ("function" === typeof a.render)
      throw Error(p$1(188));
    a = Object.keys(a).join(",");
    throw Error(p$1(268, a));
  }
  a = Zb(b2);
  a = null === a ? null : a.stateNode;
  return a;
};
reactDom_production_min.flushSync = function(a) {
  return Sk(a);
};
reactDom_production_min.hydrate = function(a, b2, c2) {
  if (!pl(b2))
    throw Error(p$1(200));
  return sl(null, a, b2, true, c2);
};
reactDom_production_min.hydrateRoot = function(a, b2, c2) {
  if (!ol(a))
    throw Error(p$1(405));
  var d2 = null != c2 && c2.hydratedSources || null, e2 = false, f2 = "", g2 = ll;
  null !== c2 && void 0 !== c2 && (true === c2.unstable_strictMode && (e2 = true), void 0 !== c2.identifierPrefix && (f2 = c2.identifierPrefix), void 0 !== c2.onRecoverableError && (g2 = c2.onRecoverableError));
  b2 = fl(b2, null, a, 1, null != c2 ? c2 : null, e2, false, f2, g2);
  a[uf] = b2.current;
  sf(a);
  if (d2)
    for (a = 0; a < d2.length; a++)
      c2 = d2[a], e2 = c2._getVersion, e2 = e2(c2._source), null == b2.mutableSourceEagerHydrationData ? b2.mutableSourceEagerHydrationData = [c2, e2] : b2.mutableSourceEagerHydrationData.push(
        c2,
        e2
      );
  return new nl(b2);
};
reactDom_production_min.render = function(a, b2, c2) {
  if (!pl(b2))
    throw Error(p$1(200));
  return sl(null, a, b2, false, c2);
};
reactDom_production_min.unmountComponentAtNode = function(a) {
  if (!pl(a))
    throw Error(p$1(40));
  return a._reactRootContainer ? (Sk(function() {
    sl(null, null, a, false, function() {
      a._reactRootContainer = null;
      a[uf] = null;
    });
  }), true) : false;
};
reactDom_production_min.unstable_batchedUpdates = Rk;
reactDom_production_min.unstable_renderSubtreeIntoContainer = function(a, b2, c2, d2) {
  if (!pl(c2))
    throw Error(p$1(200));
  if (null == a || void 0 === a._reactInternals)
    throw Error(p$1(38));
  return sl(a, b2, c2, false, d2);
};
reactDom_production_min.version = "18.2.0-next-9e3b772b8-20220608";
function checkDCE() {
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === "undefined" || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== "function") {
    return;
  }
  try {
    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
  } catch (err) {
    console.error(err);
  }
}
{
  checkDCE();
  reactDom.exports = reactDom_production_min;
}
var reactDomExports = reactDom.exports;
var m$2 = reactDomExports;
{
  client.createRoot = m$2.createRoot;
  client.hydrateRoot = m$2.hydrateRoot;
}
/**
 * @remix-run/router v1.11.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
function _extends$3() {
  _extends$3 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$3.apply(this, arguments);
}
var Action$1;
(function(Action2) {
  Action2["Pop"] = "POP";
  Action2["Push"] = "PUSH";
  Action2["Replace"] = "REPLACE";
})(Action$1 || (Action$1 = {}));
const PopStateEventType = "popstate";
function createBrowserHistory(options) {
  if (options === void 0) {
    options = {};
  }
  function createBrowserLocation(window2, globalHistory) {
    let {
      pathname,
      search,
      hash
    } = window2.location;
    return createLocation(
      "",
      {
        pathname,
        search,
        hash
      },
      // state defaults to `null` because `window.history.state` does
      globalHistory.state && globalHistory.state.usr || null,
      globalHistory.state && globalHistory.state.key || "default"
    );
  }
  function createBrowserHref(window2, to) {
    return typeof to === "string" ? to : createPath$1(to);
  }
  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);
}
function invariant(value, message) {
  if (value === false || value === null || typeof value === "undefined") {
    throw new Error(message);
  }
}
function warning$1(cond, message) {
  if (!cond) {
    if (typeof console !== "undefined")
      console.warn(message);
    try {
      throw new Error(message);
    } catch (e2) {
    }
  }
}
function createKey() {
  return Math.random().toString(36).substr(2, 8);
}
function getHistoryState(location, index2) {
  return {
    usr: location.state,
    key: location.key,
    idx: index2
  };
}
function createLocation(current, to, state, key) {
  if (state === void 0) {
    state = null;
  }
  let location = _extends$3({
    pathname: typeof current === "string" ? current : current.pathname,
    search: "",
    hash: ""
  }, typeof to === "string" ? parsePath(to) : to, {
    state,
    // TODO: This could be cleaned up.  push/replace should probably just take
    // full Locations now and avoid the need to run through this flow at all
    // But that's a pretty big refactor to the current test suite so going to
    // keep as is for the time being and just let any incoming keys take precedence
    key: to && to.key || key || createKey()
  });
  return location;
}
function createPath$1(_ref) {
  let {
    pathname = "/",
    search = "",
    hash = ""
  } = _ref;
  if (search && search !== "?")
    pathname += search.charAt(0) === "?" ? search : "?" + search;
  if (hash && hash !== "#")
    pathname += hash.charAt(0) === "#" ? hash : "#" + hash;
  return pathname;
}
function parsePath(path) {
  let parsedPath = {};
  if (path) {
    let hashIndex = path.indexOf("#");
    if (hashIndex >= 0) {
      parsedPath.hash = path.substr(hashIndex);
      path = path.substr(0, hashIndex);
    }
    let searchIndex = path.indexOf("?");
    if (searchIndex >= 0) {
      parsedPath.search = path.substr(searchIndex);
      path = path.substr(0, searchIndex);
    }
    if (path) {
      parsedPath.pathname = path;
    }
  }
  return parsedPath;
}
function getUrlBasedHistory(getLocation, createHref, validateLocation, options) {
  if (options === void 0) {
    options = {};
  }
  let {
    window: window2 = document.defaultView,
    v5Compat = false
  } = options;
  let globalHistory = window2.history;
  let action2 = Action$1.Pop;
  let listener = null;
  let index2 = getIndex();
  if (index2 == null) {
    index2 = 0;
    globalHistory.replaceState(_extends$3({}, globalHistory.state, {
      idx: index2
    }), "");
  }
  function getIndex() {
    let state = globalHistory.state || {
      idx: null
    };
    return state.idx;
  }
  function handlePop() {
    action2 = Action$1.Pop;
    let nextIndex = getIndex();
    let delta = nextIndex == null ? null : nextIndex - index2;
    index2 = nextIndex;
    if (listener) {
      listener({
        action: action2,
        location: history2.location,
        delta
      });
    }
  }
  function push(to, state) {
    action2 = Action$1.Push;
    let location = createLocation(history2.location, to, state);
    if (validateLocation)
      validateLocation(location, to);
    index2 = getIndex() + 1;
    let historyState = getHistoryState(location, index2);
    let url = history2.createHref(location);
    try {
      globalHistory.pushState(historyState, "", url);
    } catch (error) {
      if (error instanceof DOMException && error.name === "DataCloneError") {
        throw error;
      }
      window2.location.assign(url);
    }
    if (v5Compat && listener) {
      listener({
        action: action2,
        location: history2.location,
        delta: 1
      });
    }
  }
  function replace(to, state) {
    action2 = Action$1.Replace;
    let location = createLocation(history2.location, to, state);
    if (validateLocation)
      validateLocation(location, to);
    index2 = getIndex();
    let historyState = getHistoryState(location, index2);
    let url = history2.createHref(location);
    globalHistory.replaceState(historyState, "", url);
    if (v5Compat && listener) {
      listener({
        action: action2,
        location: history2.location,
        delta: 0
      });
    }
  }
  function createURL(to) {
    let base = window2.location.origin !== "null" ? window2.location.origin : window2.location.href;
    let href = typeof to === "string" ? to : createPath$1(to);
    invariant(base, "No window.location.(origin|href) available to create URL for href: " + href);
    return new URL(href, base);
  }
  let history2 = {
    get action() {
      return action2;
    },
    get location() {
      return getLocation(window2, globalHistory);
    },
    listen(fn) {
      if (listener) {
        throw new Error("A history only accepts one active listener");
      }
      window2.addEventListener(PopStateEventType, handlePop);
      listener = fn;
      return () => {
        window2.removeEventListener(PopStateEventType, handlePop);
        listener = null;
      };
    },
    createHref(to) {
      return createHref(window2, to);
    },
    createURL,
    encodeLocation(to) {
      let url = createURL(to);
      return {
        pathname: url.pathname,
        search: url.search,
        hash: url.hash
      };
    },
    push,
    replace,
    go(n2) {
      return globalHistory.go(n2);
    }
  };
  return history2;
}
var ResultType;
(function(ResultType2) {
  ResultType2["data"] = "data";
  ResultType2["deferred"] = "deferred";
  ResultType2["redirect"] = "redirect";
  ResultType2["error"] = "error";
})(ResultType || (ResultType = {}));
function matchRoutes(routes, locationArg, basename) {
  if (basename === void 0) {
    basename = "/";
  }
  let location = typeof locationArg === "string" ? parsePath(locationArg) : locationArg;
  let pathname = stripBasename(location.pathname || "/", basename);
  if (pathname == null) {
    return null;
  }
  let branches = flattenRoutes(routes);
  rankRouteBranches(branches);
  let matches2 = null;
  for (let i = 0; matches2 == null && i < branches.length; ++i) {
    matches2 = matchRouteBranch(
      branches[i],
      // Incoming pathnames are generally encoded from either window.location
      // or from router.navigate, but we want to match against the unencoded
      // paths in the route definitions.  Memory router locations won't be
      // encoded here but there also shouldn't be anything to decode so this
      // should be a safe operation.  This avoids needing matchRoutes to be
      // history-aware.
      safelyDecodeURI(pathname)
    );
  }
  return matches2;
}
function flattenRoutes(routes, branches, parentsMeta, parentPath) {
  if (branches === void 0) {
    branches = [];
  }
  if (parentsMeta === void 0) {
    parentsMeta = [];
  }
  if (parentPath === void 0) {
    parentPath = "";
  }
  let flattenRoute = (route, index2, relativePath) => {
    let meta = {
      relativePath: relativePath === void 0 ? route.path || "" : relativePath,
      caseSensitive: route.caseSensitive === true,
      childrenIndex: index2,
      route
    };
    if (meta.relativePath.startsWith("/")) {
      invariant(meta.relativePath.startsWith(parentPath), 'Absolute route path "' + meta.relativePath + '" nested under path ' + ('"' + parentPath + '" is not valid. An absolute child route path ') + "must start with the combined path of all its parent routes.");
      meta.relativePath = meta.relativePath.slice(parentPath.length);
    }
    let path = joinPaths([parentPath, meta.relativePath]);
    let routesMeta = parentsMeta.concat(meta);
    if (route.children && route.children.length > 0) {
      invariant(
        // Our types know better, but runtime JS may not!
        // @ts-expect-error
        route.index !== true,
        "Index routes must not have child routes. Please remove " + ('all child routes from route path "' + path + '".')
      );
      flattenRoutes(route.children, branches, routesMeta, path);
    }
    if (route.path == null && !route.index) {
      return;
    }
    branches.push({
      path,
      score: computeScore(path, route.index),
      routesMeta
    });
  };
  routes.forEach((route, index2) => {
    var _route$path;
    if (route.path === "" || !((_route$path = route.path) != null && _route$path.includes("?"))) {
      flattenRoute(route, index2);
    } else {
      for (let exploded of explodeOptionalSegments(route.path)) {
        flattenRoute(route, index2, exploded);
      }
    }
  });
  return branches;
}
function explodeOptionalSegments(path) {
  let segments = path.split("/");
  if (segments.length === 0)
    return [];
  let [first, ...rest] = segments;
  let isOptional = first.endsWith("?");
  let required = first.replace(/\?$/, "");
  if (rest.length === 0) {
    return isOptional ? [required, ""] : [required];
  }
  let restExploded = explodeOptionalSegments(rest.join("/"));
  let result = [];
  result.push(...restExploded.map((subpath) => subpath === "" ? required : [required, subpath].join("/")));
  if (isOptional) {
    result.push(...restExploded);
  }
  return result.map((exploded) => path.startsWith("/") && exploded === "" ? "/" : exploded);
}
function rankRouteBranches(branches) {
  branches.sort((a, b2) => a.score !== b2.score ? b2.score - a.score : compareIndexes(a.routesMeta.map((meta) => meta.childrenIndex), b2.routesMeta.map((meta) => meta.childrenIndex)));
}
const paramRe = /^:\w+$/;
const dynamicSegmentValue = 3;
const indexRouteValue = 2;
const emptySegmentValue = 1;
const staticSegmentValue = 10;
const splatPenalty = -2;
const isSplat = (s) => s === "*";
function computeScore(path, index2) {
  let segments = path.split("/");
  let initialScore = segments.length;
  if (segments.some(isSplat)) {
    initialScore += splatPenalty;
  }
  if (index2) {
    initialScore += indexRouteValue;
  }
  return segments.filter((s) => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === "" ? emptySegmentValue : staticSegmentValue), initialScore);
}
function compareIndexes(a, b2) {
  let siblings = a.length === b2.length && a.slice(0, -1).every((n2, i) => n2 === b2[i]);
  return siblings ? (
    // If two routes are siblings, we should try to match the earlier sibling
    // first. This allows people to have fine-grained control over the matching
    // behavior by simply putting routes with identical paths in the order they
    // want them tried.
    a[a.length - 1] - b2[b2.length - 1]
  ) : (
    // Otherwise, it doesn't really make sense to rank non-siblings by index,
    // so they sort equally.
    0
  );
}
function matchRouteBranch(branch, pathname) {
  let {
    routesMeta
  } = branch;
  let matchedParams = {};
  let matchedPathname = "/";
  let matches2 = [];
  for (let i = 0; i < routesMeta.length; ++i) {
    let meta = routesMeta[i];
    let end = i === routesMeta.length - 1;
    let remainingPathname = matchedPathname === "/" ? pathname : pathname.slice(matchedPathname.length) || "/";
    let match = matchPath({
      path: meta.relativePath,
      caseSensitive: meta.caseSensitive,
      end
    }, remainingPathname);
    if (!match)
      return null;
    Object.assign(matchedParams, match.params);
    let route = meta.route;
    matches2.push({
      // TODO: Can this as be avoided?
      params: matchedParams,
      pathname: joinPaths([matchedPathname, match.pathname]),
      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),
      route
    });
    if (match.pathnameBase !== "/") {
      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);
    }
  }
  return matches2;
}
function matchPath(pattern, pathname) {
  if (typeof pattern === "string") {
    pattern = {
      path: pattern,
      caseSensitive: false,
      end: true
    };
  }
  let [matcher, compiledParams] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);
  let match = pathname.match(matcher);
  if (!match)
    return null;
  let matchedPathname = match[0];
  let pathnameBase = matchedPathname.replace(/(.)\/+$/, "$1");
  let captureGroups = match.slice(1);
  let params = compiledParams.reduce((memo, _ref, index2) => {
    let {
      paramName,
      isOptional
    } = _ref;
    if (paramName === "*") {
      let splatValue = captureGroups[index2] || "";
      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\/+$/, "$1");
    }
    const value = captureGroups[index2];
    if (isOptional && !value) {
      memo[paramName] = void 0;
    } else {
      memo[paramName] = safelyDecodeURIComponent(value || "", paramName);
    }
    return memo;
  }, {});
  return {
    params,
    pathname: matchedPathname,
    pathnameBase,
    pattern
  };
}
function compilePath(path, caseSensitive, end) {
  if (caseSensitive === void 0) {
    caseSensitive = false;
  }
  if (end === void 0) {
    end = true;
  }
  warning$1(path === "*" || !path.endsWith("*") || path.endsWith("/*"), 'Route path "' + path + '" will be treated as if it were ' + ('"' + path.replace(/\*$/, "/*") + '" because the `*` character must ') + "always follow a `/` in the pattern. To get rid of this warning, " + ('please change the route path to "' + path.replace(/\*$/, "/*") + '".'));
  let params = [];
  let regexpSource = "^" + path.replace(/\/*\*?$/, "").replace(/^\/*/, "/").replace(/[\\.*+^${}|()[\]]/g, "\\$&").replace(/\/:(\w+)(\?)?/g, (_2, paramName, isOptional) => {
    params.push({
      paramName,
      isOptional: isOptional != null
    });
    return isOptional ? "/?([^\\/]+)?" : "/([^\\/]+)";
  });
  if (path.endsWith("*")) {
    params.push({
      paramName: "*"
    });
    regexpSource += path === "*" || path === "/*" ? "(.*)$" : "(?:\\/(.+)|\\/*)$";
  } else if (end) {
    regexpSource += "\\/*$";
  } else if (path !== "" && path !== "/") {
    regexpSource += "(?:(?=\\/|$))";
  } else
    ;
  let matcher = new RegExp(regexpSource, caseSensitive ? void 0 : "i");
  return [matcher, params];
}
function safelyDecodeURI(value) {
  try {
    return decodeURI(value);
  } catch (error) {
    warning$1(false, 'The URL path "' + value + '" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent ' + ("encoding (" + error + ")."));
    return value;
  }
}
function safelyDecodeURIComponent(value, paramName) {
  try {
    return decodeURIComponent(value);
  } catch (error) {
    warning$1(false, 'The value for the URL param "' + paramName + '" will not be decoded because' + (' the string "' + value + '" is a malformed URL segment. This is probably') + (" due to a bad percent encoding (" + error + ")."));
    return value;
  }
}
function stripBasename(pathname, basename) {
  if (basename === "/")
    return pathname;
  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {
    return null;
  }
  let startIndex = basename.endsWith("/") ? basename.length - 1 : basename.length;
  let nextChar = pathname.charAt(startIndex);
  if (nextChar && nextChar !== "/") {
    return null;
  }
  return pathname.slice(startIndex) || "/";
}
function resolvePath(to, fromPathname) {
  if (fromPathname === void 0) {
    fromPathname = "/";
  }
  let {
    pathname: toPathname,
    search = "",
    hash = ""
  } = typeof to === "string" ? parsePath(to) : to;
  let pathname = toPathname ? toPathname.startsWith("/") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;
  return {
    pathname,
    search: normalizeSearch(search),
    hash: normalizeHash(hash)
  };
}
function resolvePathname(relativePath, fromPathname) {
  let segments = fromPathname.replace(/\/+$/, "").split("/");
  let relativeSegments = relativePath.split("/");
  relativeSegments.forEach((segment) => {
    if (segment === "..") {
      if (segments.length > 1)
        segments.pop();
    } else if (segment !== ".") {
      segments.push(segment);
    }
  });
  return segments.length > 1 ? segments.join("/") : "/";
}
function getInvalidPathError(char, field, dest, path) {
  return "Cannot include a '" + char + "' character in a manually specified " + ("`to." + field + "` field [" + JSON.stringify(path) + "].  Please separate it out to the ") + ("`to." + dest + "` field. Alternatively you may provide the full path as ") + 'a string in <Link to="..."> and the router will parse it for you.';
}
function getPathContributingMatches(matches2) {
  return matches2.filter((match, index2) => index2 === 0 || match.route.path && match.route.path.length > 0);
}
function resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {
  if (isPathRelative === void 0) {
    isPathRelative = false;
  }
  let to;
  if (typeof toArg === "string") {
    to = parsePath(toArg);
  } else {
    to = _extends$3({}, toArg);
    invariant(!to.pathname || !to.pathname.includes("?"), getInvalidPathError("?", "pathname", "search", to));
    invariant(!to.pathname || !to.pathname.includes("#"), getInvalidPathError("#", "pathname", "hash", to));
    invariant(!to.search || !to.search.includes("#"), getInvalidPathError("#", "search", "hash", to));
  }
  let isEmptyPath = toArg === "" || to.pathname === "";
  let toPathname = isEmptyPath ? "/" : to.pathname;
  let from2;
  if (isPathRelative || toPathname == null) {
    from2 = locationPathname;
  } else {
    let routePathnameIndex = routePathnames.length - 1;
    if (toPathname.startsWith("..")) {
      let toSegments = toPathname.split("/");
      while (toSegments[0] === "..") {
        toSegments.shift();
        routePathnameIndex -= 1;
      }
      to.pathname = toSegments.join("/");
    }
    from2 = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : "/";
  }
  let path = resolvePath(to, from2);
  let hasExplicitTrailingSlash = toPathname && toPathname !== "/" && toPathname.endsWith("/");
  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === ".") && locationPathname.endsWith("/");
  if (!path.pathname.endsWith("/") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {
    path.pathname += "/";
  }
  return path;
}
const joinPaths = (paths) => paths.join("/").replace(/\/\/+/g, "/");
const normalizePathname = (pathname) => pathname.replace(/\/+$/, "").replace(/^\/*/, "/");
const normalizeSearch = (search) => !search || search === "?" ? "" : search.startsWith("?") ? search : "?" + search;
const normalizeHash = (hash) => !hash || hash === "#" ? "" : hash.startsWith("#") ? hash : "#" + hash;
function isRouteErrorResponse(error) {
  return error != null && typeof error.status === "number" && typeof error.statusText === "string" && typeof error.internal === "boolean" && "data" in error;
}
const validMutationMethodsArr = ["post", "put", "patch", "delete"];
new Set(validMutationMethodsArr);
const validRequestMethodsArr = ["get", ...validMutationMethodsArr];
new Set(validRequestMethodsArr);
/**
 * React Router v6.18.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
function _extends$2() {
  _extends$2 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$2.apply(this, arguments);
}
const DataRouterContext = /* @__PURE__ */ reactExports.createContext(null);
const DataRouterStateContext = /* @__PURE__ */ reactExports.createContext(null);
const NavigationContext = /* @__PURE__ */ reactExports.createContext(null);
const LocationContext = /* @__PURE__ */ reactExports.createContext(null);
const RouteContext = /* @__PURE__ */ reactExports.createContext({
  outlet: null,
  matches: [],
  isDataRoute: false
});
const RouteErrorContext = /* @__PURE__ */ reactExports.createContext(null);
function useInRouterContext() {
  return reactExports.useContext(LocationContext) != null;
}
function useLocation() {
  !useInRouterContext() ? invariant(false) : void 0;
  return reactExports.useContext(LocationContext).location;
}
function useIsomorphicLayoutEffect(cb2) {
  let isStatic = reactExports.useContext(NavigationContext).static;
  if (!isStatic) {
    reactExports.useLayoutEffect(cb2);
  }
}
function useNavigate() {
  let {
    isDataRoute
  } = reactExports.useContext(RouteContext);
  return isDataRoute ? useNavigateStable() : useNavigateUnstable();
}
function useNavigateUnstable() {
  !useInRouterContext() ? invariant(false) : void 0;
  let dataRouterContext = reactExports.useContext(DataRouterContext);
  let {
    basename,
    navigator: navigator2
  } = reactExports.useContext(NavigationContext);
  let {
    matches: matches2
  } = reactExports.useContext(RouteContext);
  let {
    pathname: locationPathname
  } = useLocation();
  let routePathnamesJson = JSON.stringify(getPathContributingMatches(matches2).map((match) => match.pathnameBase));
  let activeRef = reactExports.useRef(false);
  useIsomorphicLayoutEffect(() => {
    activeRef.current = true;
  });
  let navigate = reactExports.useCallback(function(to, options) {
    if (options === void 0) {
      options = {};
    }
    if (!activeRef.current)
      return;
    if (typeof to === "number") {
      navigator2.go(to);
      return;
    }
    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === "path");
    if (dataRouterContext == null && basename !== "/") {
      path.pathname = path.pathname === "/" ? basename : joinPaths([basename, path.pathname]);
    }
    (!!options.replace ? navigator2.replace : navigator2.push)(path, options.state, options);
  }, [basename, navigator2, routePathnamesJson, locationPathname, dataRouterContext]);
  return navigate;
}
function useRoutes(routes, locationArg) {
  return useRoutesImpl(routes, locationArg);
}
function useRoutesImpl(routes, locationArg, dataRouterState) {
  !useInRouterContext() ? invariant(false) : void 0;
  let {
    navigator: navigator2
  } = reactExports.useContext(NavigationContext);
  let {
    matches: parentMatches
  } = reactExports.useContext(RouteContext);
  let routeMatch = parentMatches[parentMatches.length - 1];
  let parentParams = routeMatch ? routeMatch.params : {};
  routeMatch ? routeMatch.pathname : "/";
  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : "/";
  routeMatch && routeMatch.route;
  let locationFromContext = useLocation();
  let location;
  if (locationArg) {
    var _parsedLocationArg$pa;
    let parsedLocationArg = typeof locationArg === "string" ? parsePath(locationArg) : locationArg;
    !(parentPathnameBase === "/" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? invariant(false) : void 0;
    location = parsedLocationArg;
  } else {
    location = locationFromContext;
  }
  let pathname = location.pathname || "/";
  let remainingPathname = parentPathnameBase === "/" ? pathname : pathname.slice(parentPathnameBase.length) || "/";
  let matches2 = matchRoutes(routes, {
    pathname: remainingPathname
  });
  let renderedMatches = _renderMatches(matches2 && matches2.map((match) => Object.assign({}, match, {
    params: Object.assign({}, parentParams, match.params),
    pathname: joinPaths([
      parentPathnameBase,
      // Re-encode pathnames that were decoded inside matchRoutes
      navigator2.encodeLocation ? navigator2.encodeLocation(match.pathname).pathname : match.pathname
    ]),
    pathnameBase: match.pathnameBase === "/" ? parentPathnameBase : joinPaths([
      parentPathnameBase,
      // Re-encode pathnames that were decoded inside matchRoutes
      navigator2.encodeLocation ? navigator2.encodeLocation(match.pathnameBase).pathname : match.pathnameBase
    ])
  })), parentMatches, dataRouterState);
  if (locationArg && renderedMatches) {
    return /* @__PURE__ */ reactExports.createElement(LocationContext.Provider, {
      value: {
        location: _extends$2({
          pathname: "/",
          search: "",
          hash: "",
          state: null,
          key: "default"
        }, location),
        navigationType: Action$1.Pop
      }
    }, renderedMatches);
  }
  return renderedMatches;
}
function DefaultErrorComponent() {
  let error = useRouteError();
  let message = isRouteErrorResponse(error) ? error.status + " " + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);
  let stack = error instanceof Error ? error.stack : null;
  let lightgrey = "rgba(200,200,200, 0.5)";
  let preStyles = {
    padding: "0.5rem",
    backgroundColor: lightgrey
  };
  let devInfo = null;
  return /* @__PURE__ */ reactExports.createElement(reactExports.Fragment, null, /* @__PURE__ */ reactExports.createElement("h2", null, "Unexpected Application Error!"), /* @__PURE__ */ reactExports.createElement("h3", {
    style: {
      fontStyle: "italic"
    }
  }, message), stack ? /* @__PURE__ */ reactExports.createElement("pre", {
    style: preStyles
  }, stack) : null, devInfo);
}
const defaultErrorElement = /* @__PURE__ */ reactExports.createElement(DefaultErrorComponent, null);
class RenderErrorBoundary extends reactExports.Component {
  constructor(props) {
    super(props);
    this.state = {
      location: props.location,
      revalidation: props.revalidation,
      error: props.error
    };
  }
  static getDerivedStateFromError(error) {
    return {
      error
    };
  }
  static getDerivedStateFromProps(props, state) {
    if (state.location !== props.location || state.revalidation !== "idle" && props.revalidation === "idle") {
      return {
        error: props.error,
        location: props.location,
        revalidation: props.revalidation
      };
    }
    return {
      error: props.error || state.error,
      location: state.location,
      revalidation: props.revalidation || state.revalidation
    };
  }
  componentDidCatch(error, errorInfo) {
    console.error("React Router caught the following error during render", error, errorInfo);
  }
  render() {
    return this.state.error ? /* @__PURE__ */ reactExports.createElement(RouteContext.Provider, {
      value: this.props.routeContext
    }, /* @__PURE__ */ reactExports.createElement(RouteErrorContext.Provider, {
      value: this.state.error,
      children: this.props.component
    })) : this.props.children;
  }
}
function RenderedRoute(_ref) {
  let {
    routeContext,
    match,
    children
  } = _ref;
  let dataRouterContext = reactExports.useContext(DataRouterContext);
  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {
    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;
  }
  return /* @__PURE__ */ reactExports.createElement(RouteContext.Provider, {
    value: routeContext
  }, children);
}
function _renderMatches(matches2, parentMatches, dataRouterState) {
  var _dataRouterState2;
  if (parentMatches === void 0) {
    parentMatches = [];
  }
  if (dataRouterState === void 0) {
    dataRouterState = null;
  }
  if (matches2 == null) {
    var _dataRouterState;
    if ((_dataRouterState = dataRouterState) != null && _dataRouterState.errors) {
      matches2 = dataRouterState.matches;
    } else {
      return null;
    }
  }
  let renderedMatches = matches2;
  let errors = (_dataRouterState2 = dataRouterState) == null ? void 0 : _dataRouterState2.errors;
  if (errors != null) {
    let errorIndex = renderedMatches.findIndex((m2) => m2.route.id && (errors == null ? void 0 : errors[m2.route.id]));
    !(errorIndex >= 0) ? invariant(false) : void 0;
    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));
  }
  return renderedMatches.reduceRight((outlet, match, index2) => {
    let error = match.route.id ? errors == null ? void 0 : errors[match.route.id] : null;
    let errorElement = null;
    if (dataRouterState) {
      errorElement = match.route.errorElement || defaultErrorElement;
    }
    let matches3 = parentMatches.concat(renderedMatches.slice(0, index2 + 1));
    let getChildren2 = () => {
      let children;
      if (error) {
        children = errorElement;
      } else if (match.route.Component) {
        children = /* @__PURE__ */ reactExports.createElement(match.route.Component, null);
      } else if (match.route.element) {
        children = match.route.element;
      } else {
        children = outlet;
      }
      return /* @__PURE__ */ reactExports.createElement(RenderedRoute, {
        match,
        routeContext: {
          outlet,
          matches: matches3,
          isDataRoute: dataRouterState != null
        },
        children
      });
    };
    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index2 === 0) ? /* @__PURE__ */ reactExports.createElement(RenderErrorBoundary, {
      location: dataRouterState.location,
      revalidation: dataRouterState.revalidation,
      component: errorElement,
      error,
      children: getChildren2(),
      routeContext: {
        outlet: null,
        matches: matches3,
        isDataRoute: true
      }
    }) : getChildren2();
  }, null);
}
var DataRouterHook$1 = /* @__PURE__ */ function(DataRouterHook2) {
  DataRouterHook2["UseBlocker"] = "useBlocker";
  DataRouterHook2["UseRevalidator"] = "useRevalidator";
  DataRouterHook2["UseNavigateStable"] = "useNavigate";
  return DataRouterHook2;
}(DataRouterHook$1 || {});
var DataRouterStateHook$1 = /* @__PURE__ */ function(DataRouterStateHook2) {
  DataRouterStateHook2["UseBlocker"] = "useBlocker";
  DataRouterStateHook2["UseLoaderData"] = "useLoaderData";
  DataRouterStateHook2["UseActionData"] = "useActionData";
  DataRouterStateHook2["UseRouteError"] = "useRouteError";
  DataRouterStateHook2["UseNavigation"] = "useNavigation";
  DataRouterStateHook2["UseRouteLoaderData"] = "useRouteLoaderData";
  DataRouterStateHook2["UseMatches"] = "useMatches";
  DataRouterStateHook2["UseRevalidator"] = "useRevalidator";
  DataRouterStateHook2["UseNavigateStable"] = "useNavigate";
  DataRouterStateHook2["UseRouteId"] = "useRouteId";
  return DataRouterStateHook2;
}(DataRouterStateHook$1 || {});
function useDataRouterContext(hookName) {
  let ctx = reactExports.useContext(DataRouterContext);
  !ctx ? invariant(false) : void 0;
  return ctx;
}
function useDataRouterState(hookName) {
  let state = reactExports.useContext(DataRouterStateContext);
  !state ? invariant(false) : void 0;
  return state;
}
function useRouteContext(hookName) {
  let route = reactExports.useContext(RouteContext);
  !route ? invariant(false) : void 0;
  return route;
}
function useCurrentRouteId(hookName) {
  let route = useRouteContext();
  let thisRoute = route.matches[route.matches.length - 1];
  !thisRoute.route.id ? invariant(false) : void 0;
  return thisRoute.route.id;
}
function useRouteError() {
  var _state$errors;
  let error = reactExports.useContext(RouteErrorContext);
  let state = useDataRouterState(DataRouterStateHook$1.UseRouteError);
  let routeId = useCurrentRouteId(DataRouterStateHook$1.UseRouteError);
  if (error) {
    return error;
  }
  return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];
}
function useNavigateStable() {
  let {
    router
  } = useDataRouterContext(DataRouterHook$1.UseNavigateStable);
  let id2 = useCurrentRouteId(DataRouterStateHook$1.UseNavigateStable);
  let activeRef = reactExports.useRef(false);
  useIsomorphicLayoutEffect(() => {
    activeRef.current = true;
  });
  let navigate = reactExports.useCallback(function(to, options) {
    if (options === void 0) {
      options = {};
    }
    if (!activeRef.current)
      return;
    if (typeof to === "number") {
      router.navigate(to);
    } else {
      router.navigate(to, _extends$2({
        fromRouteId: id2
      }, options));
    }
  }, [router, id2]);
  return navigate;
}
function Route(_props) {
  invariant(false);
}
function Router(_ref5) {
  let {
    basename: basenameProp = "/",
    children = null,
    location: locationProp,
    navigationType = Action$1.Pop,
    navigator: navigator2,
    static: staticProp = false
  } = _ref5;
  !!useInRouterContext() ? invariant(false) : void 0;
  let basename = basenameProp.replace(/^\/*/, "/");
  let navigationContext = reactExports.useMemo(() => ({
    basename,
    navigator: navigator2,
    static: staticProp
  }), [basename, navigator2, staticProp]);
  if (typeof locationProp === "string") {
    locationProp = parsePath(locationProp);
  }
  let {
    pathname = "/",
    search = "",
    hash = "",
    state = null,
    key = "default"
  } = locationProp;
  let locationContext = reactExports.useMemo(() => {
    let trailingPathname = stripBasename(pathname, basename);
    if (trailingPathname == null) {
      return null;
    }
    return {
      location: {
        pathname: trailingPathname,
        search,
        hash,
        state,
        key
      },
      navigationType
    };
  }, [basename, pathname, search, hash, state, key, navigationType]);
  if (locationContext == null) {
    return null;
  }
  return /* @__PURE__ */ reactExports.createElement(NavigationContext.Provider, {
    value: navigationContext
  }, /* @__PURE__ */ reactExports.createElement(LocationContext.Provider, {
    children,
    value: locationContext
  }));
}
function Routes(_ref6) {
  let {
    children,
    location
  } = _ref6;
  return useRoutes(createRoutesFromChildren(children), location);
}
new Promise(() => {
});
function createRoutesFromChildren(children, parentPath) {
  if (parentPath === void 0) {
    parentPath = [];
  }
  let routes = [];
  reactExports.Children.forEach(children, (element, index2) => {
    if (!/* @__PURE__ */ reactExports.isValidElement(element)) {
      return;
    }
    let treePath = [...parentPath, index2];
    if (element.type === reactExports.Fragment) {
      routes.push.apply(routes, createRoutesFromChildren(element.props.children, treePath));
      return;
    }
    !(element.type === Route) ? invariant(false) : void 0;
    !(!element.props.index || !element.props.children) ? invariant(false) : void 0;
    let route = {
      id: element.props.id || treePath.join("-"),
      caseSensitive: element.props.caseSensitive,
      element: element.props.element,
      Component: element.props.Component,
      index: element.props.index,
      path: element.props.path,
      loader: element.props.loader,
      action: element.props.action,
      errorElement: element.props.errorElement,
      ErrorBoundary: element.props.ErrorBoundary,
      hasErrorBoundary: element.props.ErrorBoundary != null || element.props.errorElement != null,
      shouldRevalidate: element.props.shouldRevalidate,
      handle: element.props.handle,
      lazy: element.props.lazy
    };
    if (element.props.children) {
      route.children = createRoutesFromChildren(element.props.children, treePath);
    }
    routes.push(route);
  });
  return routes;
}
/**
 * React Router DOM v6.18.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
function createSearchParams(init) {
  if (init === void 0) {
    init = "";
  }
  return new URLSearchParams(typeof init === "string" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {
    let value = init[key];
    return memo.concat(Array.isArray(value) ? value.map((v2) => [key, v2]) : [[key, value]]);
  }, []));
}
function getSearchParamsForLocation(locationSearch, defaultSearchParams) {
  let searchParams = createSearchParams(locationSearch);
  if (defaultSearchParams) {
    defaultSearchParams.forEach((_2, key) => {
      if (!searchParams.has(key)) {
        defaultSearchParams.getAll(key).forEach((value) => {
          searchParams.append(key, value);
        });
      }
    });
  }
  return searchParams;
}
const START_TRANSITION = "startTransition";
const startTransitionImpl = React$1[START_TRANSITION];
function BrowserRouter(_ref4) {
  let {
    basename,
    children,
    future,
    window: window2
  } = _ref4;
  let historyRef = reactExports.useRef();
  if (historyRef.current == null) {
    historyRef.current = createBrowserHistory({
      window: window2,
      v5Compat: true
    });
  }
  let history2 = historyRef.current;
  let [state, setStateImpl] = reactExports.useState({
    action: history2.action,
    location: history2.location
  });
  let {
    v7_startTransition
  } = future || {};
  let setState = reactExports.useCallback((newState) => {
    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);
  }, [setStateImpl, v7_startTransition]);
  reactExports.useLayoutEffect(() => history2.listen(setState), [history2, setState]);
  return /* @__PURE__ */ reactExports.createElement(Router, {
    basename,
    children,
    location: state.location,
    navigationType: state.action,
    navigator: history2
  });
}
var DataRouterHook;
(function(DataRouterHook2) {
  DataRouterHook2["UseScrollRestoration"] = "useScrollRestoration";
  DataRouterHook2["UseSubmit"] = "useSubmit";
  DataRouterHook2["UseSubmitFetcher"] = "useSubmitFetcher";
  DataRouterHook2["UseFetcher"] = "useFetcher";
  DataRouterHook2["useViewTransitionState"] = "useViewTransitionState";
})(DataRouterHook || (DataRouterHook = {}));
var DataRouterStateHook;
(function(DataRouterStateHook2) {
  DataRouterStateHook2["UseFetcher"] = "useFetcher";
  DataRouterStateHook2["UseFetchers"] = "useFetchers";
  DataRouterStateHook2["UseScrollRestoration"] = "useScrollRestoration";
})(DataRouterStateHook || (DataRouterStateHook = {}));
function useSearchParams(defaultInit) {
  let defaultSearchParamsRef = reactExports.useRef(createSearchParams(defaultInit));
  let hasSetSearchParamsRef = reactExports.useRef(false);
  let location = useLocation();
  let searchParams = reactExports.useMemo(() => (
    // Only merge in the defaults if we haven't yet called setSearchParams.
    // Once we call that we want those to take precedence, otherwise you can't
    // remove a param with setSearchParams({}) if it has an initial value
    getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current)
  ), [location.search]);
  let navigate = useNavigate();
  let setSearchParams = reactExports.useCallback((nextInit, navigateOptions) => {
    const newSearchParams = createSearchParams(typeof nextInit === "function" ? nextInit(searchParams) : nextInit);
    hasSetSearchParamsRef.current = true;
    navigate("?" + newSearchParams, navigateOptions);
  }, [navigate, searchParams]);
  return [searchParams, setSearchParams];
}
var reactIs$1 = { exports: {} };
var reactIs_production_min = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var b$1 = "function" === typeof Symbol && Symbol.for, c = b$1 ? Symbol.for("react.element") : 60103, d = b$1 ? Symbol.for("react.portal") : 60106, e = b$1 ? Symbol.for("react.fragment") : 60107, f = b$1 ? Symbol.for("react.strict_mode") : 60108, g$1 = b$1 ? Symbol.for("react.profiler") : 60114, h = b$1 ? Symbol.for("react.provider") : 60109, k$1 = b$1 ? Symbol.for("react.context") : 60110, l = b$1 ? Symbol.for("react.async_mode") : 60111, m$1 = b$1 ? Symbol.for("react.concurrent_mode") : 60111, n = b$1 ? Symbol.for("react.forward_ref") : 60112, p = b$1 ? Symbol.for("react.suspense") : 60113, q$1 = b$1 ? Symbol.for("react.suspense_list") : 60120, r = b$1 ? Symbol.for("react.memo") : 60115, t = b$1 ? Symbol.for("react.lazy") : 60116, v$1 = b$1 ? Symbol.for("react.block") : 60121, w$1 = b$1 ? Symbol.for("react.fundamental") : 60117, x$1 = b$1 ? Symbol.for("react.responder") : 60118, y$1 = b$1 ? Symbol.for("react.scope") : 60119;
function z$1(a) {
  if ("object" === typeof a && null !== a) {
    var u2 = a.$$typeof;
    switch (u2) {
      case c:
        switch (a = a.type, a) {
          case l:
          case m$1:
          case e:
          case g$1:
          case f:
          case p:
            return a;
          default:
            switch (a = a && a.$$typeof, a) {
              case k$1:
              case n:
              case t:
              case r:
              case h:
                return a;
              default:
                return u2;
            }
        }
      case d:
        return u2;
    }
  }
}
function A$1(a) {
  return z$1(a) === m$1;
}
reactIs_production_min.AsyncMode = l;
reactIs_production_min.ConcurrentMode = m$1;
reactIs_production_min.ContextConsumer = k$1;
reactIs_production_min.ContextProvider = h;
reactIs_production_min.Element = c;
reactIs_production_min.ForwardRef = n;
reactIs_production_min.Fragment = e;
reactIs_production_min.Lazy = t;
reactIs_production_min.Memo = r;
reactIs_production_min.Portal = d;
reactIs_production_min.Profiler = g$1;
reactIs_production_min.StrictMode = f;
reactIs_production_min.Suspense = p;
reactIs_production_min.isAsyncMode = function(a) {
  return A$1(a) || z$1(a) === l;
};
reactIs_production_min.isConcurrentMode = A$1;
reactIs_production_min.isContextConsumer = function(a) {
  return z$1(a) === k$1;
};
reactIs_production_min.isContextProvider = function(a) {
  return z$1(a) === h;
};
reactIs_production_min.isElement = function(a) {
  return "object" === typeof a && null !== a && a.$$typeof === c;
};
reactIs_production_min.isForwardRef = function(a) {
  return z$1(a) === n;
};
reactIs_production_min.isFragment = function(a) {
  return z$1(a) === e;
};
reactIs_production_min.isLazy = function(a) {
  return z$1(a) === t;
};
reactIs_production_min.isMemo = function(a) {
  return z$1(a) === r;
};
reactIs_production_min.isPortal = function(a) {
  return z$1(a) === d;
};
reactIs_production_min.isProfiler = function(a) {
  return z$1(a) === g$1;
};
reactIs_production_min.isStrictMode = function(a) {
  return z$1(a) === f;
};
reactIs_production_min.isSuspense = function(a) {
  return z$1(a) === p;
};
reactIs_production_min.isValidElementType = function(a) {
  return "string" === typeof a || "function" === typeof a || a === e || a === m$1 || a === g$1 || a === f || a === p || a === q$1 || "object" === typeof a && null !== a && (a.$$typeof === t || a.$$typeof === r || a.$$typeof === h || a.$$typeof === k$1 || a.$$typeof === n || a.$$typeof === w$1 || a.$$typeof === x$1 || a.$$typeof === y$1 || a.$$typeof === v$1);
};
reactIs_production_min.typeOf = z$1;
{
  reactIs$1.exports = reactIs_production_min;
}
var reactIsExports = reactIs$1.exports;
function stylis_min(W2) {
  function M2(d2, c2, e2, h2, a) {
    for (var m2 = 0, b2 = 0, v2 = 0, n2 = 0, q2, g2, x2 = 0, K2 = 0, k2, u2 = k2 = q2 = 0, l2 = 0, r2 = 0, I2 = 0, t2 = 0, B3 = e2.length, J2 = B3 - 1, y2, f2 = "", p2 = "", F3 = "", G3 = "", C2; l2 < B3; ) {
      g2 = e2.charCodeAt(l2);
      l2 === J2 && 0 !== b2 + n2 + v2 + m2 && (0 !== b2 && (g2 = 47 === b2 ? 10 : 47), n2 = v2 = m2 = 0, B3++, J2++);
      if (0 === b2 + n2 + v2 + m2) {
        if (l2 === J2 && (0 < r2 && (f2 = f2.replace(N2, "")), 0 < f2.trim().length)) {
          switch (g2) {
            case 32:
            case 9:
            case 59:
            case 13:
            case 10:
              break;
            default:
              f2 += e2.charAt(l2);
          }
          g2 = 59;
        }
        switch (g2) {
          case 123:
            f2 = f2.trim();
            q2 = f2.charCodeAt(0);
            k2 = 1;
            for (t2 = ++l2; l2 < B3; ) {
              switch (g2 = e2.charCodeAt(l2)) {
                case 123:
                  k2++;
                  break;
                case 125:
                  k2--;
                  break;
                case 47:
                  switch (g2 = e2.charCodeAt(l2 + 1)) {
                    case 42:
                    case 47:
                      a: {
                        for (u2 = l2 + 1; u2 < J2; ++u2) {
                          switch (e2.charCodeAt(u2)) {
                            case 47:
                              if (42 === g2 && 42 === e2.charCodeAt(u2 - 1) && l2 + 2 !== u2) {
                                l2 = u2 + 1;
                                break a;
                              }
                              break;
                            case 10:
                              if (47 === g2) {
                                l2 = u2 + 1;
                                break a;
                              }
                          }
                        }
                        l2 = u2;
                      }
                  }
                  break;
                case 91:
                  g2++;
                case 40:
                  g2++;
                case 34:
                case 39:
                  for (; l2++ < J2 && e2.charCodeAt(l2) !== g2; ) {
                  }
              }
              if (0 === k2)
                break;
              l2++;
            }
            k2 = e2.substring(t2, l2);
            0 === q2 && (q2 = (f2 = f2.replace(ca2, "").trim()).charCodeAt(0));
            switch (q2) {
              case 64:
                0 < r2 && (f2 = f2.replace(N2, ""));
                g2 = f2.charCodeAt(1);
                switch (g2) {
                  case 100:
                  case 109:
                  case 115:
                  case 45:
                    r2 = c2;
                    break;
                  default:
                    r2 = O2;
                }
                k2 = M2(c2, r2, k2, g2, a + 1);
                t2 = k2.length;
                0 < A2 && (r2 = X2(O2, f2, I2), C2 = H2(3, k2, r2, c2, D2, z2, t2, g2, a, h2), f2 = r2.join(""), void 0 !== C2 && 0 === (t2 = (k2 = C2.trim()).length) && (g2 = 0, k2 = ""));
                if (0 < t2)
                  switch (g2) {
                    case 115:
                      f2 = f2.replace(da2, ea2);
                    case 100:
                    case 109:
                    case 45:
                      k2 = f2 + "{" + k2 + "}";
                      break;
                    case 107:
                      f2 = f2.replace(fa2, "$1 $2");
                      k2 = f2 + "{" + k2 + "}";
                      k2 = 1 === w2 || 2 === w2 && L2("@" + k2, 3) ? "@-webkit-" + k2 + "@" + k2 : "@" + k2;
                      break;
                    default:
                      k2 = f2 + k2, 112 === h2 && (k2 = (p2 += k2, ""));
                  }
                else
                  k2 = "";
                break;
              default:
                k2 = M2(c2, X2(c2, f2, I2), k2, h2, a + 1);
            }
            F3 += k2;
            k2 = I2 = r2 = u2 = q2 = 0;
            f2 = "";
            g2 = e2.charCodeAt(++l2);
            break;
          case 125:
          case 59:
            f2 = (0 < r2 ? f2.replace(N2, "") : f2).trim();
            if (1 < (t2 = f2.length))
              switch (0 === u2 && (q2 = f2.charCodeAt(0), 45 === q2 || 96 < q2 && 123 > q2) && (t2 = (f2 = f2.replace(" ", ":")).length), 0 < A2 && void 0 !== (C2 = H2(1, f2, c2, d2, D2, z2, p2.length, h2, a, h2)) && 0 === (t2 = (f2 = C2.trim()).length) && (f2 = "\0\0"), q2 = f2.charCodeAt(0), g2 = f2.charCodeAt(1), q2) {
                case 0:
                  break;
                case 64:
                  if (105 === g2 || 99 === g2) {
                    G3 += f2 + e2.charAt(l2);
                    break;
                  }
                default:
                  58 !== f2.charCodeAt(t2 - 1) && (p2 += P2(f2, q2, g2, f2.charCodeAt(2)));
              }
            I2 = r2 = u2 = q2 = 0;
            f2 = "";
            g2 = e2.charCodeAt(++l2);
        }
      }
      switch (g2) {
        case 13:
        case 10:
          47 === b2 ? b2 = 0 : 0 === 1 + q2 && 107 !== h2 && 0 < f2.length && (r2 = 1, f2 += "\0");
          0 < A2 * Y2 && H2(0, f2, c2, d2, D2, z2, p2.length, h2, a, h2);
          z2 = 1;
          D2++;
          break;
        case 59:
        case 125:
          if (0 === b2 + n2 + v2 + m2) {
            z2++;
            break;
          }
        default:
          z2++;
          y2 = e2.charAt(l2);
          switch (g2) {
            case 9:
            case 32:
              if (0 === n2 + m2 + b2)
                switch (x2) {
                  case 44:
                  case 58:
                  case 9:
                  case 32:
                    y2 = "";
                    break;
                  default:
                    32 !== g2 && (y2 = " ");
                }
              break;
            case 0:
              y2 = "\\0";
              break;
            case 12:
              y2 = "\\f";
              break;
            case 11:
              y2 = "\\v";
              break;
            case 38:
              0 === n2 + b2 + m2 && (r2 = I2 = 1, y2 = "\f" + y2);
              break;
            case 108:
              if (0 === n2 + b2 + m2 + E2 && 0 < u2)
                switch (l2 - u2) {
                  case 2:
                    112 === x2 && 58 === e2.charCodeAt(l2 - 3) && (E2 = x2);
                  case 8:
                    111 === K2 && (E2 = K2);
                }
              break;
            case 58:
              0 === n2 + b2 + m2 && (u2 = l2);
              break;
            case 44:
              0 === b2 + v2 + n2 + m2 && (r2 = 1, y2 += "\r");
              break;
            case 34:
            case 39:
              0 === b2 && (n2 = n2 === g2 ? 0 : 0 === n2 ? g2 : n2);
              break;
            case 91:
              0 === n2 + b2 + v2 && m2++;
              break;
            case 93:
              0 === n2 + b2 + v2 && m2--;
              break;
            case 41:
              0 === n2 + b2 + m2 && v2--;
              break;
            case 40:
              if (0 === n2 + b2 + m2) {
                if (0 === q2)
                  switch (2 * x2 + 3 * K2) {
                    case 533:
                      break;
                    default:
                      q2 = 1;
                  }
                v2++;
              }
              break;
            case 64:
              0 === b2 + v2 + n2 + m2 + u2 + k2 && (k2 = 1);
              break;
            case 42:
            case 47:
              if (!(0 < n2 + m2 + v2))
                switch (b2) {
                  case 0:
                    switch (2 * g2 + 3 * e2.charCodeAt(l2 + 1)) {
                      case 235:
                        b2 = 47;
                        break;
                      case 220:
                        t2 = l2, b2 = 42;
                    }
                    break;
                  case 42:
                    47 === g2 && 42 === x2 && t2 + 2 !== l2 && (33 === e2.charCodeAt(t2 + 2) && (p2 += e2.substring(t2, l2 + 1)), y2 = "", b2 = 0);
                }
          }
          0 === b2 && (f2 += y2);
      }
      K2 = x2;
      x2 = g2;
      l2++;
    }
    t2 = p2.length;
    if (0 < t2) {
      r2 = c2;
      if (0 < A2 && (C2 = H2(2, p2, r2, d2, D2, z2, t2, h2, a, h2), void 0 !== C2 && 0 === (p2 = C2).length))
        return G3 + p2 + F3;
      p2 = r2.join(",") + "{" + p2 + "}";
      if (0 !== w2 * E2) {
        2 !== w2 || L2(p2, 2) || (E2 = 0);
        switch (E2) {
          case 111:
            p2 = p2.replace(ha2, ":-moz-$1") + p2;
            break;
          case 112:
            p2 = p2.replace(Q2, "::-webkit-input-$1") + p2.replace(Q2, "::-moz-$1") + p2.replace(Q2, ":-ms-input-$1") + p2;
        }
        E2 = 0;
      }
    }
    return G3 + p2 + F3;
  }
  function X2(d2, c2, e2) {
    var h2 = c2.trim().split(ia2);
    c2 = h2;
    var a = h2.length, m2 = d2.length;
    switch (m2) {
      case 0:
      case 1:
        var b2 = 0;
        for (d2 = 0 === m2 ? "" : d2[0] + " "; b2 < a; ++b2) {
          c2[b2] = Z2(d2, c2[b2], e2).trim();
        }
        break;
      default:
        var v2 = b2 = 0;
        for (c2 = []; b2 < a; ++b2) {
          for (var n2 = 0; n2 < m2; ++n2) {
            c2[v2++] = Z2(d2[n2] + " ", h2[b2], e2).trim();
          }
        }
    }
    return c2;
  }
  function Z2(d2, c2, e2) {
    var h2 = c2.charCodeAt(0);
    33 > h2 && (h2 = (c2 = c2.trim()).charCodeAt(0));
    switch (h2) {
      case 38:
        return c2.replace(F2, "$1" + d2.trim());
      case 58:
        return d2.trim() + c2.replace(F2, "$1" + d2.trim());
      default:
        if (0 < 1 * e2 && 0 < c2.indexOf("\f"))
          return c2.replace(F2, (58 === d2.charCodeAt(0) ? "" : "$1") + d2.trim());
    }
    return d2 + c2;
  }
  function P2(d2, c2, e2, h2) {
    var a = d2 + ";", m2 = 2 * c2 + 3 * e2 + 4 * h2;
    if (944 === m2) {
      d2 = a.indexOf(":", 9) + 1;
      var b2 = a.substring(d2, a.length - 1).trim();
      b2 = a.substring(0, d2).trim() + b2 + ";";
      return 1 === w2 || 2 === w2 && L2(b2, 1) ? "-webkit-" + b2 + b2 : b2;
    }
    if (0 === w2 || 2 === w2 && !L2(a, 1))
      return a;
    switch (m2) {
      case 1015:
        return 97 === a.charCodeAt(10) ? "-webkit-" + a + a : a;
      case 951:
        return 116 === a.charCodeAt(3) ? "-webkit-" + a + a : a;
      case 963:
        return 110 === a.charCodeAt(5) ? "-webkit-" + a + a : a;
      case 1009:
        if (100 !== a.charCodeAt(4))
          break;
      case 969:
      case 942:
        return "-webkit-" + a + a;
      case 978:
        return "-webkit-" + a + "-moz-" + a + a;
      case 1019:
      case 983:
        return "-webkit-" + a + "-moz-" + a + "-ms-" + a + a;
      case 883:
        if (45 === a.charCodeAt(8))
          return "-webkit-" + a + a;
        if (0 < a.indexOf("image-set(", 11))
          return a.replace(ja2, "$1-webkit-$2") + a;
        break;
      case 932:
        if (45 === a.charCodeAt(4))
          switch (a.charCodeAt(5)) {
            case 103:
              return "-webkit-box-" + a.replace("-grow", "") + "-webkit-" + a + "-ms-" + a.replace("grow", "positive") + a;
            case 115:
              return "-webkit-" + a + "-ms-" + a.replace("shrink", "negative") + a;
            case 98:
              return "-webkit-" + a + "-ms-" + a.replace("basis", "preferred-size") + a;
          }
        return "-webkit-" + a + "-ms-" + a + a;
      case 964:
        return "-webkit-" + a + "-ms-flex-" + a + a;
      case 1023:
        if (99 !== a.charCodeAt(8))
          break;
        b2 = a.substring(a.indexOf(":", 15)).replace("flex-", "").replace("space-between", "justify");
        return "-webkit-box-pack" + b2 + "-webkit-" + a + "-ms-flex-pack" + b2 + a;
      case 1005:
        return ka2.test(a) ? a.replace(aa2, ":-webkit-") + a.replace(aa2, ":-moz-") + a : a;
      case 1e3:
        b2 = a.substring(13).trim();
        c2 = b2.indexOf("-") + 1;
        switch (b2.charCodeAt(0) + b2.charCodeAt(c2)) {
          case 226:
            b2 = a.replace(G2, "tb");
            break;
          case 232:
            b2 = a.replace(G2, "tb-rl");
            break;
          case 220:
            b2 = a.replace(G2, "lr");
            break;
          default:
            return a;
        }
        return "-webkit-" + a + "-ms-" + b2 + a;
      case 1017:
        if (-1 === a.indexOf("sticky", 9))
          break;
      case 975:
        c2 = (a = d2).length - 10;
        b2 = (33 === a.charCodeAt(c2) ? a.substring(0, c2) : a).substring(d2.indexOf(":", 7) + 1).trim();
        switch (m2 = b2.charCodeAt(0) + (b2.charCodeAt(7) | 0)) {
          case 203:
            if (111 > b2.charCodeAt(8))
              break;
          case 115:
            a = a.replace(b2, "-webkit-" + b2) + ";" + a;
            break;
          case 207:
          case 102:
            a = a.replace(b2, "-webkit-" + (102 < m2 ? "inline-" : "") + "box") + ";" + a.replace(b2, "-webkit-" + b2) + ";" + a.replace(b2, "-ms-" + b2 + "box") + ";" + a;
        }
        return a + ";";
      case 938:
        if (45 === a.charCodeAt(5))
          switch (a.charCodeAt(6)) {
            case 105:
              return b2 = a.replace("-items", ""), "-webkit-" + a + "-webkit-box-" + b2 + "-ms-flex-" + b2 + a;
            case 115:
              return "-webkit-" + a + "-ms-flex-item-" + a.replace(ba, "") + a;
            default:
              return "-webkit-" + a + "-ms-flex-line-pack" + a.replace("align-content", "").replace(ba, "") + a;
          }
        break;
      case 973:
      case 989:
        if (45 !== a.charCodeAt(3) || 122 === a.charCodeAt(4))
          break;
      case 931:
      case 953:
        if (true === la2.test(d2))
          return 115 === (b2 = d2.substring(d2.indexOf(":") + 1)).charCodeAt(0) ? P2(d2.replace("stretch", "fill-available"), c2, e2, h2).replace(":fill-available", ":stretch") : a.replace(b2, "-webkit-" + b2) + a.replace(b2, "-moz-" + b2.replace("fill-", "")) + a;
        break;
      case 962:
        if (a = "-webkit-" + a + (102 === a.charCodeAt(5) ? "-ms-" + a : "") + a, 211 === e2 + h2 && 105 === a.charCodeAt(13) && 0 < a.indexOf("transform", 10))
          return a.substring(0, a.indexOf(";", 27) + 1).replace(ma2, "$1-webkit-$2") + a;
    }
    return a;
  }
  function L2(d2, c2) {
    var e2 = d2.indexOf(1 === c2 ? ":" : "{"), h2 = d2.substring(0, 3 !== c2 ? e2 : 10);
    e2 = d2.substring(e2 + 1, d2.length - 1);
    return R2(2 !== c2 ? h2 : h2.replace(na, "$1"), e2, c2);
  }
  function ea2(d2, c2) {
    var e2 = P2(c2, c2.charCodeAt(0), c2.charCodeAt(1), c2.charCodeAt(2));
    return e2 !== c2 + ";" ? e2.replace(oa2, " or ($1)").substring(4) : "(" + c2 + ")";
  }
  function H2(d2, c2, e2, h2, a, m2, b2, v2, n2, q2) {
    for (var g2 = 0, x2 = c2, w3; g2 < A2; ++g2) {
      switch (w3 = S2[g2].call(B2, d2, x2, e2, h2, a, m2, b2, v2, n2, q2)) {
        case void 0:
        case false:
        case true:
        case null:
          break;
        default:
          x2 = w3;
      }
    }
    if (x2 !== c2)
      return x2;
  }
  function T2(d2) {
    switch (d2) {
      case void 0:
      case null:
        A2 = S2.length = 0;
        break;
      default:
        if ("function" === typeof d2)
          S2[A2++] = d2;
        else if ("object" === typeof d2)
          for (var c2 = 0, e2 = d2.length; c2 < e2; ++c2) {
            T2(d2[c2]);
          }
        else
          Y2 = !!d2 | 0;
    }
    return T2;
  }
  function U2(d2) {
    d2 = d2.prefix;
    void 0 !== d2 && (R2 = null, d2 ? "function" !== typeof d2 ? w2 = 1 : (w2 = 2, R2 = d2) : w2 = 0);
    return U2;
  }
  function B2(d2, c2) {
    var e2 = d2;
    33 > e2.charCodeAt(0) && (e2 = e2.trim());
    V2 = e2;
    e2 = [V2];
    if (0 < A2) {
      var h2 = H2(-1, c2, e2, e2, D2, z2, 0, 0, 0, 0);
      void 0 !== h2 && "string" === typeof h2 && (c2 = h2);
    }
    var a = M2(O2, e2, c2, 0, 0);
    0 < A2 && (h2 = H2(-2, a, e2, e2, D2, z2, a.length, 0, 0, 0), void 0 !== h2 && (a = h2));
    V2 = "";
    E2 = 0;
    z2 = D2 = 1;
    return a;
  }
  var ca2 = /^\0+/g, N2 = /[\0\r\f]/g, aa2 = /: */g, ka2 = /zoo|gra/, ma2 = /([,: ])(transform)/g, ia2 = /,\r+?/g, F2 = /([\t\r\n ])*\f?&/g, fa2 = /@(k\w+)\s*(\S*)\s*/, Q2 = /::(place)/g, ha2 = /:(read-only)/g, G2 = /[svh]\w+-[tblr]{2}/, da2 = /\(\s*(.*)\s*\)/g, oa2 = /([\s\S]*?);/g, ba = /-self|flex-/g, na = /[^]*?(:[rp][el]a[\w-]+)[^]*/, la2 = /stretch|:\s*\w+\-(?:conte|avail)/, ja2 = /([^-])(image-set\()/, z2 = 1, D2 = 1, E2 = 0, w2 = 1, O2 = [], S2 = [], A2 = 0, R2 = null, Y2 = 0, V2 = "";
  B2.use = T2;
  B2.set = U2;
  void 0 !== W2 && U2(W2);
  return B2;
}
var unitlessKeys = {
  animationIterationCount: 1,
  borderImageOutset: 1,
  borderImageSlice: 1,
  borderImageWidth: 1,
  boxFlex: 1,
  boxFlexGroup: 1,
  boxOrdinalGroup: 1,
  columnCount: 1,
  columns: 1,
  flex: 1,
  flexGrow: 1,
  flexPositive: 1,
  flexShrink: 1,
  flexNegative: 1,
  flexOrder: 1,
  gridRow: 1,
  gridRowEnd: 1,
  gridRowSpan: 1,
  gridRowStart: 1,
  gridColumn: 1,
  gridColumnEnd: 1,
  gridColumnSpan: 1,
  gridColumnStart: 1,
  msGridRow: 1,
  msGridRowSpan: 1,
  msGridColumn: 1,
  msGridColumnSpan: 1,
  fontWeight: 1,
  lineHeight: 1,
  opacity: 1,
  order: 1,
  orphans: 1,
  tabSize: 1,
  widows: 1,
  zIndex: 1,
  zoom: 1,
  WebkitLineClamp: 1,
  // SVG-related properties
  fillOpacity: 1,
  floodOpacity: 1,
  stopOpacity: 1,
  strokeDasharray: 1,
  strokeDashoffset: 1,
  strokeMiterlimit: 1,
  strokeOpacity: 1,
  strokeWidth: 1
};
function memoize(fn) {
  var cache = /* @__PURE__ */ Object.create(null);
  return function(arg) {
    if (cache[arg] === void 0)
      cache[arg] = fn(arg);
    return cache[arg];
  };
}
var reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/;
var isPropValid = /* @__PURE__ */ memoize(
  function(prop) {
    return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111 && prop.charCodeAt(1) === 110 && prop.charCodeAt(2) < 91;
  }
  /* Z+1 */
);
var reactIs = reactIsExports;
var REACT_STATICS = {
  childContextTypes: true,
  contextType: true,
  contextTypes: true,
  defaultProps: true,
  displayName: true,
  getDefaultProps: true,
  getDerivedStateFromError: true,
  getDerivedStateFromProps: true,
  mixins: true,
  propTypes: true,
  type: true
};
var KNOWN_STATICS = {
  name: true,
  length: true,
  prototype: true,
  caller: true,
  callee: true,
  arguments: true,
  arity: true
};
var FORWARD_REF_STATICS = {
  "$$typeof": true,
  render: true,
  defaultProps: true,
  displayName: true,
  propTypes: true
};
var MEMO_STATICS = {
  "$$typeof": true,
  compare: true,
  defaultProps: true,
  displayName: true,
  propTypes: true,
  type: true
};
var TYPE_STATICS = {};
TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;
function getStatics(component) {
  if (reactIs.isMemo(component)) {
    return MEMO_STATICS;
  }
  return TYPE_STATICS[component["$$typeof"]] || REACT_STATICS;
}
var defineProperty = Object.defineProperty;
var getOwnPropertyNames = Object.getOwnPropertyNames;
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var getPrototypeOf$1 = Object.getPrototypeOf;
var objectPrototype = Object.prototype;
function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
  if (typeof sourceComponent !== "string") {
    if (objectPrototype) {
      var inheritedComponent = getPrototypeOf$1(sourceComponent);
      if (inheritedComponent && inheritedComponent !== objectPrototype) {
        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
      }
    }
    var keys = getOwnPropertyNames(sourceComponent);
    if (getOwnPropertySymbols) {
      keys = keys.concat(getOwnPropertySymbols(sourceComponent));
    }
    var targetStatics = getStatics(targetComponent);
    var sourceStatics = getStatics(sourceComponent);
    for (var i = 0; i < keys.length; ++i) {
      var key = keys[i];
      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);
        try {
          defineProperty(targetComponent, key, descriptor);
        } catch (e2) {
        }
      }
    }
  }
  return targetComponent;
}
var hoistNonReactStatics_cjs = hoistNonReactStatics;
const m = /* @__PURE__ */ getDefaultExportFromCjs(hoistNonReactStatics_cjs);
function y() {
  return (y = Object.assign || function(e2) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var n2 = arguments[t2];
      for (var r2 in n2)
        Object.prototype.hasOwnProperty.call(n2, r2) && (e2[r2] = n2[r2]);
    }
    return e2;
  }).apply(this, arguments);
}
var v = function(e2, t2) {
  for (var n2 = [e2[0]], r2 = 0, o = t2.length; r2 < o; r2 += 1)
    n2.push(t2[r2], e2[r2 + 1]);
  return n2;
}, g = function(t2) {
  return null !== t2 && "object" == typeof t2 && "[object Object]" === (t2.toString ? t2.toString() : Object.prototype.toString.call(t2)) && !reactIsExports.typeOf(t2);
}, S = Object.freeze([]), w = Object.freeze({});
function E(e2) {
  return "function" == typeof e2;
}
function b(e2) {
  return e2.displayName || e2.name || "Component";
}
function _(e2) {
  return e2 && "string" == typeof e2.styledComponentId;
}
var N = "undefined" != typeof process && void 0 !== { "LESSOPEN": "| /usr/bin/lesspipe %s", "npm_package_devDependencies_ts_node": "^10.4.0", "npm_package_dependencies_papaparse": "^5.4.1", "npm_package_devDependencies__types_webpack_dev_server": "^4.3.1", "USER": "v", "npm_package_devDependencies_webpack_cli": "^4.9.1", "npm_package_dependencies_node_gzip": "^1.1.2", "npm_config_version_commit_hooks": "true", "npm_config_user_agent": "yarn/1.22.19 npm/? node/v19.2.0 linux x64", "npm_package_scripts_build_electron_rest": "VITE_LWT_PERSIST=REST tsc && electron-vite build", "npm_config_bin_links": "true", "XDG_SESSION_TYPE": "x11", "npm_node_execpath": "/home/v/.nvm/versions/node/v19.2.0/bin/node", "npm_package_scripts_dev_electron_localstorage": "VITE_LWT_PERSIST=LOCALSTORAGE electron-vite dev -w", "npm_config_init_version": "1.0.0", "SHLVL": "1", "npm_package_dependencies_rxjs": "^7.4.0", "npm_package_dependencies_process": "^0.11.10", "HOME": "/home/v", "OLDPWD": "/home/v/Projects/LabelMaker", "npm_package_devDependencies__typescript_eslint_parser": "^6.0.0", "npm_package_dependencies_superstruct": "^1.0.3", "npm_package_scripts_dev_electron_sqlite": "VITE_LWT_PERSIST=SQLITE electron-vite dev -w", "DESKTOP_SESSION": "ubuntu-xorg", "NVM_BIN": "/home/v/.nvm/versions/node/v19.2.0/bin", "npm_package_dependencies_stream": "^0.0.2", "NVM_INC": "/home/v/.nvm/versions/node/v19.2.0/include/node", "npm_package_dependencies_browserify_zlib": "^0.2.0", "npm_config_init_license": "MIT", "GNOME_SHELL_SESSION_MODE": "ubuntu", "GTK_MODULES": "gail:atk-bridge", "YARN_WRAP_OUTPUT": "false", "npm_package_devDependencies__types_electron": "^1.6.10", "npm_package_dependencies__types_react_modal": "^3.16.3", "npm_package_scripts_dev_rest": "VITE_LWT_PERSIST=REST vite", "npm_config_version_tag_prefix": "v", "SYSTEMD_EXEC_PID": "29480", "DBUS_SESSION_BUS_ADDRESS": "unix:path=/run/user/1000/bus", "npm_package_devDependencies_eslint_plugin_react_hooks": "^4.6.0", "npm_package_dependencies__datorama_akita": "^6.2.4", "COLORTERM": "truecolor", "npm_package_devDependencies_babel_loader": "^8.2.3", "npm_package_dependencies_react_router_dom": "^6.18.0", "npm_package_dependencies_rambdax": "^9.0.0", "npm_package_description": "LWT React Port", "NVM_DIR": "/home/v/.nvm", "npm_package_readmeFilename": "README.md", "npm_package_devDependencies__types_react_dom": "^18.2.7", "npm_package_devDependencies__babel_preset_env": "^7.16.0", "npm_package_dependencies_sqlite": "^5.1.1", "npm_package_dependencies_assert": "^2.0.0", "npm_package_homepage": "http://.", "MANDATORY_PATH": "/usr/share/gconf/ubuntu-xorg.mandatory.path", "npm_package_devDependencies_prettier": "^2.4.1", "npm_package_devDependencies__types_sqlite3": "^3.1.11", "npm_package_devDependencies__babel_runtime": "^7.16.3", "npm_package_devDependencies__babel_plugin_transform_runtime": "^7.16.0", "npm_package_scripts_mapIcons": "rm src/icons/index.ts && npx tsc cli/createIconMap.ts && node cli/createIconMap.js", "GTK_IM_MODULE": "ibus", "LOGNAME": "v", "npm_package_devDependencies__vitejs_plugin_react": "^4.1.1", "npm_package_devDependencies__babel_preset_typescript": "^7.16.0", "_": "/home/v/.nvm/versions/node/v19.2.0/bin/yarn", "npm_package_devDependencies__babel_preset_react": "^7.16.0", "npm_package_scripts_preview_electron": "electron-vite preview", "XDG_SESSION_CLASS": "user", "DEFAULTS_PATH": "/usr/share/gconf/ubuntu-xorg.default.path", "npm_package_devDependencies__typescript_eslint_eslint_plugin": "^6.0.0", "npm_package_devDependencies__babel_plugin_proposal_decorators": "^7.16.0", "npm_package_scripts_lint": "eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0", "npm_config_registry": "https://registry.yarnpkg.com", "USERNAME": "v", "TERM": "xterm-256color", "npm_package_devDependencies__babel_core": "^7.16.0", "npm_package_scripts_build_electron_localstorage": "VITE_LWT_PERSIST=LOCALSTORAGE tsc && electron-vite build", "GNOME_DESKTOP_SESSION_ID": "this-is-deprecated", "npm_package_devDependencies_html_webpack_plugin": "^5.5.0", "npm_package_devDependencies_eslint_plugin_react_refresh": "^0.4.3", "npm_package_scripts_start": "webpack-dev-server --mode development", "npm_config_ignore_scripts": "", "WINDOWPATH": "2", "npm_package_scripts_build_electron_sqlite": "VITE_LWT_PERSIST=SQLITE tsc && electron-vite build", "PATH": "/tmp/yarn--1701238006420-0.22155935637369373:/home/v/Projects/LWT-React/node_modules/.bin:/home/v/.config/yarn/link/node_modules/.bin:/home/v/.yarn/bin:/home/v/.nvm/versions/node/v19.2.0/libexec/lib/node_modules/npm/bin/node-gyp-bin:/home/v/.nvm/versions/node/v19.2.0/lib/node_modules/npm/bin/node-gyp-bin:/home/v/.nvm/versions/node/v19.2.0/bin/node_modules/npm/bin/node-gyp-bin:/home/v/.nvm/versions/node/v19.2.0/bin:/home/v/.cargo/bin:/home/v/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin", "NODE": "/home/v/.nvm/versions/node/v19.2.0/bin/node", "SESSION_MANAGER": "local/v-NUC8i3BEH:@/tmp/.ICE-unix/7924,unix/v-NUC8i3BEH:/tmp/.ICE-unix/7924", "npm_package_name": "lwt-react", "XDG_MENU_PREFIX": "gnome-", "GNOME_TERMINAL_SCREEN": "/org/gnome/Terminal/screen/1f565d45_dae5_452c_82b9_317fea2cb63e", "XDG_RUNTIME_DIR": "/run/user/1000", "npm_package_dependencies_zlib": "^1.0.5", "DISPLAY": ":0", "npm_package_devDependencies_electron_vite": "^1.0.29", "npm_package_devDependencies_electron_packager": "^17.1.2", "npm_package_scripts_build_rest": "VITE_LWT_PERSIST=REST tsc && vite build", "LANG": "en_US.UTF-8", "XDG_CURRENT_DESKTOP": "ubuntu:GNOME", "npm_package_devDependencies_webpack": "^5.64.0", "npm_package_devDependencies_eslint": "^8.45.0", "npm_package_devDependencies__types_styled_components": "^5.1.26", "npm_package_dependencies_react_dom": "^18.2.0", "npm_package_scripts_dev_localstorage": "VITE_LWT_PERSIST=LOCALSTORAGE vite", "XMODIFIERS": "@im=ibus", "XDG_SESSION_DESKTOP": "ubuntu-xorg", "XAUTHORITY": "/run/user/1000/gdm/Xauthority", "LS_COLORS": "rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:", "GNOME_TERMINAL_SERVICE": ":1.160", "npm_package_dependencies_sqlite3": "^5.1.6", "npm_package_main": "./out/main/index.js", "SSH_AGENT_LAUNCHER": "gnome-keyring", "SSH_AUTH_SOCK": "/run/user/1000/keyring/ssh", "npm_package_devDependencies_webpack_dev_server": "^4.4.0", "npm_package_scripts_test": 'echo "Error: no test specified" && exit 1', "npm_config_version_git_message": "v%s", "SHELL": "/bin/bash", "npm_lifecycle_event": "electron-vite", "npm_package_devDependencies__types_react": "^18.2.15", "npm_package_version": "1.0.0", "QT_ACCESSIBILITY": "1", "GDMSESSION": "ubuntu-xorg", "npm_config_argv": '{"remain":[],"cooked":["run","electron-vite"],"original":["run","electron-vite","build"]}', "npm_package_devDependencies__types_papaparse": "^5.3.13", "npm_package_dependencies_buffer": "^6.0.3", "npm_package_scripts_dev_electron_rest": "VITE_LWT_PERSIST=REST electron-vite dev -w", "LESSCLOSE": "/usr/bin/lesspipe %s %s", "npm_package_dependencies_vite": "^4.5.0", "npm_package_devDependencies__types_node_gzip": "^1.1.0", "npm_config_version_git_tag": "true", "npm_config_version_git_sign": "", "GPG_AGENT_INFO": "/run/user/1000/gnupg/S.gpg-agent:0:1", "npm_package_dependencies_yarn": "^1.22.19", "npm_package_license": "ISC", "npm_config_strict_ssl": "true", "QT_IM_MODULE": "ibus", "npm_package_dependencies_sqlite_electron": "^2.2.8", "npm_package_dependencies__floating_ui_react": "^0.19.2", "PWD": "/home/v/Projects/LWT-React", "npm_execpath": "/home/v/.nvm/versions/node/v19.2.0/lib/node_modules/yarn/bin/yarn.js", "XDG_CONFIG_DIRS": "/etc/xdg/xdg-ubuntu-xorg:/etc/xdg", "NVM_CD_FLAGS": "", "XDG_DATA_DIRS": "/usr/share/ubuntu-xorg:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop", "npm_package_devDependencies_electron": "^27.1.2", "npm_package_dependencies_react_split_pane": "^0.1.92", "npm_package_dependencies_react_modal": "^3.16.1", "npm_package_author_name": "v", "npm_package_dependencies_util": "^0.12.5", "npm_package_dependencies_styled_components": "^5.3.6", "npm_config_save_prefix": "^", "npm_config_ignore_optional": "", "npm_package_scripts_preview": "vite preview", "VTE_VERSION": "6800", "npm_package_browser_assert": "false", "npm_package_dependencies_typescript": "^5.0.2", "INIT_CWD": "/home/v/Projects/LWT-React", "npm_package_devDependencies__types_webpack": "^5.28.0", "npm_package_dependencies_react": "^18.2.0", "npm_package_scripts_build_localstorage": "VITE_LWT_PERSIST=LOCALSTORAGE tsc && electron-vite build", "NODE_ENV_ELECTRON_VITE": "production", "NODE_ENV": "production", "ELECTRON_MAJOR_VER": "27" } && ({ "LESSOPEN": "| /usr/bin/lesspipe %s", "npm_package_devDependencies_ts_node": "^10.4.0", "npm_package_dependencies_papaparse": "^5.4.1", "npm_package_devDependencies__types_webpack_dev_server": "^4.3.1", "USER": "v", "npm_package_devDependencies_webpack_cli": "^4.9.1", "npm_package_dependencies_node_gzip": "^1.1.2", "npm_config_version_commit_hooks": "true", "npm_config_user_agent": "yarn/1.22.19 npm/? node/v19.2.0 linux x64", "npm_package_scripts_build_electron_rest": "VITE_LWT_PERSIST=REST tsc && electron-vite build", "npm_config_bin_links": "true", "XDG_SESSION_TYPE": "x11", "npm_node_execpath": "/home/v/.nvm/versions/node/v19.2.0/bin/node", "npm_package_scripts_dev_electron_localstorage": "VITE_LWT_PERSIST=LOCALSTORAGE electron-vite dev -w", "npm_config_init_version": "1.0.0", "SHLVL": "1", "npm_package_dependencies_rxjs": "^7.4.0", "npm_package_dependencies_process": "^0.11.10", "HOME": "/home/v", "OLDPWD": "/home/v/Projects/LabelMaker", "npm_package_devDependencies__typescript_eslint_parser": "^6.0.0", "npm_package_dependencies_superstruct": "^1.0.3", "npm_package_scripts_dev_electron_sqlite": "VITE_LWT_PERSIST=SQLITE electron-vite dev -w", "DESKTOP_SESSION": "ubuntu-xorg", "NVM_BIN": "/home/v/.nvm/versions/node/v19.2.0/bin", "npm_package_dependencies_stream": "^0.0.2", "NVM_INC": "/home/v/.nvm/versions/node/v19.2.0/include/node", "npm_package_dependencies_browserify_zlib": "^0.2.0", "npm_config_init_license": "MIT", "GNOME_SHELL_SESSION_MODE": "ubuntu", "GTK_MODULES": "gail:atk-bridge", "YARN_WRAP_OUTPUT": "false", "npm_package_devDependencies__types_electron": "^1.6.10", "npm_package_dependencies__types_react_modal": "^3.16.3", "npm_package_scripts_dev_rest": "VITE_LWT_PERSIST=REST vite", "npm_config_version_tag_prefix": "v", "SYSTEMD_EXEC_PID": "29480", "DBUS_SESSION_BUS_ADDRESS": "unix:path=/run/user/1000/bus", "npm_package_devDependencies_eslint_plugin_react_hooks": "^4.6.0", "npm_package_dependencies__datorama_akita": "^6.2.4", "COLORTERM": "truecolor", "npm_package_devDependencies_babel_loader": "^8.2.3", "npm_package_dependencies_react_router_dom": "^6.18.0", "npm_package_dependencies_rambdax": "^9.0.0", "npm_package_description": "LWT React Port", "NVM_DIR": "/home/v/.nvm", "npm_package_readmeFilename": "README.md", "npm_package_devDependencies__types_react_dom": "^18.2.7", "npm_package_devDependencies__babel_preset_env": "^7.16.0", "npm_package_dependencies_sqlite": "^5.1.1", "npm_package_dependencies_assert": "^2.0.0", "npm_package_homepage": "http://.", "MANDATORY_PATH": "/usr/share/gconf/ubuntu-xorg.mandatory.path", "npm_package_devDependencies_prettier": "^2.4.1", "npm_package_devDependencies__types_sqlite3": "^3.1.11", "npm_package_devDependencies__babel_runtime": "^7.16.3", "npm_package_devDependencies__babel_plugin_transform_runtime": "^7.16.0", "npm_package_scripts_mapIcons": "rm src/icons/index.ts && npx tsc cli/createIconMap.ts && node cli/createIconMap.js", "GTK_IM_MODULE": "ibus", "LOGNAME": "v", "npm_package_devDependencies__vitejs_plugin_react": "^4.1.1", "npm_package_devDependencies__babel_preset_typescript": "^7.16.0", "_": "/home/v/.nvm/versions/node/v19.2.0/bin/yarn", "npm_package_devDependencies__babel_preset_react": "^7.16.0", "npm_package_scripts_preview_electron": "electron-vite preview", "XDG_SESSION_CLASS": "user", "DEFAULTS_PATH": "/usr/share/gconf/ubuntu-xorg.default.path", "npm_package_devDependencies__typescript_eslint_eslint_plugin": "^6.0.0", "npm_package_devDependencies__babel_plugin_proposal_decorators": "^7.16.0", "npm_package_scripts_lint": "eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0", "npm_config_registry": "https://registry.yarnpkg.com", "USERNAME": "v", "TERM": "xterm-256color", "npm_package_devDependencies__babel_core": "^7.16.0", "npm_package_scripts_build_electron_localstorage": "VITE_LWT_PERSIST=LOCALSTORAGE tsc && electron-vite build", "GNOME_DESKTOP_SESSION_ID": "this-is-deprecated", "npm_package_devDependencies_html_webpack_plugin": "^5.5.0", "npm_package_devDependencies_eslint_plugin_react_refresh": "^0.4.3", "npm_package_scripts_start": "webpack-dev-server --mode development", "npm_config_ignore_scripts": "", "WINDOWPATH": "2", "npm_package_scripts_build_electron_sqlite": "VITE_LWT_PERSIST=SQLITE tsc && electron-vite build", "PATH": "/tmp/yarn--1701238006420-0.22155935637369373:/home/v/Projects/LWT-React/node_modules/.bin:/home/v/.config/yarn/link/node_modules/.bin:/home/v/.yarn/bin:/home/v/.nvm/versions/node/v19.2.0/libexec/lib/node_modules/npm/bin/node-gyp-bin:/home/v/.nvm/versions/node/v19.2.0/lib/node_modules/npm/bin/node-gyp-bin:/home/v/.nvm/versions/node/v19.2.0/bin/node_modules/npm/bin/node-gyp-bin:/home/v/.nvm/versions/node/v19.2.0/bin:/home/v/.cargo/bin:/home/v/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin", "NODE": "/home/v/.nvm/versions/node/v19.2.0/bin/node", "SESSION_MANAGER": "local/v-NUC8i3BEH:@/tmp/.ICE-unix/7924,unix/v-NUC8i3BEH:/tmp/.ICE-unix/7924", "npm_package_name": "lwt-react", "XDG_MENU_PREFIX": "gnome-", "GNOME_TERMINAL_SCREEN": "/org/gnome/Terminal/screen/1f565d45_dae5_452c_82b9_317fea2cb63e", "XDG_RUNTIME_DIR": "/run/user/1000", "npm_package_dependencies_zlib": "^1.0.5", "DISPLAY": ":0", "npm_package_devDependencies_electron_vite": "^1.0.29", "npm_package_devDependencies_electron_packager": "^17.1.2", "npm_package_scripts_build_rest": "VITE_LWT_PERSIST=REST tsc && vite build", "LANG": "en_US.UTF-8", "XDG_CURRENT_DESKTOP": "ubuntu:GNOME", "npm_package_devDependencies_webpack": "^5.64.0", "npm_package_devDependencies_eslint": "^8.45.0", "npm_package_devDependencies__types_styled_components": "^5.1.26", "npm_package_dependencies_react_dom": "^18.2.0", "npm_package_scripts_dev_localstorage": "VITE_LWT_PERSIST=LOCALSTORAGE vite", "XMODIFIERS": "@im=ibus", "XDG_SESSION_DESKTOP": "ubuntu-xorg", "XAUTHORITY": "/run/user/1000/gdm/Xauthority", "LS_COLORS": "rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:", "GNOME_TERMINAL_SERVICE": ":1.160", "npm_package_dependencies_sqlite3": "^5.1.6", "npm_package_main": "./out/main/index.js", "SSH_AGENT_LAUNCHER": "gnome-keyring", "SSH_AUTH_SOCK": "/run/user/1000/keyring/ssh", "npm_package_devDependencies_webpack_dev_server": "^4.4.0", "npm_package_scripts_test": 'echo "Error: no test specified" && exit 1', "npm_config_version_git_message": "v%s", "SHELL": "/bin/bash", "npm_lifecycle_event": "electron-vite", "npm_package_devDependencies__types_react": "^18.2.15", "npm_package_version": "1.0.0", "QT_ACCESSIBILITY": "1", "GDMSESSION": "ubuntu-xorg", "npm_config_argv": '{"remain":[],"cooked":["run","electron-vite"],"original":["run","electron-vite","build"]}', "npm_package_devDependencies__types_papaparse": "^5.3.13", "npm_package_dependencies_buffer": "^6.0.3", "npm_package_scripts_dev_electron_rest": "VITE_LWT_PERSIST=REST electron-vite dev -w", "LESSCLOSE": "/usr/bin/lesspipe %s %s", "npm_package_dependencies_vite": "^4.5.0", "npm_package_devDependencies__types_node_gzip": "^1.1.0", "npm_config_version_git_tag": "true", "npm_config_version_git_sign": "", "GPG_AGENT_INFO": "/run/user/1000/gnupg/S.gpg-agent:0:1", "npm_package_dependencies_yarn": "^1.22.19", "npm_package_license": "ISC", "npm_config_strict_ssl": "true", "QT_IM_MODULE": "ibus", "npm_package_dependencies_sqlite_electron": "^2.2.8", "npm_package_dependencies__floating_ui_react": "^0.19.2", "PWD": "/home/v/Projects/LWT-React", "npm_execpath": "/home/v/.nvm/versions/node/v19.2.0/lib/node_modules/yarn/bin/yarn.js", "XDG_CONFIG_DIRS": "/etc/xdg/xdg-ubuntu-xorg:/etc/xdg", "NVM_CD_FLAGS": "", "XDG_DATA_DIRS": "/usr/share/ubuntu-xorg:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop", "npm_package_devDependencies_electron": "^27.1.2", "npm_package_dependencies_react_split_pane": "^0.1.92", "npm_package_dependencies_react_modal": "^3.16.1", "npm_package_author_name": "v", "npm_package_dependencies_util": "^0.12.5", "npm_package_dependencies_styled_components": "^5.3.6", "npm_config_save_prefix": "^", "npm_config_ignore_optional": "", "npm_package_scripts_preview": "vite preview", "VTE_VERSION": "6800", "npm_package_browser_assert": "false", "npm_package_dependencies_typescript": "^5.0.2", "INIT_CWD": "/home/v/Projects/LWT-React", "npm_package_devDependencies__types_webpack": "^5.28.0", "npm_package_dependencies_react": "^18.2.0", "npm_package_scripts_build_localstorage": "VITE_LWT_PERSIST=LOCALSTORAGE tsc && electron-vite build", "NODE_ENV_ELECTRON_VITE": "production", "NODE_ENV": "production", "ELECTRON_MAJOR_VER": "27" }.REACT_APP_SC_ATTR || { "LESSOPEN": "| /usr/bin/lesspipe %s", "npm_package_devDependencies_ts_node": "^10.4.0", "npm_package_dependencies_papaparse": "^5.4.1", "npm_package_devDependencies__types_webpack_dev_server": "^4.3.1", "USER": "v", "npm_package_devDependencies_webpack_cli": "^4.9.1", "npm_package_dependencies_node_gzip": "^1.1.2", "npm_config_version_commit_hooks": "true", "npm_config_user_agent": "yarn/1.22.19 npm/? node/v19.2.0 linux x64", "npm_package_scripts_build_electron_rest": "VITE_LWT_PERSIST=REST tsc && electron-vite build", "npm_config_bin_links": "true", "XDG_SESSION_TYPE": "x11", "npm_node_execpath": "/home/v/.nvm/versions/node/v19.2.0/bin/node", "npm_package_scripts_dev_electron_localstorage": "VITE_LWT_PERSIST=LOCALSTORAGE electron-vite dev -w", "npm_config_init_version": "1.0.0", "SHLVL": "1", "npm_package_dependencies_rxjs": "^7.4.0", "npm_package_dependencies_process": "^0.11.10", "HOME": "/home/v", "OLDPWD": "/home/v/Projects/LabelMaker", "npm_package_devDependencies__typescript_eslint_parser": "^6.0.0", "npm_package_dependencies_superstruct": "^1.0.3", "npm_package_scripts_dev_electron_sqlite": "VITE_LWT_PERSIST=SQLITE electron-vite dev -w", "DESKTOP_SESSION": "ubuntu-xorg", "NVM_BIN": "/home/v/.nvm/versions/node/v19.2.0/bin", "npm_package_dependencies_stream": "^0.0.2", "NVM_INC": "/home/v/.nvm/versions/node/v19.2.0/include/node", "npm_package_dependencies_browserify_zlib": "^0.2.0", "npm_config_init_license": "MIT", "GNOME_SHELL_SESSION_MODE": "ubuntu", "GTK_MODULES": "gail:atk-bridge", "YARN_WRAP_OUTPUT": "false", "npm_package_devDependencies__types_electron": "^1.6.10", "npm_package_dependencies__types_react_modal": "^3.16.3", "npm_package_scripts_dev_rest": "VITE_LWT_PERSIST=REST vite", "npm_config_version_tag_prefix": "v", "SYSTEMD_EXEC_PID": "29480", "DBUS_SESSION_BUS_ADDRESS": "unix:path=/run/user/1000/bus", "npm_package_devDependencies_eslint_plugin_react_hooks": "^4.6.0", "npm_package_dependencies__datorama_akita": "^6.2.4", "COLORTERM": "truecolor", "npm_package_devDependencies_babel_loader": "^8.2.3", "npm_package_dependencies_react_router_dom": "^6.18.0", "npm_package_dependencies_rambdax": "^9.0.0", "npm_package_description": "LWT React Port", "NVM_DIR": "/home/v/.nvm", "npm_package_readmeFilename": "README.md", "npm_package_devDependencies__types_react_dom": "^18.2.7", "npm_package_devDependencies__babel_preset_env": "^7.16.0", "npm_package_dependencies_sqlite": "^5.1.1", "npm_package_dependencies_assert": "^2.0.0", "npm_package_homepage": "http://.", "MANDATORY_PATH": "/usr/share/gconf/ubuntu-xorg.mandatory.path", "npm_package_devDependencies_prettier": "^2.4.1", "npm_package_devDependencies__types_sqlite3": "^3.1.11", "npm_package_devDependencies__babel_runtime": "^7.16.3", "npm_package_devDependencies__babel_plugin_transform_runtime": "^7.16.0", "npm_package_scripts_mapIcons": "rm src/icons/index.ts && npx tsc cli/createIconMap.ts && node cli/createIconMap.js", "GTK_IM_MODULE": "ibus", "LOGNAME": "v", "npm_package_devDependencies__vitejs_plugin_react": "^4.1.1", "npm_package_devDependencies__babel_preset_typescript": "^7.16.0", "_": "/home/v/.nvm/versions/node/v19.2.0/bin/yarn", "npm_package_devDependencies__babel_preset_react": "^7.16.0", "npm_package_scripts_preview_electron": "electron-vite preview", "XDG_SESSION_CLASS": "user", "DEFAULTS_PATH": "/usr/share/gconf/ubuntu-xorg.default.path", "npm_package_devDependencies__typescript_eslint_eslint_plugin": "^6.0.0", "npm_package_devDependencies__babel_plugin_proposal_decorators": "^7.16.0", "npm_package_scripts_lint": "eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0", "npm_config_registry": "https://registry.yarnpkg.com", "USERNAME": "v", "TERM": "xterm-256color", "npm_package_devDependencies__babel_core": "^7.16.0", "npm_package_scripts_build_electron_localstorage": "VITE_LWT_PERSIST=LOCALSTORAGE tsc && electron-vite build", "GNOME_DESKTOP_SESSION_ID": "this-is-deprecated", "npm_package_devDependencies_html_webpack_plugin": "^5.5.0", "npm_package_devDependencies_eslint_plugin_react_refresh": "^0.4.3", "npm_package_scripts_start": "webpack-dev-server --mode development", "npm_config_ignore_scripts": "", "WINDOWPATH": "2", "npm_package_scripts_build_electron_sqlite": "VITE_LWT_PERSIST=SQLITE tsc && electron-vite build", "PATH": "/tmp/yarn--1701238006420-0.22155935637369373:/home/v/Projects/LWT-React/node_modules/.bin:/home/v/.config/yarn/link/node_modules/.bin:/home/v/.yarn/bin:/home/v/.nvm/versions/node/v19.2.0/libexec/lib/node_modules/npm/bin/node-gyp-bin:/home/v/.nvm/versions/node/v19.2.0/lib/node_modules/npm/bin/node-gyp-bin:/home/v/.nvm/versions/node/v19.2.0/bin/node_modules/npm/bin/node-gyp-bin:/home/v/.nvm/versions/node/v19.2.0/bin:/home/v/.cargo/bin:/home/v/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin", "NODE": "/home/v/.nvm/versions/node/v19.2.0/bin/node", "SESSION_MANAGER": "local/v-NUC8i3BEH:@/tmp/.ICE-unix/7924,unix/v-NUC8i3BEH:/tmp/.ICE-unix/7924", "npm_package_name": "lwt-react", "XDG_MENU_PREFIX": "gnome-", "GNOME_TERMINAL_SCREEN": "/org/gnome/Terminal/screen/1f565d45_dae5_452c_82b9_317fea2cb63e", "XDG_RUNTIME_DIR": "/run/user/1000", "npm_package_dependencies_zlib": "^1.0.5", "DISPLAY": ":0", "npm_package_devDependencies_electron_vite": "^1.0.29", "npm_package_devDependencies_electron_packager": "^17.1.2", "npm_package_scripts_build_rest": "VITE_LWT_PERSIST=REST tsc && vite build", "LANG": "en_US.UTF-8", "XDG_CURRENT_DESKTOP": "ubuntu:GNOME", "npm_package_devDependencies_webpack": "^5.64.0", "npm_package_devDependencies_eslint": "^8.45.0", "npm_package_devDependencies__types_styled_components": "^5.1.26", "npm_package_dependencies_react_dom": "^18.2.0", "npm_package_scripts_dev_localstorage": "VITE_LWT_PERSIST=LOCALSTORAGE vite", "XMODIFIERS": "@im=ibus", "XDG_SESSION_DESKTOP": "ubuntu-xorg", "XAUTHORITY": "/run/user/1000/gdm/Xauthority", "LS_COLORS": "rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:", "GNOME_TERMINAL_SERVICE": ":1.160", "npm_package_dependencies_sqlite3": "^5.1.6", "npm_package_main": "./out/main/index.js", "SSH_AGENT_LAUNCHER": "gnome-keyring", "SSH_AUTH_SOCK": "/run/user/1000/keyring/ssh", "npm_package_devDependencies_webpack_dev_server": "^4.4.0", "npm_package_scripts_test": 'echo "Error: no test specified" && exit 1', "npm_config_version_git_message": "v%s", "SHELL": "/bin/bash", "npm_lifecycle_event": "electron-vite", "npm_package_devDependencies__types_react": "^18.2.15", "npm_package_version": "1.0.0", "QT_ACCESSIBILITY": "1", "GDMSESSION": "ubuntu-xorg", "npm_config_argv": '{"remain":[],"cooked":["run","electron-vite"],"original":["run","electron-vite","build"]}', "npm_package_devDependencies__types_papaparse": "^5.3.13", "npm_package_dependencies_buffer": "^6.0.3", "npm_package_scripts_dev_electron_rest": "VITE_LWT_PERSIST=REST electron-vite dev -w", "LESSCLOSE": "/usr/bin/lesspipe %s %s", "npm_package_dependencies_vite": "^4.5.0", "npm_package_devDependencies__types_node_gzip": "^1.1.0", "npm_config_version_git_tag": "true", "npm_config_version_git_sign": "", "GPG_AGENT_INFO": "/run/user/1000/gnupg/S.gpg-agent:0:1", "npm_package_dependencies_yarn": "^1.22.19", "npm_package_license": "ISC", "npm_config_strict_ssl": "true", "QT_IM_MODULE": "ibus", "npm_package_dependencies_sqlite_electron": "^2.2.8", "npm_package_dependencies__floating_ui_react": "^0.19.2", "PWD": "/home/v/Projects/LWT-React", "npm_execpath": "/home/v/.nvm/versions/node/v19.2.0/lib/node_modules/yarn/bin/yarn.js", "XDG_CONFIG_DIRS": "/etc/xdg/xdg-ubuntu-xorg:/etc/xdg", "NVM_CD_FLAGS": "", "XDG_DATA_DIRS": "/usr/share/ubuntu-xorg:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop", "npm_package_devDependencies_electron": "^27.1.2", "npm_package_dependencies_react_split_pane": "^0.1.92", "npm_package_dependencies_react_modal": "^3.16.1", "npm_package_author_name": "v", "npm_package_dependencies_util": "^0.12.5", "npm_package_dependencies_styled_components": "^5.3.6", "npm_config_save_prefix": "^", "npm_config_ignore_optional": "", "npm_package_scripts_preview": "vite preview", "VTE_VERSION": "6800", "npm_package_browser_assert": "false", "npm_package_dependencies_typescript": "^5.0.2", "INIT_CWD": "/home/v/Projects/LWT-React", "npm_package_devDependencies__types_webpack": "^5.28.0", "npm_package_dependencies_react": "^18.2.0", "npm_package_scripts_build_localstorage": "VITE_LWT_PERSIST=LOCALSTORAGE tsc && electron-vite build", "NODE_ENV_ELECTRON_VITE": "production", "NODE_ENV": "production", "ELECTRON_MAJOR_VER": "27" }.SC_ATTR) || "data-styled", C = "undefined" != typeof window && "HTMLElement" in window, I = Boolean("boolean" == typeof SC_DISABLE_SPEEDY ? SC_DISABLE_SPEEDY : "undefined" != typeof process && void 0 !== { "LESSOPEN": "| /usr/bin/lesspipe %s", "npm_package_devDependencies_ts_node": "^10.4.0", "npm_package_dependencies_papaparse": "^5.4.1", "npm_package_devDependencies__types_webpack_dev_server": "^4.3.1", "USER": "v", "npm_package_devDependencies_webpack_cli": "^4.9.1", "npm_package_dependencies_node_gzip": "^1.1.2", "npm_config_version_commit_hooks": "true", "npm_config_user_agent": "yarn/1.22.19 npm/? node/v19.2.0 linux x64", "npm_package_scripts_build_electron_rest": "VITE_LWT_PERSIST=REST tsc && electron-vite build", "npm_config_bin_links": "true", "XDG_SESSION_TYPE": "x11", "npm_node_execpath": "/home/v/.nvm/versions/node/v19.2.0/bin/node", "npm_package_scripts_dev_electron_localstorage": "VITE_LWT_PERSIST=LOCALSTORAGE electron-vite dev -w", "npm_config_init_version": "1.0.0", "SHLVL": "1", "npm_package_dependencies_rxjs": "^7.4.0", "npm_package_dependencies_process": "^0.11.10", "HOME": "/home/v", "OLDPWD": "/home/v/Projects/LabelMaker", "npm_package_devDependencies__typescript_eslint_parser": "^6.0.0", "npm_package_dependencies_superstruct": "^1.0.3", "npm_package_scripts_dev_electron_sqlite": "VITE_LWT_PERSIST=SQLITE electron-vite dev -w", "DESKTOP_SESSION": "ubuntu-xorg", "NVM_BIN": "/home/v/.nvm/versions/node/v19.2.0/bin", "npm_package_dependencies_stream": "^0.0.2", "NVM_INC": "/home/v/.nvm/versions/node/v19.2.0/include/node", "npm_package_dependencies_browserify_zlib": "^0.2.0", "npm_config_init_license": "MIT", "GNOME_SHELL_SESSION_MODE": "ubuntu", "GTK_MODULES": "gail:atk-bridge", "YARN_WRAP_OUTPUT": "false", "npm_package_devDependencies__types_electron": "^1.6.10", "npm_package_dependencies__types_react_modal": "^3.16.3", "npm_package_scripts_dev_rest": "VITE_LWT_PERSIST=REST vite", "npm_config_version_tag_prefix": "v", "SYSTEMD_EXEC_PID": "29480", "DBUS_SESSION_BUS_ADDRESS": "unix:path=/run/user/1000/bus", "npm_package_devDependencies_eslint_plugin_react_hooks": "^4.6.0", "npm_package_dependencies__datorama_akita": "^6.2.4", "COLORTERM": "truecolor", "npm_package_devDependencies_babel_loader": "^8.2.3", "npm_package_dependencies_react_router_dom": "^6.18.0", "npm_package_dependencies_rambdax": "^9.0.0", "npm_package_description": "LWT React Port", "NVM_DIR": "/home/v/.nvm", "npm_package_readmeFilename": "README.md", "npm_package_devDependencies__types_react_dom": "^18.2.7", "npm_package_devDependencies__babel_preset_env": "^7.16.0", "npm_package_dependencies_sqlite": "^5.1.1", "npm_package_dependencies_assert": "^2.0.0", "npm_package_homepage": "http://.", "MANDATORY_PATH": "/usr/share/gconf/ubuntu-xorg.mandatory.path", "npm_package_devDependencies_prettier": "^2.4.1", "npm_package_devDependencies__types_sqlite3": "^3.1.11", "npm_package_devDependencies__babel_runtime": "^7.16.3", "npm_package_devDependencies__babel_plugin_transform_runtime": "^7.16.0", "npm_package_scripts_mapIcons": "rm src/icons/index.ts && npx tsc cli/createIconMap.ts && node cli/createIconMap.js", "GTK_IM_MODULE": "ibus", "LOGNAME": "v", "npm_package_devDependencies__vitejs_plugin_react": "^4.1.1", "npm_package_devDependencies__babel_preset_typescript": "^7.16.0", "_": "/home/v/.nvm/versions/node/v19.2.0/bin/yarn", "npm_package_devDependencies__babel_preset_react": "^7.16.0", "npm_package_scripts_preview_electron": "electron-vite preview", "XDG_SESSION_CLASS": "user", "DEFAULTS_PATH": "/usr/share/gconf/ubuntu-xorg.default.path", "npm_package_devDependencies__typescript_eslint_eslint_plugin": "^6.0.0", "npm_package_devDependencies__babel_plugin_proposal_decorators": "^7.16.0", "npm_package_scripts_lint": "eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0", "npm_config_registry": "https://registry.yarnpkg.com", "USERNAME": "v", "TERM": "xterm-256color", "npm_package_devDependencies__babel_core": "^7.16.0", "npm_package_scripts_build_electron_localstorage": "VITE_LWT_PERSIST=LOCALSTORAGE tsc && electron-vite build", "GNOME_DESKTOP_SESSION_ID": "this-is-deprecated", "npm_package_devDependencies_html_webpack_plugin": "^5.5.0", "npm_package_devDependencies_eslint_plugin_react_refresh": "^0.4.3", "npm_package_scripts_start": "webpack-dev-server --mode development", "npm_config_ignore_scripts": "", "WINDOWPATH": "2", "npm_package_scripts_build_electron_sqlite": "VITE_LWT_PERSIST=SQLITE tsc && electron-vite build", "PATH": "/tmp/yarn--1701238006420-0.22155935637369373:/home/v/Projects/LWT-React/node_modules/.bin:/home/v/.config/yarn/link/node_modules/.bin:/home/v/.yarn/bin:/home/v/.nvm/versions/node/v19.2.0/libexec/lib/node_modules/npm/bin/node-gyp-bin:/home/v/.nvm/versions/node/v19.2.0/lib/node_modules/npm/bin/node-gyp-bin:/home/v/.nvm/versions/node/v19.2.0/bin/node_modules/npm/bin/node-gyp-bin:/home/v/.nvm/versions/node/v19.2.0/bin:/home/v/.cargo/bin:/home/v/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin", "NODE": "/home/v/.nvm/versions/node/v19.2.0/bin/node", "SESSION_MANAGER": "local/v-NUC8i3BEH:@/tmp/.ICE-unix/7924,unix/v-NUC8i3BEH:/tmp/.ICE-unix/7924", "npm_package_name": "lwt-react", "XDG_MENU_PREFIX": "gnome-", "GNOME_TERMINAL_SCREEN": "/org/gnome/Terminal/screen/1f565d45_dae5_452c_82b9_317fea2cb63e", "XDG_RUNTIME_DIR": "/run/user/1000", "npm_package_dependencies_zlib": "^1.0.5", "DISPLAY": ":0", "npm_package_devDependencies_electron_vite": "^1.0.29", "npm_package_devDependencies_electron_packager": "^17.1.2", "npm_package_scripts_build_rest": "VITE_LWT_PERSIST=REST tsc && vite build", "LANG": "en_US.UTF-8", "XDG_CURRENT_DESKTOP": "ubuntu:GNOME", "npm_package_devDependencies_webpack": "^5.64.0", "npm_package_devDependencies_eslint": "^8.45.0", "npm_package_devDependencies__types_styled_components": "^5.1.26", "npm_package_dependencies_react_dom": "^18.2.0", "npm_package_scripts_dev_localstorage": "VITE_LWT_PERSIST=LOCALSTORAGE vite", "XMODIFIERS": "@im=ibus", "XDG_SESSION_DESKTOP": "ubuntu-xorg", "XAUTHORITY": "/run/user/1000/gdm/Xauthority", "LS_COLORS": "rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:", "GNOME_TERMINAL_SERVICE": ":1.160", "npm_package_dependencies_sqlite3": "^5.1.6", "npm_package_main": "./out/main/index.js", "SSH_AGENT_LAUNCHER": "gnome-keyring", "SSH_AUTH_SOCK": "/run/user/1000/keyring/ssh", "npm_package_devDependencies_webpack_dev_server": "^4.4.0", "npm_package_scripts_test": 'echo "Error: no test specified" && exit 1', "npm_config_version_git_message": "v%s", "SHELL": "/bin/bash", "npm_lifecycle_event": "electron-vite", "npm_package_devDependencies__types_react": "^18.2.15", "npm_package_version": "1.0.0", "QT_ACCESSIBILITY": "1", "GDMSESSION": "ubuntu-xorg", "npm_config_argv": '{"remain":[],"cooked":["run","electron-vite"],"original":["run","electron-vite","build"]}', "npm_package_devDependencies__types_papaparse": "^5.3.13", "npm_package_dependencies_buffer": "^6.0.3", "npm_package_scripts_dev_electron_rest": "VITE_LWT_PERSIST=REST electron-vite dev -w", "LESSCLOSE": "/usr/bin/lesspipe %s %s", "npm_package_dependencies_vite": "^4.5.0", "npm_package_devDependencies__types_node_gzip": "^1.1.0", "npm_config_version_git_tag": "true", "npm_config_version_git_sign": "", "GPG_AGENT_INFO": "/run/user/1000/gnupg/S.gpg-agent:0:1", "npm_package_dependencies_yarn": "^1.22.19", "npm_package_license": "ISC", "npm_config_strict_ssl": "true", "QT_IM_MODULE": "ibus", "npm_package_dependencies_sqlite_electron": "^2.2.8", "npm_package_dependencies__floating_ui_react": "^0.19.2", "PWD": "/home/v/Projects/LWT-React", "npm_execpath": "/home/v/.nvm/versions/node/v19.2.0/lib/node_modules/yarn/bin/yarn.js", "XDG_CONFIG_DIRS": "/etc/xdg/xdg-ubuntu-xorg:/etc/xdg", "NVM_CD_FLAGS": "", "XDG_DATA_DIRS": "/usr/share/ubuntu-xorg:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop", "npm_package_devDependencies_electron": "^27.1.2", "npm_package_dependencies_react_split_pane": "^0.1.92", "npm_package_dependencies_react_modal": "^3.16.1", "npm_package_author_name": "v", "npm_package_dependencies_util": "^0.12.5", "npm_package_dependencies_styled_components": "^5.3.6", "npm_config_save_prefix": "^", "npm_config_ignore_optional": "", "npm_package_scripts_preview": "vite preview", "VTE_VERSION": "6800", "npm_package_browser_assert": "false", "npm_package_dependencies_typescript": "^5.0.2", "INIT_CWD": "/home/v/Projects/LWT-React", "npm_package_devDependencies__types_webpack": "^5.28.0", "npm_package_dependencies_react": "^18.2.0", "npm_package_scripts_build_localstorage": "VITE_LWT_PERSIST=LOCALSTORAGE tsc && electron-vite build", "NODE_ENV_ELECTRON_VITE": "production", "NODE_ENV": "production", "ELECTRON_MAJOR_VER": "27" } && (void 0 !== { "LESSOPEN": "| /usr/bin/lesspipe %s", "npm_package_devDependencies_ts_node": "^10.4.0", "npm_package_dependencies_papaparse": "^5.4.1", "npm_package_devDependencies__types_webpack_dev_server": "^4.3.1", "USER": "v", "npm_package_devDependencies_webpack_cli": "^4.9.1", "npm_package_dependencies_node_gzip": "^1.1.2", "npm_config_version_commit_hooks": "true", "npm_config_user_agent": "yarn/1.22.19 npm/? node/v19.2.0 linux x64", "npm_package_scripts_build_electron_rest": "VITE_LWT_PERSIST=REST tsc && electron-vite build", "npm_config_bin_links": "true", "XDG_SESSION_TYPE": "x11", "npm_node_execpath": "/home/v/.nvm/versions/node/v19.2.0/bin/node", "npm_package_scripts_dev_electron_localstorage": "VITE_LWT_PERSIST=LOCALSTORAGE electron-vite dev -w", "npm_config_init_version": "1.0.0", "SHLVL": "1", "npm_package_dependencies_rxjs": "^7.4.0", "npm_package_dependencies_process": "^0.11.10", "HOME": "/home/v", "OLDPWD": "/home/v/Projects/LabelMaker", "npm_package_devDependencies__typescript_eslint_parser": "^6.0.0", "npm_package_dependencies_superstruct": "^1.0.3", "npm_package_scripts_dev_electron_sqlite": "VITE_LWT_PERSIST=SQLITE electron-vite dev -w", "DESKTOP_SESSION": "ubuntu-xorg", "NVM_BIN": "/home/v/.nvm/versions/node/v19.2.0/bin", "npm_package_dependencies_stream": "^0.0.2", "NVM_INC": "/home/v/.nvm/versions/node/v19.2.0/include/node", "npm_package_dependencies_browserify_zlib": "^0.2.0", "npm_config_init_license": "MIT", "GNOME_SHELL_SESSION_MODE": "ubuntu", "GTK_MODULES": "gail:atk-bridge", "YARN_WRAP_OUTPUT": "false", "npm_package_devDependencies__types_electron": "^1.6.10", "npm_package_dependencies__types_react_modal": "^3.16.3", "npm_package_scripts_dev_rest": "VITE_LWT_PERSIST=REST vite", "npm_config_version_tag_prefix": "v", "SYSTEMD_EXEC_PID": "29480", "DBUS_SESSION_BUS_ADDRESS": "unix:path=/run/user/1000/bus", "npm_package_devDependencies_eslint_plugin_react_hooks": "^4.6.0", "npm_package_dependencies__datorama_akita": "^6.2.4", "COLORTERM": "truecolor", "npm_package_devDependencies_babel_loader": "^8.2.3", "npm_package_dependencies_react_router_dom": "^6.18.0", "npm_package_dependencies_rambdax": "^9.0.0", "npm_package_description": "LWT React Port", "NVM_DIR": "/home/v/.nvm", "npm_package_readmeFilename": "README.md", "npm_package_devDependencies__types_react_dom": "^18.2.7", "npm_package_devDependencies__babel_preset_env": "^7.16.0", "npm_package_dependencies_sqlite": "^5.1.1", "npm_package_dependencies_assert": "^2.0.0", "npm_package_homepage": "http://.", "MANDATORY_PATH": "/usr/share/gconf/ubuntu-xorg.mandatory.path", "npm_package_devDependencies_prettier": "^2.4.1", "npm_package_devDependencies__types_sqlite3": "^3.1.11", "npm_package_devDependencies__babel_runtime": "^7.16.3", "npm_package_devDependencies__babel_plugin_transform_runtime": "^7.16.0", "npm_package_scripts_mapIcons": "rm src/icons/index.ts && npx tsc cli/createIconMap.ts && node cli/createIconMap.js", "GTK_IM_MODULE": "ibus", "LOGNAME": "v", "npm_package_devDependencies__vitejs_plugin_react": "^4.1.1", "npm_package_devDependencies__babel_preset_typescript": "^7.16.0", "_": "/home/v/.nvm/versions/node/v19.2.0/bin/yarn", "npm_package_devDependencies__babel_preset_react": "^7.16.0", "npm_package_scripts_preview_electron": "electron-vite preview", "XDG_SESSION_CLASS": "user", "DEFAULTS_PATH": "/usr/share/gconf/ubuntu-xorg.default.path", "npm_package_devDependencies__typescript_eslint_eslint_plugin": "^6.0.0", "npm_package_devDependencies__babel_plugin_proposal_decorators": "^7.16.0", "npm_package_scripts_lint": "eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0", "npm_config_registry": "https://registry.yarnpkg.com", "USERNAME": "v", "TERM": "xterm-256color", "npm_package_devDependencies__babel_core": "^7.16.0", "npm_package_scripts_build_electron_localstorage": "VITE_LWT_PERSIST=LOCALSTORAGE tsc && electron-vite build", "GNOME_DESKTOP_SESSION_ID": "this-is-deprecated", "npm_package_devDependencies_html_webpack_plugin": "^5.5.0", "npm_package_devDependencies_eslint_plugin_react_refresh": "^0.4.3", "npm_package_scripts_start": "webpack-dev-server --mode development", "npm_config_ignore_scripts": "", "WINDOWPATH": "2", "npm_package_scripts_build_electron_sqlite": "VITE_LWT_PERSIST=SQLITE tsc && electron-vite build", "PATH": "/tmp/yarn--1701238006420-0.22155935637369373:/home/v/Projects/LWT-React/node_modules/.bin:/home/v/.config/yarn/link/node_modules/.bin:/home/v/.yarn/bin:/home/v/.nvm/versions/node/v19.2.0/libexec/lib/node_modules/npm/bin/node-gyp-bin:/home/v/.nvm/versions/node/v19.2.0/lib/node_modules/npm/bin/node-gyp-bin:/home/v/.nvm/versions/node/v19.2.0/bin/node_modules/npm/bin/node-gyp-bin:/home/v/.nvm/versions/node/v19.2.0/bin:/home/v/.cargo/bin:/home/v/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin", "NODE": "/home/v/.nvm/versions/node/v19.2.0/bin/node", "SESSION_MANAGER": "local/v-NUC8i3BEH:@/tmp/.ICE-unix/7924,unix/v-NUC8i3BEH:/tmp/.ICE-unix/7924", "npm_package_name": "lwt-react", "XDG_MENU_PREFIX": "gnome-", "GNOME_TERMINAL_SCREEN": "/org/gnome/Terminal/screen/1f565d45_dae5_452c_82b9_317fea2cb63e", "XDG_RUNTIME_DIR": "/run/user/1000", "npm_package_dependencies_zlib": "^1.0.5", "DISPLAY": ":0", "npm_package_devDependencies_electron_vite": "^1.0.29", "npm_package_devDependencies_electron_packager": "^17.1.2", "npm_package_scripts_build_rest": "VITE_LWT_PERSIST=REST tsc && vite build", "LANG": "en_US.UTF-8", "XDG_CURRENT_DESKTOP": "ubuntu:GNOME", "npm_package_devDependencies_webpack": "^5.64.0", "npm_package_devDependencies_eslint": "^8.45.0", "npm_package_devDependencies__types_styled_components": "^5.1.26", "npm_package_dependencies_react_dom": "^18.2.0", "npm_package_scripts_dev_localstorage": "VITE_LWT_PERSIST=LOCALSTORAGE vite", "XMODIFIERS": "@im=ibus", "XDG_SESSION_DESKTOP": "ubuntu-xorg", "XAUTHORITY": "/run/user/1000/gdm/Xauthority", "LS_COLORS": "rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:", "GNOME_TERMINAL_SERVICE": ":1.160", "npm_package_dependencies_sqlite3": "^5.1.6", "npm_package_main": "./out/main/index.js", "SSH_AGENT_LAUNCHER": "gnome-keyring", "SSH_AUTH_SOCK": "/run/user/1000/keyring/ssh", "npm_package_devDependencies_webpack_dev_server": "^4.4.0", "npm_package_scripts_test": 'echo "Error: no test specified" && exit 1', "npm_config_version_git_message": "v%s", "SHELL": "/bin/bash", "npm_lifecycle_event": "electron-vite", "npm_package_devDependencies__types_react": "^18.2.15", "npm_package_version": "1.0.0", "QT_ACCESSIBILITY": "1", "GDMSESSION": "ubuntu-xorg", "npm_config_argv": '{"remain":[],"cooked":["run","electron-vite"],"original":["run","electron-vite","build"]}', "npm_package_devDependencies__types_papaparse": "^5.3.13", "npm_package_dependencies_buffer": "^6.0.3", "npm_package_scripts_dev_electron_rest": "VITE_LWT_PERSIST=REST electron-vite dev -w", "LESSCLOSE": "/usr/bin/lesspipe %s %s", "npm_package_dependencies_vite": "^4.5.0", "npm_package_devDependencies__types_node_gzip": "^1.1.0", "npm_config_version_git_tag": "true", "npm_config_version_git_sign": "", "GPG_AGENT_INFO": "/run/user/1000/gnupg/S.gpg-agent:0:1", "npm_package_dependencies_yarn": "^1.22.19", "npm_package_license": "ISC", "npm_config_strict_ssl": "true", "QT_IM_MODULE": "ibus", "npm_package_dependencies_sqlite_electron": "^2.2.8", "npm_package_dependencies__floating_ui_react": "^0.19.2", "PWD": "/home/v/Projects/LWT-React", "npm_execpath": "/home/v/.nvm/versions/node/v19.2.0/lib/node_modules/yarn/bin/yarn.js", "XDG_CONFIG_DIRS": "/etc/xdg/xdg-ubuntu-xorg:/etc/xdg", "NVM_CD_FLAGS": "", "XDG_DATA_DIRS": "/usr/share/ubuntu-xorg:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop", "npm_package_devDependencies_electron": "^27.1.2", "npm_package_dependencies_react_split_pane": "^0.1.92", "npm_package_dependencies_react_modal": "^3.16.1", "npm_package_author_name": "v", "npm_package_dependencies_util": "^0.12.5", "npm_package_dependencies_styled_components": "^5.3.6", "npm_config_save_prefix": "^", "npm_config_ignore_optional": "", "npm_package_scripts_preview": "vite preview", "VTE_VERSION": "6800", "npm_package_browser_assert": "false", "npm_package_dependencies_typescript": "^5.0.2", "INIT_CWD": "/home/v/Projects/LWT-React", "npm_package_devDependencies__types_webpack": "^5.28.0", "npm_package_dependencies_react": "^18.2.0", "npm_package_scripts_build_localstorage": "VITE_LWT_PERSIST=LOCALSTORAGE tsc && electron-vite build", "NODE_ENV_ELECTRON_VITE": "production", "NODE_ENV": "production", "ELECTRON_MAJOR_VER": "27" }.REACT_APP_SC_DISABLE_SPEEDY && "" !== { "LESSOPEN": "| /usr/bin/lesspipe %s", "npm_package_devDependencies_ts_node": "^10.4.0", "npm_package_dependencies_papaparse": "^5.4.1", "npm_package_devDependencies__types_webpack_dev_server": "^4.3.1", "USER": "v", "npm_package_devDependencies_webpack_cli": "^4.9.1", "npm_package_dependencies_node_gzip": "^1.1.2", "npm_config_version_commit_hooks": "true", "npm_config_user_agent": "yarn/1.22.19 npm/? node/v19.2.0 linux x64", "npm_package_scripts_build_electron_rest": "VITE_LWT_PERSIST=REST tsc && electron-vite build", "npm_config_bin_links": "true", "XDG_SESSION_TYPE": "x11", "npm_node_execpath": "/home/v/.nvm/versions/node/v19.2.0/bin/node", "npm_package_scripts_dev_electron_localstorage": "VITE_LWT_PERSIST=LOCALSTORAGE electron-vite dev -w", "npm_config_init_version": "1.0.0", "SHLVL": "1", "npm_package_dependencies_rxjs": "^7.4.0", "npm_package_dependencies_process": "^0.11.10", "HOME": "/home/v", "OLDPWD": "/home/v/Projects/LabelMaker", "npm_package_devDependencies__typescript_eslint_parser": "^6.0.0", "npm_package_dependencies_superstruct": "^1.0.3", "npm_package_scripts_dev_electron_sqlite": "VITE_LWT_PERSIST=SQLITE electron-vite dev -w", "DESKTOP_SESSION": "ubuntu-xorg", "NVM_BIN": "/home/v/.nvm/versions/node/v19.2.0/bin", "npm_package_dependencies_stream": "^0.0.2", "NVM_INC": "/home/v/.nvm/versions/node/v19.2.0/include/node", "npm_package_dependencies_browserify_zlib": "^0.2.0", "npm_config_init_license": "MIT", "GNOME_SHELL_SESSION_MODE": "ubuntu", "GTK_MODULES": "gail:atk-bridge", "YARN_WRAP_OUTPUT": "false", "npm_package_devDependencies__types_electron": "^1.6.10", "npm_package_dependencies__types_react_modal": "^3.16.3", "npm_package_scripts_dev_rest": "VITE_LWT_PERSIST=REST vite", "npm_config_version_tag_prefix": "v", "SYSTEMD_EXEC_PID": "29480", "DBUS_SESSION_BUS_ADDRESS": "unix:path=/run/user/1000/bus", "npm_package_devDependencies_eslint_plugin_react_hooks": "^4.6.0", "npm_package_dependencies__datorama_akita": "^6.2.4", "COLORTERM": "truecolor", "npm_package_devDependencies_babel_loader": "^8.2.3", "npm_package_dependencies_react_router_dom": "^6.18.0", "npm_package_dependencies_rambdax": "^9.0.0", "npm_package_description": "LWT React Port", "NVM_DIR": "/home/v/.nvm", "npm_package_readmeFilename": "README.md", "npm_package_devDependencies__types_react_dom": "^18.2.7", "npm_package_devDependencies__babel_preset_env": "^7.16.0", "npm_package_dependencies_sqlite": "^5.1.1", "npm_package_dependencies_assert": "^2.0.0", "npm_package_homepage": "http://.", "MANDATORY_PATH": "/usr/share/gconf/ubuntu-xorg.mandatory.path", "npm_package_devDependencies_prettier": "^2.4.1", "npm_package_devDependencies__types_sqlite3": "^3.1.11", "npm_package_devDependencies__babel_runtime": "^7.16.3", "npm_package_devDependencies__babel_plugin_transform_runtime": "^7.16.0", "npm_package_scripts_mapIcons": "rm src/icons/index.ts && npx tsc cli/createIconMap.ts && node cli/createIconMap.js", "GTK_IM_MODULE": "ibus", "LOGNAME": "v", "npm_package_devDependencies__vitejs_plugin_react": "^4.1.1", "npm_package_devDependencies__babel_preset_typescript": "^7.16.0", "_": "/home/v/.nvm/versions/node/v19.2.0/bin/yarn", "npm_package_devDependencies__babel_preset_react": "^7.16.0", "npm_package_scripts_preview_electron": "electron-vite preview", "XDG_SESSION_CLASS": "user", "DEFAULTS_PATH": "/usr/share/gconf/ubuntu-xorg.default.path", "npm_package_devDependencies__typescript_eslint_eslint_plugin": "^6.0.0", "npm_package_devDependencies__babel_plugin_proposal_decorators": "^7.16.0", "npm_package_scripts_lint": "eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0", "npm_config_registry": "https://registry.yarnpkg.com", "USERNAME": "v", "TERM": "xterm-256color", "npm_package_devDependencies__babel_core": "^7.16.0", "npm_package_scripts_build_electron_localstorage": "VITE_LWT_PERSIST=LOCALSTORAGE tsc && electron-vite build", "GNOME_DESKTOP_SESSION_ID": "this-is-deprecated", "npm_package_devDependencies_html_webpack_plugin": "^5.5.0", "npm_package_devDependencies_eslint_plugin_react_refresh": "^0.4.3", "npm_package_scripts_start": "webpack-dev-server --mode development", "npm_config_ignore_scripts": "", "WINDOWPATH": "2", "npm_package_scripts_build_electron_sqlite": "VITE_LWT_PERSIST=SQLITE tsc && electron-vite build", "PATH": "/tmp/yarn--1701238006420-0.22155935637369373:/home/v/Projects/LWT-React/node_modules/.bin:/home/v/.config/yarn/link/node_modules/.bin:/home/v/.yarn/bin:/home/v/.nvm/versions/node/v19.2.0/libexec/lib/node_modules/npm/bin/node-gyp-bin:/home/v/.nvm/versions/node/v19.2.0/lib/node_modules/npm/bin/node-gyp-bin:/home/v/.nvm/versions/node/v19.2.0/bin/node_modules/npm/bin/node-gyp-bin:/home/v/.nvm/versions/node/v19.2.0/bin:/home/v/.cargo/bin:/home/v/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin", "NODE": "/home/v/.nvm/versions/node/v19.2.0/bin/node", "SESSION_MANAGER": "local/v-NUC8i3BEH:@/tmp/.ICE-unix/7924,unix/v-NUC8i3BEH:/tmp/.ICE-unix/7924", "npm_package_name": "lwt-react", "XDG_MENU_PREFIX": "gnome-", "GNOME_TERMINAL_SCREEN": "/org/gnome/Terminal/screen/1f565d45_dae5_452c_82b9_317fea2cb63e", "XDG_RUNTIME_DIR": "/run/user/1000", "npm_package_dependencies_zlib": "^1.0.5", "DISPLAY": ":0", "npm_package_devDependencies_electron_vite": "^1.0.29", "npm_package_devDependencies_electron_packager": "^17.1.2", "npm_package_scripts_build_rest": "VITE_LWT_PERSIST=REST tsc && vite build", "LANG": "en_US.UTF-8", "XDG_CURRENT_DESKTOP": "ubuntu:GNOME", "npm_package_devDependencies_webpack": "^5.64.0", "npm_package_devDependencies_eslint": "^8.45.0", "npm_package_devDependencies__types_styled_components": "^5.1.26", "npm_package_dependencies_react_dom": "^18.2.0", "npm_package_scripts_dev_localstorage": "VITE_LWT_PERSIST=LOCALSTORAGE vite", "XMODIFIERS": "@im=ibus", "XDG_SESSION_DESKTOP": "ubuntu-xorg", "XAUTHORITY": "/run/user/1000/gdm/Xauthority", "LS_COLORS": "rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:", "GNOME_TERMINAL_SERVICE": ":1.160", "npm_package_dependencies_sqlite3": "^5.1.6", "npm_package_main": "./out/main/index.js", "SSH_AGENT_LAUNCHER": "gnome-keyring", "SSH_AUTH_SOCK": "/run/user/1000/keyring/ssh", "npm_package_devDependencies_webpack_dev_server": "^4.4.0", "npm_package_scripts_test": 'echo "Error: no test specified" && exit 1', "npm_config_version_git_message": "v%s", "SHELL": "/bin/bash", "npm_lifecycle_event": "electron-vite", "npm_package_devDependencies__types_react": "^18.2.15", "npm_package_version": "1.0.0", "QT_ACCESSIBILITY": "1", "GDMSESSION": "ubuntu-xorg", "npm_config_argv": '{"remain":[],"cooked":["run","electron-vite"],"original":["run","electron-vite","build"]}', "npm_package_devDependencies__types_papaparse": "^5.3.13", "npm_package_dependencies_buffer": "^6.0.3", "npm_package_scripts_dev_electron_rest": "VITE_LWT_PERSIST=REST electron-vite dev -w", "LESSCLOSE": "/usr/bin/lesspipe %s %s", "npm_package_dependencies_vite": "^4.5.0", "npm_package_devDependencies__types_node_gzip": "^1.1.0", "npm_config_version_git_tag": "true", "npm_config_version_git_sign": "", "GPG_AGENT_INFO": "/run/user/1000/gnupg/S.gpg-agent:0:1", "npm_package_dependencies_yarn": "^1.22.19", "npm_package_license": "ISC", "npm_config_strict_ssl": "true", "QT_IM_MODULE": "ibus", "npm_package_dependencies_sqlite_electron": "^2.2.8", "npm_package_dependencies__floating_ui_react": "^0.19.2", "PWD": "/home/v/Projects/LWT-React", "npm_execpath": "/home/v/.nvm/versions/node/v19.2.0/lib/node_modules/yarn/bin/yarn.js", "XDG_CONFIG_DIRS": "/etc/xdg/xdg-ubuntu-xorg:/etc/xdg", "NVM_CD_FLAGS": "", "XDG_DATA_DIRS": "/usr/share/ubuntu-xorg:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop", "npm_package_devDependencies_electron": "^27.1.2", "npm_package_dependencies_react_split_pane": "^0.1.92", "npm_package_dependencies_react_modal": "^3.16.1", "npm_package_author_name": "v", "npm_package_dependencies_util": "^0.12.5", "npm_package_dependencies_styled_components": "^5.3.6", "npm_config_save_prefix": "^", "npm_config_ignore_optional": "", "npm_package_scripts_preview": "vite preview", "VTE_VERSION": "6800", "npm_package_browser_assert": "false", "npm_package_dependencies_typescript": "^5.0.2", "INIT_CWD": "/home/v/Projects/LWT-React", "npm_package_devDependencies__types_webpack": "^5.28.0", "npm_package_dependencies_react": "^18.2.0", "npm_package_scripts_build_localstorage": "VITE_LWT_PERSIST=LOCALSTORAGE tsc && electron-vite build", "NODE_ENV_ELECTRON_VITE": "production", "NODE_ENV": "production", "ELECTRON_MAJOR_VER": "27" }.REACT_APP_SC_DISABLE_SPEEDY ? "false" !== { "LESSOPEN": "| /usr/bin/lesspipe %s", "npm_package_devDependencies_ts_node": "^10.4.0", "npm_package_dependencies_papaparse": "^5.4.1", "npm_package_devDependencies__types_webpack_dev_server": "^4.3.1", "USER": "v", "npm_package_devDependencies_webpack_cli": "^4.9.1", "npm_package_dependencies_node_gzip": "^1.1.2", "npm_config_version_commit_hooks": "true", "npm_config_user_agent": "yarn/1.22.19 npm/? node/v19.2.0 linux x64", "npm_package_scripts_build_electron_rest": "VITE_LWT_PERSIST=REST tsc && electron-vite build", "npm_config_bin_links": "true", "XDG_SESSION_TYPE": "x11", "npm_node_execpath": "/home/v/.nvm/versions/node/v19.2.0/bin/node", "npm_package_scripts_dev_electron_localstorage": "VITE_LWT_PERSIST=LOCALSTORAGE electron-vite dev -w", "npm_config_init_version": "1.0.0", "SHLVL": "1", "npm_package_dependencies_rxjs": "^7.4.0", "npm_package_dependencies_process": "^0.11.10", "HOME": "/home/v", "OLDPWD": "/home/v/Projects/LabelMaker", "npm_package_devDependencies__typescript_eslint_parser": "^6.0.0", "npm_package_dependencies_superstruct": "^1.0.3", "npm_package_scripts_dev_electron_sqlite": "VITE_LWT_PERSIST=SQLITE electron-vite dev -w", "DESKTOP_SESSION": "ubuntu-xorg", "NVM_BIN": "/home/v/.nvm/versions/node/v19.2.0/bin", "npm_package_dependencies_stream": "^0.0.2", "NVM_INC": "/home/v/.nvm/versions/node/v19.2.0/include/node", "npm_package_dependencies_browserify_zlib": "^0.2.0", "npm_config_init_license": "MIT", "GNOME_SHELL_SESSION_MODE": "ubuntu", "GTK_MODULES": "gail:atk-bridge", "YARN_WRAP_OUTPUT": "false", "npm_package_devDependencies__types_electron": "^1.6.10", "npm_package_dependencies__types_react_modal": "^3.16.3", "npm_package_scripts_dev_rest": "VITE_LWT_PERSIST=REST vite", "npm_config_version_tag_prefix": "v", "SYSTEMD_EXEC_PID": "29480", "DBUS_SESSION_BUS_ADDRESS": "unix:path=/run/user/1000/bus", "npm_package_devDependencies_eslint_plugin_react_hooks": "^4.6.0", "npm_package_dependencies__datorama_akita": "^6.2.4", "COLORTERM": "truecolor", "npm_package_devDependencies_babel_loader": "^8.2.3", "npm_package_dependencies_react_router_dom": "^6.18.0", "npm_package_dependencies_rambdax": "^9.0.0", "npm_package_description": "LWT React Port", "NVM_DIR": "/home/v/.nvm", "npm_package_readmeFilename": "README.md", "npm_package_devDependencies__types_react_dom": "^18.2.7", "npm_package_devDependencies__babel_preset_env": "^7.16.0", "npm_package_dependencies_sqlite": "^5.1.1", "npm_package_dependencies_assert": "^2.0.0", "npm_package_homepage": "http://.", "MANDATORY_PATH": "/usr/share/gconf/ubuntu-xorg.mandatory.path", "npm_package_devDependencies_prettier": "^2.4.1", "npm_package_devDependencies__types_sqlite3": "^3.1.11", "npm_package_devDependencies__babel_runtime": "^7.16.3", "npm_package_devDependencies__babel_plugin_transform_runtime": "^7.16.0", "npm_package_scripts_mapIcons": "rm src/icons/index.ts && npx tsc cli/createIconMap.ts && node cli/createIconMap.js", "GTK_IM_MODULE": "ibus", "LOGNAME": "v", "npm_package_devDependencies__vitejs_plugin_react": "^4.1.1", "npm_package_devDependencies__babel_preset_typescript": "^7.16.0", "_": "/home/v/.nvm/versions/node/v19.2.0/bin/yarn", "npm_package_devDependencies__babel_preset_react": "^7.16.0", "npm_package_scripts_preview_electron": "electron-vite preview", "XDG_SESSION_CLASS": "user", "DEFAULTS_PATH": "/usr/share/gconf/ubuntu-xorg.default.path", "npm_package_devDependencies__typescript_eslint_eslint_plugin": "^6.0.0", "npm_package_devDependencies__babel_plugin_proposal_decorators": "^7.16.0", "npm_package_scripts_lint": "eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0", "npm_config_registry": "https://registry.yarnpkg.com", "USERNAME": "v", "TERM": "xterm-256color", "npm_package_devDependencies__babel_core": "^7.16.0", "npm_package_scripts_build_electron_localstorage": "VITE_LWT_PERSIST=LOCALSTORAGE tsc && electron-vite build", "GNOME_DESKTOP_SESSION_ID": "this-is-deprecated", "npm_package_devDependencies_html_webpack_plugin": "^5.5.0", "npm_package_devDependencies_eslint_plugin_react_refresh": "^0.4.3", "npm_package_scripts_start": "webpack-dev-server --mode development", "npm_config_ignore_scripts": "", "WINDOWPATH": "2", "npm_package_scripts_build_electron_sqlite": "VITE_LWT_PERSIST=SQLITE tsc && electron-vite build", "PATH": "/tmp/yarn--1701238006420-0.22155935637369373:/home/v/Projects/LWT-React/node_modules/.bin:/home/v/.config/yarn/link/node_modules/.bin:/home/v/.yarn/bin:/home/v/.nvm/versions/node/v19.2.0/libexec/lib/node_modules/npm/bin/node-gyp-bin:/home/v/.nvm/versions/node/v19.2.0/lib/node_modules/npm/bin/node-gyp-bin:/home/v/.nvm/versions/node/v19.2.0/bin/node_modules/npm/bin/node-gyp-bin:/home/v/.nvm/versions/node/v19.2.0/bin:/home/v/.cargo/bin:/home/v/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin", "NODE": "/home/v/.nvm/versions/node/v19.2.0/bin/node", "SESSION_MANAGER": "local/v-NUC8i3BEH:@/tmp/.ICE-unix/7924,unix/v-NUC8i3BEH:/tmp/.ICE-unix/7924", "npm_package_name": "lwt-react", "XDG_MENU_PREFIX": "gnome-", "GNOME_TERMINAL_SCREEN": "/org/gnome/Terminal/screen/1f565d45_dae5_452c_82b9_317fea2cb63e", "XDG_RUNTIME_DIR": "/run/user/1000", "npm_package_dependencies_zlib": "^1.0.5", "DISPLAY": ":0", "npm_package_devDependencies_electron_vite": "^1.0.29", "npm_package_devDependencies_electron_packager": "^17.1.2", "npm_package_scripts_build_rest": "VITE_LWT_PERSIST=REST tsc && vite build", "LANG": "en_US.UTF-8", "XDG_CURRENT_DESKTOP": "ubuntu:GNOME", "npm_package_devDependencies_webpack": "^5.64.0", "npm_package_devDependencies_eslint": "^8.45.0", "npm_package_devDependencies__types_styled_components": "^5.1.26", "npm_package_dependencies_react_dom": "^18.2.0", "npm_package_scripts_dev_localstorage": "VITE_LWT_PERSIST=LOCALSTORAGE vite", "XMODIFIERS": "@im=ibus", "XDG_SESSION_DESKTOP": "ubuntu-xorg", "XAUTHORITY": "/run/user/1000/gdm/Xauthority", "LS_COLORS": "rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:", "GNOME_TERMINAL_SERVICE": ":1.160", "npm_package_dependencies_sqlite3": "^5.1.6", "npm_package_main": "./out/main/index.js", "SSH_AGENT_LAUNCHER": "gnome-keyring", "SSH_AUTH_SOCK": "/run/user/1000/keyring/ssh", "npm_package_devDependencies_webpack_dev_server": "^4.4.0", "npm_package_scripts_test": 'echo "Error: no test specified" && exit 1', "npm_config_version_git_message": "v%s", "SHELL": "/bin/bash", "npm_lifecycle_event": "electron-vite", "npm_package_devDependencies__types_react": "^18.2.15", "npm_package_version": "1.0.0", "QT_ACCESSIBILITY": "1", "GDMSESSION": "ubuntu-xorg", "npm_config_argv": '{"remain":[],"cooked":["run","electron-vite"],"original":["run","electron-vite","build"]}', "npm_package_devDependencies__types_papaparse": "^5.3.13", "npm_package_dependencies_buffer": "^6.0.3", "npm_package_scripts_dev_electron_rest": "VITE_LWT_PERSIST=REST electron-vite dev -w", "LESSCLOSE": "/usr/bin/lesspipe %s %s", "npm_package_dependencies_vite": "^4.5.0", "npm_package_devDependencies__types_node_gzip": "^1.1.0", "npm_config_version_git_tag": "true", "npm_config_version_git_sign": "", "GPG_AGENT_INFO": "/run/user/1000/gnupg/S.gpg-agent:0:1", "npm_package_dependencies_yarn": "^1.22.19", "npm_package_license": "ISC", "npm_config_strict_ssl": "true", "QT_IM_MODULE": "ibus", "npm_package_dependencies_sqlite_electron": "^2.2.8", "npm_package_dependencies__floating_ui_react": "^0.19.2", "PWD": "/home/v/Projects/LWT-React", "npm_execpath": "/home/v/.nvm/versions/node/v19.2.0/lib/node_modules/yarn/bin/yarn.js", "XDG_CONFIG_DIRS": "/etc/xdg/xdg-ubuntu-xorg:/etc/xdg", "NVM_CD_FLAGS": "", "XDG_DATA_DIRS": "/usr/share/ubuntu-xorg:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop", "npm_package_devDependencies_electron": "^27.1.2", "npm_package_dependencies_react_split_pane": "^0.1.92", "npm_package_dependencies_react_modal": "^3.16.1", "npm_package_author_name": "v", "npm_package_dependencies_util": "^0.12.5", "npm_package_dependencies_styled_components": "^5.3.6", "npm_config_save_prefix": "^", "npm_config_ignore_optional": "", "npm_package_scripts_preview": "vite preview", "VTE_VERSION": "6800", "npm_package_browser_assert": "false", "npm_package_dependencies_typescript": "^5.0.2", "INIT_CWD": "/home/v/Projects/LWT-React", "npm_package_devDependencies__types_webpack": "^5.28.0", "npm_package_dependencies_react": "^18.2.0", "npm_package_scripts_build_localstorage": "VITE_LWT_PERSIST=LOCALSTORAGE tsc && electron-vite build", "NODE_ENV_ELECTRON_VITE": "production", "NODE_ENV": "production", "ELECTRON_MAJOR_VER": "27" }.REACT_APP_SC_DISABLE_SPEEDY && { "LESSOPEN": "| /usr/bin/lesspipe %s", "npm_package_devDependencies_ts_node": "^10.4.0", "npm_package_dependencies_papaparse": "^5.4.1", "npm_package_devDependencies__types_webpack_dev_server": "^4.3.1", "USER": "v", "npm_package_devDependencies_webpack_cli": "^4.9.1", "npm_package_dependencies_node_gzip": "^1.1.2", "npm_config_version_commit_hooks": "true", "npm_config_user_agent": "yarn/1.22.19 npm/? node/v19.2.0 linux x64", "npm_package_scripts_build_electron_rest": "VITE_LWT_PERSIST=REST tsc && electron-vite build", "npm_config_bin_links": "true", "XDG_SESSION_TYPE": "x11", "npm_node_execpath": "/home/v/.nvm/versions/node/v19.2.0/bin/node", "npm_package_scripts_dev_electron_localstorage": "VITE_LWT_PERSIST=LOCALSTORAGE electron-vite dev -w", "npm_config_init_version": "1.0.0", "SHLVL": "1", "npm_package_dependencies_rxjs": "^7.4.0", "npm_package_dependencies_process": "^0.11.10", "HOME": "/home/v", "OLDPWD": "/home/v/Projects/LabelMaker", "npm_package_devDependencies__typescript_eslint_parser": "^6.0.0", "npm_package_dependencies_superstruct": "^1.0.3", "npm_package_scripts_dev_electron_sqlite": "VITE_LWT_PERSIST=SQLITE electron-vite dev -w", "DESKTOP_SESSION": "ubuntu-xorg", "NVM_BIN": "/home/v/.nvm/versions/node/v19.2.0/bin", "npm_package_dependencies_stream": "^0.0.2", "NVM_INC": "/home/v/.nvm/versions/node/v19.2.0/include/node", "npm_package_dependencies_browserify_zlib": "^0.2.0", "npm_config_init_license": "MIT", "GNOME_SHELL_SESSION_MODE": "ubuntu", "GTK_MODULES": "gail:atk-bridge", "YARN_WRAP_OUTPUT": "false", "npm_package_devDependencies__types_electron": "^1.6.10", "npm_package_dependencies__types_react_modal": "^3.16.3", "npm_package_scripts_dev_rest": "VITE_LWT_PERSIST=REST vite", "npm_config_version_tag_prefix": "v", "SYSTEMD_EXEC_PID": "29480", "DBUS_SESSION_BUS_ADDRESS": "unix:path=/run/user/1000/bus", "npm_package_devDependencies_eslint_plugin_react_hooks": "^4.6.0", "npm_package_dependencies__datorama_akita": "^6.2.4", "COLORTERM": "truecolor", "npm_package_devDependencies_babel_loader": "^8.2.3", "npm_package_dependencies_react_router_dom": "^6.18.0", "npm_package_dependencies_rambdax": "^9.0.0", "npm_package_description": "LWT React Port", "NVM_DIR": "/home/v/.nvm", "npm_package_readmeFilename": "README.md", "npm_package_devDependencies__types_react_dom": "^18.2.7", "npm_package_devDependencies__babel_preset_env": "^7.16.0", "npm_package_dependencies_sqlite": "^5.1.1", "npm_package_dependencies_assert": "^2.0.0", "npm_package_homepage": "http://.", "MANDATORY_PATH": "/usr/share/gconf/ubuntu-xorg.mandatory.path", "npm_package_devDependencies_prettier": "^2.4.1", "npm_package_devDependencies__types_sqlite3": "^3.1.11", "npm_package_devDependencies__babel_runtime": "^7.16.3", "npm_package_devDependencies__babel_plugin_transform_runtime": "^7.16.0", "npm_package_scripts_mapIcons": "rm src/icons/index.ts && npx tsc cli/createIconMap.ts && node cli/createIconMap.js", "GTK_IM_MODULE": "ibus", "LOGNAME": "v", "npm_package_devDependencies__vitejs_plugin_react": "^4.1.1", "npm_package_devDependencies__babel_preset_typescript": "^7.16.0", "_": "/home/v/.nvm/versions/node/v19.2.0/bin/yarn", "npm_package_devDependencies__babel_preset_react": "^7.16.0", "npm_package_scripts_preview_electron": "electron-vite preview", "XDG_SESSION_CLASS": "user", "DEFAULTS_PATH": "/usr/share/gconf/ubuntu-xorg.default.path", "npm_package_devDependencies__typescript_eslint_eslint_plugin": "^6.0.0", "npm_package_devDependencies__babel_plugin_proposal_decorators": "^7.16.0", "npm_package_scripts_lint": "eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0", "npm_config_registry": "https://registry.yarnpkg.com", "USERNAME": "v", "TERM": "xterm-256color", "npm_package_devDependencies__babel_core": "^7.16.0", "npm_package_scripts_build_electron_localstorage": "VITE_LWT_PERSIST=LOCALSTORAGE tsc && electron-vite build", "GNOME_DESKTOP_SESSION_ID": "this-is-deprecated", "npm_package_devDependencies_html_webpack_plugin": "^5.5.0", "npm_package_devDependencies_eslint_plugin_react_refresh": "^0.4.3", "npm_package_scripts_start": "webpack-dev-server --mode development", "npm_config_ignore_scripts": "", "WINDOWPATH": "2", "npm_package_scripts_build_electron_sqlite": "VITE_LWT_PERSIST=SQLITE tsc && electron-vite build", "PATH": "/tmp/yarn--1701238006420-0.22155935637369373:/home/v/Projects/LWT-React/node_modules/.bin:/home/v/.config/yarn/link/node_modules/.bin:/home/v/.yarn/bin:/home/v/.nvm/versions/node/v19.2.0/libexec/lib/node_modules/npm/bin/node-gyp-bin:/home/v/.nvm/versions/node/v19.2.0/lib/node_modules/npm/bin/node-gyp-bin:/home/v/.nvm/versions/node/v19.2.0/bin/node_modules/npm/bin/node-gyp-bin:/home/v/.nvm/versions/node/v19.2.0/bin:/home/v/.cargo/bin:/home/v/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin", "NODE": "/home/v/.nvm/versions/node/v19.2.0/bin/node", "SESSION_MANAGER": "local/v-NUC8i3BEH:@/tmp/.ICE-unix/7924,unix/v-NUC8i3BEH:/tmp/.ICE-unix/7924", "npm_package_name": "lwt-react", "XDG_MENU_PREFIX": "gnome-", "GNOME_TERMINAL_SCREEN": "/org/gnome/Terminal/screen/1f565d45_dae5_452c_82b9_317fea2cb63e", "XDG_RUNTIME_DIR": "/run/user/1000", "npm_package_dependencies_zlib": "^1.0.5", "DISPLAY": ":0", "npm_package_devDependencies_electron_vite": "^1.0.29", "npm_package_devDependencies_electron_packager": "^17.1.2", "npm_package_scripts_build_rest": "VITE_LWT_PERSIST=REST tsc && vite build", "LANG": "en_US.UTF-8", "XDG_CURRENT_DESKTOP": "ubuntu:GNOME", "npm_package_devDependencies_webpack": "^5.64.0", "npm_package_devDependencies_eslint": "^8.45.0", "npm_package_devDependencies__types_styled_components": "^5.1.26", "npm_package_dependencies_react_dom": "^18.2.0", "npm_package_scripts_dev_localstorage": "VITE_LWT_PERSIST=LOCALSTORAGE vite", "XMODIFIERS": "@im=ibus", "XDG_SESSION_DESKTOP": "ubuntu-xorg", "XAUTHORITY": "/run/user/1000/gdm/Xauthority", "LS_COLORS": "rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:", "GNOME_TERMINAL_SERVICE": ":1.160", "npm_package_dependencies_sqlite3": "^5.1.6", "npm_package_main": "./out/main/index.js", "SSH_AGENT_LAUNCHER": "gnome-keyring", "SSH_AUTH_SOCK": "/run/user/1000/keyring/ssh", "npm_package_devDependencies_webpack_dev_server": "^4.4.0", "npm_package_scripts_test": 'echo "Error: no test specified" && exit 1', "npm_config_version_git_message": "v%s", "SHELL": "/bin/bash", "npm_lifecycle_event": "electron-vite", "npm_package_devDependencies__types_react": "^18.2.15", "npm_package_version": "1.0.0", "QT_ACCESSIBILITY": "1", "GDMSESSION": "ubuntu-xorg", "npm_config_argv": '{"remain":[],"cooked":["run","electron-vite"],"original":["run","electron-vite","build"]}', "npm_package_devDependencies__types_papaparse": "^5.3.13", "npm_package_dependencies_buffer": "^6.0.3", "npm_package_scripts_dev_electron_rest": "VITE_LWT_PERSIST=REST electron-vite dev -w", "LESSCLOSE": "/usr/bin/lesspipe %s %s", "npm_package_dependencies_vite": "^4.5.0", "npm_package_devDependencies__types_node_gzip": "^1.1.0", "npm_config_version_git_tag": "true", "npm_config_version_git_sign": "", "GPG_AGENT_INFO": "/run/user/1000/gnupg/S.gpg-agent:0:1", "npm_package_dependencies_yarn": "^1.22.19", "npm_package_license": "ISC", "npm_config_strict_ssl": "true", "QT_IM_MODULE": "ibus", "npm_package_dependencies_sqlite_electron": "^2.2.8", "npm_package_dependencies__floating_ui_react": "^0.19.2", "PWD": "/home/v/Projects/LWT-React", "npm_execpath": "/home/v/.nvm/versions/node/v19.2.0/lib/node_modules/yarn/bin/yarn.js", "XDG_CONFIG_DIRS": "/etc/xdg/xdg-ubuntu-xorg:/etc/xdg", "NVM_CD_FLAGS": "", "XDG_DATA_DIRS": "/usr/share/ubuntu-xorg:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop", "npm_package_devDependencies_electron": "^27.1.2", "npm_package_dependencies_react_split_pane": "^0.1.92", "npm_package_dependencies_react_modal": "^3.16.1", "npm_package_author_name": "v", "npm_package_dependencies_util": "^0.12.5", "npm_package_dependencies_styled_components": "^5.3.6", "npm_config_save_prefix": "^", "npm_config_ignore_optional": "", "npm_package_scripts_preview": "vite preview", "VTE_VERSION": "6800", "npm_package_browser_assert": "false", "npm_package_dependencies_typescript": "^5.0.2", "INIT_CWD": "/home/v/Projects/LWT-React", "npm_package_devDependencies__types_webpack": "^5.28.0", "npm_package_dependencies_react": "^18.2.0", "npm_package_scripts_build_localstorage": "VITE_LWT_PERSIST=LOCALSTORAGE tsc && electron-vite build", "NODE_ENV_ELECTRON_VITE": "production", "NODE_ENV": "production", "ELECTRON_MAJOR_VER": "27" }.REACT_APP_SC_DISABLE_SPEEDY : void 0 !== { "LESSOPEN": "| /usr/bin/lesspipe %s", "npm_package_devDependencies_ts_node": "^10.4.0", "npm_package_dependencies_papaparse": "^5.4.1", "npm_package_devDependencies__types_webpack_dev_server": "^4.3.1", "USER": "v", "npm_package_devDependencies_webpack_cli": "^4.9.1", "npm_package_dependencies_node_gzip": "^1.1.2", "npm_config_version_commit_hooks": "true", "npm_config_user_agent": "yarn/1.22.19 npm/? node/v19.2.0 linux x64", "npm_package_scripts_build_electron_rest": "VITE_LWT_PERSIST=REST tsc && electron-vite build", "npm_config_bin_links": "true", "XDG_SESSION_TYPE": "x11", "npm_node_execpath": "/home/v/.nvm/versions/node/v19.2.0/bin/node", "npm_package_scripts_dev_electron_localstorage": "VITE_LWT_PERSIST=LOCALSTORAGE electron-vite dev -w", "npm_config_init_version": "1.0.0", "SHLVL": "1", "npm_package_dependencies_rxjs": "^7.4.0", "npm_package_dependencies_process": "^0.11.10", "HOME": "/home/v", "OLDPWD": "/home/v/Projects/LabelMaker", "npm_package_devDependencies__typescript_eslint_parser": "^6.0.0", "npm_package_dependencies_superstruct": "^1.0.3", "npm_package_scripts_dev_electron_sqlite": "VITE_LWT_PERSIST=SQLITE electron-vite dev -w", "DESKTOP_SESSION": "ubuntu-xorg", "NVM_BIN": "/home/v/.nvm/versions/node/v19.2.0/bin", "npm_package_dependencies_stream": "^0.0.2", "NVM_INC": "/home/v/.nvm/versions/node/v19.2.0/include/node", "npm_package_dependencies_browserify_zlib": "^0.2.0", "npm_config_init_license": "MIT", "GNOME_SHELL_SESSION_MODE": "ubuntu", "GTK_MODULES": "gail:atk-bridge", "YARN_WRAP_OUTPUT": "false", "npm_package_devDependencies__types_electron": "^1.6.10", "npm_package_dependencies__types_react_modal": "^3.16.3", "npm_package_scripts_dev_rest": "VITE_LWT_PERSIST=REST vite", "npm_config_version_tag_prefix": "v", "SYSTEMD_EXEC_PID": "29480", "DBUS_SESSION_BUS_ADDRESS": "unix:path=/run/user/1000/bus", "npm_package_devDependencies_eslint_plugin_react_hooks": "^4.6.0", "npm_package_dependencies__datorama_akita": "^6.2.4", "COLORTERM": "truecolor", "npm_package_devDependencies_babel_loader": "^8.2.3", "npm_package_dependencies_react_router_dom": "^6.18.0", "npm_package_dependencies_rambdax": "^9.0.0", "npm_package_description": "LWT React Port", "NVM_DIR": "/home/v/.nvm", "npm_package_readmeFilename": "README.md", "npm_package_devDependencies__types_react_dom": "^18.2.7", "npm_package_devDependencies__babel_preset_env": "^7.16.0", "npm_package_dependencies_sqlite": "^5.1.1", "npm_package_dependencies_assert": "^2.0.0", "npm_package_homepage": "http://.", "MANDATORY_PATH": "/usr/share/gconf/ubuntu-xorg.mandatory.path", "npm_package_devDependencies_prettier": "^2.4.1", "npm_package_devDependencies__types_sqlite3": "^3.1.11", "npm_package_devDependencies__babel_runtime": "^7.16.3", "npm_package_devDependencies__babel_plugin_transform_runtime": "^7.16.0", "npm_package_scripts_mapIcons": "rm src/icons/index.ts && npx tsc cli/createIconMap.ts && node cli/createIconMap.js", "GTK_IM_MODULE": "ibus", "LOGNAME": "v", "npm_package_devDependencies__vitejs_plugin_react": "^4.1.1", "npm_package_devDependencies__babel_preset_typescript": "^7.16.0", "_": "/home/v/.nvm/versions/node/v19.2.0/bin/yarn", "npm_package_devDependencies__babel_preset_react": "^7.16.0", "npm_package_scripts_preview_electron": "electron-vite preview", "XDG_SESSION_CLASS": "user", "DEFAULTS_PATH": "/usr/share/gconf/ubuntu-xorg.default.path", "npm_package_devDependencies__typescript_eslint_eslint_plugin": "^6.0.0", "npm_package_devDependencies__babel_plugin_proposal_decorators": "^7.16.0", "npm_package_scripts_lint": "eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0", "npm_config_registry": "https://registry.yarnpkg.com", "USERNAME": "v", "TERM": "xterm-256color", "npm_package_devDependencies__babel_core": "^7.16.0", "npm_package_scripts_build_electron_localstorage": "VITE_LWT_PERSIST=LOCALSTORAGE tsc && electron-vite build", "GNOME_DESKTOP_SESSION_ID": "this-is-deprecated", "npm_package_devDependencies_html_webpack_plugin": "^5.5.0", "npm_package_devDependencies_eslint_plugin_react_refresh": "^0.4.3", "npm_package_scripts_start": "webpack-dev-server --mode development", "npm_config_ignore_scripts": "", "WINDOWPATH": "2", "npm_package_scripts_build_electron_sqlite": "VITE_LWT_PERSIST=SQLITE tsc && electron-vite build", "PATH": "/tmp/yarn--1701238006420-0.22155935637369373:/home/v/Projects/LWT-React/node_modules/.bin:/home/v/.config/yarn/link/node_modules/.bin:/home/v/.yarn/bin:/home/v/.nvm/versions/node/v19.2.0/libexec/lib/node_modules/npm/bin/node-gyp-bin:/home/v/.nvm/versions/node/v19.2.0/lib/node_modules/npm/bin/node-gyp-bin:/home/v/.nvm/versions/node/v19.2.0/bin/node_modules/npm/bin/node-gyp-bin:/home/v/.nvm/versions/node/v19.2.0/bin:/home/v/.cargo/bin:/home/v/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin", "NODE": "/home/v/.nvm/versions/node/v19.2.0/bin/node", "SESSION_MANAGER": "local/v-NUC8i3BEH:@/tmp/.ICE-unix/7924,unix/v-NUC8i3BEH:/tmp/.ICE-unix/7924", "npm_package_name": "lwt-react", "XDG_MENU_PREFIX": "gnome-", "GNOME_TERMINAL_SCREEN": "/org/gnome/Terminal/screen/1f565d45_dae5_452c_82b9_317fea2cb63e", "XDG_RUNTIME_DIR": "/run/user/1000", "npm_package_dependencies_zlib": "^1.0.5", "DISPLAY": ":0", "npm_package_devDependencies_electron_vite": "^1.0.29", "npm_package_devDependencies_electron_packager": "^17.1.2", "npm_package_scripts_build_rest": "VITE_LWT_PERSIST=REST tsc && vite build", "LANG": "en_US.UTF-8", "XDG_CURRENT_DESKTOP": "ubuntu:GNOME", "npm_package_devDependencies_webpack": "^5.64.0", "npm_package_devDependencies_eslint": "^8.45.0", "npm_package_devDependencies__types_styled_components": "^5.1.26", "npm_package_dependencies_react_dom": "^18.2.0", "npm_package_scripts_dev_localstorage": "VITE_LWT_PERSIST=LOCALSTORAGE vite", "XMODIFIERS": "@im=ibus", "XDG_SESSION_DESKTOP": "ubuntu-xorg", "XAUTHORITY": "/run/user/1000/gdm/Xauthority", "LS_COLORS": "rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:", "GNOME_TERMINAL_SERVICE": ":1.160", "npm_package_dependencies_sqlite3": "^5.1.6", "npm_package_main": "./out/main/index.js", "SSH_AGENT_LAUNCHER": "gnome-keyring", "SSH_AUTH_SOCK": "/run/user/1000/keyring/ssh", "npm_package_devDependencies_webpack_dev_server": "^4.4.0", "npm_package_scripts_test": 'echo "Error: no test specified" && exit 1', "npm_config_version_git_message": "v%s", "SHELL": "/bin/bash", "npm_lifecycle_event": "electron-vite", "npm_package_devDependencies__types_react": "^18.2.15", "npm_package_version": "1.0.0", "QT_ACCESSIBILITY": "1", "GDMSESSION": "ubuntu-xorg", "npm_config_argv": '{"remain":[],"cooked":["run","electron-vite"],"original":["run","electron-vite","build"]}', "npm_package_devDependencies__types_papaparse": "^5.3.13", "npm_package_dependencies_buffer": "^6.0.3", "npm_package_scripts_dev_electron_rest": "VITE_LWT_PERSIST=REST electron-vite dev -w", "LESSCLOSE": "/usr/bin/lesspipe %s %s", "npm_package_dependencies_vite": "^4.5.0", "npm_package_devDependencies__types_node_gzip": "^1.1.0", "npm_config_version_git_tag": "true", "npm_config_version_git_sign": "", "GPG_AGENT_INFO": "/run/user/1000/gnupg/S.gpg-agent:0:1", "npm_package_dependencies_yarn": "^1.22.19", "npm_package_license": "ISC", "npm_config_strict_ssl": "true", "QT_IM_MODULE": "ibus", "npm_package_dependencies_sqlite_electron": "^2.2.8", "npm_package_dependencies__floating_ui_react": "^0.19.2", "PWD": "/home/v/Projects/LWT-React", "npm_execpath": "/home/v/.nvm/versions/node/v19.2.0/lib/node_modules/yarn/bin/yarn.js", "XDG_CONFIG_DIRS": "/etc/xdg/xdg-ubuntu-xorg:/etc/xdg", "NVM_CD_FLAGS": "", "XDG_DATA_DIRS": "/usr/share/ubuntu-xorg:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop", "npm_package_devDependencies_electron": "^27.1.2", "npm_package_dependencies_react_split_pane": "^0.1.92", "npm_package_dependencies_react_modal": "^3.16.1", "npm_package_author_name": "v", "npm_package_dependencies_util": "^0.12.5", "npm_package_dependencies_styled_components": "^5.3.6", "npm_config_save_prefix": "^", "npm_config_ignore_optional": "", "npm_package_scripts_preview": "vite preview", "VTE_VERSION": "6800", "npm_package_browser_assert": "false", "npm_package_dependencies_typescript": "^5.0.2", "INIT_CWD": "/home/v/Projects/LWT-React", "npm_package_devDependencies__types_webpack": "^5.28.0", "npm_package_dependencies_react": "^18.2.0", "npm_package_scripts_build_localstorage": "VITE_LWT_PERSIST=LOCALSTORAGE tsc && electron-vite build", "NODE_ENV_ELECTRON_VITE": "production", "NODE_ENV": "production", "ELECTRON_MAJOR_VER": "27" }.SC_DISABLE_SPEEDY && "" !== { "LESSOPEN": "| /usr/bin/lesspipe %s", "npm_package_devDependencies_ts_node": "^10.4.0", "npm_package_dependencies_papaparse": "^5.4.1", "npm_package_devDependencies__types_webpack_dev_server": "^4.3.1", "USER": "v", "npm_package_devDependencies_webpack_cli": "^4.9.1", "npm_package_dependencies_node_gzip": "^1.1.2", "npm_config_version_commit_hooks": "true", "npm_config_user_agent": "yarn/1.22.19 npm/? node/v19.2.0 linux x64", "npm_package_scripts_build_electron_rest": "VITE_LWT_PERSIST=REST tsc && electron-vite build", "npm_config_bin_links": "true", "XDG_SESSION_TYPE": "x11", "npm_node_execpath": "/home/v/.nvm/versions/node/v19.2.0/bin/node", "npm_package_scripts_dev_electron_localstorage": "VITE_LWT_PERSIST=LOCALSTORAGE electron-vite dev -w", "npm_config_init_version": "1.0.0", "SHLVL": "1", "npm_package_dependencies_rxjs": "^7.4.0", "npm_package_dependencies_process": "^0.11.10", "HOME": "/home/v", "OLDPWD": "/home/v/Projects/LabelMaker", "npm_package_devDependencies__typescript_eslint_parser": "^6.0.0", "npm_package_dependencies_superstruct": "^1.0.3", "npm_package_scripts_dev_electron_sqlite": "VITE_LWT_PERSIST=SQLITE electron-vite dev -w", "DESKTOP_SESSION": "ubuntu-xorg", "NVM_BIN": "/home/v/.nvm/versions/node/v19.2.0/bin", "npm_package_dependencies_stream": "^0.0.2", "NVM_INC": "/home/v/.nvm/versions/node/v19.2.0/include/node", "npm_package_dependencies_browserify_zlib": "^0.2.0", "npm_config_init_license": "MIT", "GNOME_SHELL_SESSION_MODE": "ubuntu", "GTK_MODULES": "gail:atk-bridge", "YARN_WRAP_OUTPUT": "false", "npm_package_devDependencies__types_electron": "^1.6.10", "npm_package_dependencies__types_react_modal": "^3.16.3", "npm_package_scripts_dev_rest": "VITE_LWT_PERSIST=REST vite", "npm_config_version_tag_prefix": "v", "SYSTEMD_EXEC_PID": "29480", "DBUS_SESSION_BUS_ADDRESS": "unix:path=/run/user/1000/bus", "npm_package_devDependencies_eslint_plugin_react_hooks": "^4.6.0", "npm_package_dependencies__datorama_akita": "^6.2.4", "COLORTERM": "truecolor", "npm_package_devDependencies_babel_loader": "^8.2.3", "npm_package_dependencies_react_router_dom": "^6.18.0", "npm_package_dependencies_rambdax": "^9.0.0", "npm_package_description": "LWT React Port", "NVM_DIR": "/home/v/.nvm", "npm_package_readmeFilename": "README.md", "npm_package_devDependencies__types_react_dom": "^18.2.7", "npm_package_devDependencies__babel_preset_env": "^7.16.0", "npm_package_dependencies_sqlite": "^5.1.1", "npm_package_dependencies_assert": "^2.0.0", "npm_package_homepage": "http://.", "MANDATORY_PATH": "/usr/share/gconf/ubuntu-xorg.mandatory.path", "npm_package_devDependencies_prettier": "^2.4.1", "npm_package_devDependencies__types_sqlite3": "^3.1.11", "npm_package_devDependencies__babel_runtime": "^7.16.3", "npm_package_devDependencies__babel_plugin_transform_runtime": "^7.16.0", "npm_package_scripts_mapIcons": "rm src/icons/index.ts && npx tsc cli/createIconMap.ts && node cli/createIconMap.js", "GTK_IM_MODULE": "ibus", "LOGNAME": "v", "npm_package_devDependencies__vitejs_plugin_react": "^4.1.1", "npm_package_devDependencies__babel_preset_typescript": "^7.16.0", "_": "/home/v/.nvm/versions/node/v19.2.0/bin/yarn", "npm_package_devDependencies__babel_preset_react": "^7.16.0", "npm_package_scripts_preview_electron": "electron-vite preview", "XDG_SESSION_CLASS": "user", "DEFAULTS_PATH": "/usr/share/gconf/ubuntu-xorg.default.path", "npm_package_devDependencies__typescript_eslint_eslint_plugin": "^6.0.0", "npm_package_devDependencies__babel_plugin_proposal_decorators": "^7.16.0", "npm_package_scripts_lint": "eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0", "npm_config_registry": "https://registry.yarnpkg.com", "USERNAME": "v", "TERM": "xterm-256color", "npm_package_devDependencies__babel_core": "^7.16.0", "npm_package_scripts_build_electron_localstorage": "VITE_LWT_PERSIST=LOCALSTORAGE tsc && electron-vite build", "GNOME_DESKTOP_SESSION_ID": "this-is-deprecated", "npm_package_devDependencies_html_webpack_plugin": "^5.5.0", "npm_package_devDependencies_eslint_plugin_react_refresh": "^0.4.3", "npm_package_scripts_start": "webpack-dev-server --mode development", "npm_config_ignore_scripts": "", "WINDOWPATH": "2", "npm_package_scripts_build_electron_sqlite": "VITE_LWT_PERSIST=SQLITE tsc && electron-vite build", "PATH": "/tmp/yarn--1701238006420-0.22155935637369373:/home/v/Projects/LWT-React/node_modules/.bin:/home/v/.config/yarn/link/node_modules/.bin:/home/v/.yarn/bin:/home/v/.nvm/versions/node/v19.2.0/libexec/lib/node_modules/npm/bin/node-gyp-bin:/home/v/.nvm/versions/node/v19.2.0/lib/node_modules/npm/bin/node-gyp-bin:/home/v/.nvm/versions/node/v19.2.0/bin/node_modules/npm/bin/node-gyp-bin:/home/v/.nvm/versions/node/v19.2.0/bin:/home/v/.cargo/bin:/home/v/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin", "NODE": "/home/v/.nvm/versions/node/v19.2.0/bin/node", "SESSION_MANAGER": "local/v-NUC8i3BEH:@/tmp/.ICE-unix/7924,unix/v-NUC8i3BEH:/tmp/.ICE-unix/7924", "npm_package_name": "lwt-react", "XDG_MENU_PREFIX": "gnome-", "GNOME_TERMINAL_SCREEN": "/org/gnome/Terminal/screen/1f565d45_dae5_452c_82b9_317fea2cb63e", "XDG_RUNTIME_DIR": "/run/user/1000", "npm_package_dependencies_zlib": "^1.0.5", "DISPLAY": ":0", "npm_package_devDependencies_electron_vite": "^1.0.29", "npm_package_devDependencies_electron_packager": "^17.1.2", "npm_package_scripts_build_rest": "VITE_LWT_PERSIST=REST tsc && vite build", "LANG": "en_US.UTF-8", "XDG_CURRENT_DESKTOP": "ubuntu:GNOME", "npm_package_devDependencies_webpack": "^5.64.0", "npm_package_devDependencies_eslint": "^8.45.0", "npm_package_devDependencies__types_styled_components": "^5.1.26", "npm_package_dependencies_react_dom": "^18.2.0", "npm_package_scripts_dev_localstorage": "VITE_LWT_PERSIST=LOCALSTORAGE vite", "XMODIFIERS": "@im=ibus", "XDG_SESSION_DESKTOP": "ubuntu-xorg", "XAUTHORITY": "/run/user/1000/gdm/Xauthority", "LS_COLORS": "rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:", "GNOME_TERMINAL_SERVICE": ":1.160", "npm_package_dependencies_sqlite3": "^5.1.6", "npm_package_main": "./out/main/index.js", "SSH_AGENT_LAUNCHER": "gnome-keyring", "SSH_AUTH_SOCK": "/run/user/1000/keyring/ssh", "npm_package_devDependencies_webpack_dev_server": "^4.4.0", "npm_package_scripts_test": 'echo "Error: no test specified" && exit 1', "npm_config_version_git_message": "v%s", "SHELL": "/bin/bash", "npm_lifecycle_event": "electron-vite", "npm_package_devDependencies__types_react": "^18.2.15", "npm_package_version": "1.0.0", "QT_ACCESSIBILITY": "1", "GDMSESSION": "ubuntu-xorg", "npm_config_argv": '{"remain":[],"cooked":["run","electron-vite"],"original":["run","electron-vite","build"]}', "npm_package_devDependencies__types_papaparse": "^5.3.13", "npm_package_dependencies_buffer": "^6.0.3", "npm_package_scripts_dev_electron_rest": "VITE_LWT_PERSIST=REST electron-vite dev -w", "LESSCLOSE": "/usr/bin/lesspipe %s %s", "npm_package_dependencies_vite": "^4.5.0", "npm_package_devDependencies__types_node_gzip": "^1.1.0", "npm_config_version_git_tag": "true", "npm_config_version_git_sign": "", "GPG_AGENT_INFO": "/run/user/1000/gnupg/S.gpg-agent:0:1", "npm_package_dependencies_yarn": "^1.22.19", "npm_package_license": "ISC", "npm_config_strict_ssl": "true", "QT_IM_MODULE": "ibus", "npm_package_dependencies_sqlite_electron": "^2.2.8", "npm_package_dependencies__floating_ui_react": "^0.19.2", "PWD": "/home/v/Projects/LWT-React", "npm_execpath": "/home/v/.nvm/versions/node/v19.2.0/lib/node_modules/yarn/bin/yarn.js", "XDG_CONFIG_DIRS": "/etc/xdg/xdg-ubuntu-xorg:/etc/xdg", "NVM_CD_FLAGS": "", "XDG_DATA_DIRS": "/usr/share/ubuntu-xorg:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop", "npm_package_devDependencies_electron": "^27.1.2", "npm_package_dependencies_react_split_pane": "^0.1.92", "npm_package_dependencies_react_modal": "^3.16.1", "npm_package_author_name": "v", "npm_package_dependencies_util": "^0.12.5", "npm_package_dependencies_styled_components": "^5.3.6", "npm_config_save_prefix": "^", "npm_config_ignore_optional": "", "npm_package_scripts_preview": "vite preview", "VTE_VERSION": "6800", "npm_package_browser_assert": "false", "npm_package_dependencies_typescript": "^5.0.2", "INIT_CWD": "/home/v/Projects/LWT-React", "npm_package_devDependencies__types_webpack": "^5.28.0", "npm_package_dependencies_react": "^18.2.0", "npm_package_scripts_build_localstorage": "VITE_LWT_PERSIST=LOCALSTORAGE tsc && electron-vite build", "NODE_ENV_ELECTRON_VITE": "production", "NODE_ENV": "production", "ELECTRON_MAJOR_VER": "27" }.SC_DISABLE_SPEEDY ? "false" !== { "LESSOPEN": "| /usr/bin/lesspipe %s", "npm_package_devDependencies_ts_node": "^10.4.0", "npm_package_dependencies_papaparse": "^5.4.1", "npm_package_devDependencies__types_webpack_dev_server": "^4.3.1", "USER": "v", "npm_package_devDependencies_webpack_cli": "^4.9.1", "npm_package_dependencies_node_gzip": "^1.1.2", "npm_config_version_commit_hooks": "true", "npm_config_user_agent": "yarn/1.22.19 npm/? node/v19.2.0 linux x64", "npm_package_scripts_build_electron_rest": "VITE_LWT_PERSIST=REST tsc && electron-vite build", "npm_config_bin_links": "true", "XDG_SESSION_TYPE": "x11", "npm_node_execpath": "/home/v/.nvm/versions/node/v19.2.0/bin/node", "npm_package_scripts_dev_electron_localstorage": "VITE_LWT_PERSIST=LOCALSTORAGE electron-vite dev -w", "npm_config_init_version": "1.0.0", "SHLVL": "1", "npm_package_dependencies_rxjs": "^7.4.0", "npm_package_dependencies_process": "^0.11.10", "HOME": "/home/v", "OLDPWD": "/home/v/Projects/LabelMaker", "npm_package_devDependencies__typescript_eslint_parser": "^6.0.0", "npm_package_dependencies_superstruct": "^1.0.3", "npm_package_scripts_dev_electron_sqlite": "VITE_LWT_PERSIST=SQLITE electron-vite dev -w", "DESKTOP_SESSION": "ubuntu-xorg", "NVM_BIN": "/home/v/.nvm/versions/node/v19.2.0/bin", "npm_package_dependencies_stream": "^0.0.2", "NVM_INC": "/home/v/.nvm/versions/node/v19.2.0/include/node", "npm_package_dependencies_browserify_zlib": "^0.2.0", "npm_config_init_license": "MIT", "GNOME_SHELL_SESSION_MODE": "ubuntu", "GTK_MODULES": "gail:atk-bridge", "YARN_WRAP_OUTPUT": "false", "npm_package_devDependencies__types_electron": "^1.6.10", "npm_package_dependencies__types_react_modal": "^3.16.3", "npm_package_scripts_dev_rest": "VITE_LWT_PERSIST=REST vite", "npm_config_version_tag_prefix": "v", "SYSTEMD_EXEC_PID": "29480", "DBUS_SESSION_BUS_ADDRESS": "unix:path=/run/user/1000/bus", "npm_package_devDependencies_eslint_plugin_react_hooks": "^4.6.0", "npm_package_dependencies__datorama_akita": "^6.2.4", "COLORTERM": "truecolor", "npm_package_devDependencies_babel_loader": "^8.2.3", "npm_package_dependencies_react_router_dom": "^6.18.0", "npm_package_dependencies_rambdax": "^9.0.0", "npm_package_description": "LWT React Port", "NVM_DIR": "/home/v/.nvm", "npm_package_readmeFilename": "README.md", "npm_package_devDependencies__types_react_dom": "^18.2.7", "npm_package_devDependencies__babel_preset_env": "^7.16.0", "npm_package_dependencies_sqlite": "^5.1.1", "npm_package_dependencies_assert": "^2.0.0", "npm_package_homepage": "http://.", "MANDATORY_PATH": "/usr/share/gconf/ubuntu-xorg.mandatory.path", "npm_package_devDependencies_prettier": "^2.4.1", "npm_package_devDependencies__types_sqlite3": "^3.1.11", "npm_package_devDependencies__babel_runtime": "^7.16.3", "npm_package_devDependencies__babel_plugin_transform_runtime": "^7.16.0", "npm_package_scripts_mapIcons": "rm src/icons/index.ts && npx tsc cli/createIconMap.ts && node cli/createIconMap.js", "GTK_IM_MODULE": "ibus", "LOGNAME": "v", "npm_package_devDependencies__vitejs_plugin_react": "^4.1.1", "npm_package_devDependencies__babel_preset_typescript": "^7.16.0", "_": "/home/v/.nvm/versions/node/v19.2.0/bin/yarn", "npm_package_devDependencies__babel_preset_react": "^7.16.0", "npm_package_scripts_preview_electron": "electron-vite preview", "XDG_SESSION_CLASS": "user", "DEFAULTS_PATH": "/usr/share/gconf/ubuntu-xorg.default.path", "npm_package_devDependencies__typescript_eslint_eslint_plugin": "^6.0.0", "npm_package_devDependencies__babel_plugin_proposal_decorators": "^7.16.0", "npm_package_scripts_lint": "eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0", "npm_config_registry": "https://registry.yarnpkg.com", "USERNAME": "v", "TERM": "xterm-256color", "npm_package_devDependencies__babel_core": "^7.16.0", "npm_package_scripts_build_electron_localstorage": "VITE_LWT_PERSIST=LOCALSTORAGE tsc && electron-vite build", "GNOME_DESKTOP_SESSION_ID": "this-is-deprecated", "npm_package_devDependencies_html_webpack_plugin": "^5.5.0", "npm_package_devDependencies_eslint_plugin_react_refresh": "^0.4.3", "npm_package_scripts_start": "webpack-dev-server --mode development", "npm_config_ignore_scripts": "", "WINDOWPATH": "2", "npm_package_scripts_build_electron_sqlite": "VITE_LWT_PERSIST=SQLITE tsc && electron-vite build", "PATH": "/tmp/yarn--1701238006420-0.22155935637369373:/home/v/Projects/LWT-React/node_modules/.bin:/home/v/.config/yarn/link/node_modules/.bin:/home/v/.yarn/bin:/home/v/.nvm/versions/node/v19.2.0/libexec/lib/node_modules/npm/bin/node-gyp-bin:/home/v/.nvm/versions/node/v19.2.0/lib/node_modules/npm/bin/node-gyp-bin:/home/v/.nvm/versions/node/v19.2.0/bin/node_modules/npm/bin/node-gyp-bin:/home/v/.nvm/versions/node/v19.2.0/bin:/home/v/.cargo/bin:/home/v/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin", "NODE": "/home/v/.nvm/versions/node/v19.2.0/bin/node", "SESSION_MANAGER": "local/v-NUC8i3BEH:@/tmp/.ICE-unix/7924,unix/v-NUC8i3BEH:/tmp/.ICE-unix/7924", "npm_package_name": "lwt-react", "XDG_MENU_PREFIX": "gnome-", "GNOME_TERMINAL_SCREEN": "/org/gnome/Terminal/screen/1f565d45_dae5_452c_82b9_317fea2cb63e", "XDG_RUNTIME_DIR": "/run/user/1000", "npm_package_dependencies_zlib": "^1.0.5", "DISPLAY": ":0", "npm_package_devDependencies_electron_vite": "^1.0.29", "npm_package_devDependencies_electron_packager": "^17.1.2", "npm_package_scripts_build_rest": "VITE_LWT_PERSIST=REST tsc && vite build", "LANG": "en_US.UTF-8", "XDG_CURRENT_DESKTOP": "ubuntu:GNOME", "npm_package_devDependencies_webpack": "^5.64.0", "npm_package_devDependencies_eslint": "^8.45.0", "npm_package_devDependencies__types_styled_components": "^5.1.26", "npm_package_dependencies_react_dom": "^18.2.0", "npm_package_scripts_dev_localstorage": "VITE_LWT_PERSIST=LOCALSTORAGE vite", "XMODIFIERS": "@im=ibus", "XDG_SESSION_DESKTOP": "ubuntu-xorg", "XAUTHORITY": "/run/user/1000/gdm/Xauthority", "LS_COLORS": "rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:", "GNOME_TERMINAL_SERVICE": ":1.160", "npm_package_dependencies_sqlite3": "^5.1.6", "npm_package_main": "./out/main/index.js", "SSH_AGENT_LAUNCHER": "gnome-keyring", "SSH_AUTH_SOCK": "/run/user/1000/keyring/ssh", "npm_package_devDependencies_webpack_dev_server": "^4.4.0", "npm_package_scripts_test": 'echo "Error: no test specified" && exit 1', "npm_config_version_git_message": "v%s", "SHELL": "/bin/bash", "npm_lifecycle_event": "electron-vite", "npm_package_devDependencies__types_react": "^18.2.15", "npm_package_version": "1.0.0", "QT_ACCESSIBILITY": "1", "GDMSESSION": "ubuntu-xorg", "npm_config_argv": '{"remain":[],"cooked":["run","electron-vite"],"original":["run","electron-vite","build"]}', "npm_package_devDependencies__types_papaparse": "^5.3.13", "npm_package_dependencies_buffer": "^6.0.3", "npm_package_scripts_dev_electron_rest": "VITE_LWT_PERSIST=REST electron-vite dev -w", "LESSCLOSE": "/usr/bin/lesspipe %s %s", "npm_package_dependencies_vite": "^4.5.0", "npm_package_devDependencies__types_node_gzip": "^1.1.0", "npm_config_version_git_tag": "true", "npm_config_version_git_sign": "", "GPG_AGENT_INFO": "/run/user/1000/gnupg/S.gpg-agent:0:1", "npm_package_dependencies_yarn": "^1.22.19", "npm_package_license": "ISC", "npm_config_strict_ssl": "true", "QT_IM_MODULE": "ibus", "npm_package_dependencies_sqlite_electron": "^2.2.8", "npm_package_dependencies__floating_ui_react": "^0.19.2", "PWD": "/home/v/Projects/LWT-React", "npm_execpath": "/home/v/.nvm/versions/node/v19.2.0/lib/node_modules/yarn/bin/yarn.js", "XDG_CONFIG_DIRS": "/etc/xdg/xdg-ubuntu-xorg:/etc/xdg", "NVM_CD_FLAGS": "", "XDG_DATA_DIRS": "/usr/share/ubuntu-xorg:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop", "npm_package_devDependencies_electron": "^27.1.2", "npm_package_dependencies_react_split_pane": "^0.1.92", "npm_package_dependencies_react_modal": "^3.16.1", "npm_package_author_name": "v", "npm_package_dependencies_util": "^0.12.5", "npm_package_dependencies_styled_components": "^5.3.6", "npm_config_save_prefix": "^", "npm_config_ignore_optional": "", "npm_package_scripts_preview": "vite preview", "VTE_VERSION": "6800", "npm_package_browser_assert": "false", "npm_package_dependencies_typescript": "^5.0.2", "INIT_CWD": "/home/v/Projects/LWT-React", "npm_package_devDependencies__types_webpack": "^5.28.0", "npm_package_dependencies_react": "^18.2.0", "npm_package_scripts_build_localstorage": "VITE_LWT_PERSIST=LOCALSTORAGE tsc && electron-vite build", "NODE_ENV_ELECTRON_VITE": "production", "NODE_ENV": "production", "ELECTRON_MAJOR_VER": "27" }.SC_DISABLE_SPEEDY && { "LESSOPEN": "| /usr/bin/lesspipe %s", "npm_package_devDependencies_ts_node": "^10.4.0", "npm_package_dependencies_papaparse": "^5.4.1", "npm_package_devDependencies__types_webpack_dev_server": "^4.3.1", "USER": "v", "npm_package_devDependencies_webpack_cli": "^4.9.1", "npm_package_dependencies_node_gzip": "^1.1.2", "npm_config_version_commit_hooks": "true", "npm_config_user_agent": "yarn/1.22.19 npm/? node/v19.2.0 linux x64", "npm_package_scripts_build_electron_rest": "VITE_LWT_PERSIST=REST tsc && electron-vite build", "npm_config_bin_links": "true", "XDG_SESSION_TYPE": "x11", "npm_node_execpath": "/home/v/.nvm/versions/node/v19.2.0/bin/node", "npm_package_scripts_dev_electron_localstorage": "VITE_LWT_PERSIST=LOCALSTORAGE electron-vite dev -w", "npm_config_init_version": "1.0.0", "SHLVL": "1", "npm_package_dependencies_rxjs": "^7.4.0", "npm_package_dependencies_process": "^0.11.10", "HOME": "/home/v", "OLDPWD": "/home/v/Projects/LabelMaker", "npm_package_devDependencies__typescript_eslint_parser": "^6.0.0", "npm_package_dependencies_superstruct": "^1.0.3", "npm_package_scripts_dev_electron_sqlite": "VITE_LWT_PERSIST=SQLITE electron-vite dev -w", "DESKTOP_SESSION": "ubuntu-xorg", "NVM_BIN": "/home/v/.nvm/versions/node/v19.2.0/bin", "npm_package_dependencies_stream": "^0.0.2", "NVM_INC": "/home/v/.nvm/versions/node/v19.2.0/include/node", "npm_package_dependencies_browserify_zlib": "^0.2.0", "npm_config_init_license": "MIT", "GNOME_SHELL_SESSION_MODE": "ubuntu", "GTK_MODULES": "gail:atk-bridge", "YARN_WRAP_OUTPUT": "false", "npm_package_devDependencies__types_electron": "^1.6.10", "npm_package_dependencies__types_react_modal": "^3.16.3", "npm_package_scripts_dev_rest": "VITE_LWT_PERSIST=REST vite", "npm_config_version_tag_prefix": "v", "SYSTEMD_EXEC_PID": "29480", "DBUS_SESSION_BUS_ADDRESS": "unix:path=/run/user/1000/bus", "npm_package_devDependencies_eslint_plugin_react_hooks": "^4.6.0", "npm_package_dependencies__datorama_akita": "^6.2.4", "COLORTERM": "truecolor", "npm_package_devDependencies_babel_loader": "^8.2.3", "npm_package_dependencies_react_router_dom": "^6.18.0", "npm_package_dependencies_rambdax": "^9.0.0", "npm_package_description": "LWT React Port", "NVM_DIR": "/home/v/.nvm", "npm_package_readmeFilename": "README.md", "npm_package_devDependencies__types_react_dom": "^18.2.7", "npm_package_devDependencies__babel_preset_env": "^7.16.0", "npm_package_dependencies_sqlite": "^5.1.1", "npm_package_dependencies_assert": "^2.0.0", "npm_package_homepage": "http://.", "MANDATORY_PATH": "/usr/share/gconf/ubuntu-xorg.mandatory.path", "npm_package_devDependencies_prettier": "^2.4.1", "npm_package_devDependencies__types_sqlite3": "^3.1.11", "npm_package_devDependencies__babel_runtime": "^7.16.3", "npm_package_devDependencies__babel_plugin_transform_runtime": "^7.16.0", "npm_package_scripts_mapIcons": "rm src/icons/index.ts && npx tsc cli/createIconMap.ts && node cli/createIconMap.js", "GTK_IM_MODULE": "ibus", "LOGNAME": "v", "npm_package_devDependencies__vitejs_plugin_react": "^4.1.1", "npm_package_devDependencies__babel_preset_typescript": "^7.16.0", "_": "/home/v/.nvm/versions/node/v19.2.0/bin/yarn", "npm_package_devDependencies__babel_preset_react": "^7.16.0", "npm_package_scripts_preview_electron": "electron-vite preview", "XDG_SESSION_CLASS": "user", "DEFAULTS_PATH": "/usr/share/gconf/ubuntu-xorg.default.path", "npm_package_devDependencies__typescript_eslint_eslint_plugin": "^6.0.0", "npm_package_devDependencies__babel_plugin_proposal_decorators": "^7.16.0", "npm_package_scripts_lint": "eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0", "npm_config_registry": "https://registry.yarnpkg.com", "USERNAME": "v", "TERM": "xterm-256color", "npm_package_devDependencies__babel_core": "^7.16.0", "npm_package_scripts_build_electron_localstorage": "VITE_LWT_PERSIST=LOCALSTORAGE tsc && electron-vite build", "GNOME_DESKTOP_SESSION_ID": "this-is-deprecated", "npm_package_devDependencies_html_webpack_plugin": "^5.5.0", "npm_package_devDependencies_eslint_plugin_react_refresh": "^0.4.3", "npm_package_scripts_start": "webpack-dev-server --mode development", "npm_config_ignore_scripts": "", "WINDOWPATH": "2", "npm_package_scripts_build_electron_sqlite": "VITE_LWT_PERSIST=SQLITE tsc && electron-vite build", "PATH": "/tmp/yarn--1701238006420-0.22155935637369373:/home/v/Projects/LWT-React/node_modules/.bin:/home/v/.config/yarn/link/node_modules/.bin:/home/v/.yarn/bin:/home/v/.nvm/versions/node/v19.2.0/libexec/lib/node_modules/npm/bin/node-gyp-bin:/home/v/.nvm/versions/node/v19.2.0/lib/node_modules/npm/bin/node-gyp-bin:/home/v/.nvm/versions/node/v19.2.0/bin/node_modules/npm/bin/node-gyp-bin:/home/v/.nvm/versions/node/v19.2.0/bin:/home/v/.cargo/bin:/home/v/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin", "NODE": "/home/v/.nvm/versions/node/v19.2.0/bin/node", "SESSION_MANAGER": "local/v-NUC8i3BEH:@/tmp/.ICE-unix/7924,unix/v-NUC8i3BEH:/tmp/.ICE-unix/7924", "npm_package_name": "lwt-react", "XDG_MENU_PREFIX": "gnome-", "GNOME_TERMINAL_SCREEN": "/org/gnome/Terminal/screen/1f565d45_dae5_452c_82b9_317fea2cb63e", "XDG_RUNTIME_DIR": "/run/user/1000", "npm_package_dependencies_zlib": "^1.0.5", "DISPLAY": ":0", "npm_package_devDependencies_electron_vite": "^1.0.29", "npm_package_devDependencies_electron_packager": "^17.1.2", "npm_package_scripts_build_rest": "VITE_LWT_PERSIST=REST tsc && vite build", "LANG": "en_US.UTF-8", "XDG_CURRENT_DESKTOP": "ubuntu:GNOME", "npm_package_devDependencies_webpack": "^5.64.0", "npm_package_devDependencies_eslint": "^8.45.0", "npm_package_devDependencies__types_styled_components": "^5.1.26", "npm_package_dependencies_react_dom": "^18.2.0", "npm_package_scripts_dev_localstorage": "VITE_LWT_PERSIST=LOCALSTORAGE vite", "XMODIFIERS": "@im=ibus", "XDG_SESSION_DESKTOP": "ubuntu-xorg", "XAUTHORITY": "/run/user/1000/gdm/Xauthority", "LS_COLORS": "rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:", "GNOME_TERMINAL_SERVICE": ":1.160", "npm_package_dependencies_sqlite3": "^5.1.6", "npm_package_main": "./out/main/index.js", "SSH_AGENT_LAUNCHER": "gnome-keyring", "SSH_AUTH_SOCK": "/run/user/1000/keyring/ssh", "npm_package_devDependencies_webpack_dev_server": "^4.4.0", "npm_package_scripts_test": 'echo "Error: no test specified" && exit 1', "npm_config_version_git_message": "v%s", "SHELL": "/bin/bash", "npm_lifecycle_event": "electron-vite", "npm_package_devDependencies__types_react": "^18.2.15", "npm_package_version": "1.0.0", "QT_ACCESSIBILITY": "1", "GDMSESSION": "ubuntu-xorg", "npm_config_argv": '{"remain":[],"cooked":["run","electron-vite"],"original":["run","electron-vite","build"]}', "npm_package_devDependencies__types_papaparse": "^5.3.13", "npm_package_dependencies_buffer": "^6.0.3", "npm_package_scripts_dev_electron_rest": "VITE_LWT_PERSIST=REST electron-vite dev -w", "LESSCLOSE": "/usr/bin/lesspipe %s %s", "npm_package_dependencies_vite": "^4.5.0", "npm_package_devDependencies__types_node_gzip": "^1.1.0", "npm_config_version_git_tag": "true", "npm_config_version_git_sign": "", "GPG_AGENT_INFO": "/run/user/1000/gnupg/S.gpg-agent:0:1", "npm_package_dependencies_yarn": "^1.22.19", "npm_package_license": "ISC", "npm_config_strict_ssl": "true", "QT_IM_MODULE": "ibus", "npm_package_dependencies_sqlite_electron": "^2.2.8", "npm_package_dependencies__floating_ui_react": "^0.19.2", "PWD": "/home/v/Projects/LWT-React", "npm_execpath": "/home/v/.nvm/versions/node/v19.2.0/lib/node_modules/yarn/bin/yarn.js", "XDG_CONFIG_DIRS": "/etc/xdg/xdg-ubuntu-xorg:/etc/xdg", "NVM_CD_FLAGS": "", "XDG_DATA_DIRS": "/usr/share/ubuntu-xorg:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop", "npm_package_devDependencies_electron": "^27.1.2", "npm_package_dependencies_react_split_pane": "^0.1.92", "npm_package_dependencies_react_modal": "^3.16.1", "npm_package_author_name": "v", "npm_package_dependencies_util": "^0.12.5", "npm_package_dependencies_styled_components": "^5.3.6", "npm_config_save_prefix": "^", "npm_config_ignore_optional": "", "npm_package_scripts_preview": "vite preview", "VTE_VERSION": "6800", "npm_package_browser_assert": "false", "npm_package_dependencies_typescript": "^5.0.2", "INIT_CWD": "/home/v/Projects/LWT-React", "npm_package_devDependencies__types_webpack": "^5.28.0", "npm_package_dependencies_react": "^18.2.0", "npm_package_scripts_build_localstorage": "VITE_LWT_PERSIST=LOCALSTORAGE tsc && electron-vite build", "NODE_ENV_ELECTRON_VITE": "production", "NODE_ENV": "production", "ELECTRON_MAJOR_VER": "27" }.SC_DISABLE_SPEEDY : false)), P = {};
function D(e2) {
  for (var t2 = arguments.length, n2 = new Array(t2 > 1 ? t2 - 1 : 0), r2 = 1; r2 < t2; r2++)
    n2[r2 - 1] = arguments[r2];
  throw new Error("An error occurred. See https://git.io/JUIaE#" + e2 + " for more information." + (n2.length > 0 ? " Args: " + n2.join(", ") : ""));
}
var j = function() {
  function e2(e3) {
    this.groupSizes = new Uint32Array(512), this.length = 512, this.tag = e3;
  }
  var t2 = e2.prototype;
  return t2.indexOfGroup = function(e3) {
    for (var t3 = 0, n2 = 0; n2 < e3; n2++)
      t3 += this.groupSizes[n2];
    return t3;
  }, t2.insertRules = function(e3, t3) {
    if (e3 >= this.groupSizes.length) {
      for (var n2 = this.groupSizes, r2 = n2.length, o = r2; e3 >= o; )
        (o <<= 1) < 0 && D(16, "" + e3);
      this.groupSizes = new Uint32Array(o), this.groupSizes.set(n2), this.length = o;
      for (var s = r2; s < o; s++)
        this.groupSizes[s] = 0;
    }
    for (var i = this.indexOfGroup(e3 + 1), a = 0, c2 = t3.length; a < c2; a++)
      this.tag.insertRule(i, t3[a]) && (this.groupSizes[e3]++, i++);
  }, t2.clearGroup = function(e3) {
    if (e3 < this.length) {
      var t3 = this.groupSizes[e3], n2 = this.indexOfGroup(e3), r2 = n2 + t3;
      this.groupSizes[e3] = 0;
      for (var o = n2; o < r2; o++)
        this.tag.deleteRule(n2);
    }
  }, t2.getGroup = function(e3) {
    var t3 = "";
    if (e3 >= this.length || 0 === this.groupSizes[e3])
      return t3;
    for (var n2 = this.groupSizes[e3], r2 = this.indexOfGroup(e3), o = r2 + n2, s = r2; s < o; s++)
      t3 += this.tag.getRule(s) + "/*!sc*/\n";
    return t3;
  }, e2;
}(), T$1 = /* @__PURE__ */ new Map(), x = /* @__PURE__ */ new Map(), k = 1, V = function(e2) {
  if (T$1.has(e2))
    return T$1.get(e2);
  for (; x.has(k); )
    k++;
  var t2 = k++;
  return T$1.set(e2, t2), x.set(t2, e2), t2;
}, B = function(e2) {
  return x.get(e2);
}, z = function(e2, t2) {
  t2 >= k && (k = t2 + 1), T$1.set(e2, t2), x.set(t2, e2);
}, M = "style[" + N + '][data-styled-version="5.3.11"]', G = new RegExp("^" + N + '\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)'), L = function(e2, t2, n2) {
  for (var r2, o = n2.split(","), s = 0, i = o.length; s < i; s++)
    (r2 = o[s]) && e2.registerName(t2, r2);
}, F = function(e2, t2) {
  for (var n2 = (t2.textContent || "").split("/*!sc*/\n"), r2 = [], o = 0, s = n2.length; o < s; o++) {
    var i = n2[o].trim();
    if (i) {
      var a = i.match(G);
      if (a) {
        var c2 = 0 | parseInt(a[1], 10), u2 = a[2];
        0 !== c2 && (z(u2, c2), L(e2, u2, a[3]), e2.getTag().insertRules(c2, r2)), r2.length = 0;
      } else
        r2.push(i);
    }
  }
}, Y = function() {
  return "undefined" != typeof __webpack_nonce__ ? __webpack_nonce__ : null;
}, q = function(e2) {
  var t2 = document.head, n2 = e2 || t2, r2 = document.createElement("style"), o = function(e3) {
    for (var t3 = e3.childNodes, n3 = t3.length; n3 >= 0; n3--) {
      var r3 = t3[n3];
      if (r3 && 1 === r3.nodeType && r3.hasAttribute(N))
        return r3;
    }
  }(n2), s = void 0 !== o ? o.nextSibling : null;
  r2.setAttribute(N, "active"), r2.setAttribute("data-styled-version", "5.3.11");
  var i = Y();
  return i && r2.setAttribute("nonce", i), n2.insertBefore(r2, s), r2;
}, H = function() {
  function e2(e3) {
    var t3 = this.element = q(e3);
    t3.appendChild(document.createTextNode("")), this.sheet = function(e4) {
      if (e4.sheet)
        return e4.sheet;
      for (var t4 = document.styleSheets, n2 = 0, r2 = t4.length; n2 < r2; n2++) {
        var o = t4[n2];
        if (o.ownerNode === e4)
          return o;
      }
      D(17);
    }(t3), this.length = 0;
  }
  var t2 = e2.prototype;
  return t2.insertRule = function(e3, t3) {
    try {
      return this.sheet.insertRule(t3, e3), this.length++, true;
    } catch (e4) {
      return false;
    }
  }, t2.deleteRule = function(e3) {
    this.sheet.deleteRule(e3), this.length--;
  }, t2.getRule = function(e3) {
    var t3 = this.sheet.cssRules[e3];
    return void 0 !== t3 && "string" == typeof t3.cssText ? t3.cssText : "";
  }, e2;
}(), $ = function() {
  function e2(e3) {
    var t3 = this.element = q(e3);
    this.nodes = t3.childNodes, this.length = 0;
  }
  var t2 = e2.prototype;
  return t2.insertRule = function(e3, t3) {
    if (e3 <= this.length && e3 >= 0) {
      var n2 = document.createTextNode(t3), r2 = this.nodes[e3];
      return this.element.insertBefore(n2, r2 || null), this.length++, true;
    }
    return false;
  }, t2.deleteRule = function(e3) {
    this.element.removeChild(this.nodes[e3]), this.length--;
  }, t2.getRule = function(e3) {
    return e3 < this.length ? this.nodes[e3].textContent : "";
  }, e2;
}(), W = function() {
  function e2(e3) {
    this.rules = [], this.length = 0;
  }
  var t2 = e2.prototype;
  return t2.insertRule = function(e3, t3) {
    return e3 <= this.length && (this.rules.splice(e3, 0, t3), this.length++, true);
  }, t2.deleteRule = function(e3) {
    this.rules.splice(e3, 1), this.length--;
  }, t2.getRule = function(e3) {
    return e3 < this.length ? this.rules[e3] : "";
  }, e2;
}(), U = C, J = { isServer: !C, useCSSOMInjection: !I }, X = function() {
  function e2(e3, t3, n2) {
    void 0 === e3 && (e3 = w), void 0 === t3 && (t3 = {}), this.options = y({}, J, {}, e3), this.gs = t3, this.names = new Map(n2), this.server = !!e3.isServer, !this.server && C && U && (U = false, function(e4) {
      for (var t4 = document.querySelectorAll(M), n3 = 0, r2 = t4.length; n3 < r2; n3++) {
        var o = t4[n3];
        o && "active" !== o.getAttribute(N) && (F(e4, o), o.parentNode && o.parentNode.removeChild(o));
      }
    }(this));
  }
  e2.registerId = function(e3) {
    return V(e3);
  };
  var t2 = e2.prototype;
  return t2.reconstructWithOptions = function(t3, n2) {
    return void 0 === n2 && (n2 = true), new e2(y({}, this.options, {}, t3), this.gs, n2 && this.names || void 0);
  }, t2.allocateGSInstance = function(e3) {
    return this.gs[e3] = (this.gs[e3] || 0) + 1;
  }, t2.getTag = function() {
    return this.tag || (this.tag = (n2 = (t3 = this.options).isServer, r2 = t3.useCSSOMInjection, o = t3.target, e3 = n2 ? new W(o) : r2 ? new H(o) : new $(o), new j(e3)));
    var e3, t3, n2, r2, o;
  }, t2.hasNameForId = function(e3, t3) {
    return this.names.has(e3) && this.names.get(e3).has(t3);
  }, t2.registerName = function(e3, t3) {
    if (V(e3), this.names.has(e3))
      this.names.get(e3).add(t3);
    else {
      var n2 = /* @__PURE__ */ new Set();
      n2.add(t3), this.names.set(e3, n2);
    }
  }, t2.insertRules = function(e3, t3, n2) {
    this.registerName(e3, t3), this.getTag().insertRules(V(e3), n2);
  }, t2.clearNames = function(e3) {
    this.names.has(e3) && this.names.get(e3).clear();
  }, t2.clearRules = function(e3) {
    this.getTag().clearGroup(V(e3)), this.clearNames(e3);
  }, t2.clearTag = function() {
    this.tag = void 0;
  }, t2.toString = function() {
    return function(e3) {
      for (var t3 = e3.getTag(), n2 = t3.length, r2 = "", o = 0; o < n2; o++) {
        var s = B(o);
        if (void 0 !== s) {
          var i = e3.names.get(s), a = t3.getGroup(o);
          if (i && a && i.size) {
            var c2 = N + ".g" + o + '[id="' + s + '"]', u2 = "";
            void 0 !== i && i.forEach(function(e4) {
              e4.length > 0 && (u2 += e4 + ",");
            }), r2 += "" + a + c2 + '{content:"' + u2 + '"}/*!sc*/\n';
          }
        }
      }
      return r2;
    }(this);
  }, e2;
}(), Z = /(a)(d)/gi, K = function(e2) {
  return String.fromCharCode(e2 + (e2 > 25 ? 39 : 97));
};
function Q(e2) {
  var t2, n2 = "";
  for (t2 = Math.abs(e2); t2 > 52; t2 = t2 / 52 | 0)
    n2 = K(t2 % 52) + n2;
  return (K(t2 % 52) + n2).replace(Z, "$1-$2");
}
var ee = function(e2, t2) {
  for (var n2 = t2.length; n2; )
    e2 = 33 * e2 ^ t2.charCodeAt(--n2);
  return e2;
}, te = function(e2) {
  return ee(5381, e2);
};
function ne(e2) {
  for (var t2 = 0; t2 < e2.length; t2 += 1) {
    var n2 = e2[t2];
    if (E(n2) && !_(n2))
      return false;
  }
  return true;
}
var re = te("5.3.11"), oe = function() {
  function e2(e3, t2, n2) {
    this.rules = e3, this.staticRulesId = "", this.isStatic = (void 0 === n2 || n2.isStatic) && ne(e3), this.componentId = t2, this.baseHash = ee(re, t2), this.baseStyle = n2, X.registerId(t2);
  }
  return e2.prototype.generateAndInjectStyles = function(e3, t2, n2) {
    var r2 = this.componentId, o = [];
    if (this.baseStyle && o.push(this.baseStyle.generateAndInjectStyles(e3, t2, n2)), this.isStatic && !n2.hash)
      if (this.staticRulesId && t2.hasNameForId(r2, this.staticRulesId))
        o.push(this.staticRulesId);
      else {
        var s = _e(this.rules, e3, t2, n2).join(""), i = Q(ee(this.baseHash, s) >>> 0);
        if (!t2.hasNameForId(r2, i)) {
          var a = n2(s, "." + i, void 0, r2);
          t2.insertRules(r2, i, a);
        }
        o.push(i), this.staticRulesId = i;
      }
    else {
      for (var c2 = this.rules.length, u2 = ee(this.baseHash, n2.hash), l2 = "", d2 = 0; d2 < c2; d2++) {
        var h2 = this.rules[d2];
        if ("string" == typeof h2)
          l2 += h2;
        else if (h2) {
          var p2 = _e(h2, e3, t2, n2), f2 = Array.isArray(p2) ? p2.join("") : p2;
          u2 = ee(u2, f2 + d2), l2 += f2;
        }
      }
      if (l2) {
        var m2 = Q(u2 >>> 0);
        if (!t2.hasNameForId(r2, m2)) {
          var y2 = n2(l2, "." + m2, void 0, r2);
          t2.insertRules(r2, m2, y2);
        }
        o.push(m2);
      }
    }
    return o.join(" ");
  }, e2;
}(), se = /^\s*\/\/.*$/gm, ie = [":", "[", ".", "#"];
function ae(e2) {
  var t2, n2, r2, o, s = void 0 === e2 ? w : e2, i = s.options, a = void 0 === i ? w : i, c2 = s.plugins, u2 = void 0 === c2 ? S : c2, l2 = new stylis_min(a), d2 = [], p2 = function(e3) {
    function t3(t4) {
      if (t4)
        try {
          e3(t4 + "}");
        } catch (e4) {
        }
    }
    return function(n3, r3, o2, s2, i2, a2, c3, u3, l3, d3) {
      switch (n3) {
        case 1:
          if (0 === l3 && 64 === r3.charCodeAt(0))
            return e3(r3 + ";"), "";
          break;
        case 2:
          if (0 === u3)
            return r3 + "/*|*/";
          break;
        case 3:
          switch (u3) {
            case 102:
            case 112:
              return e3(o2[0] + r3), "";
            default:
              return r3 + (0 === d3 ? "/*|*/" : "");
          }
        case -2:
          r3.split("/*|*/}").forEach(t3);
      }
    };
  }(function(e3) {
    d2.push(e3);
  }), f2 = function(e3, r3, s2) {
    return 0 === r3 && -1 !== ie.indexOf(s2[n2.length]) || s2.match(o) ? e3 : "." + t2;
  };
  function m2(e3, s2, i2, a2) {
    void 0 === a2 && (a2 = "&");
    var c3 = e3.replace(se, ""), u3 = s2 && i2 ? i2 + " " + s2 + " { " + c3 + " }" : c3;
    return t2 = a2, n2 = s2, r2 = new RegExp("\\" + n2 + "\\b", "g"), o = new RegExp("(\\" + n2 + "\\b){2,}"), l2(i2 || !s2 ? "" : s2, u3);
  }
  return l2.use([].concat(u2, [function(e3, t3, o2) {
    2 === e3 && o2.length && o2[0].lastIndexOf(n2) > 0 && (o2[0] = o2[0].replace(r2, f2));
  }, p2, function(e3) {
    if (-2 === e3) {
      var t3 = d2;
      return d2 = [], t3;
    }
  }])), m2.hash = u2.length ? u2.reduce(function(e3, t3) {
    return t3.name || D(15), ee(e3, t3.name);
  }, 5381).toString() : "", m2;
}
var ce = React.createContext();
ce.Consumer;
var le = React.createContext(), de = (le.Consumer, new X()), he = ae();
function pe() {
  return reactExports.useContext(ce) || de;
}
function fe() {
  return reactExports.useContext(le) || he;
}
var ye = function() {
  function e2(e3, t2) {
    var n2 = this;
    this.inject = function(e4, t3) {
      void 0 === t3 && (t3 = he);
      var r2 = n2.name + t3.hash;
      e4.hasNameForId(n2.id, r2) || e4.insertRules(n2.id, r2, t3(n2.rules, r2, "@keyframes"));
    }, this.toString = function() {
      return D(12, String(n2.name));
    }, this.name = e3, this.id = "sc-keyframes-" + e3, this.rules = t2;
  }
  return e2.prototype.getName = function(e3) {
    return void 0 === e3 && (e3 = he), this.name + e3.hash;
  }, e2;
}(), ve = /([A-Z])/, ge = /([A-Z])/g, Se = /^ms-/, we = function(e2) {
  return "-" + e2.toLowerCase();
};
function Ee(e2) {
  return ve.test(e2) ? e2.replace(ge, we).replace(Se, "-ms-") : e2;
}
var be = function(e2) {
  return null == e2 || false === e2 || "" === e2;
};
function _e(e2, n2, r2, o) {
  if (Array.isArray(e2)) {
    for (var s, i = [], a = 0, c2 = e2.length; a < c2; a += 1)
      "" !== (s = _e(e2[a], n2, r2, o)) && (Array.isArray(s) ? i.push.apply(i, s) : i.push(s));
    return i;
  }
  if (be(e2))
    return "";
  if (_(e2))
    return "." + e2.styledComponentId;
  if (E(e2)) {
    if ("function" != typeof (l2 = e2) || l2.prototype && l2.prototype.isReactComponent || !n2)
      return e2;
    var u2 = e2(n2);
    return _e(u2, n2, r2, o);
  }
  var l2;
  return e2 instanceof ye ? r2 ? (e2.inject(r2, o), e2.getName(o)) : e2 : g(e2) ? function e3(t2, n3) {
    var r3, o2, s2 = [];
    for (var i2 in t2)
      t2.hasOwnProperty(i2) && !be(t2[i2]) && (Array.isArray(t2[i2]) && t2[i2].isCss || E(t2[i2]) ? s2.push(Ee(i2) + ":", t2[i2], ";") : g(t2[i2]) ? s2.push.apply(s2, e3(t2[i2], i2)) : s2.push(Ee(i2) + ": " + (r3 = i2, null == (o2 = t2[i2]) || "boolean" == typeof o2 || "" === o2 ? "" : "number" != typeof o2 || 0 === o2 || r3 in unitlessKeys || r3.startsWith("--") ? String(o2).trim() : o2 + "px") + ";"));
    return n3 ? [n3 + " {"].concat(s2, ["}"]) : s2;
  }(e2) : e2.toString();
}
var Ne = function(e2) {
  return Array.isArray(e2) && (e2.isCss = true), e2;
};
function Ae(e2) {
  for (var t2 = arguments.length, n2 = new Array(t2 > 1 ? t2 - 1 : 0), r2 = 1; r2 < t2; r2++)
    n2[r2 - 1] = arguments[r2];
  return E(e2) || g(e2) ? Ne(_e(v(S, [e2].concat(n2)))) : 0 === n2.length && 1 === e2.length && "string" == typeof e2[0] ? e2 : Ne(_e(v(e2, n2)));
}
var Oe = function(e2, t2, n2) {
  return void 0 === n2 && (n2 = w), e2.theme !== n2.theme && e2.theme || t2 || n2.theme;
}, Re = /[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g, De = /(^-|-$)/g;
function je(e2) {
  return e2.replace(Re, "-").replace(De, "");
}
var Te = function(e2) {
  return Q(te(e2) >>> 0);
};
function xe(e2) {
  return "string" == typeof e2 && true;
}
var ke = function(e2) {
  return "function" == typeof e2 || "object" == typeof e2 && null !== e2 && !Array.isArray(e2);
}, Ve = function(e2) {
  return "__proto__" !== e2 && "constructor" !== e2 && "prototype" !== e2;
};
function Be(e2, t2, n2) {
  var r2 = e2[n2];
  ke(t2) && ke(r2) ? ze(r2, t2) : e2[n2] = t2;
}
function ze(e2) {
  for (var t2 = arguments.length, n2 = new Array(t2 > 1 ? t2 - 1 : 0), r2 = 1; r2 < t2; r2++)
    n2[r2 - 1] = arguments[r2];
  for (var o = 0, s = n2; o < s.length; o++) {
    var i = s[o];
    if (ke(i))
      for (var a in i)
        Ve(a) && Be(e2, i[a], a);
  }
  return e2;
}
var Me = React.createContext();
Me.Consumer;
var Fe = {};
function Ye(e2, t2, n2) {
  var o = _(e2), i = !xe(e2), a = t2.attrs, c2 = void 0 === a ? S : a, l2 = t2.componentId, d2 = void 0 === l2 ? function(e3, t3) {
    var n3 = "string" != typeof e3 ? "sc" : je(e3);
    Fe[n3] = (Fe[n3] || 0) + 1;
    var r2 = n3 + "-" + Te("5.3.11" + n3 + Fe[n3]);
    return t3 ? t3 + "-" + r2 : r2;
  }(t2.displayName, t2.parentComponentId) : l2, h2 = t2.displayName, p2 = void 0 === h2 ? function(e3) {
    return xe(e3) ? "styled." + e3 : "Styled(" + b(e3) + ")";
  }(e2) : h2, v2 = t2.displayName && t2.componentId ? je(t2.displayName) + "-" + t2.componentId : t2.componentId || d2, g2 = o && e2.attrs ? Array.prototype.concat(e2.attrs, c2).filter(Boolean) : c2, N2 = t2.shouldForwardProp;
  o && e2.shouldForwardProp && (N2 = t2.shouldForwardProp ? function(n3, r2, o2) {
    return e2.shouldForwardProp(n3, r2, o2) && t2.shouldForwardProp(n3, r2, o2);
  } : e2.shouldForwardProp);
  var A2, C2 = new oe(n2, v2, o ? e2.componentStyle : void 0), I2 = C2.isStatic && 0 === c2.length, P2 = function(e3, t3) {
    return function(e4, t4, n3, r2) {
      var o2 = e4.attrs, i2 = e4.componentStyle, a2 = e4.defaultProps, c3 = e4.foldedComponentIds, l3 = e4.shouldForwardProp, d3 = e4.styledComponentId, h3 = e4.target, p3 = function(e5, t5, n4) {
        void 0 === e5 && (e5 = w);
        var r3 = y({}, t5, { theme: e5 }), o3 = {};
        return n4.forEach(function(e6) {
          var t6, n5, s, i3 = e6;
          for (t6 in E(i3) && (i3 = i3(r3)), i3)
            r3[t6] = o3[t6] = "className" === t6 ? (n5 = o3[t6], s = i3[t6], n5 && s ? n5 + " " + s : n5 || s) : i3[t6];
        }), [r3, o3];
      }(Oe(t4, reactExports.useContext(Me), a2) || w, t4, o2), m2 = p3[0], v3 = p3[1], g3 = function(e5, t5, n4, r3) {
        var o3 = pe(), s = fe(), i3 = t5 ? e5.generateAndInjectStyles(w, o3, s) : e5.generateAndInjectStyles(n4, o3, s);
        return i3;
      }(i2, r2, m2), S2 = n3, b2 = v3.$as || t4.$as || v3.as || t4.as || h3, _2 = xe(b2), N3 = v3 !== t4 ? y({}, t4, {}, v3) : t4, A3 = {};
      for (var C3 in N3)
        "$" !== C3[0] && "as" !== C3 && ("forwardedAs" === C3 ? A3.as = N3[C3] : (l3 ? l3(C3, isPropValid, b2) : !_2 || isPropValid(C3)) && (A3[C3] = N3[C3]));
      return t4.style && v3.style !== t4.style && (A3.style = y({}, t4.style, {}, v3.style)), A3.className = Array.prototype.concat(c3, d3, g3 !== d3 ? g3 : null, t4.className, v3.className).filter(Boolean).join(" "), A3.ref = S2, reactExports.createElement(b2, A3);
    }(A2, e3, t3, I2);
  };
  return P2.displayName = p2, (A2 = React.forwardRef(P2)).attrs = g2, A2.componentStyle = C2, A2.displayName = p2, A2.shouldForwardProp = N2, A2.foldedComponentIds = o ? Array.prototype.concat(e2.foldedComponentIds, e2.styledComponentId) : S, A2.styledComponentId = v2, A2.target = o ? e2.target : e2, A2.withComponent = function(e3) {
    var r2 = t2.componentId, o2 = function(e4, t3) {
      if (null == e4)
        return {};
      var n3, r3, o3 = {}, s2 = Object.keys(e4);
      for (r3 = 0; r3 < s2.length; r3++)
        n3 = s2[r3], t3.indexOf(n3) >= 0 || (o3[n3] = e4[n3]);
      return o3;
    }(t2, ["componentId"]), s = r2 && r2 + "-" + (xe(e3) ? e3 : je(b(e3)));
    return Ye(e3, y({}, o2, { attrs: g2, componentId: s }), n2);
  }, Object.defineProperty(A2, "defaultProps", { get: function() {
    return this._foldedDefaultProps;
  }, set: function(t3) {
    this._foldedDefaultProps = o ? ze({}, e2.defaultProps, t3) : t3;
  } }), Object.defineProperty(A2, "toString", { value: function() {
    return "." + A2.styledComponentId;
  } }), i && m(A2, e2, { attrs: true, componentStyle: true, displayName: true, foldedComponentIds: true, shouldForwardProp: true, styledComponentId: true, target: true, withComponent: true }), A2;
}
var qe = function(e2) {
  return function e3(t2, r2, o) {
    if (void 0 === o && (o = w), !reactIsExports.isValidElementType(r2))
      return D(1, String(r2));
    var s = function() {
      return t2(r2, o, Ae.apply(void 0, arguments));
    };
    return s.withConfig = function(n2) {
      return e3(t2, r2, y({}, o, {}, n2));
    }, s.attrs = function(n2) {
      return e3(t2, r2, y({}, o, { attrs: Array.prototype.concat(o.attrs, n2).filter(Boolean) }));
    }, s;
  }(Ye, e2);
};
["a", "abbr", "address", "area", "article", "aside", "audio", "b", "base", "bdi", "bdo", "big", "blockquote", "body", "br", "button", "canvas", "caption", "cite", "code", "col", "colgroup", "data", "datalist", "dd", "del", "details", "dfn", "dialog", "div", "dl", "dt", "em", "embed", "fieldset", "figcaption", "figure", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "i", "iframe", "img", "input", "ins", "kbd", "keygen", "label", "legend", "li", "link", "main", "map", "mark", "marquee", "menu", "menuitem", "meta", "meter", "nav", "noscript", "object", "ol", "optgroup", "option", "output", "p", "param", "picture", "pre", "progress", "q", "rp", "rt", "ruby", "s", "samp", "script", "section", "select", "small", "source", "span", "strong", "style", "sub", "summary", "sup", "table", "tbody", "td", "textarea", "tfoot", "th", "thead", "time", "title", "tr", "track", "u", "ul", "var", "video", "wbr", "circle", "clipPath", "defs", "ellipse", "foreignObject", "g", "image", "line", "linearGradient", "marker", "mask", "path", "pattern", "polygon", "polyline", "radialGradient", "rect", "stop", "svg", "text", "textPath", "tspan"].forEach(function(e2) {
  qe[e2] = qe(e2);
});
var He = function() {
  function e2(e3, t3) {
    this.rules = e3, this.componentId = t3, this.isStatic = ne(e3), X.registerId(this.componentId + 1);
  }
  var t2 = e2.prototype;
  return t2.createStyles = function(e3, t3, n2, r2) {
    var o = r2(_e(this.rules, t3, n2, r2).join(""), ""), s = this.componentId + e3;
    n2.insertRules(s, s, o);
  }, t2.removeStyles = function(e3, t3) {
    t3.clearRules(this.componentId + e3);
  }, t2.renderStyles = function(e3, t3, n2, r2) {
    e3 > 2 && X.registerId(this.componentId + e3), this.removeStyles(e3, n2), this.createStyles(e3, t3, n2, r2);
  }, e2;
}();
function $e(e2) {
  for (var t2 = arguments.length, n2 = new Array(t2 > 1 ? t2 - 1 : 0), o = 1; o < t2; o++)
    n2[o - 1] = arguments[o];
  var i = Ae.apply(void 0, [e2].concat(n2)), a = "sc-global-" + Te(JSON.stringify(i)), u2 = new He(i, a);
  function d2(e3) {
    var t3 = pe(), n3 = fe(), o2 = reactExports.useContext(Me), d3 = reactExports.useRef(t3.allocateGSInstance(a)).current;
    return t3.server && h2(d3, e3, t3, o2, n3), reactExports.useLayoutEffect(function() {
      if (!t3.server)
        return h2(d3, e3, t3, o2, n3), function() {
          return u2.removeStyles(d3, t3);
        };
    }, [d3, e3, t3, o2, n3]), null;
  }
  function h2(e3, t3, n3, r2, o2) {
    if (u2.isStatic)
      u2.renderStyles(e3, P, n3, o2);
    else {
      var s = y({}, t3, { theme: Oe(t3, r2, d2.defaultProps) });
      u2.renderStyles(e3, s, n3, o2);
    }
  }
  return React.memo(d2);
}
var Persistable = /* @__PURE__ */ ((Persistable2) => {
  Persistable2["languages"] = "languages";
  Persistable2["texts"] = "texts";
  Persistable2["words"] = "words";
  Persistable2["wordtags"] = "wordtags";
  Persistable2["archivedtexts"] = "archivedtexts";
  Persistable2["archtexttags"] = "archtexttags";
  Persistable2["tags"] = "tags";
  Persistable2["tags2"] = "tags2";
  Persistable2["textitems"] = "textitems";
  Persistable2["texttags"] = "texttags";
  return Persistable2;
})(Persistable || {});
const BackendPlugin = {
  getAsync: async (key) => {
    if (key === "activeLanguageId") {
      return null;
    }
    const val = await window.api.sql.get(key);
    console.log("TEST123-getasync", key, val);
    return val;
  },
  get: (key) => {
    if (key === "activeLanguageId") {
      return null;
    }
    console.log("GETTING", key);
    return [];
  },
  set: async (key, val) => {
    await window.api.sql.set(key, val);
  },
  // set: () => {},
  insert: async (key, val) => {
    if (Object.keys(Persistable).includes(key)) {
      return await window.api.sql.insert(key, val);
    }
  },
  update: (key, val) => {
    if (Object.keys(Persistable).includes(key)) {
      return window.api.sql.update(key, val);
    }
  },
  delete: (key, deleteID) => {
    if (Object.keys(Persistable).includes(key)) {
      return window.api.sql.delete(key, deleteID);
    }
  }
  //   }
  // },
};
const getPersistedValueLocalStorage = (key, nullFallback = null) => {
  const localVal = localStorage.getItem(key);
  return localVal === null ? nullFallback : JSON.parse(localVal);
};
const setPersistedValueLocalStorage = (key, val) => {
  localStorage.setItem(key, JSON.stringify(val));
  return true;
};
const getPersistedValueRESTAPI = (key) => {
  return key;
};
const setPersistedValueRESTAPI = (key) => {
  return key;
};
var PersistanceStrategy = /* @__PURE__ */ ((PersistanceStrategy2) => {
  PersistanceStrategy2[PersistanceStrategy2["LocalStorage"] = 0] = "LocalStorage";
  PersistanceStrategy2[PersistanceStrategy2["RestAPI"] = 1] = "RestAPI";
  PersistanceStrategy2[PersistanceStrategy2["ElectronSqlite"] = 2] = "ElectronSqlite";
  return PersistanceStrategy2;
})(PersistanceStrategy || {});
const PersistenceStrategies = {
  [
    0
    /* LocalStorage */
  ]: {
    get: getPersistedValueLocalStorage,
    set: setPersistedValueLocalStorage
  },
  [
    1
    /* RestAPI */
  ]: {
    get: getPersistedValueRESTAPI,
    set: setPersistedValueRESTAPI
  },
  [
    2
    /* ElectronSqlite */
  ]: BackendPlugin
};
function GetPersistFromEnv() {
  console.log({ "BASE_URL": "./", "MODE": "production", "DEV": false, "PROD": true, "SSR": false });
  switch ({ "BASE_URL": "./", "MODE": "production", "DEV": false, "PROD": true, "SSR": false }[
    "VITE_LWT_PERSIST"
    /* persistMethod */
  ]) {
    case "REST":
      return PersistanceStrategy.RestAPI;
    case "LOCALSTORAGE":
      return PersistanceStrategy.LocalStorage;
    case "SQLITE":
      return PersistanceStrategy.ElectronSqlite;
    default:
      return PersistanceStrategy.ElectronSqlite;
  }
}
const AppVariables = {
  versionNumber: "LEGACY-0.0.0",
  releaseDate: "November 31 2023",
  // Prob dont need to be an env var
  styleVariant: "dark",
  isMobile: false,
  persistMethod: GetPersistFromEnv(),
  dbBackend: "SQLite",
  dbVersion: "1.0.0",
  restURL: "TODO",
  server: "NOSERVER",
  serverVersion: "1.0.0",
  frontend: "React",
  frontendVersion: "17.0.2",
  frontendSource: "http://github.com",
  wizardDataUri: ""
};
const TermStrengths = [1, 2, 3, 4, 5, "WKn", "Ign"];
function createPath(path, delimiter = ".") {
  return typeof path === "string" ? path.split(delimiter) : path;
}
function pick$1(propsToPick, input) {
  if (arguments.length === 1)
    return (_input) => pick$1(propsToPick, _input);
  if (input === null || input === void 0) {
    return void 0;
  }
  const keys = createPath(propsToPick, ",");
  const willReturn = {};
  let counter = 0;
  while (counter < keys.length) {
    if (keys[counter] in input) {
      willReturn[keys[counter]] = input[keys[counter]];
    }
    counter++;
  }
  return willReturn;
}
var extendStatics = function(d2, b2) {
  extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d3, b3) {
    d3.__proto__ = b3;
  } || function(d3, b3) {
    for (var p2 in b3)
      if (Object.prototype.hasOwnProperty.call(b3, p2))
        d3[p2] = b3[p2];
  };
  return extendStatics(d2, b2);
};
function __extends(d2, b2) {
  if (typeof b2 !== "function" && b2 !== null)
    throw new TypeError("Class extends value " + String(b2) + " is not a constructor or null");
  extendStatics(d2, b2);
  function __() {
    this.constructor = d2;
  }
  d2.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());
}
var __assign = function() {
  __assign = Object.assign || function __assign2(t2) {
    for (var s, i = 1, n2 = arguments.length; i < n2; i++) {
      s = arguments[i];
      for (var p2 in s)
        if (Object.prototype.hasOwnProperty.call(s, p2))
          t2[p2] = s[p2];
    }
    return t2;
  };
  return __assign.apply(this, arguments);
};
function __rest(s, e2) {
  var t2 = {};
  for (var p2 in s)
    if (Object.prototype.hasOwnProperty.call(s, p2) && e2.indexOf(p2) < 0)
      t2[p2] = s[p2];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p2 = Object.getOwnPropertySymbols(s); i < p2.length; i++) {
      if (e2.indexOf(p2[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p2[i]))
        t2[p2[i]] = s[p2[i]];
    }
  return t2;
}
function __decorate(decorators, target, key, desc) {
  var c2 = arguments.length, r2 = c2 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
    r2 = Reflect.decorate(decorators, target, key, desc);
  else
    for (var i = decorators.length - 1; i >= 0; i--)
      if (d2 = decorators[i])
        r2 = (c2 < 3 ? d2(r2) : c2 > 3 ? d2(target, key, r2) : d2(target, key)) || r2;
  return c2 > 3 && r2 && Object.defineProperty(target, key, r2), r2;
}
function __metadata(metadataKey, metadataValue) {
  if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
    return Reflect.metadata(metadataKey, metadataValue);
}
function __awaiter(thisArg, _arguments, P2, generator) {
  function adopt(value) {
    return value instanceof P2 ? value : new P2(function(resolve) {
      resolve(value);
    });
  }
  return new (P2 || (P2 = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e2) {
        reject(e2);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e2) {
        reject(e2);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}
function __generator(thisArg, body) {
  var _2 = { label: 0, sent: function() {
    if (t2[0] & 1)
      throw t2[1];
    return t2[1];
  }, trys: [], ops: [] }, f2, y2, t2, g2;
  return g2 = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g2[Symbol.iterator] = function() {
    return this;
  }), g2;
  function verb(n2) {
    return function(v2) {
      return step([n2, v2]);
    };
  }
  function step(op) {
    if (f2)
      throw new TypeError("Generator is already executing.");
    while (g2 && (g2 = 0, op[0] && (_2 = 0)), _2)
      try {
        if (f2 = 1, y2 && (t2 = op[0] & 2 ? y2["return"] : op[0] ? y2["throw"] || ((t2 = y2["return"]) && t2.call(y2), 0) : y2.next) && !(t2 = t2.call(y2, op[1])).done)
          return t2;
        if (y2 = 0, t2)
          op = [op[0] & 2, t2.value];
        switch (op[0]) {
          case 0:
          case 1:
            t2 = op;
            break;
          case 4:
            _2.label++;
            return { value: op[1], done: false };
          case 5:
            _2.label++;
            y2 = op[1];
            op = [0];
            continue;
          case 7:
            op = _2.ops.pop();
            _2.trys.pop();
            continue;
          default:
            if (!(t2 = _2.trys, t2 = t2.length > 0 && t2[t2.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _2 = 0;
              continue;
            }
            if (op[0] === 3 && (!t2 || op[1] > t2[0] && op[1] < t2[3])) {
              _2.label = op[1];
              break;
            }
            if (op[0] === 6 && _2.label < t2[1]) {
              _2.label = t2[1];
              t2 = op;
              break;
            }
            if (t2 && _2.label < t2[2]) {
              _2.label = t2[2];
              _2.ops.push(op);
              break;
            }
            if (t2[2])
              _2.ops.pop();
            _2.trys.pop();
            continue;
        }
        op = body.call(thisArg, _2);
      } catch (e2) {
        op = [6, e2];
        y2 = 0;
      } finally {
        f2 = t2 = 0;
      }
    if (op[0] & 5)
      throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
}
function __values(o) {
  var s = typeof Symbol === "function" && Symbol.iterator, m2 = s && o[s], i = 0;
  if (m2)
    return m2.call(o);
  if (o && typeof o.length === "number")
    return {
      next: function() {
        if (o && i >= o.length)
          o = void 0;
        return { value: o && o[i++], done: !o };
      }
    };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function __read(o, n2) {
  var m2 = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m2)
    return o;
  var i = m2.call(o), r2, ar = [], e2;
  try {
    while ((n2 === void 0 || n2-- > 0) && !(r2 = i.next()).done)
      ar.push(r2.value);
  } catch (error) {
    e2 = { error };
  } finally {
    try {
      if (r2 && !r2.done && (m2 = i["return"]))
        m2.call(i);
    } finally {
      if (e2)
        throw e2.error;
    }
  }
  return ar;
}
function __spread() {
  for (var ar = [], i = 0; i < arguments.length; i++)
    ar = ar.concat(__read(arguments[i]));
  return ar;
}
function __spreadArray(to, from2, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l2 = from2.length, ar; i < l2; i++) {
      if (ar || !(i in from2)) {
        if (!ar)
          ar = Array.prototype.slice.call(from2, 0, i);
        ar[i] = from2[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from2));
}
function __await(v2) {
  return this instanceof __await ? (this.v = v2, this) : new __await(v2);
}
function __asyncGenerator(thisArg, _arguments, generator) {
  if (!Symbol.asyncIterator)
    throw new TypeError("Symbol.asyncIterator is not defined.");
  var g2 = generator.apply(thisArg, _arguments || []), i, q2 = [];
  return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
    return this;
  }, i;
  function verb(n2) {
    if (g2[n2])
      i[n2] = function(v2) {
        return new Promise(function(a, b2) {
          q2.push([n2, v2, a, b2]) > 1 || resume(n2, v2);
        });
      };
  }
  function resume(n2, v2) {
    try {
      step(g2[n2](v2));
    } catch (e2) {
      settle(q2[0][3], e2);
    }
  }
  function step(r2) {
    r2.value instanceof __await ? Promise.resolve(r2.value.v).then(fulfill, reject) : settle(q2[0][2], r2);
  }
  function fulfill(value) {
    resume("next", value);
  }
  function reject(value) {
    resume("throw", value);
  }
  function settle(f2, v2) {
    if (f2(v2), q2.shift(), q2.length)
      resume(q2[0][0], q2[0][1]);
  }
}
function __asyncValues(o) {
  if (!Symbol.asyncIterator)
    throw new TypeError("Symbol.asyncIterator is not defined.");
  var m2 = o[Symbol.asyncIterator], i;
  return m2 ? m2.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
    return this;
  }, i);
  function verb(n2) {
    i[n2] = o[n2] && function(v2) {
      return new Promise(function(resolve, reject) {
        v2 = o[n2](v2), settle(resolve, reject, v2.done, v2.value);
      });
    };
  }
  function settle(resolve, reject, d2, v2) {
    Promise.resolve(v2).then(function(v3) {
      resolve({ value: v3, done: d2 });
    }, reject);
  }
}
typeof SuppressedError === "function" ? SuppressedError : function(error, suppressed, message) {
  var e2 = new Error(message);
  return e2.name = "SuppressedError", e2.error = error, e2.suppressed = suppressed, e2;
};
function isFunction$1(value) {
  return typeof value === "function";
}
function hasLift(source) {
  return isFunction$1(source === null || source === void 0 ? void 0 : source.lift);
}
function operate(init) {
  return function(source) {
    if (hasLift(source)) {
      return source.lift(function(liftedSource) {
        try {
          return init(liftedSource, this);
        } catch (err) {
          this.error(err);
        }
      });
    }
    throw new TypeError("Unable to lift unknown Observable type");
  };
}
var isArrayLike = function(x2) {
  return x2 && typeof x2.length === "number" && typeof x2 !== "function";
};
function isPromise(value) {
  return isFunction$1(value === null || value === void 0 ? void 0 : value.then);
}
function createErrorClass(createImpl) {
  var _super = function(instance) {
    Error.call(instance);
    instance.stack = new Error().stack;
  };
  var ctorFunc = createImpl(_super);
  ctorFunc.prototype = Object.create(Error.prototype);
  ctorFunc.prototype.constructor = ctorFunc;
  return ctorFunc;
}
var UnsubscriptionError = createErrorClass(function(_super) {
  return function UnsubscriptionErrorImpl(errors) {
    _super(this);
    this.message = errors ? errors.length + " errors occurred during unsubscription:\n" + errors.map(function(err, i) {
      return i + 1 + ") " + err.toString();
    }).join("\n  ") : "";
    this.name = "UnsubscriptionError";
    this.errors = errors;
  };
});
function arrRemove(arr, item) {
  if (arr) {
    var index2 = arr.indexOf(item);
    0 <= index2 && arr.splice(index2, 1);
  }
}
var Subscription = function() {
  function Subscription2(initialTeardown) {
    this.initialTeardown = initialTeardown;
    this.closed = false;
    this._parentage = null;
    this._finalizers = null;
  }
  Subscription2.prototype.unsubscribe = function() {
    var e_1, _a2, e_2, _b2;
    var errors;
    if (!this.closed) {
      this.closed = true;
      var _parentage = this._parentage;
      if (_parentage) {
        this._parentage = null;
        if (Array.isArray(_parentage)) {
          try {
            for (var _parentage_1 = __values(_parentage), _parentage_1_1 = _parentage_1.next(); !_parentage_1_1.done; _parentage_1_1 = _parentage_1.next()) {
              var parent_1 = _parentage_1_1.value;
              parent_1.remove(this);
            }
          } catch (e_1_1) {
            e_1 = { error: e_1_1 };
          } finally {
            try {
              if (_parentage_1_1 && !_parentage_1_1.done && (_a2 = _parentage_1.return))
                _a2.call(_parentage_1);
            } finally {
              if (e_1)
                throw e_1.error;
            }
          }
        } else {
          _parentage.remove(this);
        }
      }
      var initialFinalizer = this.initialTeardown;
      if (isFunction$1(initialFinalizer)) {
        try {
          initialFinalizer();
        } catch (e2) {
          errors = e2 instanceof UnsubscriptionError ? e2.errors : [e2];
        }
      }
      var _finalizers = this._finalizers;
      if (_finalizers) {
        this._finalizers = null;
        try {
          for (var _finalizers_1 = __values(_finalizers), _finalizers_1_1 = _finalizers_1.next(); !_finalizers_1_1.done; _finalizers_1_1 = _finalizers_1.next()) {
            var finalizer = _finalizers_1_1.value;
            try {
              execFinalizer(finalizer);
            } catch (err) {
              errors = errors !== null && errors !== void 0 ? errors : [];
              if (err instanceof UnsubscriptionError) {
                errors = __spreadArray(__spreadArray([], __read(errors)), __read(err.errors));
              } else {
                errors.push(err);
              }
            }
          }
        } catch (e_2_1) {
          e_2 = { error: e_2_1 };
        } finally {
          try {
            if (_finalizers_1_1 && !_finalizers_1_1.done && (_b2 = _finalizers_1.return))
              _b2.call(_finalizers_1);
          } finally {
            if (e_2)
              throw e_2.error;
          }
        }
      }
      if (errors) {
        throw new UnsubscriptionError(errors);
      }
    }
  };
  Subscription2.prototype.add = function(teardown) {
    var _a2;
    if (teardown && teardown !== this) {
      if (this.closed) {
        execFinalizer(teardown);
      } else {
        if (teardown instanceof Subscription2) {
          if (teardown.closed || teardown._hasParent(this)) {
            return;
          }
          teardown._addParent(this);
        }
        (this._finalizers = (_a2 = this._finalizers) !== null && _a2 !== void 0 ? _a2 : []).push(teardown);
      }
    }
  };
  Subscription2.prototype._hasParent = function(parent) {
    var _parentage = this._parentage;
    return _parentage === parent || Array.isArray(_parentage) && _parentage.includes(parent);
  };
  Subscription2.prototype._addParent = function(parent) {
    var _parentage = this._parentage;
    this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;
  };
  Subscription2.prototype._removeParent = function(parent) {
    var _parentage = this._parentage;
    if (_parentage === parent) {
      this._parentage = null;
    } else if (Array.isArray(_parentage)) {
      arrRemove(_parentage, parent);
    }
  };
  Subscription2.prototype.remove = function(teardown) {
    var _finalizers = this._finalizers;
    _finalizers && arrRemove(_finalizers, teardown);
    if (teardown instanceof Subscription2) {
      teardown._removeParent(this);
    }
  };
  Subscription2.EMPTY = function() {
    var empty = new Subscription2();
    empty.closed = true;
    return empty;
  }();
  return Subscription2;
}();
var EMPTY_SUBSCRIPTION = Subscription.EMPTY;
function isSubscription(value) {
  return value instanceof Subscription || value && "closed" in value && isFunction$1(value.remove) && isFunction$1(value.add) && isFunction$1(value.unsubscribe);
}
function execFinalizer(finalizer) {
  if (isFunction$1(finalizer)) {
    finalizer();
  } else {
    finalizer.unsubscribe();
  }
}
var config = {
  onUnhandledError: null,
  onStoppedNotification: null,
  Promise: void 0,
  useDeprecatedSynchronousErrorHandling: false,
  useDeprecatedNextContext: false
};
var timeoutProvider = {
  setTimeout: function(handler, timeout) {
    var args = [];
    for (var _i = 2; _i < arguments.length; _i++) {
      args[_i - 2] = arguments[_i];
    }
    var delegate = timeoutProvider.delegate;
    if (delegate === null || delegate === void 0 ? void 0 : delegate.setTimeout) {
      return delegate.setTimeout.apply(delegate, __spreadArray([handler, timeout], __read(args)));
    }
    return setTimeout.apply(void 0, __spreadArray([handler, timeout], __read(args)));
  },
  clearTimeout: function(handle) {
    var delegate = timeoutProvider.delegate;
    return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearTimeout) || clearTimeout)(handle);
  },
  delegate: void 0
};
function reportUnhandledError(err) {
  timeoutProvider.setTimeout(function() {
    {
      throw err;
    }
  });
}
function noop() {
}
function errorContext(cb2) {
  {
    cb2();
  }
}
var Subscriber = function(_super) {
  __extends(Subscriber2, _super);
  function Subscriber2(destination) {
    var _this = _super.call(this) || this;
    _this.isStopped = false;
    if (destination) {
      _this.destination = destination;
      if (isSubscription(destination)) {
        destination.add(_this);
      }
    } else {
      _this.destination = EMPTY_OBSERVER;
    }
    return _this;
  }
  Subscriber2.create = function(next, error, complete) {
    return new SafeSubscriber(next, error, complete);
  };
  Subscriber2.prototype.next = function(value) {
    if (this.isStopped)
      ;
    else {
      this._next(value);
    }
  };
  Subscriber2.prototype.error = function(err) {
    if (this.isStopped)
      ;
    else {
      this.isStopped = true;
      this._error(err);
    }
  };
  Subscriber2.prototype.complete = function() {
    if (this.isStopped)
      ;
    else {
      this.isStopped = true;
      this._complete();
    }
  };
  Subscriber2.prototype.unsubscribe = function() {
    if (!this.closed) {
      this.isStopped = true;
      _super.prototype.unsubscribe.call(this);
      this.destination = null;
    }
  };
  Subscriber2.prototype._next = function(value) {
    this.destination.next(value);
  };
  Subscriber2.prototype._error = function(err) {
    try {
      this.destination.error(err);
    } finally {
      this.unsubscribe();
    }
  };
  Subscriber2.prototype._complete = function() {
    try {
      this.destination.complete();
    } finally {
      this.unsubscribe();
    }
  };
  return Subscriber2;
}(Subscription);
var _bind = Function.prototype.bind;
function bind(fn, thisArg) {
  return _bind.call(fn, thisArg);
}
var ConsumerObserver = function() {
  function ConsumerObserver2(partialObserver) {
    this.partialObserver = partialObserver;
  }
  ConsumerObserver2.prototype.next = function(value) {
    var partialObserver = this.partialObserver;
    if (partialObserver.next) {
      try {
        partialObserver.next(value);
      } catch (error) {
        handleUnhandledError(error);
      }
    }
  };
  ConsumerObserver2.prototype.error = function(err) {
    var partialObserver = this.partialObserver;
    if (partialObserver.error) {
      try {
        partialObserver.error(err);
      } catch (error) {
        handleUnhandledError(error);
      }
    } else {
      handleUnhandledError(err);
    }
  };
  ConsumerObserver2.prototype.complete = function() {
    var partialObserver = this.partialObserver;
    if (partialObserver.complete) {
      try {
        partialObserver.complete();
      } catch (error) {
        handleUnhandledError(error);
      }
    }
  };
  return ConsumerObserver2;
}();
var SafeSubscriber = function(_super) {
  __extends(SafeSubscriber2, _super);
  function SafeSubscriber2(observerOrNext, error, complete) {
    var _this = _super.call(this) || this;
    var partialObserver;
    if (isFunction$1(observerOrNext) || !observerOrNext) {
      partialObserver = {
        next: observerOrNext !== null && observerOrNext !== void 0 ? observerOrNext : void 0,
        error: error !== null && error !== void 0 ? error : void 0,
        complete: complete !== null && complete !== void 0 ? complete : void 0
      };
    } else {
      var context_1;
      if (_this && config.useDeprecatedNextContext) {
        context_1 = Object.create(observerOrNext);
        context_1.unsubscribe = function() {
          return _this.unsubscribe();
        };
        partialObserver = {
          next: observerOrNext.next && bind(observerOrNext.next, context_1),
          error: observerOrNext.error && bind(observerOrNext.error, context_1),
          complete: observerOrNext.complete && bind(observerOrNext.complete, context_1)
        };
      } else {
        partialObserver = observerOrNext;
      }
    }
    _this.destination = new ConsumerObserver(partialObserver);
    return _this;
  }
  return SafeSubscriber2;
}(Subscriber);
function handleUnhandledError(error) {
  {
    reportUnhandledError(error);
  }
}
function defaultErrorHandler(err) {
  throw err;
}
var EMPTY_OBSERVER = {
  closed: true,
  next: noop,
  error: defaultErrorHandler,
  complete: noop
};
var observable = function() {
  return typeof Symbol === "function" && Symbol.observable || "@@observable";
}();
function identity(x2) {
  return x2;
}
function pipeFromArray(fns) {
  if (fns.length === 0) {
    return identity;
  }
  if (fns.length === 1) {
    return fns[0];
  }
  return function piped(input) {
    return fns.reduce(function(prev, fn) {
      return fn(prev);
    }, input);
  };
}
var Observable = function() {
  function Observable2(subscribe) {
    if (subscribe) {
      this._subscribe = subscribe;
    }
  }
  Observable2.prototype.lift = function(operator) {
    var observable2 = new Observable2();
    observable2.source = this;
    observable2.operator = operator;
    return observable2;
  };
  Observable2.prototype.subscribe = function(observerOrNext, error, complete) {
    var _this = this;
    var subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);
    errorContext(function() {
      var _a2 = _this, operator = _a2.operator, source = _a2.source;
      subscriber.add(operator ? operator.call(subscriber, source) : source ? _this._subscribe(subscriber) : _this._trySubscribe(subscriber));
    });
    return subscriber;
  };
  Observable2.prototype._trySubscribe = function(sink) {
    try {
      return this._subscribe(sink);
    } catch (err) {
      sink.error(err);
    }
  };
  Observable2.prototype.forEach = function(next, promiseCtor) {
    var _this = this;
    promiseCtor = getPromiseCtor(promiseCtor);
    return new promiseCtor(function(resolve, reject) {
      var subscriber = new SafeSubscriber({
        next: function(value) {
          try {
            next(value);
          } catch (err) {
            reject(err);
            subscriber.unsubscribe();
          }
        },
        error: reject,
        complete: resolve
      });
      _this.subscribe(subscriber);
    });
  };
  Observable2.prototype._subscribe = function(subscriber) {
    var _a2;
    return (_a2 = this.source) === null || _a2 === void 0 ? void 0 : _a2.subscribe(subscriber);
  };
  Observable2.prototype[observable] = function() {
    return this;
  };
  Observable2.prototype.pipe = function() {
    var operations = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      operations[_i] = arguments[_i];
    }
    return pipeFromArray(operations)(this);
  };
  Observable2.prototype.toPromise = function(promiseCtor) {
    var _this = this;
    promiseCtor = getPromiseCtor(promiseCtor);
    return new promiseCtor(function(resolve, reject) {
      var value;
      _this.subscribe(function(x2) {
        return value = x2;
      }, function(err) {
        return reject(err);
      }, function() {
        return resolve(value);
      });
    });
  };
  Observable2.create = function(subscribe) {
    return new Observable2(subscribe);
  };
  return Observable2;
}();
function getPromiseCtor(promiseCtor) {
  var _a2;
  return (_a2 = promiseCtor !== null && promiseCtor !== void 0 ? promiseCtor : config.Promise) !== null && _a2 !== void 0 ? _a2 : Promise;
}
function isObserver(value) {
  return value && isFunction$1(value.next) && isFunction$1(value.error) && isFunction$1(value.complete);
}
function isSubscriber(value) {
  return value && value instanceof Subscriber || isObserver(value) && isSubscription(value);
}
function isInteropObservable(input) {
  return isFunction$1(input[observable]);
}
function isAsyncIterable(obj) {
  return Symbol.asyncIterator && isFunction$1(obj === null || obj === void 0 ? void 0 : obj[Symbol.asyncIterator]);
}
function createInvalidObservableTypeError(input) {
  return new TypeError("You provided " + (input !== null && typeof input === "object" ? "an invalid object" : "'" + input + "'") + " where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.");
}
function getSymbolIterator() {
  if (typeof Symbol !== "function" || !Symbol.iterator) {
    return "@@iterator";
  }
  return Symbol.iterator;
}
var iterator = getSymbolIterator();
function isIterable$1(input) {
  return isFunction$1(input === null || input === void 0 ? void 0 : input[iterator]);
}
function readableStreamLikeToAsyncGenerator(readableStream) {
  return __asyncGenerator(this, arguments, function readableStreamLikeToAsyncGenerator_1() {
    var reader, _a2, value, done;
    return __generator(this, function(_b2) {
      switch (_b2.label) {
        case 0:
          reader = readableStream.getReader();
          _b2.label = 1;
        case 1:
          _b2.trys.push([1, , 9, 10]);
          _b2.label = 2;
        case 2:
          return [4, __await(reader.read())];
        case 3:
          _a2 = _b2.sent(), value = _a2.value, done = _a2.done;
          if (!done)
            return [3, 5];
          return [4, __await(void 0)];
        case 4:
          return [2, _b2.sent()];
        case 5:
          return [4, __await(value)];
        case 6:
          return [4, _b2.sent()];
        case 7:
          _b2.sent();
          return [3, 2];
        case 8:
          return [3, 10];
        case 9:
          reader.releaseLock();
          return [7];
        case 10:
          return [2];
      }
    });
  });
}
function isReadableStreamLike(obj) {
  return isFunction$1(obj === null || obj === void 0 ? void 0 : obj.getReader);
}
function innerFrom(input) {
  if (input instanceof Observable) {
    return input;
  }
  if (input != null) {
    if (isInteropObservable(input)) {
      return fromInteropObservable(input);
    }
    if (isArrayLike(input)) {
      return fromArrayLike(input);
    }
    if (isPromise(input)) {
      return fromPromise(input);
    }
    if (isAsyncIterable(input)) {
      return fromAsyncIterable(input);
    }
    if (isIterable$1(input)) {
      return fromIterable(input);
    }
    if (isReadableStreamLike(input)) {
      return fromReadableStreamLike(input);
    }
  }
  throw createInvalidObservableTypeError(input);
}
function fromInteropObservable(obj) {
  return new Observable(function(subscriber) {
    var obs = obj[observable]();
    if (isFunction$1(obs.subscribe)) {
      return obs.subscribe(subscriber);
    }
    throw new TypeError("Provided object does not correctly implement Symbol.observable");
  });
}
function fromArrayLike(array2) {
  return new Observable(function(subscriber) {
    for (var i = 0; i < array2.length && !subscriber.closed; i++) {
      subscriber.next(array2[i]);
    }
    subscriber.complete();
  });
}
function fromPromise(promise) {
  return new Observable(function(subscriber) {
    promise.then(function(value) {
      if (!subscriber.closed) {
        subscriber.next(value);
        subscriber.complete();
      }
    }, function(err) {
      return subscriber.error(err);
    }).then(null, reportUnhandledError);
  });
}
function fromIterable(iterable) {
  return new Observable(function(subscriber) {
    var e_1, _a2;
    try {
      for (var iterable_1 = __values(iterable), iterable_1_1 = iterable_1.next(); !iterable_1_1.done; iterable_1_1 = iterable_1.next()) {
        var value = iterable_1_1.value;
        subscriber.next(value);
        if (subscriber.closed) {
          return;
        }
      }
    } catch (e_1_1) {
      e_1 = { error: e_1_1 };
    } finally {
      try {
        if (iterable_1_1 && !iterable_1_1.done && (_a2 = iterable_1.return))
          _a2.call(iterable_1);
      } finally {
        if (e_1)
          throw e_1.error;
      }
    }
    subscriber.complete();
  });
}
function fromAsyncIterable(asyncIterable) {
  return new Observable(function(subscriber) {
    process$1(asyncIterable, subscriber).catch(function(err) {
      return subscriber.error(err);
    });
  });
}
function fromReadableStreamLike(readableStream) {
  return fromAsyncIterable(readableStreamLikeToAsyncGenerator(readableStream));
}
function process$1(asyncIterable, subscriber) {
  var asyncIterable_1, asyncIterable_1_1;
  var e_2, _a2;
  return __awaiter(this, void 0, void 0, function() {
    var value, e_2_1;
    return __generator(this, function(_b2) {
      switch (_b2.label) {
        case 0:
          _b2.trys.push([0, 5, 6, 11]);
          asyncIterable_1 = __asyncValues(asyncIterable);
          _b2.label = 1;
        case 1:
          return [4, asyncIterable_1.next()];
        case 2:
          if (!(asyncIterable_1_1 = _b2.sent(), !asyncIterable_1_1.done))
            return [3, 4];
          value = asyncIterable_1_1.value;
          subscriber.next(value);
          if (subscriber.closed) {
            return [2];
          }
          _b2.label = 3;
        case 3:
          return [3, 1];
        case 4:
          return [3, 11];
        case 5:
          e_2_1 = _b2.sent();
          e_2 = { error: e_2_1 };
          return [3, 11];
        case 6:
          _b2.trys.push([6, , 9, 10]);
          if (!(asyncIterable_1_1 && !asyncIterable_1_1.done && (_a2 = asyncIterable_1.return)))
            return [3, 8];
          return [4, _a2.call(asyncIterable_1)];
        case 7:
          _b2.sent();
          _b2.label = 8;
        case 8:
          return [3, 10];
        case 9:
          if (e_2)
            throw e_2.error;
          return [7];
        case 10:
          return [7];
        case 11:
          subscriber.complete();
          return [2];
      }
    });
  });
}
function createOperatorSubscriber(destination, onNext, onComplete, onError, onFinalize) {
  return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);
}
var OperatorSubscriber = function(_super) {
  __extends(OperatorSubscriber2, _super);
  function OperatorSubscriber2(destination, onNext, onComplete, onError, onFinalize, shouldUnsubscribe) {
    var _this = _super.call(this, destination) || this;
    _this.onFinalize = onFinalize;
    _this.shouldUnsubscribe = shouldUnsubscribe;
    _this._next = onNext ? function(value) {
      try {
        onNext(value);
      } catch (err) {
        destination.error(err);
      }
    } : _super.prototype._next;
    _this._error = onError ? function(err) {
      try {
        onError(err);
      } catch (err2) {
        destination.error(err2);
      } finally {
        this.unsubscribe();
      }
    } : _super.prototype._error;
    _this._complete = onComplete ? function() {
      try {
        onComplete();
      } catch (err) {
        destination.error(err);
      } finally {
        this.unsubscribe();
      }
    } : _super.prototype._complete;
    return _this;
  }
  OperatorSubscriber2.prototype.unsubscribe = function() {
    var _a2;
    if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {
      var closed_1 = this.closed;
      _super.prototype.unsubscribe.call(this);
      !closed_1 && ((_a2 = this.onFinalize) === null || _a2 === void 0 ? void 0 : _a2.call(this));
    }
  };
  return OperatorSubscriber2;
}(Subscriber);
function audit(durationSelector) {
  return operate(function(source, subscriber) {
    var hasValue = false;
    var lastValue = null;
    var durationSubscriber = null;
    var isComplete = false;
    var endDuration = function() {
      durationSubscriber === null || durationSubscriber === void 0 ? void 0 : durationSubscriber.unsubscribe();
      durationSubscriber = null;
      if (hasValue) {
        hasValue = false;
        var value = lastValue;
        lastValue = null;
        subscriber.next(value);
      }
      isComplete && subscriber.complete();
    };
    var cleanupDuration = function() {
      durationSubscriber = null;
      isComplete && subscriber.complete();
    };
    source.subscribe(createOperatorSubscriber(subscriber, function(value) {
      hasValue = true;
      lastValue = value;
      if (!durationSubscriber) {
        innerFrom(durationSelector(value)).subscribe(durationSubscriber = createOperatorSubscriber(subscriber, endDuration, cleanupDuration));
      }
    }, function() {
      isComplete = true;
      (!hasValue || !durationSubscriber || durationSubscriber.closed) && subscriber.complete();
    }));
  });
}
var Action = function(_super) {
  __extends(Action2, _super);
  function Action2(scheduler2, work) {
    return _super.call(this) || this;
  }
  Action2.prototype.schedule = function(state, delay2) {
    return this;
  };
  return Action2;
}(Subscription);
var intervalProvider = {
  setInterval: function(handler, timeout) {
    var args = [];
    for (var _i = 2; _i < arguments.length; _i++) {
      args[_i - 2] = arguments[_i];
    }
    var delegate = intervalProvider.delegate;
    if (delegate === null || delegate === void 0 ? void 0 : delegate.setInterval) {
      return delegate.setInterval.apply(delegate, __spreadArray([handler, timeout], __read(args)));
    }
    return setInterval.apply(void 0, __spreadArray([handler, timeout], __read(args)));
  },
  clearInterval: function(handle) {
    var delegate = intervalProvider.delegate;
    return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearInterval) || clearInterval)(handle);
  },
  delegate: void 0
};
var AsyncAction = function(_super) {
  __extends(AsyncAction2, _super);
  function AsyncAction2(scheduler2, work) {
    var _this = _super.call(this, scheduler2, work) || this;
    _this.scheduler = scheduler2;
    _this.work = work;
    _this.pending = false;
    return _this;
  }
  AsyncAction2.prototype.schedule = function(state, delay2) {
    var _a2;
    if (delay2 === void 0) {
      delay2 = 0;
    }
    if (this.closed) {
      return this;
    }
    this.state = state;
    var id2 = this.id;
    var scheduler2 = this.scheduler;
    if (id2 != null) {
      this.id = this.recycleAsyncId(scheduler2, id2, delay2);
    }
    this.pending = true;
    this.delay = delay2;
    this.id = (_a2 = this.id) !== null && _a2 !== void 0 ? _a2 : this.requestAsyncId(scheduler2, this.id, delay2);
    return this;
  };
  AsyncAction2.prototype.requestAsyncId = function(scheduler2, _id, delay2) {
    if (delay2 === void 0) {
      delay2 = 0;
    }
    return intervalProvider.setInterval(scheduler2.flush.bind(scheduler2, this), delay2);
  };
  AsyncAction2.prototype.recycleAsyncId = function(_scheduler, id2, delay2) {
    if (delay2 === void 0) {
      delay2 = 0;
    }
    if (delay2 != null && this.delay === delay2 && this.pending === false) {
      return id2;
    }
    if (id2 != null) {
      intervalProvider.clearInterval(id2);
    }
    return void 0;
  };
  AsyncAction2.prototype.execute = function(state, delay2) {
    if (this.closed) {
      return new Error("executing a cancelled action");
    }
    this.pending = false;
    var error = this._execute(state, delay2);
    if (error) {
      return error;
    } else if (this.pending === false && this.id != null) {
      this.id = this.recycleAsyncId(this.scheduler, this.id, null);
    }
  };
  AsyncAction2.prototype._execute = function(state, _delay) {
    var errored = false;
    var errorValue;
    try {
      this.work(state);
    } catch (e2) {
      errored = true;
      errorValue = e2 ? e2 : new Error("Scheduled action threw falsy error");
    }
    if (errored) {
      this.unsubscribe();
      return errorValue;
    }
  };
  AsyncAction2.prototype.unsubscribe = function() {
    if (!this.closed) {
      var _a2 = this, id2 = _a2.id, scheduler2 = _a2.scheduler;
      var actions = scheduler2.actions;
      this.work = this.state = this.scheduler = null;
      this.pending = false;
      arrRemove(actions, this);
      if (id2 != null) {
        this.id = this.recycleAsyncId(scheduler2, id2, null);
      }
      this.delay = null;
      _super.prototype.unsubscribe.call(this);
    }
  };
  return AsyncAction2;
}(Action);
var dateTimestampProvider = {
  now: function() {
    return (dateTimestampProvider.delegate || Date).now();
  },
  delegate: void 0
};
var Scheduler = function() {
  function Scheduler2(schedulerActionCtor, now) {
    if (now === void 0) {
      now = Scheduler2.now;
    }
    this.schedulerActionCtor = schedulerActionCtor;
    this.now = now;
  }
  Scheduler2.prototype.schedule = function(work, delay2, state) {
    if (delay2 === void 0) {
      delay2 = 0;
    }
    return new this.schedulerActionCtor(this, work).schedule(state, delay2);
  };
  Scheduler2.now = dateTimestampProvider.now;
  return Scheduler2;
}();
var AsyncScheduler = function(_super) {
  __extends(AsyncScheduler2, _super);
  function AsyncScheduler2(SchedulerAction, now) {
    if (now === void 0) {
      now = Scheduler.now;
    }
    var _this = _super.call(this, SchedulerAction, now) || this;
    _this.actions = [];
    _this._active = false;
    return _this;
  }
  AsyncScheduler2.prototype.flush = function(action2) {
    var actions = this.actions;
    if (this._active) {
      actions.push(action2);
      return;
    }
    var error;
    this._active = true;
    do {
      if (error = action2.execute(action2.state, action2.delay)) {
        break;
      }
    } while (action2 = actions.shift());
    this._active = false;
    if (error) {
      while (action2 = actions.shift()) {
        action2.unsubscribe();
      }
      throw error;
    }
  };
  return AsyncScheduler2;
}(Scheduler);
var asyncScheduler = new AsyncScheduler(AsyncAction);
var async = asyncScheduler;
function isScheduler(value) {
  return value && isFunction$1(value.schedule);
}
function isValidDate(value) {
  return value instanceof Date && !isNaN(value);
}
function timer(dueTime, intervalOrScheduler, scheduler2) {
  if (dueTime === void 0) {
    dueTime = 0;
  }
  if (scheduler2 === void 0) {
    scheduler2 = async;
  }
  var intervalDuration = -1;
  if (intervalOrScheduler != null) {
    if (isScheduler(intervalOrScheduler)) {
      scheduler2 = intervalOrScheduler;
    } else {
      intervalDuration = intervalOrScheduler;
    }
  }
  return new Observable(function(subscriber) {
    var due = isValidDate(dueTime) ? +dueTime - scheduler2.now() : dueTime;
    if (due < 0) {
      due = 0;
    }
    var n2 = 0;
    return scheduler2.schedule(function() {
      if (!subscriber.closed) {
        subscriber.next(n2++);
        if (0 <= intervalDuration) {
          this.schedule(void 0, intervalDuration);
        } else {
          subscriber.complete();
        }
      }
    }, due);
  });
}
function auditTime(duration, scheduler2) {
  if (scheduler2 === void 0) {
    scheduler2 = asyncScheduler;
  }
  return audit(function() {
    return timer(duration, scheduler2);
  });
}
function last(arr) {
  return arr[arr.length - 1];
}
function popResultSelector(args) {
  return isFunction$1(last(args)) ? args.pop() : void 0;
}
function popScheduler(args) {
  return isScheduler(last(args)) ? args.pop() : void 0;
}
function popNumber(args, defaultValue) {
  return typeof last(args) === "number" ? args.pop() : defaultValue;
}
function executeSchedule(parentSubscription, scheduler2, work, delay2, repeat) {
  if (delay2 === void 0) {
    delay2 = 0;
  }
  if (repeat === void 0) {
    repeat = false;
  }
  var scheduleSubscription = scheduler2.schedule(function() {
    work();
    if (repeat) {
      parentSubscription.add(this.schedule(null, delay2));
    } else {
      this.unsubscribe();
    }
  }, delay2);
  parentSubscription.add(scheduleSubscription);
  if (!repeat) {
    return scheduleSubscription;
  }
}
var isArray$2 = Array.isArray;
var getPrototypeOf = Object.getPrototypeOf, objectProto = Object.prototype, getKeys = Object.keys;
function argsArgArrayOrObject(args) {
  if (args.length === 1) {
    var first_1 = args[0];
    if (isArray$2(first_1)) {
      return { args: first_1, keys: null };
    }
    if (isPOJO(first_1)) {
      var keys = getKeys(first_1);
      return {
        args: keys.map(function(key) {
          return first_1[key];
        }),
        keys
      };
    }
  }
  return { args, keys: null };
}
function isPOJO(obj) {
  return obj && typeof obj === "object" && getPrototypeOf(obj) === objectProto;
}
function observeOn(scheduler2, delay2) {
  if (delay2 === void 0) {
    delay2 = 0;
  }
  return operate(function(source, subscriber) {
    source.subscribe(createOperatorSubscriber(subscriber, function(value) {
      return executeSchedule(subscriber, scheduler2, function() {
        return subscriber.next(value);
      }, delay2);
    }, function() {
      return executeSchedule(subscriber, scheduler2, function() {
        return subscriber.complete();
      }, delay2);
    }, function(err) {
      return executeSchedule(subscriber, scheduler2, function() {
        return subscriber.error(err);
      }, delay2);
    }));
  });
}
function subscribeOn(scheduler2, delay2) {
  if (delay2 === void 0) {
    delay2 = 0;
  }
  return operate(function(source, subscriber) {
    subscriber.add(scheduler2.schedule(function() {
      return source.subscribe(subscriber);
    }, delay2));
  });
}
function scheduleObservable(input, scheduler2) {
  return innerFrom(input).pipe(subscribeOn(scheduler2), observeOn(scheduler2));
}
function schedulePromise(input, scheduler2) {
  return innerFrom(input).pipe(subscribeOn(scheduler2), observeOn(scheduler2));
}
function scheduleArray(input, scheduler2) {
  return new Observable(function(subscriber) {
    var i = 0;
    return scheduler2.schedule(function() {
      if (i === input.length) {
        subscriber.complete();
      } else {
        subscriber.next(input[i++]);
        if (!subscriber.closed) {
          this.schedule();
        }
      }
    });
  });
}
function scheduleIterable(input, scheduler2) {
  return new Observable(function(subscriber) {
    var iterator$1;
    executeSchedule(subscriber, scheduler2, function() {
      iterator$1 = input[iterator]();
      executeSchedule(subscriber, scheduler2, function() {
        var _a2;
        var value;
        var done;
        try {
          _a2 = iterator$1.next(), value = _a2.value, done = _a2.done;
        } catch (err) {
          subscriber.error(err);
          return;
        }
        if (done) {
          subscriber.complete();
        } else {
          subscriber.next(value);
        }
      }, 0, true);
    });
    return function() {
      return isFunction$1(iterator$1 === null || iterator$1 === void 0 ? void 0 : iterator$1.return) && iterator$1.return();
    };
  });
}
function scheduleAsyncIterable(input, scheduler2) {
  if (!input) {
    throw new Error("Iterable cannot be null");
  }
  return new Observable(function(subscriber) {
    executeSchedule(subscriber, scheduler2, function() {
      var iterator2 = input[Symbol.asyncIterator]();
      executeSchedule(subscriber, scheduler2, function() {
        iterator2.next().then(function(result) {
          if (result.done) {
            subscriber.complete();
          } else {
            subscriber.next(result.value);
          }
        });
      }, 0, true);
    });
  });
}
function scheduleReadableStreamLike(input, scheduler2) {
  return scheduleAsyncIterable(readableStreamLikeToAsyncGenerator(input), scheduler2);
}
function scheduled(input, scheduler2) {
  if (input != null) {
    if (isInteropObservable(input)) {
      return scheduleObservable(input, scheduler2);
    }
    if (isArrayLike(input)) {
      return scheduleArray(input, scheduler2);
    }
    if (isPromise(input)) {
      return schedulePromise(input, scheduler2);
    }
    if (isAsyncIterable(input)) {
      return scheduleAsyncIterable(input, scheduler2);
    }
    if (isIterable$1(input)) {
      return scheduleIterable(input, scheduler2);
    }
    if (isReadableStreamLike(input)) {
      return scheduleReadableStreamLike(input, scheduler2);
    }
  }
  throw createInvalidObservableTypeError(input);
}
function from(input, scheduler2) {
  return scheduler2 ? scheduled(input, scheduler2) : innerFrom(input);
}
function map(project, thisArg) {
  return operate(function(source, subscriber) {
    var index2 = 0;
    source.subscribe(createOperatorSubscriber(subscriber, function(value) {
      subscriber.next(project.call(thisArg, value, index2++));
    }));
  });
}
var isArray$1 = Array.isArray;
function callOrApply(fn, args) {
  return isArray$1(args) ? fn.apply(void 0, __spreadArray([], __read(args))) : fn(args);
}
function mapOneOrManyArgs(fn) {
  return map(function(args) {
    return callOrApply(fn, args);
  });
}
function createObject(keys, values) {
  return keys.reduce(function(result, key, i) {
    return result[key] = values[i], result;
  }, {});
}
function combineLatest() {
  var args = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    args[_i] = arguments[_i];
  }
  var scheduler2 = popScheduler(args);
  var resultSelector = popResultSelector(args);
  var _a2 = argsArgArrayOrObject(args), observables = _a2.args, keys = _a2.keys;
  if (observables.length === 0) {
    return from([], scheduler2);
  }
  var result = new Observable(combineLatestInit(observables, scheduler2, keys ? function(values) {
    return createObject(keys, values);
  } : identity));
  return resultSelector ? result.pipe(mapOneOrManyArgs(resultSelector)) : result;
}
function combineLatestInit(observables, scheduler2, valueTransform) {
  if (valueTransform === void 0) {
    valueTransform = identity;
  }
  return function(subscriber) {
    maybeSchedule(scheduler2, function() {
      var length = observables.length;
      var values = new Array(length);
      var active = length;
      var remainingFirstValues = length;
      var _loop_1 = function(i2) {
        maybeSchedule(scheduler2, function() {
          var source = from(observables[i2], scheduler2);
          var hasFirstValue = false;
          source.subscribe(createOperatorSubscriber(subscriber, function(value) {
            values[i2] = value;
            if (!hasFirstValue) {
              hasFirstValue = true;
              remainingFirstValues--;
            }
            if (!remainingFirstValues) {
              subscriber.next(valueTransform(values.slice()));
            }
          }, function() {
            if (!--active) {
              subscriber.complete();
            }
          }));
        }, subscriber);
      };
      for (var i = 0; i < length; i++) {
        _loop_1(i);
      }
    }, subscriber);
  };
}
function maybeSchedule(scheduler2, execute, subscription) {
  if (scheduler2) {
    executeSchedule(subscription, scheduler2, execute);
  } else {
    execute();
  }
}
function mergeInternals(source, subscriber, project, concurrent, onBeforeNext, expand, innerSubScheduler, additionalFinalizer) {
  var buffer = [];
  var active = 0;
  var index2 = 0;
  var isComplete = false;
  var checkComplete = function() {
    if (isComplete && !buffer.length && !active) {
      subscriber.complete();
    }
  };
  var outerNext = function(value) {
    return active < concurrent ? doInnerSub(value) : buffer.push(value);
  };
  var doInnerSub = function(value) {
    expand && subscriber.next(value);
    active++;
    var innerComplete = false;
    innerFrom(project(value, index2++)).subscribe(createOperatorSubscriber(subscriber, function(innerValue) {
      onBeforeNext === null || onBeforeNext === void 0 ? void 0 : onBeforeNext(innerValue);
      if (expand) {
        outerNext(innerValue);
      } else {
        subscriber.next(innerValue);
      }
    }, function() {
      innerComplete = true;
    }, void 0, function() {
      if (innerComplete) {
        try {
          active--;
          var _loop_1 = function() {
            var bufferedValue = buffer.shift();
            if (innerSubScheduler) {
              executeSchedule(subscriber, innerSubScheduler, function() {
                return doInnerSub(bufferedValue);
              });
            } else {
              doInnerSub(bufferedValue);
            }
          };
          while (buffer.length && active < concurrent) {
            _loop_1();
          }
          checkComplete();
        } catch (err) {
          subscriber.error(err);
        }
      }
    }));
  };
  source.subscribe(createOperatorSubscriber(subscriber, outerNext, function() {
    isComplete = true;
    checkComplete();
  }));
  return function() {
    additionalFinalizer === null || additionalFinalizer === void 0 ? void 0 : additionalFinalizer();
  };
}
function mergeMap(project, resultSelector, concurrent) {
  if (concurrent === void 0) {
    concurrent = Infinity;
  }
  if (isFunction$1(resultSelector)) {
    return mergeMap(function(a, i) {
      return map(function(b2, ii2) {
        return resultSelector(a, b2, i, ii2);
      })(innerFrom(project(a, i)));
    }, concurrent);
  } else if (typeof resultSelector === "number") {
    concurrent = resultSelector;
  }
  return operate(function(source, subscriber) {
    return mergeInternals(source, subscriber, project, concurrent);
  });
}
function scanInternals(accumulator, seed, hasSeed, emitOnNext, emitBeforeComplete) {
  return function(source, subscriber) {
    var hasState = hasSeed;
    var state = seed;
    var index2 = 0;
    source.subscribe(createOperatorSubscriber(subscriber, function(value) {
      var i = index2++;
      state = hasState ? accumulator(state, value, i) : (hasState = true, value);
      emitOnNext && subscriber.next(state);
    }, emitBeforeComplete && function() {
      hasState && subscriber.next(state);
      subscriber.complete();
    }));
  };
}
function reduce(accumulator, seed) {
  return operate(scanInternals(accumulator, seed, arguments.length >= 2, false, true));
}
function mergeAll(concurrent) {
  if (concurrent === void 0) {
    concurrent = Infinity;
  }
  return mergeMap(identity, concurrent);
}
function concatAll() {
  return mergeAll(1);
}
var ObjectUnsubscribedError = createErrorClass(function(_super) {
  return function ObjectUnsubscribedErrorImpl() {
    _super(this);
    this.name = "ObjectUnsubscribedError";
    this.message = "object unsubscribed";
  };
});
var Subject = function(_super) {
  __extends(Subject2, _super);
  function Subject2() {
    var _this = _super.call(this) || this;
    _this.closed = false;
    _this.currentObservers = null;
    _this.observers = [];
    _this.isStopped = false;
    _this.hasError = false;
    _this.thrownError = null;
    return _this;
  }
  Subject2.prototype.lift = function(operator) {
    var subject = new AnonymousSubject(this, this);
    subject.operator = operator;
    return subject;
  };
  Subject2.prototype._throwIfClosed = function() {
    if (this.closed) {
      throw new ObjectUnsubscribedError();
    }
  };
  Subject2.prototype.next = function(value) {
    var _this = this;
    errorContext(function() {
      var e_1, _a2;
      _this._throwIfClosed();
      if (!_this.isStopped) {
        if (!_this.currentObservers) {
          _this.currentObservers = Array.from(_this.observers);
        }
        try {
          for (var _b2 = __values(_this.currentObservers), _c = _b2.next(); !_c.done; _c = _b2.next()) {
            var observer = _c.value;
            observer.next(value);
          }
        } catch (e_1_1) {
          e_1 = { error: e_1_1 };
        } finally {
          try {
            if (_c && !_c.done && (_a2 = _b2.return))
              _a2.call(_b2);
          } finally {
            if (e_1)
              throw e_1.error;
          }
        }
      }
    });
  };
  Subject2.prototype.error = function(err) {
    var _this = this;
    errorContext(function() {
      _this._throwIfClosed();
      if (!_this.isStopped) {
        _this.hasError = _this.isStopped = true;
        _this.thrownError = err;
        var observers = _this.observers;
        while (observers.length) {
          observers.shift().error(err);
        }
      }
    });
  };
  Subject2.prototype.complete = function() {
    var _this = this;
    errorContext(function() {
      _this._throwIfClosed();
      if (!_this.isStopped) {
        _this.isStopped = true;
        var observers = _this.observers;
        while (observers.length) {
          observers.shift().complete();
        }
      }
    });
  };
  Subject2.prototype.unsubscribe = function() {
    this.isStopped = this.closed = true;
    this.observers = this.currentObservers = null;
  };
  Object.defineProperty(Subject2.prototype, "observed", {
    get: function() {
      var _a2;
      return ((_a2 = this.observers) === null || _a2 === void 0 ? void 0 : _a2.length) > 0;
    },
    enumerable: false,
    configurable: true
  });
  Subject2.prototype._trySubscribe = function(subscriber) {
    this._throwIfClosed();
    return _super.prototype._trySubscribe.call(this, subscriber);
  };
  Subject2.prototype._subscribe = function(subscriber) {
    this._throwIfClosed();
    this._checkFinalizedStatuses(subscriber);
    return this._innerSubscribe(subscriber);
  };
  Subject2.prototype._innerSubscribe = function(subscriber) {
    var _this = this;
    var _a2 = this, hasError = _a2.hasError, isStopped = _a2.isStopped, observers = _a2.observers;
    if (hasError || isStopped) {
      return EMPTY_SUBSCRIPTION;
    }
    this.currentObservers = null;
    observers.push(subscriber);
    return new Subscription(function() {
      _this.currentObservers = null;
      arrRemove(observers, subscriber);
    });
  };
  Subject2.prototype._checkFinalizedStatuses = function(subscriber) {
    var _a2 = this, hasError = _a2.hasError, thrownError = _a2.thrownError, isStopped = _a2.isStopped;
    if (hasError) {
      subscriber.error(thrownError);
    } else if (isStopped) {
      subscriber.complete();
    }
  };
  Subject2.prototype.asObservable = function() {
    var observable2 = new Observable();
    observable2.source = this;
    return observable2;
  };
  Subject2.create = function(destination, source) {
    return new AnonymousSubject(destination, source);
  };
  return Subject2;
}(Observable);
var AnonymousSubject = function(_super) {
  __extends(AnonymousSubject2, _super);
  function AnonymousSubject2(destination, source) {
    var _this = _super.call(this) || this;
    _this.destination = destination;
    _this.source = source;
    return _this;
  }
  AnonymousSubject2.prototype.next = function(value) {
    var _a2, _b2;
    (_b2 = (_a2 = this.destination) === null || _a2 === void 0 ? void 0 : _a2.next) === null || _b2 === void 0 ? void 0 : _b2.call(_a2, value);
  };
  AnonymousSubject2.prototype.error = function(err) {
    var _a2, _b2;
    (_b2 = (_a2 = this.destination) === null || _a2 === void 0 ? void 0 : _a2.error) === null || _b2 === void 0 ? void 0 : _b2.call(_a2, err);
  };
  AnonymousSubject2.prototype.complete = function() {
    var _a2, _b2;
    (_b2 = (_a2 = this.destination) === null || _a2 === void 0 ? void 0 : _a2.complete) === null || _b2 === void 0 ? void 0 : _b2.call(_a2);
  };
  AnonymousSubject2.prototype._subscribe = function(subscriber) {
    var _a2, _b2;
    return (_b2 = (_a2 = this.source) === null || _a2 === void 0 ? void 0 : _a2.subscribe(subscriber)) !== null && _b2 !== void 0 ? _b2 : EMPTY_SUBSCRIPTION;
  };
  return AnonymousSubject2;
}(Subject);
function count$1(predicate) {
  return reduce(function(total, value, i) {
    return !predicate || predicate(value, i) ? total + 1 : total;
  }, 0);
}
function debounceTime(dueTime, scheduler2) {
  if (scheduler2 === void 0) {
    scheduler2 = asyncScheduler;
  }
  return operate(function(source, subscriber) {
    var activeTask = null;
    var lastValue = null;
    var lastTime = null;
    var emit = function() {
      if (activeTask) {
        activeTask.unsubscribe();
        activeTask = null;
        var value = lastValue;
        lastValue = null;
        subscriber.next(value);
      }
    };
    function emitWhenIdle() {
      var targetTime = lastTime + dueTime;
      var now = scheduler2.now();
      if (now < targetTime) {
        activeTask = this.schedule(void 0, targetTime - now);
        subscriber.add(activeTask);
        return;
      }
      emit();
    }
    source.subscribe(createOperatorSubscriber(subscriber, function(value) {
      lastValue = value;
      lastTime = scheduler2.now();
      if (!activeTask) {
        activeTask = scheduler2.schedule(emitWhenIdle, dueTime);
        subscriber.add(activeTask);
      }
    }, function() {
      emit();
      subscriber.complete();
    }, void 0, function() {
      lastValue = activeTask = null;
    }));
  });
}
function concat() {
  var args = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    args[_i] = arguments[_i];
  }
  return concatAll()(from(args, popScheduler(args)));
}
var EMPTY = new Observable(function(subscriber) {
  return subscriber.complete();
});
function take(count2) {
  return count2 <= 0 ? function() {
    return EMPTY;
  } : operate(function(source, subscriber) {
    var seen = 0;
    source.subscribe(createOperatorSubscriber(subscriber, function(value) {
      if (++seen <= count2) {
        subscriber.next(value);
        if (count2 <= seen) {
          subscriber.complete();
        }
      }
    }));
  });
}
function ignoreElements() {
  return operate(function(source, subscriber) {
    source.subscribe(createOperatorSubscriber(subscriber, noop));
  });
}
function mapTo(value) {
  return map(function() {
    return value;
  });
}
function delayWhen(delayDurationSelector, subscriptionDelay) {
  if (subscriptionDelay) {
    return function(source) {
      return concat(subscriptionDelay.pipe(take(1), ignoreElements()), source.pipe(delayWhen(delayDurationSelector)));
    };
  }
  return mergeMap(function(value, index2) {
    return innerFrom(delayDurationSelector(value, index2)).pipe(take(1), mapTo(value));
  });
}
function delay(due, scheduler2) {
  if (scheduler2 === void 0) {
    scheduler2 = asyncScheduler;
  }
  var duration = timer(due, scheduler2);
  return delayWhen(function() {
    return duration;
  });
}
function of() {
  var args = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    args[_i] = arguments[_i];
  }
  var scheduler2 = popScheduler(args);
  return from(args, scheduler2);
}
function distinctUntilChanged(comparator, keySelector) {
  if (keySelector === void 0) {
    keySelector = identity;
  }
  comparator = comparator !== null && comparator !== void 0 ? comparator : defaultCompare;
  return operate(function(source, subscriber) {
    var previousKey;
    var first = true;
    source.subscribe(createOperatorSubscriber(subscriber, function(value) {
      var currentKey = keySelector(value);
      if (first || !comparator(previousKey, currentKey)) {
        first = false;
        previousKey = currentKey;
        subscriber.next(value);
      }
    }));
  });
}
function defaultCompare(a, b2) {
  return a === b2;
}
function filter(predicate, thisArg) {
  return operate(function(source, subscriber) {
    var index2 = 0;
    source.subscribe(createOperatorSubscriber(subscriber, function(value) {
      return predicate.call(thisArg, value, index2++) && subscriber.next(value);
    }));
  });
}
function pairwise() {
  return operate(function(source, subscriber) {
    var prev;
    var hasPrev = false;
    source.subscribe(createOperatorSubscriber(subscriber, function(value) {
      var p2 = prev;
      prev = value;
      hasPrev && subscriber.next([p2, value]);
      hasPrev = true;
    }));
  });
}
var BehaviorSubject = function(_super) {
  __extends(BehaviorSubject2, _super);
  function BehaviorSubject2(_value) {
    var _this = _super.call(this) || this;
    _this._value = _value;
    return _this;
  }
  Object.defineProperty(BehaviorSubject2.prototype, "value", {
    get: function() {
      return this.getValue();
    },
    enumerable: false,
    configurable: true
  });
  BehaviorSubject2.prototype._subscribe = function(subscriber) {
    var subscription = _super.prototype._subscribe.call(this, subscriber);
    !subscription.closed && subscriber.next(this._value);
    return subscription;
  };
  BehaviorSubject2.prototype.getValue = function() {
    var _a2 = this, hasError = _a2.hasError, thrownError = _a2.thrownError, _value = _a2._value;
    if (hasError) {
      throw thrownError;
    }
    this._throwIfClosed();
    return _value;
  };
  BehaviorSubject2.prototype.next = function(value) {
    _super.prototype.next.call(this, this._value = value);
  };
  return BehaviorSubject2;
}(Subject);
var ReplaySubject = function(_super) {
  __extends(ReplaySubject2, _super);
  function ReplaySubject2(_bufferSize, _windowTime, _timestampProvider) {
    if (_bufferSize === void 0) {
      _bufferSize = Infinity;
    }
    if (_windowTime === void 0) {
      _windowTime = Infinity;
    }
    if (_timestampProvider === void 0) {
      _timestampProvider = dateTimestampProvider;
    }
    var _this = _super.call(this) || this;
    _this._bufferSize = _bufferSize;
    _this._windowTime = _windowTime;
    _this._timestampProvider = _timestampProvider;
    _this._buffer = [];
    _this._infiniteTimeWindow = true;
    _this._infiniteTimeWindow = _windowTime === Infinity;
    _this._bufferSize = Math.max(1, _bufferSize);
    _this._windowTime = Math.max(1, _windowTime);
    return _this;
  }
  ReplaySubject2.prototype.next = function(value) {
    var _a2 = this, isStopped = _a2.isStopped, _buffer = _a2._buffer, _infiniteTimeWindow = _a2._infiniteTimeWindow, _timestampProvider = _a2._timestampProvider, _windowTime = _a2._windowTime;
    if (!isStopped) {
      _buffer.push(value);
      !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);
    }
    this._trimBuffer();
    _super.prototype.next.call(this, value);
  };
  ReplaySubject2.prototype._subscribe = function(subscriber) {
    this._throwIfClosed();
    this._trimBuffer();
    var subscription = this._innerSubscribe(subscriber);
    var _a2 = this, _infiniteTimeWindow = _a2._infiniteTimeWindow, _buffer = _a2._buffer;
    var copy = _buffer.slice();
    for (var i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {
      subscriber.next(copy[i]);
    }
    this._checkFinalizedStatuses(subscriber);
    return subscription;
  };
  ReplaySubject2.prototype._trimBuffer = function() {
    var _a2 = this, _bufferSize = _a2._bufferSize, _timestampProvider = _a2._timestampProvider, _buffer = _a2._buffer, _infiniteTimeWindow = _a2._infiniteTimeWindow;
    var adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;
    _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);
    if (!_infiniteTimeWindow) {
      var now = _timestampProvider.now();
      var last2 = 0;
      for (var i = 1; i < _buffer.length && _buffer[i] <= now; i += 2) {
        last2 = i;
      }
      last2 && _buffer.splice(0, last2 + 1);
    }
  };
  return ReplaySubject2;
}(Subject);
function interval(period, scheduler2) {
  if (period === void 0) {
    period = 0;
  }
  if (scheduler2 === void 0) {
    scheduler2 = asyncScheduler;
  }
  if (period < 0) {
    period = 0;
  }
  return timer(period, period, scheduler2);
}
function skip(count2) {
  return filter(function(_2, index2) {
    return count2 <= index2;
  });
}
function switchMap(project, resultSelector) {
  return operate(function(source, subscriber) {
    var innerSubscriber = null;
    var index2 = 0;
    var isComplete = false;
    var checkComplete = function() {
      return isComplete && !innerSubscriber && subscriber.complete();
    };
    source.subscribe(createOperatorSubscriber(subscriber, function(value) {
      innerSubscriber === null || innerSubscriber === void 0 ? void 0 : innerSubscriber.unsubscribe();
      var innerIndex = 0;
      var outerIndex = index2++;
      innerFrom(project(value, outerIndex)).subscribe(innerSubscriber = createOperatorSubscriber(subscriber, function(innerValue) {
        return subscriber.next(resultSelector ? resultSelector(value, innerValue, outerIndex, innerIndex++) : innerValue);
      }, function() {
        innerSubscriber = null;
        checkComplete();
      }));
    }, function() {
      isComplete = true;
      checkComplete();
    }));
  });
}
function tap(observerOrNext, error, complete) {
  var tapObserver = isFunction$1(observerOrNext) || error || complete ? { next: observerOrNext, error, complete } : observerOrNext;
  return tapObserver ? operate(function(source, subscriber) {
    var _a2;
    (_a2 = tapObserver.subscribe) === null || _a2 === void 0 ? void 0 : _a2.call(tapObserver);
    var isUnsub = true;
    source.subscribe(createOperatorSubscriber(subscriber, function(value) {
      var _a3;
      (_a3 = tapObserver.next) === null || _a3 === void 0 ? void 0 : _a3.call(tapObserver, value);
      subscriber.next(value);
    }, function() {
      var _a3;
      isUnsub = false;
      (_a3 = tapObserver.complete) === null || _a3 === void 0 ? void 0 : _a3.call(tapObserver);
      subscriber.complete();
    }, function(err) {
      var _a3;
      isUnsub = false;
      (_a3 = tapObserver.error) === null || _a3 === void 0 ? void 0 : _a3.call(tapObserver, err);
      subscriber.error(err);
    }, function() {
      var _a3, _b2;
      if (isUnsub) {
        (_a3 = tapObserver.unsubscribe) === null || _a3 === void 0 ? void 0 : _a3.call(tapObserver);
      }
      (_b2 = tapObserver.finalize) === null || _b2 === void 0 ? void 0 : _b2.call(tapObserver);
    }));
  }) : identity;
}
function withLatestFrom() {
  var inputs = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    inputs[_i] = arguments[_i];
  }
  var project = popResultSelector(inputs);
  return operate(function(source, subscriber) {
    var len = inputs.length;
    var otherValues = new Array(len);
    var hasValue = inputs.map(function() {
      return false;
    });
    var ready = false;
    var _loop_1 = function(i2) {
      innerFrom(inputs[i2]).subscribe(createOperatorSubscriber(subscriber, function(value) {
        otherValues[i2] = value;
        if (!ready && !hasValue[i2]) {
          hasValue[i2] = true;
          (ready = hasValue.every(identity)) && (hasValue = null);
        }
      }, noop));
    };
    for (var i = 0; i < len; i++) {
      _loop_1(i);
    }
    source.subscribe(createOperatorSubscriber(subscriber, function(value) {
      if (ready) {
        var values = __spreadArray([value], __read(otherValues));
        subscriber.next(project ? project.apply(void 0, __spreadArray([], __read(values))) : values);
      }
    }));
  });
}
function isObservable(obj) {
  return !!obj && (obj instanceof Observable || isFunction$1(obj.lift) && isFunction$1(obj.subscribe));
}
function merge() {
  var args = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    args[_i] = arguments[_i];
  }
  var scheduler2 = popScheduler(args);
  var concurrent = popNumber(args, Infinity);
  var sources = args;
  return !sources.length ? EMPTY : sources.length === 1 ? innerFrom(sources[0]) : mergeAll(concurrent)(from(sources, scheduler2));
}
var currentAction = {
  type: null,
  entityIds: null,
  skip: false,
  payload: null
};
var customActionActive = false;
function resetCustomAction() {
  customActionActive = false;
}
function logAction(type2, entityIds, payload) {
  setAction(type2, entityIds, payload);
  customActionActive = true;
}
function setAction(type2, entityIds, payload) {
  if (customActionActive === false) {
    currentAction.type = type2;
    currentAction.entityIds = entityIds;
    currentAction.payload = payload;
  }
}
function action(action2, entityIds) {
  return function(target, propertyKey, descriptor) {
    var originalMethod = descriptor.value;
    descriptor.value = function() {
      var args = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }
      logAction(action2, entityIds);
      return originalMethod.apply(this, args);
    };
    return descriptor;
  };
}
function hasEntity(entities, id2) {
  return entities.hasOwnProperty(id2);
}
function isArray(value) {
  return Array.isArray(value);
}
function hasActiveState(state) {
  return state.hasOwnProperty("active");
}
function isMultiActiveState(active) {
  return isArray(active);
}
function resolveActiveEntity(_a2) {
  var active = _a2.active, ids = _a2.ids, entities = _a2.entities;
  if (isMultiActiveState(active)) {
    return getExitingActives(active, ids);
  }
  if (hasEntity(entities, active) === false) {
    return null;
  }
  return active;
}
function getExitingActives(currentActivesIds, newIds) {
  var filtered = currentActivesIds.filter(function(id2) {
    return newIds.indexOf(id2) > -1;
  });
  if (filtered.length === currentActivesIds.length) {
    return currentActivesIds;
  }
  return filtered;
}
function addEntities(_a2) {
  var e_1, _b2;
  var state = _a2.state, entities = _a2.entities, idKey = _a2.idKey, _c = _a2.options, options = _c === void 0 ? {} : _c, preAddEntity = _a2.preAddEntity;
  var newEntities = {};
  var newIds = [];
  var hasNewEntities = false;
  try {
    for (var entities_1 = __values(entities), entities_1_1 = entities_1.next(); !entities_1_1.done; entities_1_1 = entities_1.next()) {
      var entity = entities_1_1.value;
      if (hasEntity(state.entities, entity[idKey]) === false) {
        var current = preAddEntity(entity);
        var entityId = current[idKey];
        newEntities[entityId] = current;
        if (options.prepend)
          newIds.unshift(entityId);
        else
          newIds.push(entityId);
        hasNewEntities = true;
      }
    }
  } catch (e_1_1) {
    e_1 = { error: e_1_1 };
  } finally {
    try {
      if (entities_1_1 && !entities_1_1.done && (_b2 = entities_1.return))
        _b2.call(entities_1);
    } finally {
      if (e_1)
        throw e_1.error;
    }
  }
  return hasNewEntities ? {
    newState: __assign(__assign({}, state), { entities: __assign(__assign({}, state.entities), newEntities), ids: options.prepend ? __spread(newIds, state.ids) : __spread(state.ids, newIds) }),
    newIds
  } : null;
}
function isNil(v2) {
  return v2 === null || v2 === void 0;
}
function coerceArray(value) {
  if (isNil(value)) {
    return [];
  }
  return Array.isArray(value) ? value : [value];
}
var DEFAULT_ID_KEY = "id";
function isEmpty(arr) {
  if (isArray(arr)) {
    return arr.length === 0;
  }
  return false;
}
function isFunction(value) {
  return typeof value === "function";
}
function distinctUntilArrayItemChanged() {
  return distinctUntilChanged(function(prevCollection, currentCollection) {
    if (prevCollection === currentCollection) {
      return true;
    }
    if (!isArray(prevCollection) || !isArray(currentCollection)) {
      return false;
    }
    if (isEmpty(prevCollection) && isEmpty(currentCollection)) {
      return true;
    }
    if (prevCollection.length !== currentCollection.length) {
      return false;
    }
    var isOneOfItemReferenceChanged = currentCollection.some(function(item, i) {
      return prevCollection[i] !== item;
    });
    return isOneOfItemReferenceChanged === false;
  });
}
function isObject$1(value) {
  var type2 = typeof value;
  return value != null && (type2 == "object" || type2 == "function");
}
var CONFIG = {
  resettable: false,
  ttl: null,
  producerFn: void 0
};
function getAkitaConfig() {
  return CONFIG;
}
function getGlobalProducerFn() {
  return CONFIG.producerFn;
}
function isDefined(val) {
  return isNil(val) === false;
}
var $$deleteStore = new Subject();
var $$addStore = new ReplaySubject(50, 5e3);
var $$updateStore = new Subject();
function dispatchDeleted(storeName) {
  $$deleteStore.next(storeName);
}
function dispatchAdded(storeName) {
  $$addStore.next(storeName);
}
function dispatchUpdate(storeName, action2) {
  $$updateStore.next({ storeName, action: action2 });
}
var isBrowser = typeof window !== "undefined";
var __stores__ = {};
var __queries__ = {};
if (isBrowser) {
  window.$$stores = __stores__;
  window.$$queries = __queries__;
}
var Order;
(function(Order2) {
  Order2["ASC"] = "asc";
  Order2["DESC"] = "desc";
})(Order || (Order = {}));
function compareValues(key, order) {
  if (order === void 0) {
    order = Order.ASC;
  }
  return function(a, b2) {
    if (!a.hasOwnProperty(key) || !b2.hasOwnProperty(key)) {
      return 0;
    }
    var varA = typeof a[key] === "string" ? a[key].toUpperCase() : a[key];
    var varB = typeof b2[key] === "string" ? b2[key].toUpperCase() : b2[key];
    var comparison = 0;
    if (varA > varB) {
      comparison = 1;
    } else if (varA < varB) {
      comparison = -1;
    }
    return order == Order.DESC ? comparison * -1 : comparison;
  };
}
function entitiesToArray(state, options) {
  var arr = [];
  var ids = state.ids, entities = state.entities;
  var filterBy = options.filterBy, limitTo = options.limitTo, sortBy = options.sortBy, sortByOrder3 = options.sortByOrder;
  var _loop_1 = function(i2) {
    var entity = entities[ids[i2]];
    if (!filterBy) {
      arr.push(entity);
      return "continue";
    }
    var toArray = coerceArray(filterBy);
    var allPass = toArray.every(function(fn) {
      return fn(entity, i2);
    });
    if (allPass) {
      arr.push(entity);
    }
  };
  for (var i = 0; i < ids.length; i++) {
    _loop_1(i);
  }
  if (sortBy) {
    var _sortBy_1 = isFunction(sortBy) ? sortBy : compareValues(sortBy, sortByOrder3);
    arr = arr.sort(function(a, b2) {
      return _sortBy_1(a, b2, state);
    });
  }
  var length = Math.min(limitTo || arr.length, arr.length);
  return length === arr.length ? arr : arr.slice(0, length);
}
function entitiesToMap(state, options) {
  var map2 = {};
  var filterBy = options.filterBy, limitTo = options.limitTo;
  var ids = state.ids, entities = state.entities;
  if (!filterBy && !limitTo) {
    return entities;
  }
  var hasLimit = isNil(limitTo) === false;
  if (filterBy && hasLimit) {
    var count2 = 0;
    var _loop_1 = function(i2, length_12) {
      if (count2 === limitTo)
        return "break";
      var id2 = ids[i2];
      var entity = entities[id2];
      var allPass = coerceArray(filterBy).every(function(fn) {
        return fn(entity, i2);
      });
      if (allPass) {
        map2[id2] = entity;
        count2++;
      }
    };
    for (var i = 0, length_1 = ids.length; i < length_1; i++) {
      var state_1 = _loop_1(i, length_1);
      if (state_1 === "break")
        break;
    }
  } else {
    var finalLength = Math.min(limitTo || ids.length, ids.length);
    var _loop_2 = function(i2) {
      var id2 = ids[i2];
      var entity = entities[id2];
      if (!filterBy) {
        map2[id2] = entity;
        return "continue";
      }
      var allPass = coerceArray(filterBy).every(function(fn) {
        return fn(entity, i2);
      });
      if (allPass) {
        map2[id2] = entity;
      }
    };
    for (var i = 0; i < finalLength; i++) {
      _loop_2(i);
    }
  }
  return map2;
}
var EntityActions;
(function(EntityActions2) {
  EntityActions2["Set"] = "Set";
  EntityActions2["Add"] = "Add";
  EntityActions2["Update"] = "Update";
  EntityActions2["Remove"] = "Remove";
})(EntityActions || (EntityActions = {}));
function getActiveEntities(idOrOptions, ids, currentActive) {
  var result;
  if (isArray(idOrOptions)) {
    result = idOrOptions;
  } else {
    if (isObject$1(idOrOptions)) {
      if (isNil(currentActive))
        return;
      idOrOptions = Object.assign({ wrap: true }, idOrOptions);
      var currentIdIndex = ids.indexOf(currentActive);
      if (idOrOptions.prev) {
        var isFirst = currentIdIndex === 0;
        if (isFirst && !idOrOptions.wrap)
          return;
        result = isFirst ? ids[ids.length - 1] : ids[currentIdIndex - 1];
      } else if (idOrOptions.next) {
        var isLast = ids.length === currentIdIndex + 1;
        if (isLast && !idOrOptions.wrap)
          return;
        result = isLast ? ids[0] : ids[currentIdIndex + 1];
      }
    } else {
      if (idOrOptions === currentActive)
        return;
      result = idOrOptions;
    }
  }
  return result;
}
var getInitialEntitiesState = function() {
  return {
    entities: {},
    ids: [],
    loading: true,
    error: null
  };
};
function isUndefined(value) {
  return value === void 0;
}
function removeEntities(_a2) {
  var e_1, _b2;
  var state = _a2.state, ids = _a2.ids;
  if (isNil(ids))
    return removeAllEntities(state);
  var entities = state.entities;
  var newEntities = {};
  try {
    for (var _c = __values(state.ids), _d = _c.next(); !_d.done; _d = _c.next()) {
      var id2 = _d.value;
      if (ids.includes(id2) === false) {
        newEntities[id2] = entities[id2];
      }
    }
  } catch (e_1_1) {
    e_1 = { error: e_1_1 };
  } finally {
    try {
      if (_d && !_d.done && (_b2 = _c.return))
        _b2.call(_c);
    } finally {
      if (e_1)
        throw e_1.error;
    }
  }
  var newState = __assign(__assign({}, state), { entities: newEntities, ids: state.ids.filter(function(current) {
    return ids.includes(current) === false;
  }) });
  if (hasActiveState(state)) {
    newState.active = resolveActiveEntity(newState);
  }
  return newState;
}
function removeAllEntities(state) {
  return __assign(__assign({}, state), { entities: {}, ids: [], active: isMultiActiveState(state.active) ? [] : null });
}
function toEntitiesObject(entities, idKey, preAddEntity) {
  var e_1, _a2;
  var acc = {
    entities: {},
    ids: []
  };
  try {
    for (var entities_1 = __values(entities), entities_1_1 = entities_1.next(); !entities_1_1.done; entities_1_1 = entities_1.next()) {
      var entity = entities_1_1.value;
      var current = preAddEntity(entity);
      acc.entities[current[idKey]] = current;
      acc.ids.push(current[idKey]);
    }
  } catch (e_1_1) {
    e_1 = { error: e_1_1 };
  } finally {
    try {
      if (entities_1_1 && !entities_1_1.done && (_a2 = entities_1.return))
        _a2.call(entities_1);
    } finally {
      if (e_1)
        throw e_1.error;
    }
  }
  return acc;
}
function isEntityState(state) {
  return state.entities && state.ids;
}
function applyMiddleware(entities, preAddEntity) {
  var e_1, _a2;
  var mapped = {};
  try {
    for (var _b2 = __values(Object.keys(entities)), _c = _b2.next(); !_c.done; _c = _b2.next()) {
      var id2 = _c.value;
      mapped[id2] = preAddEntity(entities[id2]);
    }
  } catch (e_1_1) {
    e_1 = { error: e_1_1 };
  } finally {
    try {
      if (_c && !_c.done && (_a2 = _b2.return))
        _a2.call(_b2);
    } finally {
      if (e_1)
        throw e_1.error;
    }
  }
  return mapped;
}
function setEntities(_a2) {
  var state = _a2.state, entities = _a2.entities, idKey = _a2.idKey, preAddEntity = _a2.preAddEntity, isNativePreAdd = _a2.isNativePreAdd;
  var newEntities;
  var newIds;
  if (isArray(entities)) {
    var resolve = toEntitiesObject(entities, idKey, preAddEntity);
    newEntities = resolve.entities;
    newIds = resolve.ids;
  } else if (isEntityState(entities)) {
    newEntities = isNativePreAdd ? entities.entities : applyMiddleware(entities.entities, preAddEntity);
    newIds = entities.ids;
  } else {
    newEntities = isNativePreAdd ? entities : applyMiddleware(entities, preAddEntity);
    newIds = Object.keys(newEntities).map(function(id2) {
      return isNaN(id2) ? id2 : Number(id2);
    });
  }
  var newState = __assign(__assign({}, state), { entities: newEntities, ids: newIds, loading: false });
  if (hasActiveState(state)) {
    newState.active = resolveActiveEntity(newState);
  }
  return newState;
}
function deepFreeze(o) {
  Object.freeze(o);
  var oIsFunction = typeof o === "function";
  var hasOwnProp = Object.prototype.hasOwnProperty;
  Object.getOwnPropertyNames(o).forEach(function(prop) {
    if (hasOwnProp.call(o, prop) && (oIsFunction ? prop !== "caller" && prop !== "callee" && prop !== "arguments" : true) && o[prop] !== null && (typeof o[prop] === "object" || typeof o[prop] === "function") && !Object.isFrozen(o[prop])) {
      deepFreeze(o[prop]);
    }
  });
  return o;
}
(function(_super) {
  __extends(AkitaError, _super);
  function AkitaError(message) {
    return _super.call(this, message) || this;
  }
  return AkitaError;
})(Error);
function assertStoreHasName(name, className) {
  if (!name) {
    console.error("@StoreConfig({ name }) is missing in " + className);
  }
}
function toBoolean(value) {
  return value != null && "" + value !== "false";
}
function isPlainObject(value) {
  return toBoolean(value) && value.constructor.name === "Object";
}
var configKey = "akitaConfig";
function StoreConfig(metadata) {
  return function(constructor) {
    constructor[configKey] = { idKey: "id" };
    for (var i = 0, keys = Object.keys(metadata); i < keys.length; i++) {
      var key = keys[i];
      if (key === "name") {
        constructor[configKey]["storeName"] = metadata[key];
      } else {
        constructor[configKey][key] = metadata[key];
      }
    }
  };
}
var transactionFinished = new Subject();
var transactionInProcess = new BehaviorSubject(false);
var transactionManager = {
  activeTransactions: 0,
  batchTransaction: null
};
function startBatch() {
  if (!isTransactionInProcess()) {
    transactionManager.batchTransaction = new Subject();
  }
  transactionManager.activeTransactions++;
  transactionInProcess.next(true);
}
function endBatch() {
  if (--transactionManager.activeTransactions === 0) {
    transactionManager.batchTransaction.next(true);
    transactionManager.batchTransaction.complete();
    transactionInProcess.next(false);
    transactionFinished.next(true);
  }
}
function isTransactionInProcess() {
  return transactionManager.activeTransactions > 0;
}
function commit() {
  return transactionManager.batchTransaction ? transactionManager.batchTransaction.asObservable() : of(true);
}
function applyTransaction(action2, thisArg) {
  if (thisArg === void 0) {
    thisArg = void 0;
  }
  startBatch();
  try {
    return action2.apply(thisArg);
  } finally {
    logAction("@Transaction");
    endBatch();
  }
}
function transaction() {
  return function(target, propertyKey, descriptor) {
    var originalMethod = descriptor.value;
    descriptor.value = function() {
      var _this = this;
      var args = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }
      return applyTransaction(function() {
        return originalMethod.apply(_this, args);
      }, this);
    };
    return descriptor;
  };
}
var Store = (
  /** @class */
  function() {
    function Store2(initialState, options) {
      if (options === void 0) {
        options = {};
      }
      this.options = options;
      this.inTransaction = false;
      this.cache = {
        active: new BehaviorSubject(false),
        ttl: null
      };
      this.onInit(initialState);
    }
    Store2.prototype.setLoading = function(loading) {
      if (loading === void 0) {
        loading = false;
      }
      if (loading !== this._value().loading) {
        setAction("Set Loading");
        this._setState(function(state) {
          return __assign(__assign({}, state), { loading });
        });
      }
    };
    Store2.prototype.setHasCache = function(hasCache, options) {
      var _this = this;
      if (options === void 0) {
        options = { restartTTL: false };
      }
      if (hasCache !== this.cache.active.value) {
        this.cache.active.next(hasCache);
      }
      if (options.restartTTL) {
        var ttlConfig = this.getCacheTTL();
        if (ttlConfig) {
          if (this.cache.ttl !== null) {
            clearTimeout(this.cache.ttl);
          }
          this.cache.ttl = setTimeout(function() {
            return _this.setHasCache(false);
          }, ttlConfig);
        }
      }
    };
    Store2.prototype.getValue = function() {
      return this.storeValue;
    };
    Store2.prototype.setError = function(error) {
      if (error !== this._value().error) {
        setAction("Set Error");
        this._setState(function(state) {
          return __assign(__assign({}, state), { error });
        });
      }
    };
    Store2.prototype._select = function(project) {
      return this.store.asObservable().pipe(map(function(snapshot) {
        return project(snapshot.state);
      }), distinctUntilChanged());
    };
    Store2.prototype._value = function() {
      return this.storeValue;
    };
    Store2.prototype._cache = function() {
      return this.cache.active;
    };
    Object.defineProperty(Store2.prototype, "config", {
      // @internal
      get: function() {
        return this.constructor[configKey] || {};
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Store2.prototype, "storeName", {
      // @internal
      get: function() {
        return this.config.storeName || this.options.storeName || this.options.name;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Store2.prototype, "deepFreeze", {
      // @internal
      get: function() {
        return this.config.deepFreezeFn || this.options.deepFreezeFn || deepFreeze;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Store2.prototype, "cacheConfig", {
      // @internal
      get: function() {
        return this.config.cache || this.options.cache;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Store2.prototype, "_producerFn", {
      get: function() {
        return this.config.producerFn || this.options.producerFn || getGlobalProducerFn();
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Store2.prototype, "resettable", {
      // @internal
      get: function() {
        return isDefined(this.config.resettable) ? this.config.resettable : this.options.resettable;
      },
      enumerable: false,
      configurable: true
    });
    Store2.prototype._setState = function(newState, _dispatchAction) {
      var _this = this;
      if (_dispatchAction === void 0) {
        _dispatchAction = true;
      }
      if (isFunction(newState)) {
        var _newState = newState(this._value());
        this.storeValue = this.deepFreeze(_newState);
      } else {
        this.storeValue = newState;
      }
      if (!this.store) {
        this.store = new BehaviorSubject({ state: this.storeValue });
        {
          this.store.subscribe(function(_a2) {
            var action2 = _a2.action;
            if (action2) {
              dispatchUpdate(_this.storeName, action2);
            }
          });
        }
        return;
      }
      if (isTransactionInProcess()) {
        this.handleTransaction();
        return;
      }
      this.dispatch(this.storeValue, _dispatchAction);
    };
    Store2.prototype.reset = function() {
      var _this = this;
      if (this.isResettable()) {
        setAction("Reset");
        this._setState(function() {
          return Object.assign({}, _this._initialState);
        });
        this.setHasCache(false);
      } else {
        console.warn("You need to enable the reset functionality");
      }
    };
    Store2.prototype.update = function(stateOrCallback) {
      setAction("Update");
      var newState;
      var currentState = this._value();
      if (isFunction(stateOrCallback)) {
        newState = isFunction(this._producerFn) ? this._producerFn(currentState, stateOrCallback) : stateOrCallback(currentState);
      } else {
        newState = stateOrCallback;
      }
      var withHook = this.akitaPreUpdate(currentState, __assign(__assign({}, currentState), newState));
      var resolved = isPlainObject(currentState) ? withHook : new currentState.constructor(withHook);
      this._setState(resolved);
    };
    Store2.prototype.updateStoreConfig = function(newOptions) {
      this.options = __assign(__assign({}, this.options), newOptions);
    };
    Store2.prototype.akitaPreUpdate = function(_2, nextState) {
      return nextState;
    };
    Store2.prototype.ngOnDestroy = function() {
      this.destroy();
    };
    Store2.prototype.destroy = function() {
      var hmrEnabled = isBrowser ? window.hmrEnabled : false;
      if (!hmrEnabled && this === __stores__[this.storeName]) {
        delete __stores__[this.storeName];
        dispatchDeleted(this.storeName);
        this.setHasCache(false);
        this.cache.active.complete();
        this.store.complete();
      }
    };
    Store2.prototype.onInit = function(initialState) {
      __stores__[this.storeName] = this;
      this._setState(function() {
        return initialState;
      });
      dispatchAdded(this.storeName);
      if (this.isResettable()) {
        this._initialState = initialState;
      }
      assertStoreHasName(this.storeName, this.constructor.name);
    };
    Store2.prototype.dispatch = function(state, _dispatchAction) {
      if (_dispatchAction === void 0) {
        _dispatchAction = true;
      }
      var action2 = void 0;
      if (_dispatchAction) {
        action2 = currentAction;
        resetCustomAction();
      }
      this.store.next({ state, action: action2 });
    };
    Store2.prototype.watchTransaction = function() {
      var _this = this;
      commit().subscribe(function() {
        _this.inTransaction = false;
        _this.dispatch(_this._value());
      });
    };
    Store2.prototype.isResettable = function() {
      if (this.resettable === false) {
        return false;
      }
      return this.resettable || getAkitaConfig().resettable;
    };
    Store2.prototype.handleTransaction = function() {
      if (!this.inTransaction) {
        this.watchTransaction();
        this.inTransaction = true;
      }
    };
    Store2.prototype.getCacheTTL = function() {
      return this.cacheConfig && this.cacheConfig.ttl || getAkitaConfig().ttl;
    };
    return Store2;
  }()
);
function updateEntities(_a2) {
  var e_1, _b2;
  var state = _a2.state, ids = _a2.ids, idKey = _a2.idKey, newStateOrFn = _a2.newStateOrFn, preUpdateEntity = _a2.preUpdateEntity, producerFn = _a2.producerFn, onEntityIdChanges = _a2.onEntityIdChanges;
  var updatedEntities = {};
  var isUpdatingIdKey = false;
  var idToUpdate;
  try {
    for (var ids_1 = __values(ids), ids_1_1 = ids_1.next(); !ids_1_1.done; ids_1_1 = ids_1.next()) {
      var id2 = ids_1_1.value;
      if (hasEntity(state.entities, id2) === false) {
        continue;
      }
      var oldEntity = state.entities[id2];
      var newState = void 0;
      if (isFunction(newStateOrFn)) {
        newState = isFunction(producerFn) ? producerFn(oldEntity, newStateOrFn) : newStateOrFn(oldEntity);
      } else {
        newState = newStateOrFn;
      }
      var isIdChanged = newState.hasOwnProperty(idKey) && newState[idKey] !== oldEntity[idKey];
      var newEntity = void 0;
      idToUpdate = id2;
      if (isIdChanged) {
        isUpdatingIdKey = true;
        idToUpdate = newState[idKey];
      }
      var merged = __assign(__assign({}, oldEntity), newState);
      if (isPlainObject(oldEntity)) {
        newEntity = merged;
      } else {
        if (isPlainObject(newState)) {
          newEntity = new oldEntity.constructor(merged);
        } else {
          newEntity = new newState.constructor(merged);
        }
      }
      updatedEntities[idToUpdate] = preUpdateEntity(oldEntity, newEntity);
    }
  } catch (e_1_1) {
    e_1 = { error: e_1_1 };
  } finally {
    try {
      if (ids_1_1 && !ids_1_1.done && (_b2 = ids_1.return))
        _b2.call(ids_1);
    } finally {
      if (e_1)
        throw e_1.error;
    }
  }
  var updatedIds = state.ids;
  var stateEntities = state.entities;
  if (isUpdatingIdKey) {
    var _c = __read(ids, 1), id_1 = _c[0];
    var _d = state.entities, _e2 = id_1;
    _d[_e2];
    var rest = __rest(_d, [typeof _e2 === "symbol" ? _e2 : _e2 + ""]);
    stateEntities = rest;
    updatedIds = state.ids.map(function(current) {
      return current === id_1 ? idToUpdate : current;
    });
    onEntityIdChanges(id_1, idToUpdate);
  }
  return __assign(__assign({}, state), { entities: __assign(__assign({}, stateEntities), updatedEntities), ids: updatedIds });
}
var EntityStore = (
  /** @class */
  function(_super) {
    __extends(EntityStore2, _super);
    function EntityStore2(initialState, options) {
      if (initialState === void 0) {
        initialState = {};
      }
      if (options === void 0) {
        options = {};
      }
      var _this = _super.call(this, __assign(__assign({}, getInitialEntitiesState()), initialState), options) || this;
      _this.options = options;
      _this.entityActions = new Subject();
      _this.entityIdChanges = new Subject();
      return _this;
    }
    Object.defineProperty(EntityStore2.prototype, "selectEntityAction$", {
      // @internal
      get: function() {
        return this.entityActions.asObservable();
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(EntityStore2.prototype, "selectEntityIdChanges$", {
      // @internal
      get: function() {
        return this.entityIdChanges.asObservable();
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(EntityStore2.prototype, "idKey", {
      // @internal
      get: function() {
        return this.config.idKey || this.options.idKey || DEFAULT_ID_KEY;
      },
      enumerable: false,
      configurable: true
    });
    EntityStore2.prototype.set = function(entities, options) {
      var _this = this;
      if (options === void 0) {
        options = {};
      }
      if (isNil(entities))
        return;
      setAction("Set Entity");
      var isNativePreAdd = this.akitaPreAddEntity === EntityStore2.prototype.akitaPreAddEntity;
      this.setHasCache(true, { restartTTL: true });
      this._setState(function(state) {
        var newState = setEntities({
          state,
          entities,
          idKey: _this.idKey,
          preAddEntity: _this.akitaPreAddEntity,
          isNativePreAdd
        });
        if (isUndefined(options.activeId) === false) {
          newState.active = options.activeId;
        }
        return newState;
      });
      if (this.hasInitialUIState()) {
        this.handleUICreation();
      }
      this.entityActions.next({ type: EntityActions.Set, ids: this.ids });
    };
    EntityStore2.prototype.add = function(entities, options) {
      if (options === void 0) {
        options = { loading: false };
      }
      var collection = coerceArray(entities);
      if (isEmpty(collection))
        return;
      var data = addEntities({
        state: this._value(),
        preAddEntity: this.akitaPreAddEntity,
        entities: collection,
        idKey: this.idKey,
        options
      });
      if (data) {
        setAction("Add Entity");
        data.newState.loading = options.loading;
        this._setState(function() {
          return data.newState;
        });
        if (this.hasInitialUIState()) {
          this.handleUICreation(true);
        }
        this.entityActions.next({ type: EntityActions.Add, ids: data.newIds });
      }
    };
    EntityStore2.prototype.update = function(idsOrFnOrState, newStateOrFn) {
      var _this = this;
      if (isUndefined(newStateOrFn)) {
        _super.prototype.update.call(this, idsOrFnOrState);
        return;
      }
      var ids = [];
      if (isFunction(idsOrFnOrState)) {
        ids = this.ids.filter(function(id2) {
          return idsOrFnOrState(_this.entities[id2]);
        });
      } else {
        ids = isNil(idsOrFnOrState) ? this.ids : coerceArray(idsOrFnOrState);
      }
      if (isEmpty(ids))
        return;
      setAction("Update Entity", ids);
      var entityIdChanged;
      this._setState(function(state) {
        return updateEntities({
          idKey: _this.idKey,
          ids,
          preUpdateEntity: _this.akitaPreUpdateEntity,
          state,
          newStateOrFn,
          producerFn: _this._producerFn,
          onEntityIdChanges: function(oldId, newId) {
            entityIdChanged = { oldId, newId };
            _this.entityIdChanges.next(__assign(__assign({}, entityIdChanged), { pending: true }));
          }
        });
      });
      if (entityIdChanged) {
        this.entityIdChanges.next(__assign(__assign({}, entityIdChanged), { pending: false }));
      }
      this.entityActions.next({ type: EntityActions.Update, ids });
    };
    EntityStore2.prototype.upsert = function(ids, newState, onCreate, options) {
      var _this = this;
      if (options === void 0) {
        options = {};
      }
      var toArray = coerceArray(ids);
      var predicate = function(isUpdate) {
        return function(id2) {
          return hasEntity(_this.entities, id2) === isUpdate;
        };
      };
      var baseClass = isFunction(onCreate) ? options.baseClass : onCreate ? onCreate.baseClass : void 0;
      var isClassBased = isFunction(baseClass);
      var updateIds = toArray.filter(predicate(true));
      var newEntities = toArray.filter(predicate(false)).map(function(id2) {
        var _a2;
        var newStateObj = typeof newState === "function" ? newState({}) : newState;
        var entity = isFunction(onCreate) ? onCreate(id2, newStateObj) : newStateObj;
        var withId = __assign(__assign({}, entity), (_a2 = {}, _a2[_this.idKey] = id2, _a2));
        if (isClassBased) {
          return new baseClass(withId);
        }
        return withId;
      });
      this.update(updateIds, newState);
      this.add(newEntities);
      logAction("Upsert Entity");
    };
    EntityStore2.prototype.upsertMany = function(entities, options) {
      var e_1, _a2;
      if (options === void 0) {
        options = {};
      }
      var addedIds = [];
      var updatedIds = [];
      var updatedEntities = {};
      try {
        for (var entities_1 = __values(entities), entities_1_1 = entities_1.next(); !entities_1_1.done; entities_1_1 = entities_1.next()) {
          var entity = entities_1_1.value;
          var withPreCheckHook = this.akitaPreCheckEntity(entity);
          var id2 = withPreCheckHook[this.idKey];
          if (hasEntity(this.entities, id2)) {
            var prev = this._value().entities[id2];
            var merged = __assign(__assign({}, this._value().entities[id2]), withPreCheckHook);
            var next = options.baseClass ? new options.baseClass(merged) : merged;
            var withHook = this.akitaPreUpdateEntity(prev, next);
            var nextId = withHook[this.idKey];
            updatedEntities[nextId] = withHook;
            updatedIds.push(nextId);
          } else {
            var newEntity = options.baseClass ? new options.baseClass(withPreCheckHook) : withPreCheckHook;
            var withHook = this.akitaPreAddEntity(newEntity);
            var nextId = withHook[this.idKey];
            addedIds.push(nextId);
            updatedEntities[nextId] = withHook;
          }
        }
      } catch (e_1_1) {
        e_1 = { error: e_1_1 };
      } finally {
        try {
          if (entities_1_1 && !entities_1_1.done && (_a2 = entities_1.return))
            _a2.call(entities_1);
        } finally {
          if (e_1)
            throw e_1.error;
        }
      }
      logAction("Upsert Many");
      this._setState(function(state) {
        return __assign(__assign({}, state), { ids: addedIds.length ? __spread(state.ids, addedIds) : state.ids, entities: __assign(__assign({}, state.entities), updatedEntities), loading: !!options.loading });
      });
      updatedIds.length && this.entityActions.next({ type: EntityActions.Update, ids: updatedIds });
      addedIds.length && this.entityActions.next({ type: EntityActions.Add, ids: addedIds });
      if (addedIds.length && this.hasUIStore()) {
        this.handleUICreation(true);
      }
    };
    EntityStore2.prototype.replace = function(ids, newState) {
      var e_2, _a2, _b3;
      var toArray = coerceArray(ids);
      if (isEmpty(toArray))
        return;
      var replaced = {};
      try {
        for (var toArray_1 = __values(toArray), toArray_1_1 = toArray_1.next(); !toArray_1_1.done; toArray_1_1 = toArray_1.next()) {
          var id2 = toArray_1_1.value;
          replaced[id2] = __assign(__assign({}, newState), (_b3 = {}, _b3[this.idKey] = id2, _b3));
        }
      } catch (e_2_1) {
        e_2 = { error: e_2_1 };
      } finally {
        try {
          if (toArray_1_1 && !toArray_1_1.done && (_a2 = toArray_1.return))
            _a2.call(toArray_1);
        } finally {
          if (e_2)
            throw e_2.error;
        }
      }
      setAction("Replace Entity", ids);
      this._setState(function(state) {
        return __assign(__assign({}, state), { entities: __assign(__assign({}, state.entities), replaced) });
      });
    };
    EntityStore2.prototype.move = function(from2, to) {
      var ids = this.ids.slice();
      ids.splice(to < 0 ? ids.length + to : to, 0, ids.splice(from2, 1)[0]);
      setAction("Move Entity");
      this._setState(function(state) {
        return __assign(__assign({}, state), {
          // Change the entities reference so that selectAll emit
          entities: __assign({}, state.entities),
          ids
        });
      });
    };
    EntityStore2.prototype.remove = function(idsOrFn) {
      var _this = this;
      if (isEmpty(this.ids))
        return;
      var idPassed = isDefined(idsOrFn);
      var ids = [];
      if (isFunction(idsOrFn)) {
        ids = this.ids.filter(function(entityId) {
          return idsOrFn(_this.entities[entityId]);
        });
      } else {
        ids = idPassed ? coerceArray(idsOrFn) : this.ids;
      }
      if (isEmpty(ids))
        return;
      setAction("Remove Entity", ids);
      this._setState(function(state) {
        return removeEntities({ state, ids });
      });
      if (!idPassed) {
        this.setHasCache(false);
      }
      this.handleUIRemove(ids);
      this.entityActions.next({ type: EntityActions.Remove, ids });
    };
    EntityStore2.prototype.updateActive = function(newStateOrCallback) {
      var ids = coerceArray(this.active);
      setAction("Update Active", ids);
      this.update(ids, newStateOrCallback);
    };
    EntityStore2.prototype.setActive = function(idOrOptions) {
      var active = getActiveEntities(idOrOptions, this.ids, this.active);
      if (active === void 0) {
        return;
      }
      setAction("Set Active", active);
      this._setActive(active);
    };
    EntityStore2.prototype.addActive = function(ids) {
      var _this = this;
      var toArray = coerceArray(ids);
      if (isEmpty(toArray))
        return;
      var everyExist = toArray.every(function(id2) {
        return _this.active.indexOf(id2) > -1;
      });
      if (everyExist)
        return;
      setAction("Add Active", ids);
      this._setState(function(state) {
        var uniques = Array.from(new Set(__spread(state.active, toArray)));
        return __assign(__assign({}, state), { active: uniques });
      });
    };
    EntityStore2.prototype.removeActive = function(ids) {
      var _this = this;
      var toArray = coerceArray(ids);
      if (isEmpty(toArray))
        return;
      var someExist = toArray.some(function(id2) {
        return _this.active.indexOf(id2) > -1;
      });
      if (!someExist)
        return;
      setAction("Remove Active", ids);
      this._setState(function(state) {
        return __assign(__assign({}, state), { active: Array.isArray(state.active) ? state.active.filter(function(currentId) {
          return toArray.indexOf(currentId) === -1;
        }) : null });
      });
    };
    EntityStore2.prototype.toggleActive = function(ids) {
      var _this = this;
      var toArray = coerceArray(ids);
      var filterExists = function(remove3) {
        return function(id2) {
          return _this.active.includes(id2) === remove3;
        };
      };
      var remove2 = toArray.filter(filterExists(true));
      var add2 = toArray.filter(filterExists(false));
      this.removeActive(remove2);
      this.addActive(add2);
      logAction("Toggle Active");
    };
    EntityStore2.prototype.createUIStore = function(initialState, storeConfig) {
      if (initialState === void 0) {
        initialState = {};
      }
      if (storeConfig === void 0) {
        storeConfig = {};
      }
      var defaults = { name: "UI/" + this.storeName, idKey: this.idKey };
      this.ui = new EntityUIStore(initialState, __assign(__assign({}, defaults), storeConfig));
      return this.ui;
    };
    EntityStore2.prototype.destroy = function() {
      _super.prototype.destroy.call(this);
      if (this.ui instanceof EntityStore2) {
        this.ui.destroy();
      }
      this.entityActions.complete();
    };
    EntityStore2.prototype.akitaPreUpdateEntity = function(_2, nextEntity) {
      return nextEntity;
    };
    EntityStore2.prototype.akitaPreAddEntity = function(newEntity) {
      return newEntity;
    };
    EntityStore2.prototype.akitaPreCheckEntity = function(newEntity) {
      return newEntity;
    };
    Object.defineProperty(EntityStore2.prototype, "ids", {
      get: function() {
        return this._value().ids;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(EntityStore2.prototype, "entities", {
      get: function() {
        return this._value().entities;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(EntityStore2.prototype, "active", {
      get: function() {
        return this._value().active;
      },
      enumerable: false,
      configurable: true
    });
    EntityStore2.prototype._setActive = function(ids) {
      this._setState(function(state) {
        return __assign(__assign({}, state), { active: ids });
      });
    };
    EntityStore2.prototype.handleUICreation = function(add2) {
      var _this = this;
      if (add2 === void 0) {
        add2 = false;
      }
      var ids = this.ids;
      var isFunc = isFunction(this.ui._akitaCreateEntityFn);
      var uiEntities;
      var createFn = function(id2) {
        var _a2;
        var current = _this.entities[id2];
        var ui2 = isFunc ? _this.ui._akitaCreateEntityFn(current) : _this.ui._akitaCreateEntityFn;
        return __assign((_a2 = {}, _a2[_this.idKey] = current[_this.idKey], _a2), ui2);
      };
      if (add2) {
        uiEntities = this.ids.filter(function(id2) {
          return isUndefined(_this.ui.entities[id2]);
        }).map(createFn);
      } else {
        uiEntities = ids.map(createFn);
      }
      add2 ? this.ui.add(uiEntities) : this.ui.set(uiEntities);
    };
    EntityStore2.prototype.hasInitialUIState = function() {
      return this.hasUIStore() && isUndefined(this.ui._akitaCreateEntityFn) === false;
    };
    EntityStore2.prototype.handleUIRemove = function(ids) {
      if (this.hasUIStore()) {
        this.ui.remove(ids);
      }
    };
    EntityStore2.prototype.hasUIStore = function() {
      return this.ui instanceof EntityUIStore;
    };
    var _b2;
    __decorate([
      transaction(),
      __metadata("design:type", Function),
      __metadata("design:paramtypes", [Object, Object, Object, Object]),
      __metadata("design:returntype", void 0)
    ], EntityStore2.prototype, "upsert", null);
    __decorate([
      transaction(),
      __metadata("design:type", Function),
      __metadata("design:paramtypes", [typeof (_b2 = typeof T !== "undefined" && T) === "function" ? _b2 : Object]),
      __metadata("design:returntype", void 0)
    ], EntityStore2.prototype, "toggleActive", null);
    return EntityStore2;
  }(Store)
);
var EntityUIStore = (
  /** @class */
  function(_super) {
    __extends(EntityUIStore2, _super);
    function EntityUIStore2(initialState, storeConfig) {
      if (initialState === void 0) {
        initialState = {};
      }
      if (storeConfig === void 0) {
        storeConfig = {};
      }
      return _super.call(this, initialState, storeConfig) || this;
    }
    EntityUIStore2.prototype.setInitialEntityState = function(createFn) {
      this._akitaCreateEntityFn = createFn;
    };
    return EntityUIStore2;
  }(EntityStore)
);
function filterNilValue() {
  return filter(function(value) {
    return value !== null && value !== void 0;
  });
}
var queryConfigKey = "akitaQueryConfig";
function isString(value) {
  return typeof value === "string";
}
function compareKeys(keysOrFuncs) {
  return function(prevState, currState) {
    var isFns = isFunction(keysOrFuncs[0]);
    return keysOrFuncs.some(function(keyOrFunc) {
      if (isFns) {
        return keyOrFunc(prevState) !== keyOrFunc(currState);
      }
      return prevState[keyOrFunc] !== currState[keyOrFunc];
    }) === false;
  };
}
var Query = (
  /** @class */
  function() {
    function Query2(store) {
      this.store = store;
      this.__store__ = store;
      {
        __queries__[store.storeName] = this;
      }
    }
    Query2.prototype.select = function(project) {
      var mapFn;
      if (isFunction(project)) {
        mapFn = project;
      } else if (isString(project)) {
        mapFn = function(state) {
          return state[project];
        };
      } else if (Array.isArray(project)) {
        return this.store._select(function(state) {
          return state;
        }).pipe(distinctUntilChanged(compareKeys(project)), map(function(state) {
          if (isFunction(project[0])) {
            return project.map(function(func) {
              return func(state);
            });
          }
          return project.reduce(function(acc, k2) {
            acc[k2] = state[k2];
            return acc;
          }, {});
        }));
      } else {
        mapFn = function(state) {
          return state;
        };
      }
      return this.store._select(mapFn);
    };
    Query2.prototype.selectLoading = function() {
      return this.select(function(state) {
        return state.loading;
      });
    };
    Query2.prototype.selectError = function() {
      return this.select(function(state) {
        return state.error;
      });
    };
    Query2.prototype.getValue = function() {
      return this.store._value();
    };
    Query2.prototype.selectHasCache = function() {
      return this.store._cache().asObservable();
    };
    Query2.prototype.getHasCache = function() {
      return this.store._cache().value;
    };
    Object.defineProperty(Query2.prototype, "config", {
      // @internal
      get: function() {
        return this.constructor[queryConfigKey];
      },
      enumerable: false,
      configurable: true
    });
    return Query2;
  }()
);
function findEntityByPredicate(predicate, entities) {
  var e_1, _a2;
  try {
    for (var _b2 = __values(Object.keys(entities)), _c = _b2.next(); !_c.done; _c = _b2.next()) {
      var entityId = _c.value;
      if (predicate(entities[entityId]) === true) {
        return entityId;
      }
    }
  } catch (e_1_1) {
    e_1 = { error: e_1_1 };
  } finally {
    try {
      if (_c && !_c.done && (_a2 = _b2.return))
        _a2.call(_b2);
    } finally {
      if (e_1)
        throw e_1.error;
    }
  }
  return void 0;
}
function getEntity(id2, project) {
  return function(entities) {
    var entity = entities[id2];
    if (isUndefined(entity)) {
      return void 0;
    }
    if (!project) {
      return entity;
    }
    if (isString(project)) {
      return entity[project];
    }
    return project(entity);
  };
}
function mapSkipUndefined(arr, callbackFn) {
  return arr.reduce(function(result, value, index2, array2) {
    var val = callbackFn(value, index2, array2);
    if (val !== void 0) {
      result.push(val);
    }
    return result;
  }, []);
}
function sortByOptions(options, config2) {
  options.sortBy = options.sortBy || config2 && config2.sortBy;
  options.sortByOrder = options.sortByOrder || config2 && config2.sortByOrder;
}
var QueryEntity = (
  /** @class */
  function(_super) {
    __extends(QueryEntity2, _super);
    function QueryEntity2(store, options) {
      if (options === void 0) {
        options = {};
      }
      var _this = _super.call(this, store) || this;
      _this.options = options;
      _this.__store__ = store;
      return _this;
    }
    QueryEntity2.prototype.selectAll = function(options) {
      var _this = this;
      if (options === void 0) {
        options = {
          asObject: false
        };
      }
      return this.select(function(state) {
        return state.entities;
      }).pipe(map(function() {
        return _this.getAll(options);
      }));
    };
    QueryEntity2.prototype.getAll = function(options) {
      if (options === void 0) {
        options = { asObject: false, filterBy: void 0, limitTo: void 0 };
      }
      if (options.asObject) {
        return entitiesToMap(this.getValue(), options);
      }
      sortByOptions(options, this.config || this.options);
      return entitiesToArray(this.getValue(), options);
    };
    QueryEntity2.prototype.selectMany = function(ids, project) {
      if (!ids || !ids.length)
        return of([]);
      return this.select(function(state) {
        return state.entities;
      }).pipe(map(function(entities) {
        return mapSkipUndefined(ids, function(id2) {
          return getEntity(id2, project)(entities);
        });
      }), distinctUntilArrayItemChanged());
    };
    QueryEntity2.prototype.selectEntity = function(idOrPredicate, project) {
      var id2 = idOrPredicate;
      if (isFunction(idOrPredicate)) {
        id2 = findEntityByPredicate(idOrPredicate, this.getValue().entities);
      }
      return this.select(function(state) {
        return state.entities;
      }).pipe(map(getEntity(id2, project)), distinctUntilChanged());
    };
    QueryEntity2.prototype.getEntity = function(id2) {
      return this.getValue().entities[id2];
    };
    QueryEntity2.prototype.selectActiveId = function() {
      return this.select(function(state) {
        return state.active;
      });
    };
    QueryEntity2.prototype.getActiveId = function() {
      return this.getValue().active;
    };
    QueryEntity2.prototype.selectActive = function(project) {
      var _this = this;
      if (isArray(this.getActive())) {
        return this.selectActiveId().pipe(switchMap(function(ids) {
          return _this.selectMany(ids, project);
        }));
      }
      return this.selectActiveId().pipe(switchMap(function(ids) {
        return _this.selectEntity(ids, project);
      }));
    };
    QueryEntity2.prototype.getActive = function() {
      var _this = this;
      var activeId = this.getActiveId();
      if (isArray(activeId)) {
        return activeId.map(function(id2) {
          return _this.getValue().entities[id2];
        });
      }
      return toBoolean(activeId) ? this.getEntity(activeId) : void 0;
    };
    QueryEntity2.prototype.selectCount = function(predicate) {
      var _this = this;
      return this.select(function(state) {
        return state.entities;
      }).pipe(map(function() {
        return _this.getCount(predicate);
      }));
    };
    QueryEntity2.prototype.getCount = function(predicate) {
      if (isFunction(predicate)) {
        return this.getAll().filter(predicate).length;
      }
      return this.getValue().ids.length;
    };
    QueryEntity2.prototype.selectLast = function(project) {
      return this.selectAt(function(ids) {
        return ids[ids.length - 1];
      }, project);
    };
    QueryEntity2.prototype.selectFirst = function(project) {
      return this.selectAt(function(ids) {
        return ids[0];
      }, project);
    };
    QueryEntity2.prototype.selectEntityAction = function(actionOrActions) {
      if (isNil(actionOrActions)) {
        return this.store.selectEntityAction$;
      }
      var project = isArray(actionOrActions) ? function(action2) {
        return action2;
      } : function(_a2) {
        var ids = _a2.ids;
        return ids;
      };
      var actions = coerceArray(actionOrActions);
      return this.store.selectEntityAction$.pipe(filter(function(_a2) {
        var type2 = _a2.type;
        return actions.includes(type2);
      }), map(function(action2) {
        return project(action2);
      }));
    };
    QueryEntity2.prototype.hasEntity = function(projectOrIds) {
      var _this = this;
      if (isNil(projectOrIds)) {
        return this.getValue().ids.length > 0;
      }
      if (isFunction(projectOrIds)) {
        return this.getAll().some(projectOrIds);
      }
      if (isArray(projectOrIds)) {
        return projectOrIds.every(function(id2) {
          return id2 in _this.getValue().entities;
        });
      }
      return projectOrIds in this.getValue().entities;
    };
    QueryEntity2.prototype.hasActive = function(id2) {
      var active = this.getValue().active;
      var isIdProvided = isDefined(id2);
      if (Array.isArray(active)) {
        if (isIdProvided) {
          return active.includes(id2);
        }
        return active.length > 0;
      }
      return isIdProvided ? active === id2 : isDefined(active);
    };
    QueryEntity2.prototype.createUIQuery = function() {
      this.ui = new EntityUIQuery(this.__store__.ui);
    };
    QueryEntity2.prototype.selectAt = function(mapFn, project) {
      var _this = this;
      return this.select(function(state) {
        return state.ids;
      }).pipe(map(mapFn), distinctUntilChanged(), switchMap(function(id2) {
        return _this.selectEntity(id2, project);
      }));
    };
    return QueryEntity2;
  }(Query)
);
var EntityUIQuery = (
  /** @class */
  function(_super) {
    __extends(EntityUIQuery2, _super);
    function EntityUIQuery2(store) {
      return _super.call(this, store) || this;
    }
    return EntityUIQuery2;
  }(QueryEntity)
);
function getValue(obj, prop) {
  if (prop.split(".").length === 1) {
    return obj;
  }
  var removeStoreName = prop.split(".").slice(1).join(".");
  return removeStoreName.split(".").reduce(function(acc, part) {
    return acc && acc[part];
  }, obj);
}
function setValue(obj, prop, val, replace) {
  if (replace === void 0) {
    replace = false;
  }
  var split = prop.split(".");
  if (split.length === 1) {
    return __assign(__assign({}, obj), val);
  }
  obj = __assign({}, obj);
  var lastIndex = split.length - 2;
  var removeStoreName = prop.split(".").slice(1);
  removeStoreName.reduce(function(acc, part, index2) {
    if (index2 !== lastIndex) {
      acc[part] = __assign({}, acc[part]);
      return acc && acc[part];
    }
    acc[part] = replace || Array.isArray(acc[part]) || !isObject$1(acc[part]) ? val : __assign(__assign({}, acc[part]), val);
    return acc && acc[part];
  }, obj);
  return obj;
}
new ReplaySubject(1);
var AkitaPlugin = (
  /** @class */
  function() {
    function AkitaPlugin2(query, config2) {
      this.query = query;
      if (config2 && config2.resetFn)
        ;
    }
    AkitaPlugin2.prototype.getQuery = function() {
      return this.query;
    };
    AkitaPlugin2.prototype.getStore = function() {
      return this.getQuery().__store__;
    };
    AkitaPlugin2.prototype.isEntityBased = function(entityId) {
      return toBoolean(entityId);
    };
    AkitaPlugin2.prototype.selectSource = function(entityId, property) {
      var _this = this;
      if (this.isEntityBased(entityId)) {
        return this.getQuery().selectEntity(entityId).pipe(filterNilValue());
      }
      if (property) {
        return this.getQuery().select(function(state) {
          return getValue(state, _this.withStoreName(property));
        });
      }
      return this.getQuery().select();
    };
    AkitaPlugin2.prototype.getSource = function(entityId, property) {
      if (this.isEntityBased(entityId)) {
        return this.getQuery().getEntity(entityId);
      }
      var state = this.getQuery().getValue();
      if (property) {
        return getValue(state, this.withStoreName(property));
      }
      return state;
    };
    AkitaPlugin2.prototype.withStoreName = function(prop) {
      return this.storeName + "." + prop;
    };
    Object.defineProperty(AkitaPlugin2.prototype, "storeName", {
      get: function() {
        return this.getStore().storeName;
      },
      enumerable: false,
      configurable: true
    });
    AkitaPlugin2.prototype.updateStore = function(newState, entityId, property, replace) {
      var _this = this;
      if (replace === void 0) {
        replace = false;
      }
      if (this.isEntityBased(entityId)) {
        var store = this.getStore();
        replace ? store.replace(entityId, newState) : store.update(entityId, newState);
      } else {
        if (property) {
          this.getStore()._setState(function(state) {
            return setValue(state, _this.withStoreName(property), newState, true);
          });
          return;
        }
        var nextState = replace ? newState : function(state) {
          return __assign(__assign({}, state), newState);
        };
        this.getStore()._setState(nextState);
      }
    };
    AkitaPlugin2.prototype.onReset = function(fn) {
      var _this = this;
      var original = this.getStore().reset;
      this.getStore().reset = function() {
        var params = [];
        for (var _i = 0; _i < arguments.length; _i++) {
          params[_i] = arguments[_i];
        }
        setTimeout(function() {
          original.apply(_this.getStore(), params);
          fn();
        });
      };
    };
    return AkitaPlugin2;
  }()
);
var ɵ0 = function(head, current) {
  return JSON.stringify(head) !== JSON.stringify(current);
};
var dirtyCheckDefaultParams = {
  comparator: ɵ0
};
function getNestedPath(nestedObj, path) {
  var pathAsArray = path.split(".");
  return pathAsArray.reduce(function(obj, key) {
    return obj && obj[key] !== "undefined" ? obj[key] : void 0;
  }, nestedObj);
}
var DirtyCheckPlugin = (
  /** @class */
  function(_super) {
    __extends(DirtyCheckPlugin2, _super);
    function DirtyCheckPlugin2(query, params, _entityId) {
      var _this = _super.call(this, query) || this;
      _this.query = query;
      _this.params = params;
      _this._entityId = _entityId;
      _this.dirty = new BehaviorSubject(false);
      _this.active = false;
      _this._reset = new Subject();
      _this.isDirty$ = _this.dirty.asObservable().pipe(distinctUntilChanged());
      _this.reset$ = _this._reset.asObservable();
      _this.params = __assign(__assign({}, dirtyCheckDefaultParams), params);
      if (_this.params.watchProperty) {
        var watchProp = coerceArray(_this.params.watchProperty);
        if (query instanceof QueryEntity && watchProp.includes("entities") && !watchProp.includes("ids")) {
          watchProp.push("ids");
        }
        _this.params.watchProperty = watchProp;
      }
      return _this;
    }
    DirtyCheckPlugin2.prototype.reset = function(params) {
      if (params === void 0) {
        params = {};
      }
      var currentValue = this.head;
      if (isFunction(params.updateFn)) {
        if (this.isEntityBased(this._entityId)) {
          currentValue = params.updateFn(this.head, this.getQuery().getEntity(this._entityId));
        } else {
          currentValue = params.updateFn(this.head, this.getQuery().getValue());
        }
      }
      logAction("@DirtyCheck - Revert");
      this.updateStore(currentValue, this._entityId);
      this._reset.next();
    };
    DirtyCheckPlugin2.prototype.setHead = function() {
      if (!this.active) {
        this.activate();
        this.active = true;
      } else {
        this.head = this._getHead();
      }
      this.updateDirtiness(false);
      return this;
    };
    DirtyCheckPlugin2.prototype.isDirty = function() {
      return !!this.dirty.value;
    };
    DirtyCheckPlugin2.prototype.hasHead = function() {
      return !!this.getHead();
    };
    DirtyCheckPlugin2.prototype.destroy = function() {
      this.head = null;
      this.subscription && this.subscription.unsubscribe();
      this._reset && this._reset.complete();
    };
    DirtyCheckPlugin2.prototype.isPathDirty = function(path) {
      var head = this.getHead();
      var current = this.getQuery().getValue();
      var currentPathValue = getNestedPath(current, path);
      var headPathValue = getNestedPath(head, path);
      return this.params.comparator(currentPathValue, headPathValue);
    };
    DirtyCheckPlugin2.prototype.getHead = function() {
      return this.head;
    };
    DirtyCheckPlugin2.prototype.activate = function() {
      var _this = this;
      this.head = this._getHead();
      var sources = this.params.watchProperty ? this.params.watchProperty.map(function(prop) {
        return _this.query.select(function(state) {
          return state[prop];
        }).pipe(map(function(val) {
          return {
            val,
            __akitaKey: prop
          };
        }));
      }) : [this.selectSource(this._entityId)];
      this.subscription = combineLatest(sources).pipe(skip(1)).subscribe(function(currentState) {
        if (isUndefined(_this.head))
          return;
        var isChange = currentState.some(function(state) {
          var head = state.__akitaKey ? _this.head[state.__akitaKey] : _this.head;
          var compareTo = state.__akitaKey ? state.val : state;
          return _this.params.comparator(head, compareTo);
        });
        _this.updateDirtiness(isChange);
      });
    };
    DirtyCheckPlugin2.prototype.updateDirtiness = function(isDirty) {
      this.dirty.next(isDirty);
    };
    DirtyCheckPlugin2.prototype._getHead = function() {
      var head = this.getSource(this._entityId);
      if (this.params.watchProperty) {
        head = this.getWatchedValues(head);
      }
      return head;
    };
    DirtyCheckPlugin2.prototype.getWatchedValues = function(source) {
      return this.params.watchProperty.reduce(function(watched, prop) {
        watched[prop] = source[prop];
        return watched;
      }, {});
    };
    return DirtyCheckPlugin2;
  }(AkitaPlugin)
);
var EntityCollectionPlugin = (
  /** @class */
  function() {
    function EntityCollectionPlugin2(query, entityIds) {
      this.query = query;
      this.entityIds = entityIds;
      this.entities = /* @__PURE__ */ new Map();
    }
    EntityCollectionPlugin2.prototype.getEntity = function(id2) {
      return this.entities.get(id2);
    };
    EntityCollectionPlugin2.prototype.hasEntity = function(id2) {
      return this.entities.has(id2);
    };
    EntityCollectionPlugin2.prototype.removeEntity = function(id2) {
      this.destroy(id2);
      return this.entities.delete(id2);
    };
    EntityCollectionPlugin2.prototype.createEntity = function(id2, plugin) {
      return this.entities.set(id2, plugin);
    };
    EntityCollectionPlugin2.prototype.getIds = function() {
      return isUndefined(this.entityIds) ? this.query.getValue().ids : coerceArray(this.entityIds);
    };
    EntityCollectionPlugin2.prototype.resolvedIds = function(ids) {
      return isUndefined(ids) ? this.getIds() : coerceArray(ids);
    };
    EntityCollectionPlugin2.prototype.rebase = function(ids, actions) {
      var _this = this;
      if (actions === void 0) {
        actions = {};
      }
      if (toBoolean(ids)) {
        if (isUndefined(this.entityIds)) {
          for (var i = 0, len = ids.length; i < len; i++) {
            var entityId = ids[i];
            if (this.hasEntity(entityId) === false) {
              isFunction(actions.beforeAdd) && actions.beforeAdd(entityId);
              var plugin = this.instantiatePlugin(entityId);
              this.entities.set(entityId, plugin);
              isFunction(actions.afterAdd) && actions.afterAdd(plugin);
            }
          }
          this.entities.forEach(function(plugin2, entityId2) {
            if (ids.indexOf(entityId2) === -1) {
              isFunction(actions.beforeRemove) && actions.beforeRemove(plugin2);
              _this.removeEntity(entityId2);
            }
          });
        } else {
          var _ids = coerceArray(this.entityIds);
          for (var i = 0, len = _ids.length; i < len; i++) {
            var entityId = _ids[i];
            if (ids.indexOf(entityId) > -1 && this.hasEntity(entityId) === false) {
              isFunction(actions.beforeAdd) && actions.beforeAdd(entityId);
              var plugin = this.instantiatePlugin(entityId);
              this.entities.set(entityId, plugin);
              isFunction(actions.afterAdd) && actions.afterAdd(plugin);
            } else {
              this.entities.forEach(function(plugin2, entityId2) {
                if (ids.indexOf(entityId2) === -1 && _this.hasEntity(entityId2) === true) {
                  isFunction(actions.beforeRemove) && actions.beforeRemove(plugin2);
                  _this.removeEntity(entityId2);
                }
              });
            }
          }
        }
      } else {
        this.getIds().forEach(function(id2) {
          if (!_this.hasEntity(id2))
            _this.createEntity(id2, _this.instantiatePlugin(id2));
        });
      }
    };
    EntityCollectionPlugin2.prototype.selectIds = function() {
      return this.query.select(function(state) {
        return state.ids;
      });
    };
    EntityCollectionPlugin2.prototype.activate = function(ids) {
      this.rebase(ids);
    };
    EntityCollectionPlugin2.prototype.forEachId = function(ids, cb2) {
      var _ids = this.resolvedIds(ids);
      for (var i = 0, len = _ids.length; i < len; i++) {
        var id2 = _ids[i];
        if (this.hasEntity(id2)) {
          cb2(this.getEntity(id2));
        }
      }
    };
    return EntityCollectionPlugin2;
  }()
);
(function(_super) {
  __extends(EntityDirtyCheckPlugin, _super);
  function EntityDirtyCheckPlugin(query, params) {
    if (params === void 0) {
      params = {};
    }
    var _this = _super.call(this, query, params.entityIds) || this;
    _this.query = query;
    _this.params = params;
    _this._someDirty = new Subject();
    _this.someDirty$ = merge(_this.query.select(function(state) {
      return state.entities;
    }), _this._someDirty.asObservable()).pipe(auditTime(0), map(function() {
      return _this.checkSomeDirty();
    }));
    _this.params = __assign(__assign({}, dirtyCheckDefaultParams), params);
    _this.activate();
    _this.selectIds().pipe(skip(1)).subscribe(function(ids) {
      _super.prototype.rebase.call(_this, ids, { afterAdd: function(plugin) {
        return plugin.setHead();
      } });
    });
    return _this;
  }
  EntityDirtyCheckPlugin.prototype.setHead = function(ids) {
    if (this.params.entityIds && ids) {
      var toArray_1 = coerceArray(ids);
      var someAreWatched = coerceArray(this.params.entityIds).some(function(id2) {
        return toArray_1.indexOf(id2) > -1;
      });
      if (someAreWatched === false) {
        return this;
      }
    }
    this.forEachId(ids, function(e2) {
      return e2.setHead();
    });
    this._someDirty.next();
    return this;
  };
  EntityDirtyCheckPlugin.prototype.hasHead = function(id2) {
    if (this.entities.has(id2)) {
      var entity = this.getEntity(id2);
      return entity.hasHead();
    }
    return false;
  };
  EntityDirtyCheckPlugin.prototype.reset = function(ids, params) {
    if (params === void 0) {
      params = {};
    }
    this.forEachId(ids, function(e2) {
      return e2.reset(params);
    });
  };
  EntityDirtyCheckPlugin.prototype.isDirty = function(id2, asObservable) {
    if (asObservable === void 0) {
      asObservable = true;
    }
    if (this.entities.has(id2)) {
      var entity = this.getEntity(id2);
      return asObservable ? entity.isDirty$ : entity.isDirty();
    }
    return false;
  };
  EntityDirtyCheckPlugin.prototype.someDirty = function() {
    return this.checkSomeDirty();
  };
  EntityDirtyCheckPlugin.prototype.isPathDirty = function(id2, path) {
    if (this.entities.has(id2)) {
      var head = this.getEntity(id2).getHead();
      var current = this.query.getEntity(id2);
      var currentPathValue = getNestedPath(current, path);
      var headPathValue = getNestedPath(head, path);
      return this.params.comparator(currentPathValue, headPathValue);
    }
    return null;
  };
  EntityDirtyCheckPlugin.prototype.destroy = function(ids) {
    this.forEachId(ids, function(e2) {
      return e2.destroy();
    });
    if (!ids) {
      this._someDirty.complete();
    }
  };
  EntityDirtyCheckPlugin.prototype.instantiatePlugin = function(id2) {
    return new DirtyCheckPlugin(this.query, this.params, id2);
  };
  EntityDirtyCheckPlugin.prototype.checkSomeDirty = function() {
    var e_1, _a2;
    var entitiesIds = this.resolvedIds();
    try {
      for (var entitiesIds_1 = __values(entitiesIds), entitiesIds_1_1 = entitiesIds_1.next(); !entitiesIds_1_1.done; entitiesIds_1_1 = entitiesIds_1.next()) {
        var id2 = entitiesIds_1_1.value;
        if (this.getEntity(id2).isDirty()) {
          return true;
        }
      }
    } catch (e_1_1) {
      e_1 = { error: e_1_1 };
    } finally {
      try {
        if (entitiesIds_1_1 && !entitiesIds_1_1.done && (_a2 = entitiesIds_1.return))
          _a2.call(entitiesIds_1);
      } finally {
        if (e_1)
          throw e_1.error;
      }
    }
    return false;
  };
  return EntityDirtyCheckPlugin;
})(EntityCollectionPlugin);
var paginatorDefaults = {
  pagesControls: false,
  range: false,
  startWith: 1,
  cacheTimeout: void 0,
  clearStoreWithCache: true
};
(function(_super) {
  __extends(PaginatorPlugin, _super);
  function PaginatorPlugin(query, config2) {
    if (config2 === void 0) {
      config2 = {};
    }
    var _this = _super.call(this, query, {
      resetFn: function() {
        _this.initial = false;
        _this.destroy({ clearCache: true, currentPage: 1 });
      }
    }) || this;
    _this.query = query;
    _this.config = config2;
    _this.metadata = /* @__PURE__ */ new Map();
    _this.pages = /* @__PURE__ */ new Map();
    _this.pagination = {
      currentPage: 1,
      perPage: 0,
      total: 0,
      lastPage: 0,
      data: []
    };
    _this.initial = true;
    _this.isLoading$ = _this.query.selectLoading().pipe(delay(0));
    _this.config = __assign(__assign({}, paginatorDefaults), config2);
    var _a2 = _this.config, startWith = _a2.startWith, cacheTimeout = _a2.cacheTimeout;
    _this.page = new BehaviorSubject(startWith);
    if (isObservable(cacheTimeout)) {
      _this.clearCacheSubscription = cacheTimeout.subscribe(function() {
        return _this.clearCache();
      });
    }
    return _this;
  }
  Object.defineProperty(PaginatorPlugin.prototype, "pageChanges", {
    /**
     * Listen to page changes
     */
    get: function() {
      return this.page.asObservable();
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(PaginatorPlugin.prototype, "currentPage", {
    /**
     * Get the current page number
     */
    get: function() {
      return this.pagination.currentPage;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(PaginatorPlugin.prototype, "isFirst", {
    /**
     * Check if current page is the first one
     */
    get: function() {
      return this.currentPage === 1;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(PaginatorPlugin.prototype, "isLast", {
    /**
     * Check if current page is the last one
     */
    get: function() {
      return this.currentPage === this.pagination.lastPage;
    },
    enumerable: false,
    configurable: true
  });
  PaginatorPlugin.prototype.withControls = function() {
    this.config.pagesControls = true;
    return this;
  };
  PaginatorPlugin.prototype.withRange = function() {
    this.config.range = true;
    return this;
  };
  PaginatorPlugin.prototype.setLoading = function(value) {
    if (value === void 0) {
      value = true;
    }
    this.getStore().setLoading(value);
  };
  PaginatorPlugin.prototype.update = function(response) {
    this.pagination = response;
    this.addPage(response.data);
  };
  PaginatorPlugin.prototype.addPage = function(data) {
    var _this = this;
    this.pages.set(this.currentPage, { ids: data.map(function(entity) {
      return entity[_this.getStore().idKey];
    }) });
    this.getStore().upsertMany(data);
  };
  PaginatorPlugin.prototype.clearCache = function(options) {
    if (options === void 0) {
      options = {};
    }
    if (!this.initial) {
      logAction("@Pagination - Clear Cache");
      if (options.clearStore !== false && (this.config.clearStoreWithCache || options.clearStore)) {
        this.getStore().remove();
      }
      this.pages = /* @__PURE__ */ new Map();
      this.metadata = /* @__PURE__ */ new Map();
    }
    this.initial = false;
  };
  PaginatorPlugin.prototype.clearPage = function(page) {
    this.pages.delete(page);
  };
  PaginatorPlugin.prototype.destroy = function(_a2) {
    var _b2 = _a2 === void 0 ? {} : _a2, clearCache = _b2.clearCache, currentPage = _b2.currentPage;
    if (this.clearCacheSubscription) {
      this.clearCacheSubscription.unsubscribe();
    }
    if (clearCache) {
      this.clearCache();
    }
    if (!isUndefined(currentPage)) {
      this.setPage(currentPage);
    }
    this.initial = true;
  };
  PaginatorPlugin.prototype.isPageActive = function(page) {
    return this.currentPage === page;
  };
  PaginatorPlugin.prototype.setPage = function(page) {
    if (page !== this.currentPage || !this.hasPage(page)) {
      this.page.next(this.pagination.currentPage = page);
    }
  };
  PaginatorPlugin.prototype.nextPage = function() {
    if (this.currentPage !== this.pagination.lastPage) {
      this.setPage(this.pagination.currentPage + 1);
    }
  };
  PaginatorPlugin.prototype.prevPage = function() {
    if (this.pagination.currentPage > 1) {
      this.setPage(this.pagination.currentPage - 1);
    }
  };
  PaginatorPlugin.prototype.setLastPage = function() {
    this.setPage(this.pagination.lastPage);
  };
  PaginatorPlugin.prototype.setFirstPage = function() {
    this.setPage(1);
  };
  PaginatorPlugin.prototype.hasPage = function(page) {
    return this.pages.has(page);
  };
  PaginatorPlugin.prototype.getPage = function(req) {
    var _this = this;
    var page = this.pagination.currentPage;
    if (this.hasPage(page)) {
      return this.selectPage(page);
    } else {
      this.setLoading(true);
      return from(req()).pipe(switchMap(function(config2) {
        page = config2.currentPage;
        applyTransaction(function() {
          _this.setLoading(false);
          _this.update(config2);
        });
        return _this.selectPage(page);
      }));
    }
  };
  PaginatorPlugin.prototype.getQuery = function() {
    return this.query;
  };
  PaginatorPlugin.prototype.refreshCurrentPage = function() {
    if (isNil(this.currentPage) === false) {
      this.clearPage(this.currentPage);
      this.setPage(this.currentPage);
    }
  };
  PaginatorPlugin.prototype.getFrom = function() {
    if (this.isFirst) {
      return 1;
    }
    return (this.currentPage - 1) * this.pagination.perPage + 1;
  };
  PaginatorPlugin.prototype.getTo = function() {
    if (this.isLast) {
      return this.pagination.total;
    }
    return this.currentPage * this.pagination.perPage;
  };
  PaginatorPlugin.prototype.selectPage = function(page) {
    var _this = this;
    return this.query.selectAll({ asObject: true }).pipe(take(1), map(function(entities) {
      var response = __assign(__assign({}, _this.pagination), { data: _this.pages.get(page).ids.map(function(id2) {
        return entities[id2];
      }) });
      var _a2 = _this.config, range = _a2.range, pagesControls = _a2.pagesControls;
      if (isNaN(_this.pagination.total)) {
        if (response.lastPage === 1) {
          response.total = response.data ? response.data.length : 0;
        } else {
          response.total = response.perPage * response.lastPage;
        }
        _this.pagination.total = response.total;
      }
      if (range) {
        response.from = _this.getFrom();
        response.to = _this.getTo();
      }
      if (pagesControls) {
        response.pageControls = generatePages(_this.pagination.total, _this.pagination.perPage);
      }
      return response;
    }));
  };
  __decorate([
    action("@Pagination - New Page"),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", void 0)
  ], PaginatorPlugin.prototype, "update", null);
  return PaginatorPlugin;
})(AkitaPlugin);
function generatePages(total, perPage) {
  var len = Math.ceil(total / perPage);
  var arr = [];
  for (var i = 0; i < len; i++) {
    arr.push(i + 1);
  }
  return arr;
}
(function(_super) {
  __extends(PersistNgFormPlugin, _super);
  function PersistNgFormPlugin(query, factoryFnOrPath, params) {
    if (params === void 0) {
      params = {};
    }
    var _this = _super.call(this, query) || this;
    _this.query = query;
    _this.factoryFnOrPath = factoryFnOrPath;
    _this.params = params;
    _this.params = __assign({ debounceTime: 300, formKey: "akitaForm", emitEvent: false, arrControlFactory: function(v2) {
      return _this.builder.control(v2);
    } }, params);
    _this.isRootKeys = toBoolean(factoryFnOrPath) === false;
    _this.isKeyBased = isString(factoryFnOrPath) || _this.isRootKeys;
    return _this;
  }
  PersistNgFormPlugin.prototype.setForm = function(form, builder) {
    this.form = form;
    this.builder = builder;
    this.activate();
    return this;
  };
  PersistNgFormPlugin.prototype.reset = function(initialState) {
    var _a2;
    var _this = this;
    var value;
    if (initialState) {
      value = initialState;
    } else {
      value = this.isKeyBased ? this.initialValue : this.factoryFnOrPath();
    }
    if (this.isKeyBased) {
      Object.keys(this.initialValue).forEach(function(stateKey) {
        var value2 = _this.initialValue[stateKey];
        if (Array.isArray(value2) && _this.builder) {
          var formArray = _this.form.controls[stateKey];
          _this.cleanArray(formArray);
          value2.forEach(function(v2, i) {
            _this.form.get(stateKey).insert(i, _this.params.arrControlFactory(v2));
          });
        }
      });
    }
    this.form.patchValue(value, { emitEvent: this.params.emitEvent });
    var storeValue = this.isKeyBased ? setValue(this.getQuery().getValue(), this.getStore().storeName + "." + this.factoryFnOrPath, value) : (_a2 = {}, _a2[this.params.formKey] = value, _a2);
    this.updateStore(storeValue);
  };
  PersistNgFormPlugin.prototype.cleanArray = function(control) {
    while (control.length !== 0) {
      control.removeAt(0);
    }
  };
  PersistNgFormPlugin.prototype.resolveInitialValue = function(formValue, root) {
    var _this = this;
    if (!formValue)
      return;
    return Object.keys(formValue).reduce(function(acc, stateKey) {
      var value = root[stateKey];
      if (Array.isArray(value) && _this.builder) {
        var factory_1 = _this.params.arrControlFactory;
        _this.cleanArray(_this.form.get(stateKey));
        value.forEach(function(v2, i) {
          _this.form.get(stateKey).insert(i, factory_1(v2));
        });
      }
      acc[stateKey] = root[stateKey];
      return acc;
    }, {});
  };
  PersistNgFormPlugin.prototype.activate = function() {
    var _a2;
    var _this = this;
    var path;
    if (this.isKeyBased) {
      if (this.isRootKeys) {
        this.initialValue = this.resolveInitialValue(this.form.value, this.getQuery().getValue());
        this.form.patchValue(this.initialValue, { emitEvent: this.params.emitEvent });
      } else {
        path = this.getStore().storeName + "." + this.factoryFnOrPath;
        var root = getValue(this.getQuery().getValue(), path);
        this.initialValue = this.resolveInitialValue(root, root);
        this.form.patchValue(this.initialValue, { emitEvent: this.params.emitEvent });
      }
    } else {
      if (!this.getQuery().getValue()[this.params.formKey]) {
        logAction("@PersistNgFormPlugin activate");
        this.updateStore((_a2 = {}, _a2[this.params.formKey] = this.factoryFnOrPath(), _a2));
      }
      var value = this.getQuery().getValue()[this.params.formKey];
      this.form.patchValue(value);
    }
    this.formChanges = this.form.valueChanges.pipe(debounceTime(this.params.debounceTime)).subscribe(function(value2) {
      logAction("@PersistForm - Update");
      var newState;
      if (_this.isKeyBased) {
        if (_this.isRootKeys) {
          newState = function(state) {
            return __assign(__assign({}, state), value2);
          };
        } else {
          newState = function(state) {
            return setValue(state, path, value2);
          };
        }
      } else {
        newState = function() {
          var _a3;
          return _a3 = {}, _a3[_this.params.formKey] = value2, _a3;
        };
      }
      _this.updateStore(newState(_this.getQuery().getValue()));
    });
  };
  PersistNgFormPlugin.prototype.destroy = function() {
    this.formChanges && this.formChanges.unsubscribe();
    this.form = null;
    this.builder = null;
  };
  return PersistNgFormPlugin;
})(AkitaPlugin);
var StateHistoryPlugin = (
  /** @class */
  function(_super) {
    __extends(StateHistoryPlugin2, _super);
    function StateHistoryPlugin2(query, params, _entityId) {
      if (params === void 0) {
        params = {};
      }
      var _this = _super.call(this, query, {
        resetFn: function() {
          return _this.clear();
        }
      }) || this;
      _this.query = query;
      _this.params = params;
      _this._entityId = _entityId;
      _this.skip = false;
      _this.history = {
        past: [],
        present: null,
        future: []
      };
      _this.skipUpdate = false;
      params.maxAge = !!params.maxAge ? params.maxAge : 10;
      params.comparator = params.comparator || function() {
        return true;
      };
      _this.activate();
      return _this;
    }
    Object.defineProperty(StateHistoryPlugin2.prototype, "hasPast$", {
      /**
       * Observable stream representing whether the history plugin has an available past
       *
       */
      get: function() {
        return this._hasPast$;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(StateHistoryPlugin2.prototype, "hasFuture$", {
      /**
       * Observable stream representing whether the history plugin has an available future
       *
       */
      get: function() {
        return this._hasFuture$;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(StateHistoryPlugin2.prototype, "hasPast", {
      get: function() {
        return this.history.past.length > 0;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(StateHistoryPlugin2.prototype, "hasFuture", {
      get: function() {
        return this.history.future.length > 0;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(StateHistoryPlugin2.prototype, "property", {
      get: function() {
        return this.params.watchProperty;
      },
      enumerable: false,
      configurable: true
    });
    StateHistoryPlugin2.prototype.updateHasHistory = function() {
      this.hasFutureSubject.next(this.hasFuture);
      this.hasPastSubject.next(this.hasPast);
    };
    StateHistoryPlugin2.prototype.activate = function() {
      var _this = this;
      this.hasPastSubject = new BehaviorSubject(false);
      this._hasPast$ = this.hasPastSubject.asObservable().pipe(distinctUntilChanged());
      this.hasFutureSubject = new BehaviorSubject(false);
      this._hasFuture$ = this.hasFutureSubject.asObservable().pipe(distinctUntilChanged());
      this.history.present = this.getSource(this._entityId, this.property);
      this.subscription = this.selectSource(this._entityId, this.property).pipe(pairwise()).subscribe(function(_a2) {
        var _b2 = __read(_a2, 2), past = _b2[0], present = _b2[1];
        if (_this.skip) {
          _this.skip = false;
          return;
        }
        var shouldUpdate = _this.params.comparator(past, present);
        if (!_this.skipUpdate && shouldUpdate) {
          if (_this.history.past.length === _this.params.maxAge) {
            _this.history.past = _this.history.past.slice(1);
          }
          _this.history.past = __spread(_this.history.past, [past]);
          _this.history.present = present;
          _this.updateHasHistory();
        }
      });
    };
    StateHistoryPlugin2.prototype.undo = function() {
      if (this.history.past.length > 0) {
        var _a2 = this.history, past = _a2.past, present = _a2.present;
        var previous = past[past.length - 1];
        this.history.past = past.slice(0, past.length - 1);
        this.history.present = previous;
        this.history.future = __spread([present], this.history.future);
        this.update();
      }
    };
    StateHistoryPlugin2.prototype.redo = function() {
      if (this.history.future.length > 0) {
        var _a2 = this.history, past = _a2.past, present = _a2.present;
        var next = this.history.future[0];
        var newFuture = this.history.future.slice(1);
        this.history.past = __spread(past, [present]);
        this.history.present = next;
        this.history.future = newFuture;
        this.update("Redo");
      }
    };
    StateHistoryPlugin2.prototype.jumpToPast = function(index2) {
      if (index2 < 0 || index2 >= this.history.past.length)
        return;
      var _a2 = this.history, past = _a2.past, future = _a2.future, present = _a2.present;
      var newPast = past.slice(0, index2);
      var newFuture = __spread(past.slice(index2 + 1), [present], future);
      var newPresent = past[index2];
      this.history.past = newPast;
      this.history.present = newPresent;
      this.history.future = newFuture;
      this.update();
    };
    StateHistoryPlugin2.prototype.jumpToFuture = function(index2) {
      if (index2 < 0 || index2 >= this.history.future.length)
        return;
      var _a2 = this.history, past = _a2.past, future = _a2.future, present = _a2.present;
      var newPast = __spread(past, [present], future.slice(0, index2));
      var newPresent = future[index2];
      var newFuture = future.slice(index2 + 1);
      this.history.past = newPast;
      this.history.present = newPresent;
      this.history.future = newFuture;
      this.update("Redo");
    };
    StateHistoryPlugin2.prototype.jump = function(n2) {
      if (n2 > 0)
        return this.jumpToFuture(n2 - 1);
      if (n2 < 0)
        return this.jumpToPast(this.history.past.length + n2);
    };
    StateHistoryPlugin2.prototype.clear = function(customUpdateFn) {
      this.history = isFunction(customUpdateFn) ? customUpdateFn(this.history) : {
        past: [],
        present: null,
        future: []
      };
      this.updateHasHistory();
    };
    StateHistoryPlugin2.prototype.destroy = function(clearHistory) {
      if (clearHistory === void 0) {
        clearHistory = false;
      }
      if (clearHistory) {
        this.clear();
      }
      this.subscription.unsubscribe();
    };
    StateHistoryPlugin2.prototype.ignoreNext = function() {
      this.skip = true;
    };
    StateHistoryPlugin2.prototype.update = function(action2) {
      if (action2 === void 0) {
        action2 = "Undo";
      }
      this.skipUpdate = true;
      logAction("@StateHistory - " + action2);
      this.updateStore(this.history.present, this._entityId, this.property, true);
      this.updateHasHistory();
      this.skipUpdate = false;
    };
    return StateHistoryPlugin2;
  }(AkitaPlugin)
);
(function(_super) {
  __extends(EntityStateHistoryPlugin, _super);
  function EntityStateHistoryPlugin(query, params) {
    if (params === void 0) {
      params = {};
    }
    var _this = _super.call(this, query, params.entityIds) || this;
    _this.query = query;
    _this.params = params;
    params.maxAge = toBoolean(params.maxAge) ? params.maxAge : 10;
    _this.activate();
    _this.selectIds().pipe(skip(1)).subscribe(function(ids) {
      return _this.activate(ids);
    });
    return _this;
  }
  EntityStateHistoryPlugin.prototype.redo = function(ids) {
    this.forEachId(ids, function(e2) {
      return e2.redo();
    });
  };
  EntityStateHistoryPlugin.prototype.undo = function(ids) {
    this.forEachId(ids, function(e2) {
      return e2.undo();
    });
  };
  EntityStateHistoryPlugin.prototype.hasPast = function(id2) {
    if (this.hasEntity(id2)) {
      return this.getEntity(id2).hasPast;
    }
  };
  EntityStateHistoryPlugin.prototype.hasFuture = function(id2) {
    if (this.hasEntity(id2)) {
      return this.getEntity(id2).hasFuture;
    }
  };
  EntityStateHistoryPlugin.prototype.jumpToFuture = function(ids, index2) {
    this.forEachId(ids, function(e2) {
      return e2.jumpToFuture(index2);
    });
  };
  EntityStateHistoryPlugin.prototype.jumpToPast = function(ids, index2) {
    this.forEachId(ids, function(e2) {
      return e2.jumpToPast(index2);
    });
  };
  EntityStateHistoryPlugin.prototype.clear = function(ids, customUpdateFn) {
    this.forEachId(ids, function(e2) {
      return e2.clear(customUpdateFn);
    });
  };
  EntityStateHistoryPlugin.prototype.destroy = function(ids, clearHistory) {
    if (clearHistory === void 0) {
      clearHistory = false;
    }
    this.forEachId(ids, function(e2) {
      return e2.destroy(clearHistory);
    });
  };
  EntityStateHistoryPlugin.prototype.ignoreNext = function(ids) {
    this.forEachId(ids, function(e2) {
      return e2.ignoreNext();
    });
  };
  EntityStateHistoryPlugin.prototype.instantiatePlugin = function(id2) {
    return new StateHistoryPlugin(this.query, this.params, id2);
  };
  return EntityStateHistoryPlugin;
})(EntityCollectionPlugin);
var _a, _b;
var StoreAction;
(function(StoreAction2) {
  StoreAction2["Update"] = "UPDATE";
})(StoreAction || (StoreAction = {}));
_a = {}, _a[StoreAction.Update] = "update", _a;
var EntityStoreAction;
(function(EntityStoreAction2) {
  EntityStoreAction2["Update"] = "UPDATE";
  EntityStoreAction2["AddEntities"] = "ADD_ENTITIES";
  EntityStoreAction2["SetEntities"] = "SET_ENTITIES";
  EntityStoreAction2["UpdateEntities"] = "UPDATE_ENTITIES";
  EntityStoreAction2["RemoveEntities"] = "REMOVE_ENTITIES";
  EntityStoreAction2["UpsertEntities"] = "UPSERT_ENTITIES";
  EntityStoreAction2["UpsertManyEntities"] = "UPSERT_MANY_ENTITIES";
})(EntityStoreAction || (EntityStoreAction = {}));
_b = {}, _b[EntityStoreAction.Update] = "update", _b[EntityStoreAction.AddEntities] = "add", _b[EntityStoreAction.SetEntities] = "set", _b[EntityStoreAction.UpdateEntities] = "update", _b[EntityStoreAction.RemoveEntities] = "remove", _b[EntityStoreAction.UpsertEntities] = "upsert", _b[EntityStoreAction.UpsertManyEntities] = "upsertMany", _b;
const archivedtexts = [
  {
    AtID: 1,
    AtLgID: 1,
    AtTitle: "Bonjour!",
    AtText: "Bonjour Manon.\nBonjour.\nAlors, je crois qu’il y a pas longtemps, là, vous avez fait une bonne action ?\nOui.",
    AtAnnotatedText: "",
    AtAudioURI: null,
    AtSourceURI: "http://francebienvenue1.wordpress.com/2011/06/18/generosite/"
  }
];
const archtexttags = [
  {
    AgAtID: 1,
    AgT2ID: 1
  },
  {
    AgAtID: 1,
    AgT2ID: 4
  },
  {
    AgAtID: 1,
    AgT2ID: 8
  }
];
const languages = [
  {
    LgID: 1,
    LgName: "French",
    LgDict1URI: "*http://www.wordreference.com/fren/###",
    LgDict2URI: null,
    LgGoogleTranslateURI: "*http://translate.google.com/?ie=UTF-8&sl=fr&tl=en&text=###",
    LgExportTemplate: "$y\\t$t\\n",
    LgTextSize: 100,
    LgCharacterSubstitutions: "´=\\'|`=\\'|’=\\'|‘=\\'|...=…|..=‥",
    LgRegexpSplitSentences: ".!?:;",
    LgExceptionsSplitSentences: "[A-Z].|Dr.",
    LgRegexpWordCharacters: "a-zA-ZÀ-ÖØ-öø-ȳ",
    LgRemoveSpaces: 0,
    LgSplitEachChar: 0,
    LgRightToLeft: 0
  },
  {
    LgID: 2,
    LgName: "Chinese",
    LgDict1URI: "http://ce.linedict.com/dict.html#/cnen/search?query=###",
    LgDict2URI: "http://chinesedictionary.mobi/?handler=QueryWorddict&mwdqb=###",
    LgGoogleTranslateURI: "*http://translate.google.com/?ie=UTF-8&sl=zh&tl=en&text=###",
    LgExportTemplate: "$y\\t$t\\n",
    LgTextSize: 200,
    LgCharacterSubstitutions: "",
    LgRegexpSplitSentences: ".!?:;。！？：；",
    LgExceptionsSplitSentences: "",
    LgRegexpWordCharacters: "一-龥",
    LgRemoveSpaces: 1,
    LgSplitEachChar: 1,
    LgRightToLeft: 0
  },
  {
    LgID: 3,
    LgName: "German",
    LgDict1URI: "http://de-esyn.dict.cc/?s=#",
    LgDict2URI: null,
    LgGoogleTranslateURI: "*http://translate.google.com/?ie=UTF-8&sl=de&tl=en&text=###",
    LgExportTemplate: "$y\\t$t\\n",
    LgTextSize: 150,
    LgCharacterSubstitutions: "´=\\'|`=\\'|’=\\'|‘=\\'|...=…|..=‥",
    LgRegexpSplitSentences: ".!?:;",
    LgExceptionsSplitSentences: "[A-Z].|Dr.",
    LgRegexpWordCharacters: "a-zA-ZäöüÄÖÜß",
    LgRemoveSpaces: 0,
    LgSplitEachChar: 0,
    LgRightToLeft: 0
  },
  {
    LgID: 4,
    LgName: "Chinese2",
    LgDict1URI: "http://ce.linedict.com/dict.html#/cnen/search?query=###",
    LgDict2URI: "http://chinesedictionary.mobi/?handler=QueryWorddict&mwdqb=###",
    LgGoogleTranslateURI: "*http://translate.google.com/?ie=UTF-8&sl=zh&tl=en&text=###",
    LgExportTemplate: "$y\\t$t\\n",
    LgTextSize: 200,
    LgCharacterSubstitutions: "",
    LgRegexpSplitSentences: ".!?:;。！？：；",
    LgExceptionsSplitSentences: "",
    LgRegexpWordCharacters: "一-龥",
    LgRemoveSpaces: 1,
    LgSplitEachChar: 0,
    LgRightToLeft: 0
  },
  {
    LgID: 5,
    LgName: "Japanese",
    LgDict1URI: "http://jisho.org/words?eng=&dict=edict&jap=###",
    LgDict2URI: "http://jisho.org/kanji/details/###",
    LgGoogleTranslateURI: "*http://translate.google.com/?ie=UTF-8&sl=ja&tl=en&text=###",
    LgExportTemplate: "$y\\t$t\\n",
    LgTextSize: 200,
    LgCharacterSubstitutions: "",
    LgRegexpSplitSentences: ".!?:;。！？：；",
    LgExceptionsSplitSentences: "",
    LgRegexpWordCharacters: "一-龥ぁ-ヾ",
    LgRemoveSpaces: 1,
    LgSplitEachChar: 1,
    LgRightToLeft: 0
  },
  {
    LgID: 6,
    LgName: "Korean",
    LgDict1URI: "*http://endic.naver.com/search.nhn?sLn=kr&isOnlyViewEE=N&query=###",
    LgDict2URI: null,
    LgGoogleTranslateURI: " '*http://translate.google.com/?text=###&ie=UTF-8&sl=ko&tl=en",
    LgExportTemplate: "$y\\t$t\\n",
    LgTextSize: 150,
    LgCharacterSubstitutions: "",
    LgRegexpSplitSentences: ".!?:;。！？：；",
    LgExceptionsSplitSentences: "",
    LgRegexpWordCharacters: "가-힣ᄀ-ᇂ",
    LgRemoveSpaces: 0,
    LgSplitEachChar: 0,
    LgRightToLeft: 0
  },
  {
    LgID: 7,
    LgName: "Thai",
    LgDict1URI: "http://dict.longdo.com/search/###",
    LgDict2URI: null,
    LgGoogleTranslateURI: "*http://translate.google.com/?ie=UTF-8&sl=th&tl=en&text=###",
    LgExportTemplate: "$y\\t$t\\n",
    LgTextSize: 250,
    LgCharacterSubstitutions: "",
    LgRegexpSplitSentences: ".!?:;",
    LgExceptionsSplitSentences: "",
    LgRegexpWordCharacters: "ก-๛",
    LgRemoveSpaces: 1,
    LgSplitEachChar: 0,
    LgRightToLeft: 0
  },
  {
    LgID: 8,
    LgName: "Hebrew",
    LgDict1URI: "*http://dictionary.reverso.net/hebrew-english/###",
    LgDict2URI: null,
    LgGoogleTranslateURI: "*http://translate.google.com/?ie=UTF-8&sl=iw&tl=en&text=###",
    LgExportTemplate: "$y\\t$t\\n",
    LgTextSize: 150,
    LgCharacterSubstitutions: "",
    LgRegexpSplitSentences: ".!?:;",
    LgExceptionsSplitSentences: "",
    LgRegexpWordCharacters: "\\x{0590}-\\x{05FF}",
    LgRemoveSpaces: 0,
    LgSplitEachChar: 0,
    LgRightToLeft: 1
  }
];
const sentences = [
  {
    SeID: "",
    SeLgID: "",
    SeTxID: "",
    SeOrder: "",
    SeText: ""
  }
];
const settings = [
  {
    StKey: "dbversion",
    StValue: "v002000000"
  },
  {
    StKey: "showallwords",
    StValue: 0
  },
  {
    StKey: "currentlanguage",
    StValue: 1
  },
  {
    StKey: "lastscorecalc",
    StValue: "2020-10-03"
  },
  {
    StKey: "set-text-h-frameheight-no-audio",
    StValue: 140
  },
  {
    StKey: "set-text-h-frameheight-with-audio",
    StValue: 200
  },
  {
    StKey: "set-text-l-framewidth-percent",
    StValue: 50
  },
  {
    StKey: "set-text-r-frameheight-percent",
    StValue: 50
  },
  {
    StKey: "set-test-h-frameheight",
    StValue: 140
  },
  {
    StKey: "set-test-l-framewidth-percent",
    StValue: 50
  },
  {
    StKey: "set-test-r-frameheight-percent",
    StValue: 50
  },
  {
    StKey: "set-test-main-frame-waiting-time",
    StValue: 0
  },
  {
    StKey: "set-test-edit-frame-waiting-time",
    StValue: 500
  },
  {
    StKey: "set-test-sentence-count",
    StValue: 1
  },
  {
    StKey: "set-term-sentence-count",
    StValue: 1
  },
  {
    StKey: "set-archivedtexts-per-page",
    StValue: 100
  },
  {
    StKey: "set-texts-per-page",
    StValue: 10
  },
  {
    StKey: "set-terms-per-page",
    StValue: 100
  },
  {
    StKey: "set-tags-per-page",
    StValue: 100
  },
  {
    StKey: "set-show-text-word-counts",
    StValue: 1
  },
  {
    StKey: "set-term-translation-delimiters",
    StValue: ""
  },
  {
    StKey: "set-mobile-display-mode",
    StValue: 0
  },
  {
    StKey: "set-similar-terms-count",
    StValue: 0
  },
  {
    StKey: "currenttext",
    StValue: 1
  }
];
const tags = [
  {
    TgID: 1,
    TgText: "masc",
    TgComment: ""
  },
  {
    TgID: 2,
    TgText: "fem",
    TgComment: ""
  },
  {
    TgID: 8,
    TgText: "3p-sg",
    TgComment: ""
  },
  {
    TgID: 5,
    TgText: "1p-sg",
    TgComment: ""
  },
  {
    TgID: 6,
    TgText: "2p-sg",
    TgComment: ""
  },
  {
    TgID: 7,
    TgText: "verb",
    TgComment: ""
  },
  {
    TgID: 10,
    TgText: "2p-pl",
    TgComment: ""
  },
  {
    TgID: 11,
    TgText: "3p-pl",
    TgComment: ""
  },
  {
    TgID: 12,
    TgText: "adj",
    TgComment: ""
  },
  {
    TgID: 13,
    TgText: "adv",
    TgComment: ""
  },
  {
    TgID: 14,
    TgText: "interj",
    TgComment: ""
  },
  {
    TgID: 15,
    TgText: "conj",
    TgComment: ""
  },
  {
    TgID: 16,
    TgText: "num",
    TgComment: ""
  },
  {
    TgID: 17,
    TgText: "infinitive",
    TgComment: ""
  },
  {
    TgID: 18,
    TgText: "noun",
    TgComment: ""
  },
  {
    TgID: 19,
    TgText: "pronoun",
    TgComment: ""
  },
  {
    TgID: 22,
    TgText: "pres",
    TgComment: ""
  },
  {
    TgID: 25,
    TgText: "pastpart",
    TgComment: ""
  },
  {
    TgID: 27,
    TgText: "name",
    TgComment: ""
  },
  {
    TgID: 28,
    TgText: "greeting",
    TgComment: ""
  }
];
const tags2 = [
  {
    T2ID: 1,
    T2Text: "demo",
    T2Comment: ""
  },
  {
    T2ID: 2,
    T2Text: "basic",
    T2Comment: ""
  },
  {
    T2ID: 3,
    T2Text: "goethe",
    T2Comment: ""
  },
  {
    T2ID: 4,
    T2Text: "conversation",
    T2Comment: ""
  },
  {
    T2ID: 5,
    T2Text: "joke",
    T2Comment: ""
  },
  {
    T2ID: 6,
    T2Text: "chinesepod",
    T2Comment: ""
  },
  {
    T2ID: 7,
    T2Text: "literature",
    T2Comment: ""
  },
  {
    T2ID: 8,
    T2Text: "fragment",
    T2Comment: ""
  },
  {
    T2ID: 9,
    T2Text: "annotation",
    T2Comment: ""
  }
];
const textitems = [];
const texts = [
  {
    TxID: 1,
    TxLgID: 1,
    TxTitle: "Mon premier don du sang",
    TxText: "Bonjour Manon.\nBonjour.\nAlors,   je crois qu’il y a pas longtemps,   là,   vous avez fait une bonne action ?\nOui. \nOn peut dire ça comme ça. Qu’est-ce que vous avez fait,   alors ?\nAlors,   j’ai fait mon premier don du sang. Donc c’est à dire que on va dans une... Un organisme spécialisé vient dans l’IUT,   dans notre université pour... pour prendre notre sang pour les malades de l’hôpital qui en ont besoin...\nOui,   voilà,   en cas d’accident par exemple,   etc...\nEn cas d’accident ou en cas d’anémie ...\nOui,   oui. D’accord. Et alors,   donc,   c’était la première fois que vous le faisiez ?\nC’est la première fois et ça m’a marquée parce que j’ai... j’ai très peur des piqures en temps habituel.\nAh bon !\nVoilà. J’en ai... j’en fais très rarement,   le plus rarement possible...\nOui ?\n... pour... pour éviter ça au maximum. Et puis...\nOui,   et là,   c’est pas une petite piqure ! Ça dure un moment,   en fait !\nAh non,   ça dure quinze – vingt minutes.\nAh,   d’accord.\nIls prennent... je sais plus combien de litres de sang. Ah,   c’est beaucoup.\nOui,   oui. D’accord.\nOuais,   ouais,   ouais.\nEt donc vous avez franchi le pas.\nVoilà.\nMais pourquoi,   alors ?\nParce que je pense que c’est important d’aider les autres,   surtout que j’ai appris que j’ai un sang assez rare.\nAh oui ? C’est vrai ?\nOuais.\nPourquoi ? C’est quoi ?\nA négatif.\nAh,   d’accord. Oui,   oui. Moi,   c’est pareil.\nC’est un sang... Ah,   c’est vrai ?\nOui,   oui.\nAssez rare,   donc voilà,   les gens,   si ils en ont besoin. Et puis si un jour,   moi j’en ai besoin,   je serai contente que d’autres en donnent. Donc voilà.\nOui,   oui. D’accord.\nEn attendant,   je fais ça.\nOui,   oui,   bien sûr. Et alors,   comment ça se passe concrètement? Donc vous êtes allée... Donc ils sont venus à l’IUT,   là. Ils installent tout bien comme il faut,   et alors vous y allez et puis...\nOn y va,   ils nous de ... Ils nous posent quelques questions par rapport à notre hygiène de vie évidemment,   pour... pour les maladies,   tout ça,   si on n’a pas eu... été malades,   pour les médicaments dans le sang,   tout ça. Et puis après,   ils vous installent sur une... sur une table,   allongé,   et ils vous... ils vous piquent et...\nEt on attend.\nEt on attend,   15 ou 20 minutes.\nOui,   d’accord. Et le temps n’est pas trop long ? On se sent pas un peu bizarre ou...?\nOn se sent bizarre,   mais ils sont vraiment à côté de nous pour... pour justement qu’on... qu’on reste éveillé en quelque sorte,   et qu’on reste actif pour pas justement qu’on parte... un peu à...\nOui,   à se poser des questions,   tout ça,   et puis se sentir affaibli ou quelque chose.\nVoilà. Donc ils sont vraiment à côté de nous,   à nous parler,   à nous faire rigoler pour voir si on est toujours conscient,   finalement.\nAh oui,   d’accord.\nOui,   oui. Voilà.\nOui,   oui,   oui. Et après,   alors,   à la fin,   qu’est-ce qui se passe ?\nA la fin,   ils vous enlèvent la piqure. Et d’ailleurs,   c’est là que je me suis évanouie !\nCarrément ?\nOuais.\nAh bon,   d’accord !\nOui,   oui. Ils ont dû... Ils ont dû me mettre les pieds en l’air. Ils ont... Ils ont bien rigolé parce que justement,   ils... ils ont vu que quand je suis partie,   justement,   c’est quand ils ont enlevé la piqure,   je souriais et quand je suis... quand je me suis... quand j’ai repris conscience,   ils m’ont dit que c’était la... la première fois qu’ils avaient vu quelqu’un partir...\nEn souriant ?\n...en souriant.\nAh bon,   d’accord. Alors vous êtes très spéciale !\nVoilà.\nAh oui ? Et alors,   donc... mais vous vous êtes évanouie carrément ?\nAh oui,   carrément ! J’ai perdu conscience pendant... bon pas longtemps,   hein,   peut-être une ou deux minutes,   le temps que... que ça revienne. Je pense que c’était un...\nUn étourdissement ?\n... un trop-plein... trop-plein d’émotions en fait.\nAh d’accord !\nD’être contente et à la fois d’avoir eu peur.\nAh bon !\nTout ça,   ouais.\nVous êtes à ce point sensible...\nAh oui,   oui,   vraiment.\n... émotive.\nOuais.\nD’accord. Et alors,   qu’est-ce qu’ils ont fait,   eux ? Ils vous ont... quoi ? Je sais pas... tapé sur les joues ?\nNon,   non,   ils ont été très calmes,   apparemment,   d’après ce que j’ai entendu.\nIl faut placer dans une bonne position,   quoi. C’est ça ?\nVoilà,   ils ont juste relevé mes pieds. Et ils m’ont... Ils m’ont mis un... un coton imbibé de... de quelque chose. Je sais pas ce que c’était. Ça... ça sentait l’eucalyptus.\nAh oui,   oui. Pour un peu vous...\nPour un peu...\n... stimuler.\nOuais,   voilà.\nD’accord. Bon bah c’est sympa ! J’espère que tout le monde se... s’évanouit pas après les... les prises de sang comme ça ! Et il y a pas à manger aussi un peu,   non ? C’est ça ?\nVoilà,   et après ils nous... ils nous donnent ce qu’on veut: un... un gâteau ou un verre de... de soda..\nOuais,   ouais,   pour reconstituer...\n... un truc bien sucré.\nOuais d’accord,   pour se reconstituer les forces.\nPour repartir,   voilà.\nD’accord. Bon bah c’est bien,   alors,   d’avoir fait ça. Est-ce que vous recommencerez,   alors ?\nOui,   oui. Il faut attendre trois mois. Donc je l’ai fait en février et je compte bien le faire en juin,   là,   ouais.\nAh bon d’accord. Et alors,   vous comptez vous évanouir à nouveau ?\nNon,   je vais essayer... je vais essayer de me retenir.\nD’accord.\nJe vais leur expliquer que je suis un peu émotive. Et...\nUn peu,   oui. Hm,   hm. Mais peut-être que la deuxième fois,   comme vous saurez déjà comment ça se passe,   ce sera moins...\nOui,   je pense.\n... moins stressant.\nJe... je pars avec moins d’appréhension,   en tout cas,   pour la deuxième fois.\nOui,   d’accord. Bon,   bah,   c’est bien,   alors,   d’avoir fait ça.\nOui.\nD’accord. Bah très bien pour les... pour les gens à qui ça va servir. Merci Manon.",
    TxAnnotatedText: "",
    TxAudioURI: "https://learning-with-texts.sourceforge.io/media/dondusang.mp3",
    TxSourceURI: "http://francebienvenue1.wordpress.com/2011/06/18/generosite/"
  },
  {
    TxID: 2,
    TxLgID: 2,
    TxTitle: "The Man and the Dog (annotated version)",
    TxText: "一天，一个男人走在街上。突然，他看见前面有一只黑色的大狗，看起来很凶。男人非常害怕，不敢往前走。狗的旁边站着一个女人，男人问她：你的狗咬人吗？女人说：我的狗不咬人。这时，那只狗咬了男人。他气坏了，大叫：你说你的狗不咬人！女人回答：这不是我的狗。",
    TxAnnotatedText: "4	一天	11	one day\n-1	，\n6	一	9	a\n8	个	12	(MW)\n12	男人	15	man\n14	走	16	walk\n16	在	17	at\n20	街上	20	on the street\n-1	。\n24	突然	21	suddenly\n-1	，\n26	他	184	he\n30	看见	185	catch sight\n34	前面	186	ahead\n36	有	187	have\n38	一	9	a\n40	只	188	(MW)\n44	黑色	189	black color\n46	的	190	's\n48	大	191	big\n50	狗	192	dog\n-1	，\n56	看起来	193	appears\n58	很	194	very\n60	凶	195	ferocious\n-1	。\n64	男人	15	man\n68	非常	196	exceptional\n72	害怕	197	be afraid\n-1	，\n74	不	198	not\n76	敢	199	dare\n80	往前	200	move ahead\n82	走	16	walk\n-1	。\n84	狗	192	dog\n86	的	190	's\n90	旁边	201	side\n92	站	202	stand\n94	着	203	(there)\n96	一	9	a\n98	个	12	(MW)\n102	女人	204	woman\n-1	，\n106	男人	15	man\n108	问	205	ask\n110	她	206	her\n-1	：\n114	你的	220	your\n116	狗	192	dog\n118	咬	208	bite\n120	人	14	person\n122	吗	209	(QW)\n-1	？\n126	女人	204	woman\n128	说	210	say\n-1	：\n132	我的	211	my\n134	狗	192	dog\n136	不	198	not\n138	咬	208	bite\n140	人	14	person\n-1	。\n144	这时	212	at this time\n-1	，\n146	那	213	that\n148	只	188	(MW)\n150	狗	192	dog\n152	咬	208	bite\n154	了	214	finish\n158	男人	15	man\n-1	。\n160	他	184	he\n164	气坏	215	furious\n166	了	214	(change)\n-1	，\n168	大	191	strong\n170	叫	216	shout\n-1	：\n172	你	207	you\n174	说	210	say\n178	你的	220	your\n180	狗	192	dog\n182	不	198	not\n184	咬	208	bite\n186	人	14	person\n-1	！\n190	女人	204	woman\n194	回答	217	answer\n-1	：\n196	这	218	this\n198	不	198	not\n200	是	219	be\n204	我的	211	my\n206	狗	192	dog\n-1	。",
    TxAudioURI: "https://learning-with-texts.sourceforge.io/media/manandthedog.mp3",
    TxSourceURI: "http://chinesepod.com/lessons/the-man-and-the-dog"
  },
  {
    TxID: 3,
    TxLgID: 3,
    TxTitle: "Die Leiden des jungen Werther",
    TxText: "Wie froh bin ich,   daß ich weg bin! Bester Freund,   was ist das Herz des Menschen! Dich zu verlassen,   den ich so liebe,   von dem ich unzertrennlich war,   und froh zu sein! Ich weiß,   du verzeihst mir's. Waren nicht meine übrigen Verbindungen recht ausgesucht vom Schicksal,   um ein Herz wie das meine zu ängstigen? Die arme Leonore! Und doch war ich unschuldig. Konnt' ich dafür,   daß,   während die eigensinnigen Reize ihrer Schwester mir eine angenehme Unterhaltung verschafften,   daß eine Leidenschaft in dem armen Herzen sich bildete? Und doch – bin ich ganz unschuldig? Hab' ich nicht ihre Empfindungen genährt? Hab' ich mich nicht an den ganz wahren Ausdrücken der Natur,   die uns so oft zu lachen machten,   so wenig lächerlich sie waren,   selbst ergetzt? Hab' ich nicht – o was ist der Mensch,   daß er über sich klagen darf! Ich will,   lieber Freund,   ich verspreche dir's,   ich will mich bessern,   will nicht mehr ein bißchen Übel,   das uns das Schicksal vorlegt,   wiederkäuen,   wie ich's immer getan habe; ich will das Gegenwärtige genießen,   und das Vergangene soll mir vergangen sein. Gewiß,   du hast recht,   Bester,   der Schmerzen wären minder unter den Menschen,   wenn sie nicht – Gott weiß,   warum sie so gemacht sind! – mit so viel Emsigkeit der Einbildungskraft sich beschäftigten,   die Erinnerungen des vergangenen Übels zurückzurufen,   eher als eine gleichgültige Gegenwart zu ertragen.\nDu bist so gut,   meiner Mutter zu sagen,   daß ich ihr Geschäft bestens betreiben und ihr ehstens Nachricht davon geben werde. Ich habe meine Tante gesprochen und bei weitem das böse Weib nicht gefunden,   das man bei uns aus ihr macht. Sie ist eine muntere,   heftige Frau von dem besten Herzen. Ich erklärte ihr meiner Mutter Beschwerden über den zurückgehaltenen Erbschaftsanteil; sie sagte mir ihre Gründe,   Ursachen und die Bedingungen,   unter welchen sie bereit wäre,   alles herauszugeben,   und mehr als wir verlangten – kurz,   ich mag jetzt nichts davon schreiben,   sage meiner Mutter,   es werde alles gut gehen. Und ich habe,   mein Lieber,   wieder bei diesem kleinen Geschäft gefunden,   daß Mißverständnisse und Trägheit vielleicht mehr Irrungen in der Welt machen als List und Bosheit. Wenigstens sind die beiden letzteren gewiß seltener.\nÜbrigens befinde ich mich hier gar wohl. Die Einsamkeit ist meinem Herzen köstlicher Balsam in dieser paradiesischen Gegend,   und diese Jahreszeit der Jugend wärmt mit aller Fülle mein oft schauderndes Herz. Jeder Baum,   jede Hecke ist ein Strauß von Blüten,   und man möchte zum Maienkäfer werden,   um in dem Meer von Wohlgerüchen herumschweben und alle seine Nahrung darin finden zu können.\nDie Stadt selbst ist unangenehm,   dagegen rings umher eine unaussprechliche Schönheit der Natur. Das bewog den verstorbenen Grafen von M.,   einen Garten auf einem der Hügel anzulegen,   die mit der schönsten Mannigfaltigkeit sich kreuzen und die lieblichsten Täler bilden. Der Garten ist einfach,   und man fühlt gleich bei dem Eintritte,   daß nicht ein wissenschaftlicher Gärtner,   sondern ein fühlendes Herz den Plan gezeichnet,   das seiner selbst hier genießen wollte. Schon manche Träne hab' ich dem Abgeschiedenen in dem verfallenen Kabinettchen geweint,   das sein Lieblingsplätzchen war und auch meines ist. Bald werde ich Herr vom Garten sein; der Gärtner ist mir zugetan,   nur seit den paar Tagen,   und er wird sich nicht übel dabei befinden.",
    TxAnnotatedText: "",
    TxAudioURI: "https://learning-with-texts.sourceforge.io/media/werther.mp3",
    TxSourceURI: "http://www.gutenberg.org/ebooks/2407"
  },
  {
    TxID: 4,
    TxLgID: 4,
    TxTitle: "The Man and the Dog",
    TxText: "一天，一 个 男人 走 在 街上。 突然，他 看见 前面 有 一 只 黑色 的 大 狗，看起来 很 凶。 男人 非常 害怕，不敢 往前 走。 狗 的 旁边 站着 一 个 女人，男人 问 她： 你 的 狗 咬 人 吗？ 女人 说： 我 的 狗 不 咬 人。 这时，那 只 狗 咬 了 男人。 他 气坏 了，大 叫： 你 说 你 的 狗 不 咬 人！ 女人 回答： 这 不是 我 的 狗。",
    TxAnnotatedText: "",
    TxAudioURI: "https://learning-with-texts.sourceforge.io/media/manandthedog.mp3",
    TxSourceURI: "http://chinesepod.com/lessons/the-man-an-the-dog"
  },
  {
    TxID: 5,
    TxLgID: 5,
    TxTitle: "Some expressions",
    TxText: "はい。いいえ。\nすみません。\nどうも。\nありがとうございます。\n日本語を話しますか。はい、少し。\nイギリスから来ました。",
    TxAnnotatedText: "https://learning-with-texts.sourceforge.io/media/jap.mp3",
    TxAudioURI: null,
    TxSourceURI: "$7"
  },
  {
    TxID: 6,
    TxLgID: 6,
    TxTitle: "Test in Korean",
    TxText: "좋은 아침.\n안녕하세요.\n잘자요.\n잘가요.\n안녕하세요,   잘지냈어요?\n네,   잘지냈어요?\n네 그럼요.\n이름이 뭐에요?\n제 이름은 존이에요,   이름이 뭐에요?\n제 이름은 메리에요.",
    TxAnnotatedText: "https://learning-with-texts.sourceforge.io/media/korean.mp3",
    TxAudioURI: null,
    TxSourceURI: "$7"
  },
  {
    TxID: 7,
    TxLgID: 7,
    TxTitle: "Hello in Thai",
    TxText: "ส วัส ดี ครับ\nส วัส ดี ค่ะ",
    TxAnnotatedText: "https://learning-with-texts.sourceforge.io/media/thai.mp3",
    TxAudioURI: null,
    TxSourceURI: "$7"
  },
  {
    TxID: 8,
    TxLgID: 8,
    TxTitle: "Greetings",
    TxText: "בוקר טוב\nאחר צהריים טובים\nערב טוב\nלילה טוב\nלהתראות",
    TxAnnotatedText: "https://learning-with-texts.sourceforge.io/media/hebrew.mp3",
    TxAudioURI: null,
    TxSourceURI: "$7"
  },
  {
    TxID: 9,
    TxLgID: 1,
    TxTitle: "Mon premier don du sang (Short & annotated version)",
    TxText: "Bonjour Manon.\nBonjour.\nAlors,   je crois qu’il y a pas longtemps,   là,   vous avez fait une bonne action ?\nOui. \nOn peut dire ça comme ça. Qu’est-ce que vous avez fait,   alors ?\nAlors,   j’ai fait mon premier don du sang.",
    TxAnnotatedText: "2	Bonjour	2	hello\n-1	 \n4	Manon	1	*\n-1	. \n-1	¶ \n7	Bonjour	2	hello\n-1	. \n-1	¶ \n10	Alors	3	well\n-1	,   \n12	je	7	I\n-1	 \n14	crois	8	think\n-1	 \n16	qu	6	that\n-1	'\n22	il y a	4	there is\n-1	 \n24	pas	170	(not)\n-1	 \n26	longtemps	171	long time\n-1	,   \n28	là	172	there\n-1	,   \n30	vous	146	you\n-1	 \n32	avez	150	have\n-1	 \n34	fait	147	done\n-1	 \n36	une	173	a\n-1	 \n40	bonne action	46	good deed\n-1	 ? \n-1	¶ \n43	Oui	165	yes\n-1	. \n-1	¶ \n46	On	166	one\n-1	 \n48	peut	167	can\n-1	 \n50	dire	26	say\n-1	 \n52	ça	168	that\n-1	 \n54	comme	169	as\n-1	 \n56	ça	168	that\n-1	. \n64	Qu'est-ce que	22	what\n-1	 \n66	vous	146	you\n-1	 \n68	avez	150	have\n-1	 \n70	fait	147	done\n-1	,   \n72	alors	3	then\n-1	 ? \n-1	¶ \n75	Alors	3	well\n-1	,   \n77	j	174	I\n-1	'\n79	ai	149	have\n-1	 \n81	fait	147	made\n-1	 \n83	mon	151	my\n-1	 \n85	premier	175	first\n-1	 \n91	don du sang	33	blood donation\n-1	.",
    TxAudioURI: "https://learning-with-texts.sourceforge.io/media/dondusang_short.mp3",
    TxSourceURI: "http://francebienvenue1.wordpress.com/2011/06/18/generosite/"
  }
];
const texttags = [
  {
    TtTxID: 1,
    TtT2ID: 1
  },
  {
    TtTxID: 1,
    TtT2ID: 4
  },
  {
    TtTxID: 2,
    TtT2ID: 1
  },
  {
    TtTxID: 2,
    TtT2ID: 5
  },
  {
    TtTxID: 2,
    TtT2ID: 6
  },
  {
    TtTxID: 2,
    TtT2ID: 9
  },
  {
    TtTxID: 3,
    TtT2ID: 1
  },
  {
    TtTxID: 3,
    TtT2ID: 3
  },
  {
    TtTxID: 3,
    TtT2ID: 7
  },
  {
    TtTxID: 4,
    TtT2ID: 1
  },
  {
    TtTxID: 4,
    TtT2ID: 5
  },
  {
    TtTxID: 4,
    TtT2ID: 6
  },
  {
    TtTxID: 5,
    TtT2ID: 1
  },
  {
    TtTxID: 5,
    TtT2ID: 2
  },
  {
    TtTxID: 6,
    TtT2ID: 1
  },
  {
    TtTxID: 6,
    TtT2ID: 2
  },
  {
    TtTxID: 7,
    TtT2ID: 1
  },
  {
    TtTxID: 7,
    TtT2ID: 2
  },
  {
    TtTxID: 8,
    TtT2ID: 1
  },
  {
    TtTxID: 8,
    TtT2ID: 2
  },
  {
    TtTxID: 9,
    TtT2ID: 1
  },
  {
    TtTxID: 9,
    TtT2ID: 4
  },
  {
    TtTxID: 9,
    TtT2ID: 9
  }
];
const words = [
  {
    WoID: 1,
    WoLgID: 1,
    WoText: "Manon",
    WoTextLC: "manon",
    WoStatus: 98,
    WoTranslation: "(name)",
    WoRomanization: null,
    WoSentence: "Bonjour {Manon}.",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 100,
    WoTomorrowScore: 100,
    WoRandom: "0.77861288634931",
    WoLgIDTextLC: 14
  },
  {
    WoID: 2,
    WoLgID: 1,
    WoText: "bonjour",
    WoTextLC: "bonjour",
    WoStatus: 5,
    WoTranslation: "hello / good morning / good afternoon",
    WoRomanization: null,
    WoSentence: "{Bonjour} Manon.",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "99.99999999999999",
    WoTomorrowScore: "98.6038636119947",
    WoRandom: "0.15276275961917152",
    WoLgIDTextLC: 24
  },
  {
    WoID: 3,
    WoLgID: 1,
    WoText: "alors",
    WoTextLC: "alors",
    WoStatus: 5,
    WoTranslation: "then / in that case / at the time / else / if not / my goodness / well",
    WoRomanization: null,
    WoSentence: "{Alors},   je crois qu'il y a pas longtemps,   là,a vous avez fait une bonne action ?",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "99.99999999999999",
    WoTomorrowScore: "98.6038636119947",
    WoRandom: "0.42797516978157235",
    WoLgIDTextLC: 34
  },
  {
    WoID: 4,
    WoLgID: 1,
    WoText: "il y a",
    WoTextLC: "il y a",
    WoStatus: 2,
    WoTranslation: "there is / there are",
    WoRomanization: null,
    WoSentence: "Alors,   je crois qu'{il y a} pas longtemps,   là,   vous avez fait une bonne action ?",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "6.84106830122592",
    WoTomorrowScore: "3.3507273312126955",
    WoRandom: "0.6815876007839922",
    WoLgIDTextLC: 44
  },
  {
    WoID: 170,
    WoLgID: 1,
    WoText: "pas",
    WoTextLC: "pas",
    WoStatus: 2,
    WoTranslation: "(not) / footstep / step / walk",
    WoRomanization: null,
    WoSentence: "Alors,   je crois qu'il y a {pas} longtemps,   là,   vous avez fait une bonne action ?",
    WoCreated: "2013-03-27 12:21:30",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "6.84106830122592",
    WoTomorrowScore: "3.3507273312126955",
    WoRandom: "0.5153064034090437",
    WoLgIDTextLC: 1704
  },
  {
    WoID: 6,
    WoLgID: 1,
    WoText: "qu",
    WoTextLC: "qu",
    WoStatus: 5,
    WoTranslation: "that / how / so that",
    WoRomanization: null,
    WoSentence: "Alors,   je crois {qu}'il y a pas longtemps,   là,   vous avez fait une bonne action ?",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "99.99999999999999",
    WoTomorrowScore: "98.6038636119947",
    WoRandom: "0.1240125253088889",
    WoLgIDTextLC: 64
  },
  {
    WoID: 7,
    WoLgID: 1,
    WoText: "je",
    WoTextLC: "je",
    WoStatus: 5,
    WoTranslation: "I",
    WoRomanization: null,
    WoSentence: "Alors,   {je} crois qu'il y a pas longtemps,   là,   vous avez fait une bonne action ?",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "99.99999999999999",
    WoTomorrowScore: "98.6038636119947",
    WoRandom: "0.5752998549261129",
    WoLgIDTextLC: 74
  },
  {
    WoID: 8,
    WoLgID: 1,
    WoText: "crois",
    WoTextLC: "crois",
    WoStatus: 4,
    WoTranslation: "believe / think",
    WoRomanization: null,
    WoSentence: "Alors,   je {crois} qu'il y a pas longtemps,   là,   vous avez fait une bonne action ?",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "46.38244308231173",
    WoTomorrowScore: "44.63727259730512",
    WoRandom: "0.5044617294375429",
    WoLgIDTextLC: 84
  },
  {
    WoID: 9,
    WoLgID: 2,
    WoText: "一",
    WoTextLC: "一",
    WoStatus: 2,
    WoTranslation: "one / a",
    WoRomanization: null,
    WoSentence: "{一}天，{一}个男人走在街上。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "6.84106830122592",
    WoTomorrowScore: "3.3507273312126955",
    WoRandom: "0.7964091131430204",
    WoLgIDTextLC: 94
  },
  {
    WoID: 10,
    WoLgID: 2,
    WoText: "天",
    WoTextLC: "天",
    WoStatus: 2,
    WoTranslation: "sky,   day",
    WoRomanization: null,
    WoSentence: "一{天}，一个男人走在街上。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "6.84106830122592",
    WoTomorrowScore: "3.3507273312126955",
    WoRandom: "0.4686604081361186",
    WoLgIDTextLC: 104
  },
  {
    WoID: 11,
    WoLgID: 2,
    WoText: "一天",
    WoTextLC: "一天",
    WoStatus: 1,
    WoTranslation: "one day",
    WoRomanization: null,
    WoSentence: "{一天}，一个男人走在街上。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.9540747319851767",
    WoLgIDTextLC: 114
  },
  {
    WoID: 12,
    WoLgID: 2,
    WoText: "个",
    WoTextLC: "个",
    WoStatus: 2,
    WoTranslation: "(MW)",
    WoRomanization: null,
    WoSentence: "一天，一{个}男人走在街上。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "6.84106830122592",
    WoTomorrowScore: "3.3507273312126955",
    WoRandom: "0.36439246625117255",
    WoLgIDTextLC: 124
  },
  {
    WoID: 13,
    WoLgID: 2,
    WoText: "男",
    WoTextLC: "男",
    WoStatus: 2,
    WoTranslation: "male",
    WoRomanization: null,
    WoSentence: "一天，一个{男}人走在街上。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "6.84106830122592",
    WoTomorrowScore: "3.3507273312126955",
    WoRandom: "0.9597381660339778",
    WoLgIDTextLC: 134
  },
  {
    WoID: 14,
    WoLgID: 2,
    WoText: "人",
    WoTextLC: "人",
    WoStatus: 2,
    WoTranslation: "human being / person",
    WoRomanization: null,
    WoSentence: "一天，一个男{人}走在街上。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "6.84106830122592",
    WoTomorrowScore: "3.3507273312126955",
    WoRandom: "0.7055134621500163",
    WoLgIDTextLC: 144
  },
  {
    WoID: 15,
    WoLgID: 2,
    WoText: "男人",
    WoTextLC: "男人",
    WoStatus: 2,
    WoTranslation: "man",
    WoRomanization: null,
    WoSentence: "一天，一个{男人}走在街上。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "6.84106830122592",
    WoTomorrowScore: "3.3507273312126955",
    WoRandom: "0.6483528433817931",
    WoLgIDTextLC: 154
  },
  {
    WoID: 16,
    WoLgID: 2,
    WoText: "走",
    WoTextLC: "走",
    WoStatus: 2,
    WoTranslation: "walk",
    WoRomanization: null,
    WoSentence: "一天，一个男人{走}在街上。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "6.84106830122592",
    WoTomorrowScore: "3.3507273312126955",
    WoRandom: "0.12522386119256157",
    WoLgIDTextLC: 164
  },
  {
    WoID: 17,
    WoLgID: 2,
    WoText: "在",
    WoTextLC: "在",
    WoStatus: 2,
    WoTranslation: "be / live/ at",
    WoRomanization: null,
    WoSentence: "一天，一个男人走{在}街上。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "6.84106830122592",
    WoTomorrowScore: "3.3507273312126955",
    WoRandom: "0.6810608065510735",
    WoLgIDTextLC: 174
  },
  {
    WoID: 18,
    WoLgID: 2,
    WoText: "街",
    WoTextLC: "街",
    WoStatus: 1,
    WoTranslation: "street",
    WoRomanization: null,
    WoSentence: "一天，一个男人走在{街}上。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.029632479911327808",
    WoLgIDTextLC: 184
  },
  {
    WoID: 19,
    WoLgID: 2,
    WoText: "上",
    WoTextLC: "上",
    WoStatus: 2,
    WoTranslation: "on / in / go up / upper part / last",
    WoRomanization: null,
    WoSentence: "一天，一个男人走在街{上}。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "6.84106830122592",
    WoTomorrowScore: "3.3507273312126955",
    WoRandom: "0.10498001063706354",
    WoLgIDTextLC: 194
  },
  {
    WoID: 20,
    WoLgID: 2,
    WoText: "街上",
    WoTextLC: "街上",
    WoStatus: 1,
    WoTranslation: "on the street",
    WoRomanization: null,
    WoSentence: "一天，一个男人走在{街上}。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.4360026441849793",
    WoLgIDTextLC: 204
  },
  {
    WoID: 21,
    WoLgID: 2,
    WoText: "突然",
    WoTextLC: "突然",
    WoStatus: 2,
    WoTranslation: "suddenly",
    WoRomanization: null,
    WoSentence: "{突然}，他看见前面有一只黑色的大狗，看起来很凶。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "6.84106830122592",
    WoTomorrowScore: "3.3507273312126955",
    WoRandom: "0.8650732197473507",
    WoLgIDTextLC: 214
  },
  {
    WoID: 22,
    WoLgID: 1,
    WoText: "qu'est-ce que",
    WoTextLC: "qu'est-ce que",
    WoStatus: 4,
    WoTranslation: "what",
    WoRomanization: null,
    WoSentence: "{Qu'est-ce que} vous avez fait,   alors ?",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "46.38244308231173",
    WoTomorrowScore: "44.63727259730512",
    WoRandom: "0.017358196915460936",
    WoLgIDTextLC: 224
  },
  {
    WoID: 23,
    WoLgID: 1,
    WoText: "est-ce que",
    WoTextLC: "est-ce que",
    WoStatus: 4,
    WoTranslation: "is it that",
    WoRomanization: null,
    WoSentence: "Qu'{est-ce que} vous avez fait,   alors ?",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "46.38244308231173",
    WoTomorrowScore: "44.63727259730512",
    WoRandom: "0.4915713560688974",
    WoLgIDTextLC: 234
  },
  {
    WoID: 24,
    WoLgID: 1,
    WoText: "est-ce",
    WoTextLC: "est-ce",
    WoStatus: 3,
    WoTranslation: "is that / is this",
    WoRomanization: null,
    WoSentence: "Qu'{est-ce} que vous avez fait,   alors ?",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "20.067133683596026",
    WoTomorrowScore: "17.74023970358721",
    WoRandom: "0.40578222033174915",
    WoLgIDTextLC: 244
  },
  {
    WoID: 25,
    WoLgID: 1,
    WoText: "est",
    WoTextLC: "est",
    WoStatus: 1,
    WoTranslation: "is / east",
    WoRomanization: null,
    WoSentence: "Qu'{est}-ce que vous avez fait,   alors ?",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.5541970641856986",
    WoLgIDTextLC: 254
  },
  {
    WoID: 26,
    WoLgID: 1,
    WoText: "dire",
    WoTextLC: "dire",
    WoStatus: 3,
    WoTranslation: "say / tell",
    WoRomanization: null,
    WoSentence: "On peut {dire} ça comme ça.",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "20.067133683596026",
    WoTomorrowScore: "17.74023970358721",
    WoRandom: "0.5536386906668904",
    WoLgIDTextLC: 264
  },
  {
    WoID: 27,
    WoLgID: 3,
    WoText: "wie",
    WoTextLC: "wie",
    WoStatus: 2,
    WoTranslation: "how",
    WoRomanization: null,
    WoSentence: "{Wie} froh bin ich,   daß ich weg bin!",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "6.84106830122592",
    WoTomorrowScore: "3.3507273312126955",
    WoRandom: "0.10560229151100134",
    WoLgIDTextLC: 274
  },
  {
    WoID: 28,
    WoLgID: 3,
    WoText: "froh",
    WoTextLC: "froh",
    WoStatus: 2,
    WoTranslation: "happy / glad",
    WoRomanization: null,
    WoSentence: "Wie {froh} bin ich,   daß ich weg bin!",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "6.84106830122592",
    WoTomorrowScore: "3.3507273312126955",
    WoRandom: "0.8670954162879805",
    WoLgIDTextLC: 284
  },
  {
    WoID: 29,
    WoLgID: 3,
    WoText: "bin",
    WoTextLC: "bin",
    WoStatus: 2,
    WoTranslation: "am",
    WoRomanization: null,
    WoSentence: "Wie froh {bin} ich,   daß ich weg {bin}!",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "6.84106830122592",
    WoTomorrowScore: "3.3507273312126955",
    WoRandom: "0.01867023764054313",
    WoLgIDTextLC: 294
  },
  {
    WoID: 30,
    WoLgID: 3,
    WoText: "ich",
    WoTextLC: "ich",
    WoStatus: 2,
    WoTranslation: "I",
    WoRomanization: null,
    WoSentence: "Wie froh bin {ich},   daß {ich} weg bin!",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "6.84106830122592",
    WoTomorrowScore: "3.3507273312126955",
    WoRandom: "0.49206497007241934",
    WoLgIDTextLC: 304
  },
  {
    WoID: 31,
    WoLgID: 3,
    WoText: "daß",
    WoTextLC: "daß",
    WoStatus: 2,
    WoTranslation: "that / so that",
    WoRomanization: null,
    WoSentence: "Wie froh bin ich,   {daß} ich weg bin!",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "6.84106830122592",
    WoTomorrowScore: "3.3507273312126955",
    WoRandom: "0.40431416817411236",
    WoLgIDTextLC: 314
  },
  {
    WoID: 32,
    WoLgID: 3,
    WoText: "weg",
    WoTextLC: "weg",
    WoStatus: 2,
    WoTranslation: "away / gone / path / way",
    WoRomanization: null,
    WoSentence: "Wie froh bin ich,   daß ich {weg} bin!",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "6.84106830122592",
    WoTomorrowScore: "3.3507273312126955",
    WoRandom: "0.5453759613869488",
    WoLgIDTextLC: 324
  },
  {
    WoID: 33,
    WoLgID: 1,
    WoText: "don du sang",
    WoTextLC: "don du sang",
    WoStatus: 2,
    WoTranslation: "blood donation",
    WoRomanization: null,
    WoSentence: "Alors,   j'ai fait mon premier {don du sang}.",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "6.84106830122592",
    WoTomorrowScore: "3.3507273312126955",
    WoRandom: "0.5139373331460518",
    WoLgIDTextLC: 334
  },
  {
    WoID: 34,
    WoLgID: 4,
    WoText: "一天",
    WoTextLC: "一天",
    WoStatus: 1,
    WoTranslation: "one day",
    WoRomanization: "yìtiān",
    WoSentence: "{一天}，一个男人走在街上。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.9335588123030577",
    WoLgIDTextLC: 344
  },
  {
    WoID: 35,
    WoLgID: 4,
    WoText: "男人",
    WoTextLC: "男人",
    WoStatus: 1,
    WoTranslation: "man",
    WoRomanization: "nánrén",
    WoSentence: "一天，一个{男人}走在街上。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.12598209281077805",
    WoLgIDTextLC: 354
  },
  {
    WoID: 36,
    WoLgID: 4,
    WoText: "突然",
    WoTextLC: "突然",
    WoStatus: 1,
    WoTranslation: "suddenly",
    WoRomanization: "tūrán",
    WoSentence: "{突然}，他看见前面有一只黑色的大狗，看起来很凶。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.829234057878362",
    WoLgIDTextLC: 364
  },
  {
    WoID: 37,
    WoLgID: 4,
    WoText: "他",
    WoTextLC: "他",
    WoStatus: 1,
    WoTranslation: "he",
    WoRomanization: "tā",
    WoSentence: "{他}气坏了，大叫：",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.7682240416931212",
    WoLgIDTextLC: 374
  },
  {
    WoID: 38,
    WoLgID: 4,
    WoText: "这时",
    WoTextLC: "这时",
    WoStatus: 1,
    WoTranslation: "at this moment",
    WoRomanization: "zhèshí",
    WoSentence: "{这时}，那只狗咬了男人。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.35341806556416494",
    WoLgIDTextLC: 384
  },
  {
    WoID: 39,
    WoLgID: 4,
    WoText: "狗",
    WoTextLC: "狗",
    WoStatus: 1,
    WoTranslation: "dog",
    WoRomanization: "gǒu",
    WoSentence: "{狗}的旁边站着一个女人，男人问她：",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.4624182334751061",
    WoLgIDTextLC: 394
  },
  {
    WoID: 40,
    WoLgID: 4,
    WoText: "女人",
    WoTextLC: "女人",
    WoStatus: 1,
    WoTranslation: "woman",
    WoRomanization: "nǚrén",
    WoSentence: "{女人}说：",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.2518370014166804",
    WoLgIDTextLC: 404
  },
  {
    WoID: 41,
    WoLgID: 4,
    WoText: "看起来",
    WoTextLC: "看起来",
    WoStatus: 1,
    WoTranslation: "it seems / it appears / it looks as if",
    WoRomanization: "kànqǐlái",
    WoSentence: "突然，他看见前面有一只黑色的大狗，{看起来}很凶。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.8719303373917289",
    WoLgIDTextLC: 414
  },
  {
    WoID: 42,
    WoLgID: 4,
    WoText: "凶",
    WoTextLC: "凶",
    WoStatus: 1,
    WoTranslation: "ferocious,   fierce",
    WoRomanization: "xiōng",
    WoSentence: "突然，他看见前面有一只黑色的大狗，看起来很{凶}。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.6041407134422481",
    WoLgIDTextLC: 424
  },
  {
    WoID: 43,
    WoLgID: 1,
    WoText: "c'est",
    WoTextLC: "c'est",
    WoStatus: 1,
    WoTranslation: "it's / that's",
    WoRomanization: null,
    WoSentence: "{C'est} quoi ?",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.4049125857696986",
    WoLgIDTextLC: 434
  },
  {
    WoID: 44,
    WoLgID: 1,
    WoText: "c",
    WoTextLC: "c",
    WoStatus: 5,
    WoTranslation: "that / it",
    WoRomanization: null,
    WoSentence: "{C}'est quoi ?",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "99.99999999999999",
    WoTomorrowScore: "98.6038636119947",
    WoRandom: "0.21214081925539377",
    WoLgIDTextLC: 444
  },
  {
    WoID: 45,
    WoLgID: 1,
    WoText: "quoi",
    WoTextLC: "quoi",
    WoStatus: 3,
    WoTranslation: "what",
    WoRomanization: null,
    WoSentence: "C'est {quoi} ?",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "20.067133683596026",
    WoTomorrowScore: "17.74023970358721",
    WoRandom: "0.8459663697015181",
    WoLgIDTextLC: 454
  },
  {
    WoID: 46,
    WoLgID: 1,
    WoText: "bonne action",
    WoTextLC: "bonne action",
    WoStatus: 2,
    WoTranslation: "good deed",
    WoRomanization: null,
    WoSentence: "Alors,   je crois qu'il y a pas longtemps,   là,   vous avez fait une {bonne action} ?",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "6.84106830122592",
    WoTomorrowScore: "3.3507273312126955",
    WoRandom: "0.5934094214750542",
    WoLgIDTextLC: 464
  },
  {
    WoID: 47,
    WoLgID: 4,
    WoText: "你",
    WoTextLC: "你",
    WoStatus: 1,
    WoTranslation: "you",
    WoRomanization: "nǐ",
    WoSentence: "{你}的狗咬人吗？",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.4291480290043615",
    WoLgIDTextLC: 474
  },
  {
    WoID: 48,
    WoLgID: 4,
    WoText: "你的",
    WoTextLC: "你的",
    WoStatus: 1,
    WoTranslation: "your",
    WoRomanization: "nǐde",
    WoSentence: "{你的}狗咬人吗？",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.36551191133029004",
    WoLgIDTextLC: 484
  },
  {
    WoID: 49,
    WoLgID: 4,
    WoText: "的",
    WoTextLC: "的",
    WoStatus: 5,
    WoTranslation: "of / 's / (Part.)",
    WoRomanization: "de",
    WoSentence: "你{的}狗咬人吗？",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "99.99999999999999",
    WoTomorrowScore: "98.6038636119947",
    WoRandom: "0.5401155003720107",
    WoLgIDTextLC: 494
  },
  {
    WoID: 50,
    WoLgID: 1,
    WoText: "il",
    WoTextLC: "il",
    WoStatus: 1,
    WoTranslation: "he",
    WoRomanization: null,
    WoSentence: "{Il} faut attendre trois mois.",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.6040417986028286",
    WoLgIDTextLC: 504
  },
  {
    WoID: 51,
    WoLgID: 1,
    WoText: "ils",
    WoTextLC: "ils",
    WoStatus: 1,
    WoTranslation: "they",
    WoRomanization: null,
    WoSentence: "A la fin,   {ils} vous enlèvent la piqure.",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.3998625226317556",
    WoLgIDTextLC: 514
  },
  {
    WoID: 52,
    WoLgID: 5,
    WoText: "フランス",
    WoTextLC: "フランス",
    WoStatus: 1,
    WoTranslation: "France",
    WoRomanization: "ふらんす",
    WoSentence: "私は{フランス}から来ています。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.18718724808393722",
    WoLgIDTextLC: 524
  },
  {
    WoID: 53,
    WoLgID: 5,
    WoText: "はい",
    WoTextLC: "はい",
    WoStatus: 1,
    WoTranslation: "yes / OK / okay",
    WoRomanization: "hai",
    WoSentence: "{はい}。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.7363487032580643",
    WoLgIDTextLC: 534
  },
  {
    WoID: 103,
    WoLgID: 5,
    WoText: "日",
    WoTextLC: "日",
    WoStatus: 3,
    WoTranslation: "day / Japan / sun",
    WoRomanization: "kun: -か、 ひ、 -び / on: ジツ、 ニチ / names: あ、 あき、 いる、 く、 くさ、 こう、 す、 たち、 に、 にっ、 につ、 へ",
    WoSentence: "{日}本語を話しますか。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "20.067133683596026",
    WoTomorrowScore: "17.74023970358721",
    WoRandom: "0.5647589448511218",
    WoLgIDTextLC: 1034
  },
  {
    WoID: 54,
    WoLgID: 5,
    WoText: "は",
    WoTextLC: "は",
    WoStatus: 5,
    WoTranslation: "(Hiragana: ha) / (topic m.)",
    WoRomanization: "ha // わ / wa",
    WoSentence: "私{は}イギリスから来ています。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "99.99999999999999",
    WoTomorrowScore: "98.6038636119947",
    WoRandom: "0.12018180277215484",
    WoLgIDTextLC: 544
  },
  {
    WoID: 55,
    WoLgID: 5,
    WoText: "い",
    WoTextLC: "い",
    WoStatus: 5,
    WoTranslation: "(Hiragana: i)",
    WoRomanization: "i",
    WoSentence: "は{い}。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "99.99999999999999",
    WoTomorrowScore: "98.6038636119947",
    WoRandom: "0.3918629348202263",
    WoLgIDTextLC: 554
  },
  {
    WoID: 56,
    WoLgID: 5,
    WoText: "え",
    WoTextLC: "え",
    WoStatus: 5,
    WoTranslation: "(Hiragana: e)",
    WoRomanization: "e",
    WoSentence: "いい{え}。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "99.99999999999999",
    WoTomorrowScore: "98.6038636119947",
    WoRandom: "0.5987692965183121",
    WoLgIDTextLC: 564
  },
  {
    WoID: 57,
    WoLgID: 5,
    WoText: "す",
    WoTextLC: "す",
    WoStatus: 5,
    WoTranslation: "(Hiragana: su)",
    WoRomanization: "su",
    WoSentence: "{す}みません。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "99.99999999999999",
    WoTomorrowScore: "98.6038636119947",
    WoRandom: "0.8182577088645265",
    WoLgIDTextLC: 574
  },
  {
    WoID: 58,
    WoLgID: 5,
    WoText: "み",
    WoTextLC: "み",
    WoStatus: 5,
    WoTranslation: "(Hiragana: mi)",
    WoRomanization: "mi",
    WoSentence: "す{み}ません。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "99.99999999999999",
    WoTomorrowScore: "98.6038636119947",
    WoRandom: "0.29498068550134143",
    WoLgIDTextLC: 584
  },
  {
    WoID: 59,
    WoLgID: 5,
    WoText: "ま",
    WoTextLC: "ま",
    WoStatus: 5,
    WoTranslation: "(Hiragana: ma)",
    WoRomanization: "ma",
    WoSentence: "すみ{ま}せん。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "99.99999999999999",
    WoTomorrowScore: "98.6038636119947",
    WoRandom: "0.02013033164677241",
    WoLgIDTextLC: 594
  },
  {
    WoID: 60,
    WoLgID: 5,
    WoText: "せ",
    WoTextLC: "せ",
    WoStatus: 5,
    WoTranslation: "(Hiragana: se)",
    WoRomanization: "se",
    WoSentence: "すみま{せ}ん。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "99.99999999999999",
    WoTomorrowScore: "98.6038636119947",
    WoRandom: "0.2157096324634828",
    WoLgIDTextLC: 604
  },
  {
    WoID: 61,
    WoLgID: 5,
    WoText: "ん",
    WoTextLC: "ん",
    WoStatus: 5,
    WoTranslation: "(Hiragana: n)",
    WoRomanization: "n",
    WoSentence: "すみませ{ん}。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "99.99999999999999",
    WoTomorrowScore: "98.6038636119947",
    WoRandom: "0.01815719811074175",
    WoLgIDTextLC: 614
  },
  {
    WoID: 62,
    WoLgID: 5,
    WoText: "いいえ",
    WoTextLC: "いいえ",
    WoStatus: 1,
    WoTranslation: "no / nay",
    WoRomanization: "iie",
    WoSentence: "{いいえ}。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.4436571238969053",
    WoLgIDTextLC: 624
  },
  {
    WoID: 63,
    WoLgID: 5,
    WoText: "すみません",
    WoTextLC: "すみません",
    WoStatus: 3,
    WoTranslation: "sorry / excuse me",
    WoRomanization: "sumimasen",
    WoSentence: "{すみません}。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "20.067133683596026",
    WoTomorrowScore: "17.74023970358721",
    WoRandom: "0.16381405588594644",
    WoLgIDTextLC: 634
  },
  {
    WoID: 64,
    WoLgID: 5,
    WoText: "ど",
    WoTextLC: "ど",
    WoStatus: 5,
    WoTranslation: "(Hiragana: do)",
    WoRomanization: "do",
    WoSentence: "{ど}うも。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "99.99999999999999",
    WoTomorrowScore: "98.6038636119947",
    WoRandom: "0.4880989384726611",
    WoLgIDTextLC: 644
  },
  {
    WoID: 65,
    WoLgID: 5,
    WoText: "う",
    WoTextLC: "う",
    WoStatus: 5,
    WoTranslation: "(Hiragana: u)",
    WoRomanization: "u",
    WoSentence: "ど{う}も。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "99.99999999999999",
    WoTomorrowScore: "98.6038636119947",
    WoRandom: "0.9490525554391114",
    WoLgIDTextLC: 654
  },
  {
    WoID: 66,
    WoLgID: 5,
    WoText: "も",
    WoTextLC: "も",
    WoStatus: 5,
    WoTranslation: "(Hiragana: mo)",
    WoRomanization: "mo",
    WoSentence: "どう{も}。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "99.99999999999999",
    WoTomorrowScore: "98.6038636119947",
    WoRandom: "0.2809659925112184",
    WoLgIDTextLC: 664
  },
  {
    WoID: 104,
    WoLgID: 5,
    WoText: "本",
    WoTextLC: "本",
    WoStatus: 3,
    WoTranslation: "book / main / origin / present / real / true",
    WoRomanization: "kun: もと / on: ホン / names: まと",
    WoSentence: "日{本}語を話しますか。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "20.067133683596026",
    WoTomorrowScore: "17.74023970358721",
    WoRandom: "0.12560323916897478",
    WoLgIDTextLC: 1044
  },
  {
    WoID: 68,
    WoLgID: 5,
    WoText: "あ",
    WoTextLC: "あ",
    WoStatus: 5,
    WoTranslation: "(Hiragana: a)",
    WoRomanization: "a",
    WoSentence: "{あ}りがとうございます。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "99.99999999999999",
    WoTomorrowScore: "98.6038636119947",
    WoRandom: "0.557672326972403",
    WoLgIDTextLC: 684
  },
  {
    WoID: 69,
    WoLgID: 5,
    WoText: "り",
    WoTextLC: "り",
    WoStatus: 5,
    WoTranslation: "(Hiragana: ri)",
    WoRomanization: "ri",
    WoSentence: "あ{り}がとうございます。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "99.99999999999999",
    WoTomorrowScore: "98.6038636119947",
    WoRandom: "0.9454636880620044",
    WoLgIDTextLC: 694
  },
  {
    WoID: 70,
    WoLgID: 5,
    WoText: "が",
    WoTextLC: "が",
    WoStatus: 5,
    WoTranslation: "(Hiragana: ga)",
    WoRomanization: "ga",
    WoSentence: "あり{が}とうございます。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "99.99999999999999",
    WoTomorrowScore: "98.6038636119947",
    WoRandom: "0.054301490126458456",
    WoLgIDTextLC: 704
  },
  {
    WoID: 71,
    WoLgID: 5,
    WoText: "と",
    WoTextLC: "と",
    WoStatus: 5,
    WoTranslation: "(Hiragana: to)",
    WoRomanization: "to",
    WoSentence: "ありが{と}うございます。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "99.99999999999999",
    WoTomorrowScore: "98.6038636119947",
    WoRandom: "0.4351164171799239",
    WoLgIDTextLC: 714
  },
  {
    WoID: 72,
    WoLgID: 5,
    WoText: "ありがとう",
    WoTextLC: "ありがとう",
    WoStatus: 1,
    WoTranslation: "thank you",
    WoRomanization: "arigatou",
    WoSentence: "{ありがとう}ございます。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.012677646253889098",
    WoLgIDTextLC: 724
  },
  {
    WoID: 73,
    WoLgID: 5,
    WoText: "ご",
    WoTextLC: "ご",
    WoStatus: 5,
    WoTranslation: "(Hiragana: go)",
    WoRomanization: "go",
    WoSentence: "ありがとう{ご}ざいます。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "99.99999999999999",
    WoTomorrowScore: "98.6038636119947",
    WoRandom: "0.7580390104633188",
    WoLgIDTextLC: 734
  },
  {
    WoID: 74,
    WoLgID: 5,
    WoText: "ざ",
    WoTextLC: "ざ",
    WoStatus: 5,
    WoTranslation: "(Hiragana: za)",
    WoRomanization: "za",
    WoSentence: "ありがとうご{ざ}います。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "99.99999999999999",
    WoTomorrowScore: "98.6038636119947",
    WoRandom: "0.7521621442885716",
    WoLgIDTextLC: 744
  },
  {
    WoID: 75,
    WoLgID: 5,
    WoText: "ございます",
    WoTextLC: "ございます",
    WoStatus: 1,
    WoTranslation: "(polite) be / exist",
    WoRomanization: "gozaimasu",
    WoSentence: "ありがとう{ございます}。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.48669372078654705",
    WoLgIDTextLC: 754
  },
  {
    WoID: 108,
    WoLgID: 5,
    WoText: "どうも",
    WoTextLC: "どうも",
    WoStatus: 1,
    WoTranslation: "thanks",
    WoRomanization: "doumo",
    WoSentence: "{どうも}。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.4154293177793075",
    WoLgIDTextLC: 1084
  },
  {
    WoID: 77,
    WoLgID: 5,
    WoText: "た",
    WoTextLC: "た",
    WoStatus: 5,
    WoTranslation: "(Hiragana: ta)",
    WoRomanization: "ta",
    WoSentence: "どうい{た}しまして。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "99.99999999999999",
    WoTomorrowScore: "98.6038636119947",
    WoRandom: "0.17698220180066507",
    WoLgIDTextLC: 774
  },
  {
    WoID: 78,
    WoLgID: 5,
    WoText: "し",
    WoTextLC: "し",
    WoStatus: 5,
    WoTranslation: "(Hiragana: shi)",
    WoRomanization: "shi",
    WoSentence: "どういた{し}ま{し}て。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "99.99999999999999",
    WoTomorrowScore: "98.6038636119947",
    WoRandom: "0.4248298773773293",
    WoLgIDTextLC: 784
  },
  {
    WoID: 79,
    WoLgID: 5,
    WoText: "て",
    WoTextLC: "て",
    WoStatus: 5,
    WoTranslation: "(Hiragana: te)",
    WoRomanization: "te",
    WoSentence: "どういたしまし{て}。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "99.99999999999999",
    WoTomorrowScore: "98.6038636119947",
    WoRandom: "0.5932028122182962",
    WoLgIDTextLC: 794
  },
  {
    WoID: 109,
    WoLgID: 5,
    WoText: "来ました",
    WoTextLC: "来ました",
    WoStatus: 1,
    WoTranslation: "came",
    WoRomanization: "きました / kimashita",
    WoSentence: "イギリスから{来ました}。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.10249195536830645",
    WoLgIDTextLC: 1094
  },
  {
    WoID: 83,
    WoLgID: 5,
    WoText: "日本",
    WoTextLC: "日本",
    WoStatus: 1,
    WoTranslation: "Japan",
    WoRomanization: "にほん / nihon",
    WoSentence: "{日本}語を話しますか。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.691524459693138",
    WoLgIDTextLC: 834
  },
  {
    WoID: 85,
    WoLgID: 5,
    WoText: "日本語",
    WoTextLC: "日本語",
    WoStatus: 1,
    WoTranslation: "Japanese lang.",
    WoRomanization: "にほんご / nihongo",
    WoSentence: "{日本語}を話しますか。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.6780138925444464",
    WoLgIDTextLC: 854
  },
  {
    WoID: 86,
    WoLgID: 5,
    WoText: "を",
    WoTextLC: "を",
    WoStatus: 5,
    WoTranslation: "(Hiragana: wo),   (direct object)",
    WoRomanization: "wo",
    WoSentence: "日本語{を}話しますか。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "99.99999999999999",
    WoTomorrowScore: "98.6038636119947",
    WoRandom: "0.3154961143764631",
    WoLgIDTextLC: 864
  },
  {
    WoID: 87,
    WoLgID: 5,
    WoText: "か",
    WoTextLC: "か",
    WoStatus: 5,
    WoTranslation: "(Hiragana: ka) / (question)",
    WoRomanization: "ka",
    WoSentence: "日本語を話します{か}。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "99.99999999999999",
    WoTomorrowScore: "98.6038636119947",
    WoRandom: "0.5434389249826213",
    WoLgIDTextLC: 874
  },
  {
    WoID: 88,
    WoLgID: 5,
    WoText: "ます",
    WoTextLC: "ます",
    WoStatus: 1,
    WoTranslation: "(respect)",
    WoRomanization: "masu",
    WoSentence: "日本語を話し{ます}か。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.770706312517362",
    WoLgIDTextLC: 884
  },
  {
    WoID: 89,
    WoLgID: 5,
    WoText: "話し",
    WoTextLC: "話し",
    WoStatus: 1,
    WoTranslation: "talk / speech",
    WoRomanization: "はなし / hanashi",
    WoSentence: "日本語を{話し}ますか。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.22321481837259122",
    WoLgIDTextLC: 894
  },
  {
    WoID: "105', '5', '語', '語', '4', 'language / speech / word', 'kun: かた.らう、 かた.る / on: ゴ', '日本{語}を話しますか。",
    WoLgID: 5,
    WoText: "2020-10-03 18:08:22",
    WoTextLC: "46.38244308231173",
    WoStatus: "44.63727259730512",
    WoTranslation: "0.9337393920251535",
    WoRomanization: "$7",
    WoSentence: "$8",
    WoCreated: "$9",
    WoStatusChanged: "$9",
    WoTodayScore: "105', '5', '語', '語', '4', 'language / speech / word', 'kun: かた.らう、 かた.る / on: ゴ', '日本{語}を話しますか。'0",
    WoTomorrowScore: "105', '5', '語', '語', '4', 'language / speech / word', 'kun: かた.らう、 かた.る / on: ゴ', '日本{語}を話しますか。'1",
    WoRandom: "105', '5', '語', '語', '4', 'language / speech / word', 'kun: かた.らう、 かた.る / on: ゴ', '日本{語}を話しますか。'2",
    WoLgIDTextLC: "105', '5', '語', '語', '4', 'language / speech / word', 'kun: かた.らう、 かた.る / on: ゴ', '日本{語}を話しますか。'3"
  },
  {
    WoID: 106,
    WoLgID: 5,
    WoText: "話",
    WoTextLC: "話",
    WoStatus: 3,
    WoTranslation: "tale / talk",
    WoRomanization: "kun: はなし、 はな.す / on: ワ",
    WoSentence: "日本語を{話}しますか。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "20.067133683596026",
    WoTomorrowScore: "17.74023970358721",
    WoRandom: "0.2918872733524882",
    WoLgIDTextLC: 1064
  },
  {
    WoID: 92,
    WoLgID: 5,
    WoText: "少し",
    WoTextLC: "少し",
    WoStatus: 1,
    WoTranslation: "small quantity / little / few",
    WoRomanization: "すこし / sukoshi",
    WoSentence: "はい、{少し}。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.8039551850445151",
    WoLgIDTextLC: 924
  },
  {
    WoID: 93,
    WoLgID: 5,
    WoText: "少",
    WoTextLC: "少",
    WoStatus: 1,
    WoTranslation: "few / little",
    WoRomanization: "kun: すく.ない、 すこ.し / on: ショウ",
    WoSentence: "はい、{少}し。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.3501315008384469",
    WoLgIDTextLC: 934
  },
  {
    WoID: 94,
    WoLgID: 5,
    WoText: "私",
    WoTextLC: "私",
    WoStatus: 1,
    WoTranslation: "I / me",
    WoRomanization: "あたし / watashi",
    WoSentence: "{私}はイギリスから来ています。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.3387919797923341",
    WoLgIDTextLC: 944
  },
  {
    WoID: 96,
    WoLgID: 5,
    WoText: "ギ",
    WoTextLC: "ギ",
    WoStatus: 5,
    WoTranslation: "(Katakana: gi)",
    WoRomanization: "ぎ / gi",
    WoSentence: "私はイ{ギ}リスから来ています。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "99.99999999999999",
    WoTomorrowScore: "98.6038636119947",
    WoRandom: "0.6435654271799749",
    WoLgIDTextLC: 964
  },
  {
    WoID: 97,
    WoLgID: 5,
    WoText: "イギリス",
    WoTextLC: "イギリス",
    WoStatus: 1,
    WoTranslation: "Great Britain / United Kingdom",
    WoRomanization: "igirisu",
    WoSentence: "私は{イギリス}から来ています。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.20145122725651715",
    WoLgIDTextLC: 974
  },
  {
    WoID: 98,
    WoLgID: 5,
    WoText: "イ",
    WoTextLC: "イ",
    WoStatus: 5,
    WoTranslation: "(Katakana: i)",
    WoRomanization: "い / i",
    WoSentence: "私は{イ}ギリスから来ています。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "99.99999999999999",
    WoTomorrowScore: "98.6038636119947",
    WoRandom: "0.07655988547630597",
    WoLgIDTextLC: 984
  },
  {
    WoID: 99,
    WoLgID: 5,
    WoText: "リ",
    WoTextLC: "リ",
    WoStatus: 5,
    WoTranslation: "(Katakana: ri)",
    WoRomanization: "ri",
    WoSentence: "私はイギ{リ}スから来ています。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "99.99999999999999",
    WoTomorrowScore: "98.6038636119947",
    WoRandom: "0.7784457763456234",
    WoLgIDTextLC: 994
  },
  {
    WoID: 100,
    WoLgID: 5,
    WoText: "ス",
    WoTextLC: "ス",
    WoStatus: 5,
    WoTranslation: "(Katakana: su)",
    WoRomanization: "su",
    WoSentence: "私はイギリ{ス}から来ています。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "99.99999999999999",
    WoTomorrowScore: "98.6038636119947",
    WoRandom: "0.6625492560328443",
    WoLgIDTextLC: 1004
  },
  {
    WoID: 101,
    WoLgID: 5,
    WoText: "ら",
    WoTextLC: "ら",
    WoStatus: 5,
    WoTranslation: "(Hiragana: ra)",
    WoRomanization: "ra",
    WoSentence: "私はイギリスか{ら}来ています。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "99.99999999999999",
    WoTomorrowScore: "98.6038636119947",
    WoRandom: "0.9774089818609962",
    WoLgIDTextLC: 1014
  },
  {
    WoID: 102,
    WoLgID: 5,
    WoText: "から",
    WoTextLC: "から",
    WoStatus: 1,
    WoTranslation: "from",
    WoRomanization: "kara",
    WoSentence: "私はイギリス{から}来ています。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.899397171940093",
    WoLgIDTextLC: 1024
  },
  {
    WoID: 107,
    WoLgID: 5,
    WoText: "来",
    WoTextLC: "来",
    WoStatus: 1,
    WoTranslation: "become / cause / come / due / next",
    WoRomanization: "kun: き、 きた.す、 き.たす、 きた.る、 き.たる、 く.る、 こ / on: タイ、 ライ / names: くり、 くる、 ごろ、 さ",
    WoSentence: "イギリスから{来}ました。",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.6582182214206255",
    WoLgIDTextLC: 1074
  },
  {
    WoID: 110,
    WoLgID: 3,
    WoText: "wie froh",
    WoTextLC: "wie froh",
    WoStatus: 1,
    WoTranslation: "how happy",
    WoRomanization: null,
    WoSentence: "{Wie froh} bin ich,   daß ich weg bin!",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.2661718542372546",
    WoLgIDTextLC: 1104
  },
  {
    WoID: 111,
    WoLgID: 3,
    WoText: "wie froh bin",
    WoTextLC: "wie froh bin",
    WoStatus: 1,
    WoTranslation: "how happy am",
    WoRomanization: null,
    WoSentence: "{Wie froh bin} ich,   daß ich weg bin!",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.023383435814998518",
    WoLgIDTextLC: 1114
  },
  {
    WoID: 112,
    WoLgID: 3,
    WoText: "wie froh bin ich",
    WoTextLC: "wie froh bin ich",
    WoStatus: 1,
    WoTranslation: "how happy I am",
    WoRomanization: null,
    WoSentence: "{Wie froh bin ich},   daß ich weg bin!",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.31840164709687385",
    WoLgIDTextLC: 1124
  },
  {
    WoID: 113,
    WoLgID: 3,
    WoText: "wie froh bin ich,   daß",
    WoTextLC: "wie froh bin ich,   daß",
    WoStatus: 1,
    WoTranslation: "how happy I am that",
    WoRomanization: null,
    WoSentence: "{Wie froh bin ich,   daß} ich weg bin!",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.5218579587730188",
    WoLgIDTextLC: 1134
  },
  {
    WoID: 114,
    WoLgID: 3,
    WoText: "wie froh bin ich,   daß ich",
    WoTextLC: "wie froh bin ich,   daß ich",
    WoStatus: 1,
    WoTranslation: "how happy I am that I",
    WoRomanization: null,
    WoSentence: "{Wie froh bin ich,   daß ich} weg bin!",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.6540848833081172",
    WoLgIDTextLC: 1144
  },
  {
    WoID: 115,
    WoLgID: 3,
    WoText: "wie froh bin ich,   daß ich weg",
    WoTextLC: "wie froh bin ich,   daß ich weg",
    WoStatus: 1,
    WoTranslation: "how happy I am that I (am) gone",
    WoRomanization: null,
    WoSentence: "{Wie froh bin ich,   daß ich weg} bin!",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.7048505709551746",
    WoLgIDTextLC: 1154
  },
  {
    WoID: 116,
    WoLgID: 3,
    WoText: "wie froh bin ich,   daß ich weg bin",
    WoTextLC: "wie froh bin ich,   daß ich weg bin",
    WoStatus: 1,
    WoTranslation: "how happy I am that I am gone",
    WoRomanization: null,
    WoSentence: "{Wie froh bin ich,   daß ich weg bin}!",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.5619982355851664",
    WoLgIDTextLC: 1164
  },
  {
    WoID: 117,
    WoLgID: 3,
    WoText: "waren nicht meine übrigen Verbindungen recht ausgesucht vom Schicksal",
    WoTextLC: "waren nicht meine übrigen verbindungen recht ausgesucht vom schicksal",
    WoStatus: 1,
    WoTranslation: "have not other attachments been specially appointed by fate",
    WoRomanization: null,
    WoSentence: "{Waren nicht meine übrigen Verbindungen recht ausgesucht vom Schicksal},   um ein Herz wie das meine zu ängstigen?",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.695439495793953",
    WoLgIDTextLC: 1174
  },
  {
    WoID: 118,
    WoLgID: 3,
    WoText: "um ein Herz wie das meine zu ängstigen",
    WoTextLC: "um ein herz wie das meine zu ängstigen",
    WoStatus: 1,
    WoTranslation: "to torment a head like mine",
    WoRomanization: null,
    WoSentence: "Waren nicht meine übrigen Verbindungen recht ausgesucht vom Schicksal,   {um ein Herz wie das meine zu ängstigen}?",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.7912028029479112",
    WoLgIDTextLC: 1184
  },
  {
    WoID: 119,
    WoLgID: 3,
    WoText: "Waren",
    WoTextLC: "waren",
    WoStatus: 99,
    WoTranslation: "were / goods",
    WoRomanization: null,
    WoSentence: "{Waren} nicht meine übrigen Verbindungen recht ausgesucht vom Schicksal,   um ein Herz wie das meine zu ängstigen?",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 100,
    WoTomorrowScore: 100,
    WoRandom: "0.869695558091342",
    WoLgIDTextLC: 1194
  },
  {
    WoID: 120,
    WoLgID: 3,
    WoText: "nicht",
    WoTextLC: "nicht",
    WoStatus: 99,
    WoTranslation: "not",
    WoRomanization: null,
    WoSentence: "Waren {nicht} meine übrigen Verbindungen recht ausgesucht vom Schicksal,   um ein Herz wie das meine zu ängstigen?",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 100,
    WoTomorrowScore: 100,
    WoRandom: "0.9748694123466214",
    WoLgIDTextLC: 1204
  },
  {
    WoID: 121,
    WoLgID: 3,
    WoText: "meine",
    WoTextLC: "meine",
    WoStatus: 99,
    WoTranslation: "my",
    WoRomanization: null,
    WoSentence: "Waren nicht {meine} übrigen Verbindungen recht ausgesucht vom Schicksal,   um ein Herz wie das {meine} zu ängstigen?",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 100,
    WoTomorrowScore: 100,
    WoRandom: "0.265260418192726",
    WoLgIDTextLC: 1214
  },
  {
    WoID: 122,
    WoLgID: 3,
    WoText: "übrigen",
    WoTextLC: "übrigen",
    WoStatus: 99,
    WoTranslation: "others",
    WoRomanization: null,
    WoSentence: "Waren nicht meine {übrigen} Verbindungen recht ausgesucht vom Schicksal,   um ein Herz wie das meine zu ängstigen?",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 100,
    WoTomorrowScore: 100,
    WoRandom: "0.4016938846574108",
    WoLgIDTextLC: 1224
  },
  {
    WoID: 123,
    WoLgID: 3,
    WoText: "um",
    WoTextLC: "um",
    WoStatus: 99,
    WoTranslation: "to",
    WoRomanization: null,
    WoSentence: "Waren nicht meine übrigen Verbindungen recht ausgesucht vom Schicksal,   {um} ein Herz wie das meine zu ängstigen?",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 100,
    WoTomorrowScore: 100,
    WoRandom: "0.21268819944252093",
    WoLgIDTextLC: 1234
  },
  {
    WoID: 124,
    WoLgID: 3,
    WoText: "ein",
    WoTextLC: "ein",
    WoStatus: 99,
    WoTranslation: "a / one",
    WoRomanization: null,
    WoSentence: "Waren nicht meine übrigen Verbindungen recht ausgesucht vom Schicksal,   um {ein} Herz wie das meine zu ängstigen?",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 100,
    WoTomorrowScore: 100,
    WoRandom: "0.8583593739740172",
    WoLgIDTextLC: 1244
  },
  {
    WoID: 125,
    WoLgID: 3,
    WoText: "Herz",
    WoTextLC: "herz",
    WoStatus: 99,
    WoTranslation: "heart",
    WoRomanization: null,
    WoSentence: "Bester Freund,   was ist das {Herz} des Menschen!",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 100,
    WoTomorrowScore: 100,
    WoRandom: "0.6537323022761683",
    WoLgIDTextLC: 1254
  },
  {
    WoID: 126,
    WoLgID: 3,
    WoText: "Leonore",
    WoTextLC: "leonore",
    WoStatus: 98,
    WoTranslation: "*",
    WoRomanization: null,
    WoSentence: "Die arme {Leonore}!",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 100,
    WoTomorrowScore: 100,
    WoRandom: "0.6935834201924348",
    WoLgIDTextLC: 1264
  },
  {
    WoID: 127,
    WoLgID: 6,
    WoText: "좋은",
    WoTextLC: "좋은",
    WoStatus: 1,
    WoTranslation: "good",
    WoRomanization: "joh-eun",
    WoSentence: "{좋은} 아침.",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.5067202248673143",
    WoLgIDTextLC: 1274
  },
  {
    WoID: 128,
    WoLgID: 6,
    WoText: "아침",
    WoTextLC: "아침",
    WoStatus: 1,
    WoTranslation: "morning",
    WoRomanization: "achim",
    WoSentence: "좋은 {아침}.",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.452850894492912",
    WoLgIDTextLC: 1284
  },
  {
    WoID: 129,
    WoLgID: 6,
    WoText: "좋은 아침",
    WoTextLC: "좋은 아침",
    WoStatus: 1,
    WoTranslation: "good morning",
    WoRomanization: "joh-eun achim",
    WoSentence: "{좋은 아침}.",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.744093828596262",
    WoLgIDTextLC: 1294
  },
  {
    WoID: 130,
    WoLgID: 6,
    WoText: "안녕하세요",
    WoTextLC: "안녕하세요",
    WoStatus: 1,
    WoTranslation: "how are you / hello / good day",
    WoRomanization: "annyeonghaseyo",
    WoSentence: "{안녕하세요}.",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.36191649023621947",
    WoLgIDTextLC: 1304
  },
  {
    WoID: 131,
    WoLgID: 6,
    WoText: "잘지냈어요",
    WoTextLC: "잘지냈어요",
    WoStatus: 1,
    WoTranslation: "how are you",
    WoRomanization: "jaljinaess-eoyo",
    WoSentence: "안녕하세요,   {잘지냈어요}?",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.5773009961259561",
    WoLgIDTextLC: 1314
  },
  {
    WoID: 132,
    WoLgID: 6,
    WoText: "잘자요",
    WoTextLC: "잘자요",
    WoStatus: 1,
    WoTranslation: "good night",
    WoRomanization: "jaljayo",
    WoSentence: "{잘자요}.",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.8007555406547668",
    WoLgIDTextLC: 1324
  },
  {
    WoID: 133,
    WoLgID: 6,
    WoText: "잘가요",
    WoTextLC: "잘가요",
    WoStatus: 1,
    WoTranslation: "good bye",
    WoRomanization: "jalgayo",
    WoSentence: "{잘가요}.",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.27187474562961117",
    WoLgIDTextLC: 1334
  },
  {
    WoID: 134,
    WoLgID: 6,
    WoText: "네",
    WoTextLC: "네",
    WoStatus: 1,
    WoTranslation: "four / yes / ok / you(r)",
    WoRomanization: "ne",
    WoSentence: "{네},   잘지냈어요?",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.9571071369174003",
    WoLgIDTextLC: 1344
  },
  {
    WoID: 135,
    WoLgID: 6,
    WoText: "그럼요",
    WoTextLC: "그럼요",
    WoStatus: 1,
    WoTranslation: "by all means / without fail / certainly / definitely",
    WoRomanization: "geuleom-yo",
    WoSentence: "네 {그럼요}.",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.9699114784318129",
    WoLgIDTextLC: 1354
  },
  {
    WoID: 136,
    WoLgID: 7,
    WoText: "ดี",
    WoTextLC: "ดี",
    WoStatus: 1,
    WoTranslation: "good / is good",
    WoRomanization: "diː",
    WoSentence: "สวัส{ดี}",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.9782360121405087",
    WoLgIDTextLC: 1364
  },
  {
    WoID: 137,
    WoLgID: 7,
    WoText: "สวัส",
    WoTextLC: "สวัส",
    WoStatus: 1,
    WoTranslation: "blessing / good fortune",
    WoRomanization: "sà wàt",
    WoSentence: "{สวัส}ดี",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.98144565614075",
    WoLgIDTextLC: 1374
  },
  {
    WoID: 139,
    WoLgID: 7,
    WoText: "ครับ",
    WoTextLC: "ครับ",
    WoStatus: 1,
    WoTranslation: "(polite M)",
    WoRomanization: "kʰráp",
    WoSentence: "สวัสดี{ครับ}",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.9725202750158685",
    WoLgIDTextLC: 1394
  },
  {
    WoID: 140,
    WoLgID: 7,
    WoText: "ค่ะ",
    WoTextLC: "ค่ะ",
    WoStatus: 1,
    WoTranslation: "(polite,   F)",
    WoRomanization: "kʰáʔ",
    WoSentence: "สวัสดี{ค่ะ}",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.9182644373907376",
    WoLgIDTextLC: 1404
  },
  {
    WoID: 141,
    WoLgID: 7,
    WoText: "สวัสดีครับ",
    WoTextLC: "สวัสดีครับ",
    WoStatus: 1,
    WoTranslation: "hello (M) / goodbye (M)",
    WoRomanization: "sà wàt diː kʰráp",
    WoSentence: "{สวัสดีครับ}",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.6737613926397277",
    WoLgIDTextLC: 1414
  },
  {
    WoID: 142,
    WoLgID: 7,
    WoText: "สวัสดีค่ะ",
    WoTextLC: "สวัสดีค่ะ",
    WoStatus: 1,
    WoTranslation: "hello (F) / goodbye (F)",
    WoRomanization: "sà wàt diː kʰáʔ",
    WoSentence: "{สวัสดีค่ะ}",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.6140136817600705",
    WoLgIDTextLC: 1424
  },
  {
    WoID: 145,
    WoLgID: 7,
    WoText: "วัสดี",
    WoTextLC: "วัสดี",
    WoStatus: 1,
    WoTranslation: "hi / hey / (inf. abbrev.)",
    WoRomanization: "wàt diː",
    WoSentence: "ส{วัสดี}ครับ",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.048784261614814646",
    WoLgIDTextLC: 1454
  },
  {
    WoID: 146,
    WoLgID: 1,
    WoText: "vous",
    WoTextLC: "vous",
    WoStatus: 5,
    WoTranslation: "you / you all",
    WoRomanization: null,
    WoSentence: "Alors,   je crois qu'il y a pas longtemps,   là,   {vous} avez fait une bonne action ?",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "99.99999999999999",
    WoTomorrowScore: "98.6038636119947",
    WoRandom: "0.40188029352750654",
    WoLgIDTextLC: 1464
  },
  {
    WoID: 147,
    WoLgID: 1,
    WoText: "fait",
    WoTextLC: "fait",
    WoStatus: 4,
    WoTranslation: "made / done / make / fact / occurrence",
    WoRomanization: null,
    WoSentence: "Alors,   je crois qu'il y a pas longtemps,   là,   vous avez {fait} une bonne action ?",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "46.38244308231173",
    WoTomorrowScore: "44.63727259730512",
    WoRandom: "0.8630487135267338",
    WoLgIDTextLC: 1474
  },
  {
    WoID: 148,
    WoLgID: 1,
    WoText: "bonne",
    WoTextLC: "bonne",
    WoStatus: 2,
    WoTranslation: "good",
    WoRomanization: null,
    WoSentence: "Alors,   je crois qu'il y a pas longtemps,   là,   vous avez fait une {bonne} action ?",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "6.84106830122592",
    WoTomorrowScore: "3.3507273312126955",
    WoRandom: "0.10960271778479472",
    WoLgIDTextLC: 1484
  },
  {
    WoID: 149,
    WoLgID: 1,
    WoText: "ai",
    WoTextLC: "ai",
    WoStatus: 3,
    WoTranslation: "have",
    WoRomanization: null,
    WoSentence: "Alors,   j'{ai} fait mon premier don du sang.",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "20.067133683596026",
    WoTomorrowScore: "17.74023970358721",
    WoRandom: "0.9588674790774169",
    WoLgIDTextLC: 1494
  },
  {
    WoID: 150,
    WoLgID: 1,
    WoText: "avez",
    WoTextLC: "avez",
    WoStatus: 4,
    WoTranslation: "have",
    WoRomanization: null,
    WoSentence: "Qu'est-ce que vous {avez} fait,   alors ?",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "46.38244308231173",
    WoTomorrowScore: "44.63727259730512",
    WoRandom: "0.4655292727663454",
    WoLgIDTextLC: 1504
  },
  {
    WoID: 151,
    WoLgID: 1,
    WoText: "mon",
    WoTextLC: "mon",
    WoStatus: 4,
    WoTranslation: "my",
    WoRomanization: null,
    WoSentence: "Alors,   j'ai fait {mon} premier don du sang.",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "46.38244308231173",
    WoTomorrowScore: "44.63727259730512",
    WoRandom: "0.4510439573331214",
    WoLgIDTextLC: 1514
  },
  {
    WoID: 152,
    WoLgID: 8,
    WoText: "טוב",
    WoTextLC: "טוב",
    WoStatus: 1,
    WoTranslation: "good",
    WoRomanization: "tov",
    WoSentence: "בוקר {טוב}",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.8586319991002157",
    WoLgIDTextLC: 1524
  },
  {
    WoID: 153,
    WoLgID: 8,
    WoText: "בוקר",
    WoTextLC: "בוקר",
    WoStatus: 1,
    WoTranslation: "morning",
    WoRomanization: "boker",
    WoSentence: "{בוקר} טוב",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.9400281542353595",
    WoLgIDTextLC: 1534
  },
  {
    WoID: 154,
    WoLgID: 8,
    WoText: "ערב",
    WoTextLC: "ערב",
    WoStatus: 1,
    WoTranslation: "evening",
    WoRomanization: "erev",
    WoSentence: "{ערב} טוב",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.12424480460979492",
    WoLgIDTextLC: 1544
  },
  {
    WoID: 155,
    WoLgID: 8,
    WoText: "לילה",
    WoTextLC: "לילה",
    WoStatus: 1,
    WoTranslation: "night",
    WoRomanization: "laila",
    WoSentence: "{לילה} טוב",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.8011395910765413",
    WoLgIDTextLC: 1554
  },
  {
    WoID: 156,
    WoLgID: 8,
    WoText: "להתראות",
    WoTextLC: "להתראות",
    WoStatus: 1,
    WoTranslation: "good bye",
    WoRomanization: "lehitraot",
    WoSentence: "{להתראות}",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.6329635722869668",
    WoLgIDTextLC: 1564
  },
  {
    WoID: 157,
    WoLgID: 8,
    WoText: "טובים",
    WoTextLC: "טובים",
    WoStatus: 1,
    WoTranslation: "good",
    WoRomanization: "tovim",
    WoSentence: "אחר צהריים {טובים}",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.761399118938855",
    WoLgIDTextLC: 1574
  },
  {
    WoID: 158,
    WoLgID: 8,
    WoText: "צהריים",
    WoTextLC: "צהריים",
    WoStatus: 1,
    WoTranslation: "noon",
    WoRomanization: "tzahara'im",
    WoSentence: "אחר {צהריים} טובים",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.9081049085670196",
    WoLgIDTextLC: 1584
  },
  {
    WoID: 159,
    WoLgID: 8,
    WoText: "אחר",
    WoTextLC: "אחר",
    WoStatus: 1,
    WoTranslation: "after / other",
    WoRomanization: "achar",
    WoSentence: "{אחר} צהריים טובים",
    WoCreated: "2011-08-30 12:00:00",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.25632721675217823",
    WoLgIDTextLC: 1594
  },
  {
    WoID: 160,
    WoLgID: 8,
    WoText: "בוקר טוב",
    WoTextLC: "בוקר טוב",
    WoStatus: 1,
    WoTranslation: "good morning",
    WoRomanization: "boker tov",
    WoSentence: "{בוקר טוב}",
    WoCreated: "2011-09-02 19:00:09",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.5573213887934773",
    WoLgIDTextLC: 1604
  },
  {
    WoID: 161,
    WoLgID: 8,
    WoText: "אחר צהריים טובים",
    WoTextLC: "אחר צהריים טובים",
    WoStatus: 1,
    WoTranslation: "good afternoon",
    WoRomanization: "achar tzahara'im tovim",
    WoSentence: "{אחר צהריים טובים}",
    WoCreated: "2011-09-02 19:00:50",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.017625324444496375",
    WoLgIDTextLC: 1614
  },
  {
    WoID: 162,
    WoLgID: 8,
    WoText: "ערב טוב",
    WoTextLC: "ערב טוב",
    WoStatus: 1,
    WoTranslation: "good evening",
    WoRomanization: "erev tov",
    WoSentence: "{ערב טוב}",
    WoCreated: "2011-09-02 19:01:21",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.4161624865756952",
    WoLgIDTextLC: 1624
  },
  {
    WoID: 163,
    WoLgID: 8,
    WoText: "לילה טוב",
    WoTextLC: "לילה טוב",
    WoStatus: 1,
    WoTranslation: "good night",
    WoRomanization: "laila tov",
    WoSentence: "{לילה טוב}",
    WoCreated: "2011-09-02 19:01:50",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.027936490278631907",
    WoLgIDTextLC: 1634
  },
  {
    WoID: 164,
    WoLgID: 8,
    WoText: "אחר צהריים",
    WoTextLC: "אחר צהריים",
    WoStatus: 1,
    WoTranslation: "afternoon",
    WoRomanization: "achar tzahara'im",
    WoSentence: "{אחר צהריים} טובים",
    WoCreated: "2011-09-02 19:21:20",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.8911950223997189",
    WoLgIDTextLC: 1644
  },
  {
    WoID: 165,
    WoLgID: 1,
    WoText: "Oui",
    WoTextLC: "oui",
    WoStatus: 5,
    WoTranslation: "yes",
    WoRomanization: null,
    WoSentence: "{Oui}.",
    WoCreated: "2013-03-27 12:13:44",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "99.99999999999999",
    WoTomorrowScore: "98.6038636119947",
    WoRandom: "0.37216567189634375",
    WoLgIDTextLC: 1654
  },
  {
    WoID: 166,
    WoLgID: 1,
    WoText: "On",
    WoTextLC: "on",
    WoStatus: 4,
    WoTranslation: "someone / somebody / you / one / we",
    WoRomanization: null,
    WoSentence: "{On} peut dire ça comme ça.",
    WoCreated: "2013-03-27 12:14:40",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "46.38244308231173",
    WoTomorrowScore: "44.63727259730512",
    WoRandom: "0.18724332301620703",
    WoLgIDTextLC: 1664
  },
  {
    WoID: 167,
    WoLgID: 1,
    WoText: "peut",
    WoTextLC: "peut",
    WoStatus: 5,
    WoTranslation: "can / may",
    WoRomanization: null,
    WoSentence: "On {peut} dire ça comme ça.",
    WoCreated: "2013-03-27 12:15:10",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "99.99999999999999",
    WoTomorrowScore: "98.6038636119947",
    WoRandom: "0.819719630125649",
    WoLgIDTextLC: 1674
  },
  {
    WoID: 168,
    WoLgID: 1,
    WoText: "ça",
    WoTextLC: "ça",
    WoStatus: 4,
    WoTranslation: "that / this / it",
    WoRomanization: null,
    WoSentence: "On peut dire {ça} comme {ça}.",
    WoCreated: "2013-03-27 12:16:08",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "46.38244308231173",
    WoTomorrowScore: "44.63727259730512",
    WoRandom: "0.5368682123132685",
    WoLgIDTextLC: 1684
  },
  {
    WoID: 169,
    WoLgID: 1,
    WoText: "comme",
    WoTextLC: "comme",
    WoStatus: 3,
    WoTranslation: "as / just as / like / how",
    WoRomanization: null,
    WoSentence: "On peut dire ça {comme} ça.",
    WoCreated: "2013-03-27 12:16:47",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "20.067133683596026",
    WoTomorrowScore: "17.74023970358721",
    WoRandom: "0.22518220192304086",
    WoLgIDTextLC: 1694
  },
  {
    WoID: 171,
    WoLgID: 1,
    WoText: "longtemps",
    WoTextLC: "longtemps",
    WoStatus: 5,
    WoTranslation: "long time / long while / long",
    WoRomanization: null,
    WoSentence: "Alors,   je crois qu'il y a pas {longtemps},   là,   vous avez fait une bonne action ?",
    WoCreated: "2013-03-27 12:22:02",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "99.99999999999999",
    WoTomorrowScore: "98.6038636119947",
    WoRandom: "0.900985442009741",
    WoLgIDTextLC: 1714
  },
  {
    WoID: 172,
    WoLgID: 1,
    WoText: "là",
    WoTextLC: "là",
    WoStatus: 1,
    WoTranslation: "there",
    WoRomanization: null,
    WoSentence: "Alors,   je crois qu'il y a pas longtemps,   {là},   vous avez fait une bonne action ?",
    WoCreated: "2013-03-27 12:22:35",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.9590080305552184",
    WoLgIDTextLC: 1724
  },
  {
    WoID: 173,
    WoLgID: 1,
    WoText: "une",
    WoTextLC: "une",
    WoStatus: 5,
    WoTranslation: "a / an / one / front page",
    WoRomanization: null,
    WoSentence: "Alors,   je crois qu'il y a pas longtemps,   là,   vous avez fait {une} bonne action ?",
    WoCreated: "2013-03-27 12:24:25",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "99.99999999999999",
    WoTomorrowScore: "98.6038636119947",
    WoRandom: "0.09208385748051466",
    WoLgIDTextLC: 1734
  },
  {
    WoID: 174,
    WoLgID: 1,
    WoText: "j",
    WoTextLC: "j",
    WoStatus: 99,
    WoTranslation: "I",
    WoRomanization: null,
    WoSentence: "Alors,   {j}'ai fait mon premier don du sang …",
    WoCreated: "2013-03-27 12:26:34",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 100,
    WoTomorrowScore: 100,
    WoRandom: "0.5833952264705629",
    WoLgIDTextLC: 1744
  },
  {
    WoID: 175,
    WoLgID: 1,
    WoText: "premier",
    WoTextLC: "premier",
    WoStatus: 4,
    WoTranslation: "first / primary / prime / initial",
    WoRomanization: null,
    WoSentence: "Alors,   j'ai fait mon {premier} don du sang …",
    WoCreated: "2013-03-27 12:27:33",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "46.38244308231173",
    WoTomorrowScore: "44.63727259730512",
    WoRandom: "0.6407245906449152",
    WoLgIDTextLC: 1754
  },
  {
    WoID: 176,
    WoLgID: 1,
    WoText: "y",
    WoTextLC: "y",
    WoStatus: 2,
    WoTranslation: "there / here / in",
    WoRomanization: null,
    WoSentence: "Alors,   je crois qu'il {y} a pas longtemps,   là,   vous avez fait une bonne action ?",
    WoCreated: "2013-03-27 12:32:17",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "6.84106830122592",
    WoTomorrowScore: "3.3507273312126955",
    WoRandom: "0.4534373045465325",
    WoLgIDTextLC: 1764
  },
  {
    WoID: 177,
    WoLgID: 1,
    WoText: "a",
    WoTextLC: "a",
    WoStatus: 2,
    WoTranslation: "have / has",
    WoRomanization: null,
    WoSentence: "Alors,   je crois qu'il y {a} pas longtemps,   là,   vous avez fait une bonne action ?",
    WoCreated: "2013-03-27 12:34:33",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "6.84106830122592",
    WoTomorrowScore: "3.3507273312126955",
    WoRandom: "0.3450127815315619",
    WoLgIDTextLC: 1774
  },
  {
    WoID: 178,
    WoLgID: 1,
    WoText: "action",
    WoTextLC: "action",
    WoStatus: 2,
    WoTranslation: "action / deed",
    WoRomanization: null,
    WoSentence: "Alors,   je crois qu'il y a pas longtemps,   là,   vous avez fait une bonne {action} ?",
    WoCreated: "2013-03-27 12:35:08",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "6.84106830122592",
    WoTomorrowScore: "3.3507273312126955",
    WoRandom: "0.364752024751857",
    WoLgIDTextLC: 1784
  },
  {
    WoID: 179,
    WoLgID: 1,
    WoText: "don",
    WoTextLC: "don",
    WoStatus: 1,
    WoTranslation: "donation",
    WoRomanization: null,
    WoSentence: "Alors,   j'ai fait mon premier {don} du sang …",
    WoCreated: "2013-03-27 12:35:50",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.788721809898244",
    WoLgIDTextLC: 1794
  },
  {
    WoID: 180,
    WoLgID: 1,
    WoText: "du",
    WoTextLC: "du",
    WoStatus: 1,
    WoTranslation: "of / from / some",
    WoRomanization: null,
    WoSentence: "Alors,   j'ai fait mon premier don {du} sang …",
    WoCreated: "2013-03-27 12:36:09",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.8493530059692943",
    WoLgIDTextLC: 1804
  },
  {
    WoID: 181,
    WoLgID: 1,
    WoText: "sang",
    WoTextLC: "sang",
    WoStatus: 1,
    WoTranslation: "blood",
    WoRomanization: null,
    WoSentence: "Alors,   j'ai fait mon premier don du {sang} …",
    WoCreated: "2013-03-27 12:36:17",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.8805996308853846",
    WoLgIDTextLC: 1814
  },
  {
    WoID: 182,
    WoLgID: 1,
    WoText: "ce",
    WoTextLC: "ce",
    WoStatus: 1,
    WoTranslation: "this / that / it",
    WoRomanization: null,
    WoSentence: "Qu'est-{ce} que vous avez fait,   alors ?",
    WoCreated: "2013-03-27 12:36:32",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.8549391672526852",
    WoLgIDTextLC: 1824
  },
  {
    WoID: 183,
    WoLgID: 1,
    WoText: "que",
    WoTextLC: "que",
    WoStatus: 1,
    WoTranslation: "that / how / so that / so",
    WoRomanization: null,
    WoSentence: "Qu'est-ce {que} vous avez fait,   alors ?",
    WoCreated: "2013-03-27 12:36:48",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.6328969743409166",
    WoLgIDTextLC: 1834
  },
  {
    WoID: 184,
    WoLgID: 2,
    WoText: "他",
    WoTextLC: "他",
    WoStatus: 1,
    WoTranslation: "he",
    WoRomanization: null,
    WoSentence: "突然，{他}看见前面有一只黑色的大狗，看起来很凶。",
    WoCreated: "2013-04-18 09:03:32",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.5996674006801727",
    WoLgIDTextLC: 1844
  },
  {
    WoID: 185,
    WoLgID: 2,
    WoText: "看见",
    WoTextLC: "看见",
    WoStatus: 1,
    WoTranslation: "see / catch sight",
    WoRomanization: null,
    WoSentence: "突然，他{看见}前面有一只黑色的大狗，看起来很凶。",
    WoCreated: "2013-04-18 09:03:53",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.09964611111175838",
    WoLgIDTextLC: 1854
  },
  {
    WoID: 186,
    WoLgID: 2,
    WoText: "前面",
    WoTextLC: "前面",
    WoStatus: 1,
    WoTranslation: "ahead / front",
    WoRomanization: null,
    WoSentence: "突然，他看见{前面}有一只黑色的大狗，看起来很凶。",
    WoCreated: "2013-04-18 09:04:12",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.699228384251919",
    WoLgIDTextLC: 1864
  },
  {
    WoID: 187,
    WoLgID: 2,
    WoText: "有",
    WoTextLC: "有",
    WoStatus: 1,
    WoTranslation: "have / occur",
    WoRomanization: null,
    WoSentence: "突然，他看见前面{有}一只黑色的大狗，看起来很凶。",
    WoCreated: "2013-04-18 09:04:29",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.19720361865796485",
    WoLgIDTextLC: 1874
  },
  {
    WoID: 188,
    WoLgID: 2,
    WoText: "只",
    WoTextLC: "只",
    WoStatus: 1,
    WoTranslation: "(MW) / only",
    WoRomanization: null,
    WoSentence: "突然，他看见前面有一{只}黑色的大狗，看起来很凶。",
    WoCreated: "2013-04-18 09:04:58",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.8883329712677123",
    WoLgIDTextLC: 1884
  },
  {
    WoID: 189,
    WoLgID: 2,
    WoText: "黑色",
    WoTextLC: "黑色",
    WoStatus: 1,
    WoTranslation: "black color",
    WoRomanization: null,
    WoSentence: "突然，他看见前面有一只{黑色}的大狗，看起来很凶。",
    WoCreated: "2013-04-18 09:05:13",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.8500540310983118",
    WoLgIDTextLC: 1894
  },
  {
    WoID: 190,
    WoLgID: 2,
    WoText: "的",
    WoTextLC: "的",
    WoStatus: 1,
    WoTranslation: "(Part.) / 's",
    WoRomanization: null,
    WoSentence: "突然，他看见前面有一只黑色{的}大狗，看起来很凶。",
    WoCreated: "2013-04-18 09:05:54",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.5852712724220671",
    WoLgIDTextLC: 1904
  },
  {
    WoID: 191,
    WoLgID: 2,
    WoText: "大",
    WoTextLC: "大",
    WoStatus: 1,
    WoTranslation: "big / strong",
    WoRomanization: null,
    WoSentence: "突然，他看见前面有一只黑色的{大}狗，看起来很凶。",
    WoCreated: "2013-04-18 09:06:02",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.3761942995490453",
    WoLgIDTextLC: 1914
  },
  {
    WoID: 192,
    WoLgID: 2,
    WoText: "狗",
    WoTextLC: "狗",
    WoStatus: 1,
    WoTranslation: "dog",
    WoRomanization: null,
    WoSentence: "突然，他看见前面有一只黑色的大{狗}，看起来很凶。",
    WoCreated: "2013-04-18 09:06:08",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.12515771121267016",
    WoLgIDTextLC: 1924
  },
  {
    WoID: 193,
    WoLgID: 2,
    WoText: "看起来",
    WoTextLC: "看起来",
    WoStatus: 1,
    WoTranslation: "seems / appears / looks as",
    WoRomanization: null,
    WoSentence: "突然，他看见前面有一只黑色的大狗，{看起来}很凶。",
    WoCreated: "2013-04-18 09:06:36",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.4972056881498598",
    WoLgIDTextLC: 1934
  },
  {
    WoID: 194,
    WoLgID: 2,
    WoText: "很",
    WoTextLC: "很",
    WoStatus: 1,
    WoTranslation: "very",
    WoRomanization: null,
    WoSentence: "突然，他看见前面有一只黑色的大狗，看起来{很}凶。",
    WoCreated: "2013-04-18 09:06:42",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.1105553378449337",
    WoLgIDTextLC: 1944
  },
  {
    WoID: 195,
    WoLgID: 2,
    WoText: "凶",
    WoTextLC: "凶",
    WoStatus: 1,
    WoTranslation: "ferocious / terrible",
    WoRomanization: null,
    WoSentence: "突然，他看见前面有一只黑色的大狗，看起来很{凶}。",
    WoCreated: "2013-04-18 09:07:12",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.061159655508733965",
    WoLgIDTextLC: 1954
  },
  {
    WoID: 196,
    WoLgID: 2,
    WoText: "非常",
    WoTextLC: "非常",
    WoStatus: 1,
    WoTranslation: "exceptional / very",
    WoRomanization: null,
    WoSentence: "男人{非常}害怕，不敢往前走。",
    WoCreated: "2013-04-18 09:07:24",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.9741322947425137",
    WoLgIDTextLC: 1964
  },
  {
    WoID: 197,
    WoLgID: 2,
    WoText: "害怕",
    WoTextLC: "害怕",
    WoStatus: 1,
    WoTranslation: "be afraid",
    WoRomanization: null,
    WoSentence: "男人非常{害怕}，不敢往前走。",
    WoCreated: "2013-04-18 09:07:52",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.6871825379200117",
    WoLgIDTextLC: 1974
  },
  {
    WoID: 198,
    WoLgID: 2,
    WoText: "不",
    WoTextLC: "不",
    WoStatus: 1,
    WoTranslation: "not",
    WoRomanization: null,
    WoSentence: "男人非常害怕，{不}敢往前走。",
    WoCreated: "2013-04-18 09:08:01",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.5135158361061624",
    WoLgIDTextLC: 1984
  },
  {
    WoID: 199,
    WoLgID: 2,
    WoText: "敢",
    WoTextLC: "敢",
    WoStatus: 1,
    WoTranslation: "dare",
    WoRomanization: null,
    WoSentence: "男人非常害怕，不{敢}往前走。",
    WoCreated: "2013-04-18 09:08:10",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.5060315975044217",
    WoLgIDTextLC: 1994
  },
  {
    WoID: 200,
    WoLgID: 2,
    WoText: "往前",
    WoTextLC: "往前",
    WoStatus: 1,
    WoTranslation: "go forward / move ahead",
    WoRomanization: null,
    WoSentence: "男人非常害怕，不敢{往前}走。",
    WoCreated: "2013-04-18 09:08:45",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.9896105099372664",
    WoLgIDTextLC: 2004
  },
  {
    WoID: 201,
    WoLgID: 2,
    WoText: "旁边",
    WoTextLC: "旁边",
    WoStatus: 1,
    WoTranslation: "side / near by position/ right by",
    WoRomanization: null,
    WoSentence: "狗的{旁边}站着一个女人，男人问她：",
    WoCreated: "2013-04-18 09:09:15",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.42995778790671174",
    WoLgIDTextLC: 2014
  },
  {
    WoID: 202,
    WoLgID: 2,
    WoText: "站",
    WoTextLC: "站",
    WoStatus: 1,
    WoTranslation: "stand",
    WoRomanization: null,
    WoSentence: "狗的旁边{站}着一个女人，男人问她：",
    WoCreated: "2013-04-18 09:09:29",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.18095744045540452",
    WoLgIDTextLC: 2024
  },
  {
    WoID: 203,
    WoLgID: 2,
    WoText: "着",
    WoTextLC: "着",
    WoStatus: 1,
    WoTranslation: "(there) / (cont.)",
    WoRomanization: null,
    WoSentence: "狗的旁边站{着}一个女人，男人问她：",
    WoCreated: "2013-04-18 09:10:04",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.6149138692905324",
    WoLgIDTextLC: 2034
  },
  {
    WoID: 204,
    WoLgID: 2,
    WoText: "女人",
    WoTextLC: "女人",
    WoStatus: 2,
    WoTranslation: "woman",
    WoRomanization: null,
    WoSentence: "狗的旁边站着一个{女人}，男人问她：",
    WoCreated: "2013-04-18 09:10:13",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: "6.84106830122592",
    WoTomorrowScore: "3.3507273312126955",
    WoRandom: "0.5316970558200935",
    WoLgIDTextLC: 2044
  },
  {
    WoID: 205,
    WoLgID: 2,
    WoText: "问",
    WoTextLC: "问",
    WoStatus: 1,
    WoTranslation: "ask",
    WoRomanization: null,
    WoSentence: "狗的旁边站着一个女人，男人{问}她：",
    WoCreated: "2013-04-18 09:10:20",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.8137437019625154",
    WoLgIDTextLC: 2054
  },
  {
    WoID: 206,
    WoLgID: 2,
    WoText: "她",
    WoTextLC: "她",
    WoStatus: 1,
    WoTranslation: "she / her",
    WoRomanization: null,
    WoSentence: "狗的旁边站着一个女人，男人问{她}：",
    WoCreated: "2013-04-18 09:10:29",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.47362737308594155",
    WoLgIDTextLC: 2064
  },
  {
    WoID: 207,
    WoLgID: 2,
    WoText: "你",
    WoTextLC: "你",
    WoStatus: 1,
    WoTranslation: "you",
    WoRomanization: null,
    WoSentence: "{你}的狗咬人吗？",
    WoCreated: "2013-04-18 09:10:35",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.9269057902758063",
    WoLgIDTextLC: 2074
  },
  {
    WoID: 208,
    WoLgID: 2,
    WoText: "咬",
    WoTextLC: "咬",
    WoStatus: 1,
    WoTranslation: "bite",
    WoRomanization: null,
    WoSentence: "你的狗{咬}人吗？",
    WoCreated: "2013-04-18 09:10:44",
    WoStatusChanged: "2020-10-03 18:08:22",
    WoTodayScore: 0,
    WoTomorrowScore: "-6.980681940026449",
    WoRandom: "0.2136468628548522",
    WoLgIDTextLC: 2084
  }
];
const demoDB = {
  archivedtexts,
  archtexttags,
  languages,
  sentences,
  settings,
  tags,
  tags2,
  textitems,
  texts,
  texttags,
  words
};
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
const ACTIVE_LANGUAGE_LOCAL_STORAGE_KEY = "activeLanguageId";
const MyPersistanceStrategy = AppVariables.persistMethod;
const MyPersistanceHandles = PersistenceStrategies[MyPersistanceStrategy];
function createDemoDBInitialState() {
  return {
    ...demoDB,
    activeLanguageId: null,
    parsedTexts: [],
    wordtags: [],
    notificationMessage: null
  };
}
let DataStore = class extends Store {
  constructor() {
    const { get: persistGetter } = MyPersistanceHandles;
    super(getPersistedData(persistGetter));
  }
};
DataStore = __decorateClass([
  StoreConfig({ name: "data" })
], DataStore);
const dataStore = new DataStore();
function getPersistedData(persistGetter) {
  return {
    settings: persistGetter("settings", []),
    activeLanguageId: persistGetter("activeLanguageId", null),
    parsedTexts: persistGetter("parsedTexts", []),
    sentences: persistGetter("sentences", []),
    archivedtexts: persistGetter(Persistable.archivedtexts, []),
    archtexttags: persistGetter(Persistable.archtexttags, []),
    languages: persistGetter(Persistable.languages, []),
    tags2: persistGetter(Persistable.tags2, []),
    tags: persistGetter(Persistable.tags, []),
    textitems: persistGetter(Persistable.textitems, []),
    texts: persistGetter(Persistable.texts, []),
    texttags: persistGetter(Persistable.texttags, []),
    words: persistGetter(Persistable.words, []),
    wordtags: persistGetter(Persistable.wordtags, [])
  };
}
const MINS_IN_SECONDS = 60;
const HOURS_IN_MINS = 60;
const DAYS_IN_HOURS = 24;
const DAYS_IN_SECONDS = DAYS_IN_HOURS * HOURS_IN_MINS * MINS_IN_SECONDS;
const TICKER_INTERVAL = 50;
const TICKER_MAX_STEPS = 20;
function ticker(startValue, endValue) {
  return interval(TICKER_INTERVAL).pipe(
    take(TICKER_MAX_STEPS),
    map((count2) => ++count2),
    map(
      (count2) => Math.floor(
        startValue * ((TICKER_MAX_STEPS - count2) / TICKER_MAX_STEPS) + endValue * (count2 / TICKER_MAX_STEPS)
      )
    )
  );
}
function timedSwitchMap(startObservable, endObservable, ticker_interval) {
  return interval(ticker_interval).pipe(
    take(1),
    map((count2) => ++count2),
    switchMap((count2) => count2 === 0 ? startObservable : endObservable)
  );
}
class DataQuery extends Query {
  constructor(store) {
    super(store);
    this.store = store;
  }
  archivedtexts = this.select("archivedtexts");
  archtexttags = this.select("archtexttags");
  languages = this.select("languages");
  sentences = this.select("sentences");
  tags = this.select("tags");
  tags2 = this.select("tags2");
  textitems = this.select("textitems");
  texts = this.select("texts");
  texttags = this.select("texttags");
  words = this.select("words");
  wordtags = this.select("wordtags");
  settings = this.select("settings").pipe(
    map(
      (settings2) => Object.fromEntries(
        settings2.map(
          ({ StKey, StValue }) => [
            StKey,
            Number.isNaN(Number.parseInt(StValue)) ? StValue : Number.parseInt(StValue)
          ]
        )
      )
    )
  );
  parsedTexts = this.select("parsedTexts");
  notificationMessage = this.select("notificationMessage");
  notificationMessageDisplay = of(100).pipe(
    withLatestFrom(this.notificationMessage),
    switchMap(([initial]) => timedSwitchMap(of(initial), ticker(100, 0), 2e3))
  );
  numArchivedTexts = this.archivedtexts.pipe(count$1());
  // public archivedtextsLen = this.archivedtexts.pipe(count());
  // public archtexttagsLen = this.archtexttags.pipe(count());
  // public languagesLen = this.languages.pipe(count());
  // public sentencesLen = this.sentences.pipe(count());
  // public settingsLen = this.settings.pipe(count());
  // public tagsLen = this.tags.pipe(count());
  // public tags2Len = this.tags2.pipe(count());
  // public textitemsLen = this.textitems.pipe(count());
  // public textsLen = this.texts.pipe(count());
  // public texttagsLen = this.texttags.pipe(count());
  // public wordsLen = this.words.pipe(count());
  // public wordtagsLen = this.wordtags.pipe(count());
  activeLanguageId = this.select("activeLanguageId").pipe(
    tap((val) => console.log("TEST123-activelang", val))
  );
  // derived observables
  activeLanguage = combineLatest([
    this.activeLanguageId,
    this.languages
  ]).pipe(
    map(([activeLanguageId, languages2]) => {
      return languages2.find((language) => {
        return language.LgID === activeLanguageId;
      });
    })
  );
  activeWords = combineLatest([this.activeLanguageId, this.words]).pipe(
    map(([activeLanguageId, words2]) => {
      return words2.filter((word) => {
        console.log(word.WoLgID, activeLanguageId);
        return word.WoLgID === activeLanguageId;
      });
    })
  );
  textsForActiveLanguage = combineLatest([
    this.texts,
    this.activeLanguageId
  ]).pipe(
    map(([texts2, activeLanguageId]) => {
      console.log("QUERY", { texts: texts2 });
      if (activeLanguageId === null) {
        return texts2;
      }
      return texts2.filter((text) => text.TxLgID === activeLanguageId);
    })
  );
  //   Total
  // 	Active
  // (1..5)	Learning
  // (1..4)	Unknown
  // (1)	Learning
  // (2)	Learning
  // (3)	Learning
  // (4)	Learned
  // (5)	Well
  // Known
  // (99)	Known
  // (5+99)	Ign.
  // (98)
  languageStatusStatistics = combineLatest([
    this.languages,
    this.words,
    this.tags
  ]).pipe(
    map(([languages2, words2, tags3]) => {
      const statisticMapEntries = words2.reduce(
        (prev, curr) => {
          const val = prev;
          val[curr.WoLgID]["total"] = val[curr.WoLgID]["total"] + 1;
          if (curr.WoStatus === 0) {
            return val;
          }
          val[curr.WoLgID][curr.WoStatus] = val[curr.WoLgID][curr.WoStatus] + 1;
          if (curr.WoStatus >= 1 && curr.WoStatus <= 5) {
            val[curr.WoLgID][15] = val[curr.WoLgID][15] + 1;
            if (curr.WoStatus <= 4) {
              val[curr.WoLgID][14] = val[curr.WoLgID][14] + 1;
            }
          }
          return val;
        },
        Object.fromEntries(
          languages2.map((lang) => [
            lang.LgID,
            {
              total: 0,
              1: 0,
              2: 0,
              3: 0,
              4: 0,
              5: 0,
              15: 0,
              14: 0,
              99: 0,
              599: 0,
              98: 0
            }
          ])
        )
      );
      const statisticMap = statisticMapEntries;
      console.log("TEST123-query", statisticMap);
      return statisticMap;
    })
  );
  termTimeStatistics = combineLatest([this.words]).pipe(
    map(([words2]) => {
      const getWordsWithinOffset = (numDays) => words2.map(
        (word) => word.WoCreated > (/* @__PURE__ */ new Date()).getTime() + DAYS_IN_SECONDS
      );
      getWordsWithinOffset();
      getWordsWithinOffset();
      getWordsWithinOffset();
      getWordsWithinOffset();
      getWordsWithinOffset();
    })
  );
  // TODO
  textDetails = combineLatest([
    this.textsForActiveLanguage,
    this.texttags,
    this.tags2
  ]).pipe(
    map(([textsForActiveLanguage, texttags2, tags3]) => {
      console.log("textDetails", { textsForActiveLanguage });
      return textsForActiveLanguage.map((text) => {
        return {
          TxID: text.TxID,
          title: text.TxTitle,
          // TODO split
          totalWords: text.TxText.length,
          // TODO
          saved: "test",
          // TODO
          unk: 100,
          // TODO
          unkPerc: 100,
          tags: texttags2.filter((textTag) => {
            return textTag.TtTxID === text.TxID;
          }).map((textTag) => {
            const tag = tags3.find((tag2) => tag2.T2ID === textTag.TtT2ID);
            return tag ? tag.T2Text : "ERROR";
          })
        };
      });
    })
  );
}
const dataQuery = new DataQuery(dataStore);
function useAkita(query, service, queryTerms) {
  const [retrievedQueryTerms, setRetrievedQueryTerms] = reactExports.useState(
    () => pick$1(queryTerms, query.getValue())
  );
  reactExports.useEffect(() => {
    const subscriptions = queryTerms.map((term) => {
      const retrievedQueryObservable = query[term];
      return retrievedQueryObservable.subscribe({
        next(observedValue) {
          setRetrievedQueryTerms((s) => ({ ...s, [term]: observedValue }));
        }
      });
    });
    return () => subscriptions.forEach((subscription) => subscription.unsubscribe());
  }, []);
  return [retrievedQueryTerms, service];
}
const useData = (queryTerms) => useAkita(dataQuery, dataService, queryTerms);
function Icon({
  src: iconName,
  title,
  alt,
  ...rest
}) {
  const iconURI = `icn/${iconName}.png`;
  return /* @__PURE__ */ jsxRuntimeExports.jsx(
    "img",
    {
      ...rest,
      src: iconURI,
      alt: alt === void 0 ? title : alt
    }
  );
}
function RequiredLineButton() {
  return /* @__PURE__ */ jsxRuntimeExports.jsx(
    Icon,
    {
      src: "status-busy",
      title: "Field must not be empty",
      alt: "Field must not be empty"
    }
  );
}
const headerValuesTemp = {
  index: { params: [] },
  edit_texts: {
    params: ["chg", "arch", "page", "query", "tag1", "tag2", "new"]
  },
  edit_archivedtexts: { params: ["page"] },
  edit_texttags: { params: ["page"] },
  edit_languages: { params: ["page"] },
  edit_words: {
    params: [
      "page",
      "status",
      "query",
      "tag12",
      "tag1",
      "chg",
      "new",
      "tag2",
      "sort",
      "text",
      "filterlang",
      "lang"
    ]
  },
  edit_tags: { params: ["query", "new", "page", "chg"] },
  statistics: { params: [] },
  check_text: { params: [] },
  new_word: { params: [] },
  do_text: { params: [] },
  do_test: { params: [] },
  long_text_import: { params: [] },
  upload_words: { params: [] },
  backup_restore: { params: [] },
  settings: { params: [] },
  info: { params: [] },
  print_text: { params: ["text"] }
};
const headerValues = {
  Home: "index",
  Texts: "edit_texts",
  "Text Archive": "edit_archivedtexts",
  "Text Tags": "edit_texttags",
  Languages: "edit_languages",
  Terms: "edit_words",
  "Term Tags": "edit_tags",
  Statistics: "statistics",
  "Text Check": "check_text",
  "Long Text": "long_text_import",
  "Term Import": "upload_words",
  "Backup/Restore": "backup_restore",
  Settings: "settings",
  Help: "info"
};
function Header({
  afterDropdown,
  title,
  link = "/",
  readerProps = void 0
}) {
  const logoSize = 48;
  const navigate = useInternalNavigate();
  const location = useLocation();
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("h4", { children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs(A, { href: link, target: "_top", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "img",
          {
            className: "lwtlogo",
            src: "img/lwt_icon.svg",
            title: "LWT - Current Table Set: Default Table Set",
            alt: "LWT - Current Table Set: Default Table Set",
            width: logoSize,
            height: logoSize
          }
        ),
        "LWT"
      ] }),
      "  |  ",
      /* @__PURE__ */ jsxRuntimeExports.jsxs(
        "select",
        {
          id: "quickmenu",
          onChange: (val) => {
            if (val.target.value === "") {
              return;
            }
            navigate(`/${val.target.value}`);
          },
          children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("option", { disabled: true, children: "[Menu]" }),
            Object.keys(headerValues).map((key) => {
              return /* @__PURE__ */ jsxRuntimeExports.jsx(
                "option",
                {
                  value: headerValues[key],
                  selected: location.pathname === `/${headerValues[key]}`,
                  children: key
                }
              );
            })
          ]
        }
      ),
      readerProps && /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
        "  |  ",
        /* @__PURE__ */ jsxRuntimeExports.jsx(A, { href: `/do_text?start=${readerProps.prevTextID}`, target: "_top", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
          Icon,
          {
            src: "navigation-180-button",
            title: `Previous Text: ${readerProps.prevTextString}`
          }
        ) }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(A, { href: `/do_text?start=${readerProps.nextTextID}`, target: "_top", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
          Icon,
          {
            src: "navigation-000-button",
            title: `Next Text: ${readerProps.nextTextString}`
          }
        ) }),
        "  |  ",
        /* @__PURE__ */ jsxRuntimeExports.jsx(A, { href: `/do_test?text=${readerProps.textID}`, target: "_top", children: /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "question-balloon", title: "Test" }) }),
        " ",
        /* @__PURE__ */ jsxRuntimeExports.jsxs(A, { href: `/print_text?text=${readerProps.textID}`, target: "_top", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "printer", title: "Print" }),
          " "
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(A, { target: "_top", href: `/edit_texts?chg=${readerProps.textID}`, children: /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "document--pencil", title: "Edit Text" }) }),
        "  |  ",
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          A,
          {
            href: `/new_word?text=${readerProps.textID}&lang=${readerProps.langID}`,
            target: "ro",
            children: /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "sticky-note--plus", title: "New Term" })
          }
        )
      ] })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("table", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("tbody", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("tr", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("h3", { children: title }) }) }) })
  ] });
}
const useInternalNavigate = () => {
  const nav = useNavigate();
  return (url) => {
    nav(url);
    return;
  };
};
const useUpdateParams = () => {
  const [searchParams, setSearchParams] = useSearchParams();
  const location = useLocation();
  const currentParams = Object.fromEntries(
    headerValuesTemp[`${location.pathname.slice(1)}`].params.map((param) => {
      return [param, searchParams.get(param)];
    }).filter(([, val]) => {
      return val !== null;
    })
  );
  return (params) => {
    const filteredParams = Object.fromEntries(
      Object.entries({ ...currentParams, ...params }).filter(
        ([, val]) => val !== null
      )
    );
    setSearchParams(filteredParams);
  };
};
function A({
  children,
  href,
  ...rest
}) {
  const nav = useInternalNavigate();
  const onClick = href === void 0 ? void 0 : () => {
    return nav(href);
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsx("a", { ...rest, className: "a", onClick, children });
}
const ReverseStrengthMap = {
  0: 0,
  1: 1,
  2: 2,
  3: 3,
  4: 4,
  5: 5,
  98: "Ign",
  99: "WKn"
};
const StrengthMap = {
  0: { status: "Unknown", classKey: 0 },
  1: { status: "Learning", classKey: 1 },
  2: { status: "Learning", classKey: 2 },
  3: { status: "Learning", classKey: 3 },
  4: { status: "Learning", classKey: 4 },
  5: { status: "Learned", classKey: 5 },
  Ign: { status: "Ignored", classKey: 98 },
  WKn: { status: "Well Known", classKey: 99 }
};
function ExpressionsLines({
  expressions
}) {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    "Expr:",
    expressions.map((expression, ii2) => {
      return (
        // TODO numbers here
        /* @__PURE__ */ jsxRuntimeExports.jsxs(
          A,
          {
            href: `/edit_mword?tid=${44}&ord=${55}&txt=${expression}`,
            target: "ro",
            children: [
              ii2 + 2,
              "..",
              expression
            ]
          }
        )
      );
    })
  ] });
}
function ApplyTemplate(templateStr, valueStr) {
  const replaced = templateStr.replace("###", valueStr);
  return replaced;
}
function TranslateLines({
  language,
  word,
  sentence
}) {
  function TranslateWord(translator) {
    ApplyTemplate(translator, word);
  }
  function TranslateSentence(translator) {
    ApplyTemplate(translator, sentence);
  }
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    "Lookup Term:",
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "span",
      {
        className: "click",
        onClick: () => TranslateWord(language.LgDict1URI),
        children: "Dict1"
      }
    ),
    language.LgDict2URI && /* @__PURE__ */ jsxRuntimeExports.jsx(
      "span",
      {
        className: "click",
        onClick: () => TranslateWord(language.LgDict2URI),
        children: "Dict2"
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "span",
      {
        className: "click",
        onClick: () => TranslateWord(language.LgGoogleTranslateURI),
        children: "GTr"
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
    "Lookup Sentence:",
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "span",
      {
        className: "click",
        onClick: () => TranslateSentence(language.LgGoogleTranslateURI),
        children: "GTr"
      }
    )
  ] });
}
const TermTooltipClose = React.forwardRef(function PopoverClose({
  // children,
  onClose,
  ...props
}, ref) {
  return /* @__PURE__ */ jsxRuntimeExports.jsx(
    "div",
    {
      className: "click",
      ...props,
      ref,
      onClick: () => {
        console.log("CLOSE");
        onClose();
      },
      children: "Close"
    }
  );
});
function TermTooltipHeader({
  headerTitle,
  onClose
}) {
  return /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, { children: /* @__PURE__ */ jsxRuntimeExports.jsx("table", { width: "100%", cellSpacing: 0, cellPadding: 2, children: /* @__PURE__ */ jsxRuntimeExports.jsx("tbody", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("td", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs(
      A,
      {
        style: { color: "yellow" },
        href: `/edit_word?tid=${44}&ord=${55}&wid=${369}`,
        target: "ro",
        children: [
          headerTitle,
          "                "
        ]
      }
    ) }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("td", { align: "right", children: /* @__PURE__ */ jsxRuntimeExports.jsx(TermTooltipClose, { onClose }) })
  ] }) }) }) });
}
function UnknownTermLines({ word }) {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("b", { children: [
      word,
      /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
      "▶ Unknown [?]"
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
    /* @__PURE__ */ jsxRuntimeExports.jsx(A, { href: `/insert_word_wellknown?tid=${44}&ord=${1504}`, target: "ro", children: "I know this term well" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
    /* @__PURE__ */ jsxRuntimeExports.jsx(A, { href: `/insert_word_ignore?tid=${44}&ord=${1504}`, target: "ro", children: "Ignore this term" })
  ] });
}
function KnownTermLines({
  word,
  tags: tags3
}) {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("b", { children: [
      word.WoText,
      /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
      "▶ ",
      word.WoRomanization,
      /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
      "▶ ",
      word.WoTranslation,
      ", [",
      tags3.join(", "),
      "]",
      /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
      "▶",
      StrengthMap[ReverseStrengthMap[word.WoStatus]] ? StrengthMap[ReverseStrengthMap[word.WoStatus]].status : "",
      " ",
      "[",
      ReverseStrengthMap[word.WoStatus],
      "]"
    ] }),
    "St:",
    TermStrengths.map((strength) => {
      if (word.WoStatus === strength) {
        return /* @__PURE__ */ jsxRuntimeExports.jsx("span", { title: "Learned", children: " ◆" });
      }
      return /* @__PURE__ */ jsxRuntimeExports.jsxs(
        "span",
        {
          onClick: () => dataService.changeTermStrength(word.WoID, strength),
          title: StrengthMap[strength].status,
          children: [
            "[",
            strength,
            "]"
          ]
        }
      );
    }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
    /* @__PURE__ */ jsxRuntimeExports.jsx(A, { href: `/edit_word?tid=${44}&ord=${55}&wid=${369}`, target: "ro", children: "Edit term" }),
    "|",
    /* @__PURE__ */ jsxRuntimeExports.jsx(A, { onClick: () => dataService.deleteTerm(word.WoID), target: "ro", children: "Delete term" })
  ] });
}
function AddNewTermTooltip({
  word,
  sentence,
  onClose
}) {
  const newTerm = typeof word === "string";
  const [{ languages: languages2 }] = useData(["languages"]);
  const language = languages2.find((lang) => lang.LgID);
  const expressions = [];
  if (!language) {
    return /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, {});
  }
  console.log("TEST123-tooltip", word, sentence, newTerm);
  const wordStr = newTerm ? word : word.WoText;
  return /* @__PURE__ */ jsxRuntimeExports.jsx(
    "table",
    {
      width: 260,
      cellSpacing: 0,
      cellPadding: 1,
      border: 0,
      style: {
        backgroundColor: "#333399"
      },
      children: /* @__PURE__ */ jsxRuntimeExports.jsx("tbody", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("tr", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          TermTooltipHeader,
          {
            headerTitle: newTerm ? "New Word" : "Word",
            onClose
          }
        ),
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "table",
          {
            width: "100%",
            cellSpacing: 0,
            cellPadding: 2,
            border: 0,
            style: { backgroundColor: "#FFFFE8", color: "#000000" },
            children: /* @__PURE__ */ jsxRuntimeExports.jsx("tbody", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("tr", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { valign: "top", children: [
              newTerm ? /* @__PURE__ */ jsxRuntimeExports.jsx(UnknownTermLines, { word }) : /* @__PURE__ */ jsxRuntimeExports.jsx(KnownTermLines, { word, tags: [] }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
              /* @__PURE__ */ jsxRuntimeExports.jsx(ExpressionsLines, { expressions }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
              /* @__PURE__ */ jsxRuntimeExports.jsx(
                TranslateLines,
                {
                  word: wordStr,
                  language,
                  sentence
                }
              )
            ] }) }) })
          }
        )
      ] }) }) })
    }
  );
}
function byteSizeOfString(str) {
  return new Blob([str]).size;
}
function confirmDelete() {
  return window.confirm("CONFIRM\n\nAre you sure you want to delete?");
}
function multiActionGo(form, sel) {
  if (typeof form != "undefined" && typeof sel != "undefined") {
    const v2 = sel.value;
    const t2 = sel.options[sel.selectedIndex].text;
    if (typeof v2 == "string") {
      if (v2 == "addtag" || v2 == "deltag") {
        const answer = verifyAddTagWindow(t2);
        if (answer != "") {
          return { tagChange: answer };
        }
      } else if (v2 == "del" || v2 == "smi1" || v2 == "spl1" || v2 == "s1" || v2 == "s5" || v2 == "s98" || v2 == "s99" || v2 == "today" || v2 == "delsent" || v2 == "lower" || v2 == "cap") {
        const answer = confirm(
          "*** " + t2 + " ***\n\n*** " + // TODO
          "input.markcheck:checked".length + " Record(s) will be affected ***\n\nAre you sure?"
        );
        if (answer) {
          return true;
        }
      } else {
        return true;
      }
    }
    sel.value = "";
  }
}
function verifyAddTagWindow(t2) {
  let notok = 1;
  let answer = "";
  while (notok) {
    answer = prompt(
      "*** " + t2 + " ***\n\n*** " + // TODO
      "input.markcheck:checked".length + " Record(s) will be affected ***\n\nPlease enter one tag (20 char. max., no spaces, no commas -- or leave empty to cancel:",
      answer
    );
    if (typeof answer == "object")
      answer = "";
    if (answer.indexOf(" ") > 0 || answer.indexOf(",") > 0) {
      alert("Please no spaces or commas!");
    } else if (answer.length > 20) {
      alert("Please no tags longer than 20 char.!");
    } else {
      notok = 0;
    }
  }
  return answer;
}
function splitCheckText(text, language, id2) {
  const {
    LgRemoveSpaces: removeSpaces,
    LgSplitEachChar: splitEachChar,
    LgRegexpSplitSentences: splitSentence,
    LgExceptionsSplitSentences: noSentenceEnd,
    LgRegexpWordCharacters: termchar,
    LgRightToLeft: rtlScript,
    LgCharacterSubstitutions
  } = language;
  console.log("TEST123-split", LgCharacterSubstitutions, language);
  const replace = LgCharacterSubstitutions.split("|");
  let s = text.replace("\r\n", "\n").replace("\n", " ¶ ").replace("	", " ").trim();
  if (splitEachChar) {
    s = s.replace(/([^\s])/u, "$1 ");
  }
  s = s.replace(/\s{2,}/u, " ");
  s = s.replace("{", "[").replace("}", "]");
  replace.forEach((repEquation) => {
    const repChars = repEquation.split("=");
    if (repChars.length >= 2) {
      s = s.replace(repChars[0].trim(), repChars[1].trim());
    }
  });
  s = s.trim();
  if (noSentenceEnd !== "") {
    const reNoSplit = new RegExp(`/(${noSentenceEnd})\\s`, "g");
    s = s.replace(reNoSplit, "$1-");
  }
  const reSplitSentence = new RegExp(`([${splitSentence}¶])`, "g");
  s = s.replace(reSplitSentence, "$1\n").replace(" ¶\n", "\n¶\n").replace("‧", " ").trim();
  const sArray = s.split("\n").map((sent) => sent.trim());
  sArray.length;
  sArray.map((val) => {
    val.indexOf(splitSentence);
    val.trim();
  });
  if (id2 === -2) {
    return sArray;
  }
  if (id2 === -1) {
    const reTermMatch = new RegExp(`([^${termchar}]{1,})`, "g");
    const wordList = sArray.map((val) => {
      return val.split(reTermMatch).filter((term) => term !== "").map((term) => {
        return { isTerm: !reTermMatch.test(term), text: term.trim() };
      });
    }).flat();
    return wordList;
  }
  console.log("REPARSE", s);
  return s;
}
function IDIsUnique(id2, existingIds) {
  return !existingIds.includes(id2);
}
class DataService {
  constructor(dataStore2) {
    this.dataStore = dataStore2;
    this.getInitialAsync();
  }
  // TODO maybe need CRUD handles here instead of generic persist?
  persistChange(key, insertVal) {
    if (MyPersistanceHandles["insert"]) {
      const { insert: inserter } = MyPersistanceHandles;
      inserter(key, insertVal);
    } else {
      const { set: setter } = MyPersistanceHandles;
      const { [key]: value } = this.dataStore.getValue();
      setter(key, value);
    }
  }
  persistInsert(key, insertVal) {
    if (MyPersistanceHandles["insert"]) {
      const { insert: inserter } = MyPersistanceHandles;
      inserter(key, insertVal);
    } else {
      const { set: setter } = MyPersistanceHandles;
      const { [key]: value } = this.dataStore.getValue();
      setter(key, value);
    }
  }
  // These are saved in DB
  addLanguage(language) {
    this.dataStore.update((state) => {
      const ids = state.languages.map((lang) => lang.LgID);
      const maxId = Math.max(...ids) + 1;
      return {
        ...state,
        notificationMessage: { txt: `Added New Language ${language.LgName}` },
        languages: [
          ...state.languages,
          {
            ...language,
            LgID: maxId
          }
        ]
      };
    });
    this.persistChange("languages", language);
  }
  deleteLanguage(langId) {
    this.dataStore.update((state) => {
      return {
        ...state,
        languages: state.languages.filter(
          (language) => language.LgID !== langId
        )
      };
    });
    this.persistChange("languages");
  }
  deleteArchivedText(textId) {
    this.dataStore.update((state) => {
      return {
        ...state,
        archivedtexts: state.archivedtexts.filter(
          (language) => language.AtID !== textId
        )
      };
    });
    this.persistChange("archivedtexts");
  }
  addText(text) {
    let maxId = null;
    this.dataStore.update((state) => {
      const ids = state.texts.map((text2) => text2.TxID);
      maxId = Math.max(...ids) + 1;
      return {
        ...state,
        notificationMessage: { txt: `Added New Text ${text.TxTitle}` },
        texts: [
          ...state.texts,
          {
            ...text,
            TxID: maxId,
            // TODO
            TxAnnotatedText: ""
          }
        ]
      };
    });
    this.persistChange("texts", text);
    return maxId;
  }
  addTag(tag) {
    this.dataStore.update((state) => {
      const ids = state.tags.map((tag2) => tag2.TgID);
      const maxId = Math.max(...ids) + 1;
      return {
        ...state,
        notificationMessage: { txt: `Added New Tag ${tag.TgText}` },
        tags: [
          ...state.tags,
          {
            ...tag,
            TgID: maxId
          }
        ]
      };
    });
    this.persistChange("tags", tag);
  }
  editTag(chgId, tag) {
    this.dataStore.update((state) => {
      const ids = state.tags.map((tag2) => tag2.TgID);
      const maxId = Math.max(...ids) + 1;
      return {
        ...state,
        notificationMessage: { txt: `Edited Tag ${tag.TgText}` },
        tags: [
          ...state.tags,
          {
            ...tag,
            TgID: maxId
          }
        ]
      };
    });
    this.persistChange("tags");
  }
  editLanguage(chgId, newData) {
    window.alert("TODO-editLanguage" + chgId);
  }
  addTextTag(tag) {
    this.dataStore.update((state) => {
      const ids = state.tags2.map((tag2) => tag2.T2ID);
      const maxId = Math.max(...ids) + 1;
      return {
        ...state,
        notificationMessage: { txt: `Added New Text Tag ${tag.T2Text}` },
        tags2: [
          ...state.tags2,
          {
            ...tag,
            T2ID: maxId
          }
        ]
      };
    });
    this.persistChange("tags2", tag);
  }
  deleteText(textId) {
    this.dataStore.update((state) => {
      return {
        ...state,
        notificationMessage: { txt: `Removed Text Tag id=${textId}` },
        texts: state.texts.filter((text) => text.TxID !== textId)
      };
    });
    this.persistChange("texts");
  }
  addTerm(word) {
    this.dataStore.update((state) => {
      const ids = state.words.map((word2) => word2.WoID);
      const maxId = Math.max(...ids) + 1;
      if (IDIsUnique(maxId, ids)) {
        return {
          ...state,
          notificationMessage: { txt: `Added New Word ${word.WoText}` },
          words: [
            ...state.words,
            {
              ...word,
              WoID: maxId,
              // TODO
              WoStatusChanged: Date.now(),
              WoTodayScore: 0,
              WoTomorrowScore: 0,
              // TODO ? whats this
              WoRandom: 0
            }
          ]
        };
      }
    });
    this.persistChange("words", word);
  }
  deleteTerm(termId) {
    this.dataStore.update((state) => {
      return {
        ...state,
        words: state.words.filter((word) => word.WoID !== termId)
      };
    });
    this.persistChange("words");
  }
  changeTermStrength(termId, termStrength) {
    const { words: words2 } = this.dataStore.getValue();
    const wordIndex = words2.findIndex((word2) => word2.WoID === termId);
    if (wordIndex === -1) {
      return;
    }
    const word = words2[wordIndex];
    const updatedWord = {
      ...word,
      WoStatus: StrengthMap[termStrength].classKey
    };
    const newWords = [...words2];
    newWords[wordIndex] = updatedWord;
    this.dataStore.update((state) => ({ ...state, words: newWords }));
    this.persistChange("words");
  }
  addTagToTerm(tagId, termId) {
    this.dataStore.update((state) => ({
      ...state,
      wordtags: [...state.wordtags, { WtTgID: tagId, WtWoID: termId }]
    }));
    this.persistChange("wordtags");
  }
  deleteTermTag(tagId) {
    this.dataStore.update(({ wordtags, tags: tags3, ...rest }) => {
      return {
        ...rest,
        wordtags: wordtags.filter(({ WtTgID }) => {
          return WtTgID !== tagId;
        }),
        tags: tags3.filter(({ TgID }) => {
          return TgID !== tagId;
        })
      };
    });
    this.persistChange("wordtags");
    this.persistChange("tags");
  }
  addTagToText(tagId, textId) {
    this.dataStore.update((state) => ({
      ...state,
      texttags: [...state.texttags, { TtT2ID: tagId, TtTxID: textId }]
    }));
    this.persistChange("texttags");
  }
  deleteTextTag(tagId) {
    this.dataStore.update(({ texttags: texttags2, archtexttags: archtexttags2, tags2: tags22, ...rest }) => {
      return {
        ...rest,
        texttags: texttags2.filter(({ TtT2ID }) => {
          return TtT2ID !== tagId;
        }),
        archtexttags: archtexttags2.filter(({ AgT2ID }) => {
          return AgT2ID !== tagId;
        }),
        tags2: tags22.filter(({ T2ID }) => {
          return T2ID !== tagId;
        })
      };
    });
    this.persistChange("tags2");
    this.persistChange("texttags");
    this.persistChange("archtexttags");
  }
  addLongText(longTextForm) {
    window.alert("TODO ADDLONGTEXT");
  }
  addMultipleTerms(terms) {
    this.dataStore.update((state) => {
      const ids = state.words.map((word) => word.WoID);
      const maxId = Math.max(...ids) + 1;
      if (IDIsUnique(maxId, ids)) {
        return {
          ...state,
          words: [
            ...state.words,
            ...terms.map((word, ii2) => {
              return {
                ...word,
                WoID: maxId + ii2,
                // TODO
                WoStatusChanged: Date.now(),
                WoTodayScore: 0,
                WoTomorrowScore: 0,
                // TODO ? whats this
                WoRandom: 0
              };
            })
          ]
        };
      }
    });
    this.persistChange("words");
  }
  restoreFromBackup(file) {
    window.alert("TODO RESTORING FROM BACKUP " + file.name);
    const reader = new FileReader();
    reader.onload = async (e2) => {
      e2.target.result;
    };
    const text = reader.readAsText(file);
    console.log("TEST123", text);
  }
  downloadBackup() {
    const {
      archivedtexts: archivedtexts2,
      archtexttags: archtexttags2,
      languages: languages2,
      sentences: sentences2,
      settings: settings2,
      tags: tags3,
      tags2: tags22,
      textitems: textitems2,
      texts: texts2,
      texttags: texttags2,
      words: words2,
      wordtags
    } = this.dataStore.getValue();
    serializeJsonToSQL({
      archivedtexts: archivedtexts2,
      archtexttags: archtexttags2,
      languages: languages2,
      sentences: sentences2,
      settings: settings2,
      tags: tags3,
      tags2: tags22,
      textitems: textitems2,
      texts: texts2,
      texttags: texttags2,
      words: words2,
      wordtags
    });
    window.alert("TODO DOWNLOADING BACKUP");
  }
  emptyDatabase() {
    this.dataStore.update((state) => {
      return {
        settings: state.settings,
        activeLanguageId: null,
        archivedtexts: [],
        archtexttags: [],
        languages: [],
        parsedTexts: [],
        sentences: [],
        tags2: [],
        tags: [],
        textitems: [],
        texts: [],
        texttags: [],
        words: [],
        wordtags: []
      };
    });
    this.persistChange("settings");
    this.persistChange("activeLanguageId");
    this.persistChange("archivedtexts");
    this.persistChange("archtexttags");
    this.persistChange("languages");
    this.persistChange("parsedTexts");
    this.persistChange("sentences");
    this.persistChange("tags2");
    this.persistChange("tags");
    this.persistChange("textitems");
    this.persistChange("texts");
    this.persistChange("texttags");
    this.persistChange("words");
    this.persistChange("wordtags");
  }
  installDemoDatabase() {
    this.dataStore.update(() => createDemoDBInitialState());
    this.persistChange("settings");
    this.persistChange("activeLanguageId");
    this.persistChange("archivedtexts");
    this.persistChange("archtexttags");
    this.persistChange("languages");
    this.persistChange("parsedTexts");
    this.persistChange("sentences");
    this.persistChange("tags2");
    this.persistChange("tags");
    this.persistChange("textitems");
    this.persistChange("texts");
    this.persistChange("texttags");
    this.persistChange("words");
    this.persistChange("wordtags");
  }
  archiveText(archID) {
    this.dataStore.update(({ texts: texts2, archivedtexts: archivedtexts2, ...state }) => {
      const archIndex = texts2.findIndex((text) => {
        return text.TxID === archID;
      });
      const toArchive = texts2[archIndex];
      console.log("TEST123", toArchive, archIndex, texts2, archID);
      const poppedTexts = [
        ...texts2.slice(0, archIndex),
        ...texts2.slice(archIndex + 1)
      ];
      return {
        ...state,
        texts: poppedTexts,
        archivedtexts: [
          ...archivedtexts2,
          {
            AtAnnotatedText: toArchive.TxAnnotatedText,
            AtAudioURI: toArchive.TxAudioURI,
            AtID: toArchive.TxID,
            AtLgID: toArchive.TxLgID,
            AtSourceURI: toArchive.TxSourceURI,
            AtText: toArchive.TxText,
            AtTitle: toArchive.TxTitle
          }
        ]
      };
    });
    this.persistChange("archivedtexts");
    this.persistChange("texts");
  }
  unarchiveText() {
    window.alert("TODO UNARCHIVETEXT");
  }
  setViewerSettings() {
    window.alert("TODO SETVIEWERSETTINGS");
  }
  reparseText(textId) {
    const { texts: texts2, languages: languages2 } = this.dataStore.getValue();
    const parsingText = texts2.find(({ TxID }) => {
      return TxID === textId;
    });
    const parsingLanguage = languages2.find(({ LgID }) => {
      return LgID === parsingText?.TxLgID;
    });
    const parsedText = splitCheckText(parsingText?.TxText, parsingLanguage, -1);
    this.dataStore.update(({ parsedTexts, ...rest }) => {
      return { ...rest, parsedTexts: { ...parsedTexts, [textId]: parsedText } };
    });
  }
  reparseAllTextsForLanguage(langId) {
    const { texts: texts2 } = this.dataStore.getValue();
    texts2.filter((text) => {
      return text.TxLgID === langId;
    }).forEach((text) => {
      this.reparseText(text.TxID);
    });
  }
  // These are only needed locally afaict
  setActiveLanguage(langId) {
    localStorage.setItem(ACTIVE_LANGUAGE_LOCAL_STORAGE_KEY, `${langId}`);
    this.dataStore.update((state) => {
      return { ...state, activeLanguageId: langId };
    });
  }
  async getInitialAsync() {
    const { getAsync: persistGetter } = MyPersistanceHandles;
    Promise.all(
      Object.keys(Persistable).map(async (key) => {
        const val = await persistGetter(key);
        return [key, val];
      })
    ).then((val) => {
      const valObj = Object.fromEntries(val);
      this.dataStore.update((state) => {
        console.log("GOTObjs", { ...state, ...valObj });
        return { ...state, ...valObj };
      });
    });
  }
}
const dataService = new DataService(dataStore);
function serializeJsonToSQL(data) {
  const serializedData = Object.fromEntries(
    Object.keys(data).map((key) => {
      return [
        key,
        data[key].map(
          (val) => Object.fromEntries(
            Object.keys(val).map(
              (entryKey) => val[entryKey] === null ? [entryKey, "NULL"] : [entryKey, `'${val[entryKey]}'`.replace("\n", "\\n")]
            )
          )
        )
      ];
    })
  );
  const sqlFileString = `-- lwt-backup--- /ensures that this can be imported via Restore/ 
  -- 
  -- --------------------------------------------------------------
  -- "Learning with Texts" (LWT) is free and unencumbered software 
  -- released into the PUBLIC DOMAIN.
  -- 
  -- Anyone is free to copy, modify, publish, use, compile, sell, or
  -- distribute this software, either in source code form or as a
  -- compiled binary, for any purpose, commercial or non-commercial,
  -- and by any means.
  -- 
  -- In jurisdictions that recognize copyright laws, the author or
  -- authors of this software dedicate any and all copyright
  -- interest in the software to the public domain. We make this
  -- dedication for the benefit of the public at large and to the 
  -- detriment of our heirs and successors. We intend this 
  -- dedication to be an overt act of relinquishment in perpetuity
  -- of all present and future rights to this software under
  -- copyright law.
  -- 
  -- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
  -- EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE 
  -- WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE
  -- AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE 
  -- FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
  -- OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN 
  -- CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN 
  -- THE SOFTWARE.
  -- 
  -- For more information, please refer to [http://unlicense.org/].
  -- --------------------------------------------------------------
  -- 
  -- --------------------------------------------------------------
  -- Installing an LWT demo database
  -- --------------------------------------------------------------
  
  DROP TABLE IF EXISTS archivedtexts;
  CREATE TABLE \`archivedtexts\` (   \`AtID\` int(11) unsigned NOT NULL AUTO_INCREMENT,   \`AtLgID\` int(11) unsigned NOT NULL,   \`AtTitle\` varchar(200) NOT NULL,   \`AtText\` text NOT NULL,   \`AtAnnotatedText\` longtext NOT NULL,   \`AtAudioURI\` varchar(200) DEFAULT NULL,   \`AtSourceURI\` varchar(1000) DEFAULT NULL,   PRIMARY KEY (\`AtID\`),   KEY \`AtLgID\` (\`AtLgID\`) ) ENGINE=MyISAM AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
  // TODO better serialize
${serializedData.archivedtexts.map((entry) => {
    return `  INSERT INTO archivedtexts VALUES(${entry.AtID},${entry.AtLgID},${entry.AtTitle},${entry.AtText},${entry.AtAnnotatedText},${entry.AtAudioURI},${entry.AtSourceURI});
`;
  }).join("")}
  
  DROP TABLE IF EXISTS archtexttags;
  CREATE TABLE \`archtexttags\` (   \`AgAtID\` int(11) unsigned NOT NULL,   \`AgT2ID\` int(11) unsigned NOT NULL,   PRIMARY KEY (\`AgAtID\`,\`AgT2ID\`),   KEY \`AgAtID\` (\`AgAtID\`),   KEY \`AgT2ID\` (\`AgT2ID\`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
${serializedData.archtexttags.map((entry) => {
    return `  INSERT INTO archtexttags VALUES(${entry.AgAtID},${entry.AgT2ID});
`;
  }).join("")}
  
  DROP TABLE IF EXISTS languages;
  CREATE TABLE \`languages\` (   \`LgID\` int(11) unsigned NOT NULL AUTO_INCREMENT,   \`LgName\` varchar(40) NOT NULL,   \`LgDict1URI\` varchar(200) NOT NULL,   \`LgDict2URI\` varchar(200) DEFAULT NULL,   \`LgGoogleTranslateURI\` varchar(200) DEFAULT NULL,   \`LgExportTemplate\` varchar(1000) DEFAULT NULL,   \`LgTextSize\` int(5) unsigned NOT NULL DEFAULT '100',   \`LgCharacterSubstitutions\` varchar(500) NOT NULL,   \`LgRegexpSplitSentences\` varchar(500) NOT NULL,   \`LgExceptionsSplitSentences\` varchar(500) NOT NULL,   \`LgRegexpWordCharacters\` varchar(500) NOT NULL,   \`LgRemoveSpaces\` int(1) unsigned NOT NULL DEFAULT '0',   \`LgSplitEachChar\` int(1) unsigned NOT NULL DEFAULT '0',   \`LgRightToLeft\` int(1) unsigned NOT NULL DEFAULT '0',   PRIMARY KEY (\`LgID\`),   UNIQUE KEY \`LgName\` (\`LgName\`) ) ENGINE=MyISAM AUTO_INCREMENT=9 DEFAULT CHARSET=utf8;
${serializedData.languages.map(
    (lang) => `  languages INTO languages VALUES(${lang.LgID},${lang.LgName},${lang.LgDict1URI},${lang.LgDict2URI},${lang.LgGoogleTranslateURI},${lang.LgExportTemplate},${lang.LgTextSize},${lang.LgCharacterSubstitutions},${lang.LgRegexpSplitSentences},${lang.LgExceptionsSplitSentences},${lang.LgRegexpWordCharacters},${lang.LgRemoveSpaces},${lang.LgSplitEachChar},${lang.LgRightToLeft});
`
  )}
  
  DROP TABLE IF EXISTS sentences;
  CREATE TABLE \`sentences\` (   \`SeID\` int(11) unsigned NOT NULL AUTO_INCREMENT,   \`SeLgID\` int(11) unsigned NOT NULL,   \`SeTxID\` int(11) unsigned NOT NULL,   \`SeOrder\` int(11) unsigned NOT NULL,   \`SeText\` text,   PRIMARY KEY (\`SeID\`),   KEY \`SeLgID\` (\`SeLgID\`),   KEY \`SeTxID\` (\`SeTxID\`),   KEY \`SeOrder\` (\`SeOrder\`) ) ENGINE=MyISAM AUTO_INCREMENT=357 DEFAULT CHARSET=utf8;
${serializedData.sentences.map((entry) => {
    return `  INSERT INTO wordtags VALUES(
    ${entry.SeID},${entry.SeLgID},${entry.SeTxID},${entry.SeOrder},${entry.SeText});
`;
  }).join("")}
  
  DROP TABLE IF EXISTS settings;
  CREATE TABLE \`settings\` (   \`StKey\` varchar(40) NOT NULL,   \`StValue\` varchar(40) DEFAULT NULL,   PRIMARY KEY (\`StKey\`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
${serializedData.settings.map((entry) => {
    return `  INSERT INTO settings VALUES(${entry.StKey},${entry.StValue});
`;
  }).join("")}
  
  DROP TABLE IF EXISTS tags;
  CREATE TABLE \`tags\` (   \`TgID\` int(11) unsigned NOT NULL AUTO_INCREMENT,   \`TgText\` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,   \`TgComment\` varchar(200) NOT NULL DEFAULT '',   PRIMARY KEY (\`TgID\`),   UNIQUE KEY \`TgText\` (\`TgText\`) ) ENGINE=MyISAM AUTO_INCREMENT=29 DEFAULT CHARSET=utf8;
${serializedData.tags.map((entry) => {
    return `  INSERT INTO tags VALUES(${entry.TgID},${entry.TgText}${entry.TgComment});
`;
  }).join("")}
  
  DROP TABLE IF EXISTS tags2;
  CREATE TABLE \`tags2\` (   \`T2ID\` int(11) unsigned NOT NULL AUTO_INCREMENT,   \`T2Text\` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,   \`T2Comment\` varchar(200) NOT NULL DEFAULT '',   PRIMARY KEY (\`T2ID\`),   UNIQUE KEY \`T2Text\` (\`T2Text\`) ) ENGINE=MyISAM AUTO_INCREMENT=10 DEFAULT CHARSET=utf8;
${serializedData.tags2.map((entry) => {
    return `  INSERT INTO tags2 VALUES(${entry.T2ID},${entry.T2Text}${entry.T2Comment});
`;
  }).join("")}
  
  DROP TABLE IF EXISTS textitems;
  CREATE TABLE \`textitems\` (   \`TiID\` int(11) unsigned NOT NULL AUTO_INCREMENT,   \`TiLgID\` int(11) unsigned NOT NULL,   \`TiTxID\` int(11) unsigned NOT NULL,   \`TiSeID\` int(11) unsigned NOT NULL,   \`TiOrder\` int(11) unsigned NOT NULL,   \`TiWordCount\` int(1) unsigned NOT NULL,   \`TiText\` varchar(250) NOT NULL,   \`TiTextLC\` varchar(250) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,   \`TiIsNotWord\` tinyint(1) NOT NULL,   PRIMARY KEY (\`TiID\`),   KEY \`TiLgID\` (\`TiLgID\`),   KEY \`TiTxID\` (\`TiTxID\`),   KEY \`TiSeID\` (\`TiSeID\`),   KEY \`TiOrder\` (\`TiOrder\`),   KEY \`TiTextLC\` (\`TiTextLC\`),   KEY \`TiIsNotWord\` (\`TiIsNotWord\`) ) ENGINE=MyISAM AUTO_INCREMENT=12761 DEFAULT CHARSET=utf8;
${serializedData.textitems.map((entry) => {
    return `  INSERT INTO textitems VALUES(${entry.TiID},${entry.TiLgID},${entry.TiTxID},${entry.TiSeID},${entry.TiOrder},${entry.TiWordCount},${entry.TiText},${entry.TiTextLC},${entry.TiIsNotWord});
`;
  }).join("")}
  
  DROP TABLE IF EXISTS texts;
  CREATE TABLE \`texts\` (   \`TxID\` int(11) unsigned NOT NULL AUTO_INCREMENT,   \`TxLgID\` int(11) unsigned NOT NULL,   \`TxTitle\` varchar(200) NOT NULL,   \`TxText\` text NOT NULL,   \`TxAnnotatedText\` longtext NOT NULL,   \`TxAudioURI\` varchar(200) DEFAULT NULL,   \`TxSourceURI\` varchar(1000) DEFAULT NULL,   PRIMARY KEY (\`TxID\`),   KEY \`TxLgID\` (\`TxLgID\`) ) ENGINE=MyISAM AUTO_INCREMENT=10 DEFAULT CHARSET=utf8;
${serializedData.texts.map((entry) => {
    return `  INSERT INTO texts VALUES(${entry.TxID},${entry.TxLgID},${entry.TxTitle},${entry.TxText},${entry.TxAnnotatedText},${entry.TxAudioURI},${entry.TxSourceURI});
`;
  }).join("")}
  INSERT INTO texts VALUES('1','1','Mon premier don du sang','Bonjour Manon.
Bonjour.
Alors, je crois qu’il y a pas longtemps, là, vous avez fait une bonne action ?
Oui. 
On peut dire ça comme ça. Qu’est-ce que vous avez fait, alors ?
Alors, j’ai fait mon premier don du sang. Donc c’est à dire que on va dans une... Un organisme spécialisé vient dans l’IUT, dans notre université pour... pour prendre notre sang pour les malades de l’hôpital qui en ont besoin...
Oui, voilà, en cas d’accident par exemple, etc...
En cas d’accident ou en cas d’anémie ...
Oui, oui. D’accord. Et alors, donc, c’était la première fois que vous le faisiez ?
C’est la première fois et ça m’a marquée parce que j’ai... j’ai très peur des piqures en temps habituel.
Ah bon !
Voilà. J’en ai... j’en fais très rarement, le plus rarement possible...
Oui ?
... pour... pour éviter ça au maximum. Et puis...
Oui, et là, c’est pas une petite piqure ! Ça dure un moment, en fait !
Ah non, ça dure quinze – vingt minutes.
Ah, d’accord.
Ils prennent... je sais plus combien de litres de sang. Ah, c’est beaucoup.
Oui, oui. D’accord.
Ouais, ouais, ouais.
Et donc vous avez franchi le pas.
Voilà.
Mais pourquoi, alors ?
Parce que je pense que c’est important d’aider les autres, surtout que j’ai appris que j’ai un sang assez rare.
Ah oui ? C’est vrai ?
Ouais.
Pourquoi ? C’est quoi ?
A négatif.
Ah, d’accord. Oui, oui. Moi, c’est pareil.
C’est un sang... Ah, c’est vrai ?
Oui, oui.
Assez rare, donc voilà, les gens, si ils en ont besoin. Et puis si un jour, moi j’en ai besoin, je serai contente que d’autres en donnent. Donc voilà.
Oui, oui. D’accord.
En attendant, je fais ça.
Oui, oui, bien sûr. Et alors, comment ça se passe concrètement? Donc vous êtes allée... Donc ils sont venus à l’IUT, là. Ils installent tout bien comme il faut, et alors vous y allez et puis...
On y va, ils nous de ... Ils nous posent quelques questions par rapport à notre hygiène de vie évidemment, pour... pour les maladies, tout ça, si on n’a pas eu... été malades, pour les médicaments dans le sang, tout ça. Et puis après, ils vous installent sur une... sur une table, allongé, et ils vous... ils vous piquent et...
Et on attend.
Et on attend, 15 ou 20 minutes.
Oui, d’accord. Et le temps n’est pas trop long ? On se sent pas un peu bizarre ou...?
On se sent bizarre, mais ils sont vraiment à côté de nous pour... pour justement qu’on... qu’on reste éveillé en quelque sorte, et qu’on reste actif pour pas justement qu’on parte... un peu à...
Oui, à se poser des questions, tout ça, et puis se sentir affaibli ou quelque chose.
Voilà. Donc ils sont vraiment à côté de nous, à nous parler, à nous faire rigoler pour voir si on est toujours conscient, finalement.
Ah oui, d’accord.
Oui, oui. Voilà.
Oui, oui, oui. Et après, alors, à la fin, qu’est-ce qui se passe ?
A la fin, ils vous enlèvent la piqure. Et d’ailleurs, c’est là que je me suis évanouie !
Carrément ?
Ouais.
Ah bon, d’accord !
Oui, oui. Ils ont dû... Ils ont dû me mettre les pieds en l’air. Ils ont... Ils ont bien rigolé parce que justement, ils... ils ont vu que quand je suis partie, justement, c’est quand ils ont enlevé la piqure, je souriais et quand je suis... quand je me suis... quand j’ai repris conscience, ils m’ont dit que c’était la... la première fois qu’ils avaient vu quelqu’un partir...
En souriant ?
...en souriant.
Ah bon, d’accord. Alors vous êtes très spéciale !
Voilà.
Ah oui ? Et alors, donc... mais vous vous êtes évanouie carrément ?
Ah oui, carrément ! J’ai perdu conscience pendant... bon pas longtemps, hein, peut-être une ou deux minutes, le temps que... que ça revienne. Je pense que c’était un...
Un étourdissement ?
... un trop-plein... trop-plein d’émotions en fait.
Ah d’accord !
D’être contente et à la fois d’avoir eu peur.
Ah bon !
Tout ça, ouais.
Vous êtes à ce point sensible...
Ah oui, oui, vraiment.
... émotive.
Ouais.
D’accord. Et alors, qu’est-ce qu’ils ont fait, eux ? Ils vous ont... quoi ? Je sais pas... tapé sur les joues ?
Non, non, ils ont été très calmes, apparemment, d’après ce que j’ai entendu.
Il faut placer dans une bonne position, quoi. C’est ça ?
Voilà, ils ont juste relevé mes pieds. Et ils m’ont... Ils m’ont mis un... un coton imbibé de... de quelque chose. Je sais pas ce que c’était. Ça... ça sentait l’eucalyptus.
Ah oui, oui. Pour un peu vous...
Pour un peu...
... stimuler.
Ouais, voilà.
D’accord. Bon bah c’est sympa ! J’espère que tout le monde se... s’évanouit pas après les... les prises de sang comme ça ! Et il y a pas à manger aussi un peu, non ? C’est ça ?
Voilà, et après ils nous... ils nous donnent ce qu’on veut: un... un gâteau ou un verre de... de soda..
Ouais, ouais, pour reconstituer...
... un truc bien sucré.
Ouais d’accord, pour se reconstituer les forces.
Pour repartir, voilà.
D’accord. Bon bah c’est bien, alors, d’avoir fait ça. Est-ce que vous recommencerez, alors ?
Oui, oui. Il faut attendre trois mois. Donc je l’ai fait en février et je compte bien le faire en juin, là, ouais.
Ah bon d’accord. Et alors, vous comptez vous évanouir à nouveau ?
Non, je vais essayer... je vais essayer de me retenir.
D’accord.
Je vais leur expliquer que je suis un peu émotive. Et...
Un peu, oui. Hm, hm. Mais peut-être que la deuxième fois, comme vous saurez déjà comment ça se passe, ce sera moins...
Oui, je pense.
... moins stressant.
Je... je pars avec moins d’appréhension, en tout cas, pour la deuxième fois.
Oui, d’accord. Bon, bah, c’est bien, alors, d’avoir fait ça.
Oui.
D’accord. Bah très bien pour les... pour les gens à qui ça va servir. Merci Manon.','','https://learning-with-texts.sourceforge.io/media/dondusang.mp3','http://francebienvenue1.wordpress.com/2011/06/18/generosite/');
  
  DROP TABLE IF EXISTS texttags;
  CREATE TABLE \`texttags\` (   \`TtTxID\` int(11) unsigned NOT NULL,   \`TtT2ID\` int(11) unsigned NOT NULL,   PRIMARY KEY (\`TtTxID\`,\`TtT2ID\`),   KEY \`TtTxID\` (\`TtTxID\`),   KEY \`TtT2ID\` (\`TtT2ID\`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
${serializedData.texttags.map((entry) => {
    return `  INSERT INTO texttags VALUES(${entry.TtTxID},${entry.TtT2ID});
`;
  }).join("")}
  
  DROP TABLE IF EXISTS words;
  CREATE TABLE \`words\` (   \`WoID\` int(11) unsigned NOT NULL AUTO_INCREMENT,   \`WoLgID\` int(11) unsigned NOT NULL,   \`WoText\` varchar(250) NOT NULL,   \`WoTextLC\` varchar(250) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,   \`WoStatus\` tinyint(4) NOT NULL,   \`WoTranslation\` varchar(500) NOT NULL DEFAULT '*',   \`WoRomanization\` varchar(100) DEFAULT NULL,   \`WoSentence\` varchar(1000) DEFAULT NULL,   \`WoCreated\` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,   \`WoStatusChanged\` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',   \`WoTodayScore\` double NOT NULL DEFAULT '0',   \`WoTomorrowScore\` double NOT NULL DEFAULT '0',   \`WoRandom\` double NOT NULL DEFAULT '0',   PRIMARY KEY (\`WoID\`),   UNIQUE KEY \`WoLgIDTextLC\` (\`WoLgID\`,\`WoTextLC\`),   KEY \`WoLgID\` (\`WoLgID\`),   KEY \`WoStatus\` (\`WoStatus\`),   KEY \`WoTextLC\` (\`WoTextLC\`),   KEY \`WoTranslation\` (\`WoTranslation\`(333)),   KEY \`WoCreated\` (\`WoCreated\`),   KEY \`WoStatusChanged\` (\`WoStatusChanged\`),   KEY \`WoTodayScore\` (\`WoTodayScore\`),   KEY \`WoTomorrowScore\` (\`WoTomorrowScore\`),   KEY \`WoRandom\` (\`WoRandom\`) ) ENGINE=MyISAM AUTO_INCREMENT=221 DEFAULT CHARSET=utf8;
${serializedData.words.map((entry) => {
    return `  INSERT INTO words VALUES(${entry.WoID},${entry.WoLgID},${entry.WoText},${entry.WoTextLC},${entry.WoStatus},${entry.WoTranslation},${entry.WoRomanization},${entry.WoSentence},${entry.WoCreated},${entry.WoStatusChanged},${entry.WoTodayScore},${entry.WoTomorrowScore},${entry.WoRandom});
`;
  }).join("")}
  
  DROP TABLE IF EXISTS wordtags;
  CREATE TABLE \`wordtags\` (   \`WtWoID\` int(11) unsigned NOT NULL,   \`WtTgID\` int(11) unsigned NOT NULL,   PRIMARY KEY (\`WtWoID\`,\`WtTgID\`),   KEY \`WtTgID\` (\`WtTgID\`),   KEY \`WtWoID\` (\`WtWoID\`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
${serializedData.wordtags.map((entry) => {
    return `  INSERT INTO wordtags VALUES(${entry.WtWoID},${entry.WtTgID});
`;
  }).join("")}`;
  console.log(sqlFileString);
  window.alert("TODO download file");
}
function setupAppContext(context) {
  return reactExports.createContext(context);
}
const AppContext = setupAppContext(AppVariables);
function useAppContext() {
  return reactExports.useContext(AppContext);
}
function LanguageDropdown({
  header = "Choose...",
  name = "LgID",
  defaultValue,
  onChange,
  dropdownRef
}) {
  const [{ languages: languages2 }] = useData(["languages"]);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(
    "select",
    {
      name,
      value: defaultValue,
      className: "notempty setfocus",
      onChange: (val) => onChange ? onChange(Number.parseInt(val.target.value)) : () => {
      },
      ref: dropdownRef,
      children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("option", { value: "-1", children: [
          "[",
          header,
          "]"
        ] }, -1),
        languages2.map((language) => {
          return /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: language.LgID, children: language.LgName }, language.LgID);
        })
      ]
    }
  );
}
function LandingPage() {
  const {
    releaseDate,
    dbBackend,
    versionNumber,
    dbVersion,
    server,
    serverVersion,
    frontend,
    frontendVersion,
    frontendSource
  } = useAppContext();
  const [{ languages: languages2, activeLanguageId, activeLanguage }] = useData([
    "languages",
    "activeLanguageId",
    "activeLanguage"
  ]);
  console.log("LANGS", languages2);
  const navigate = useInternalNavigate();
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    languages2.length === 0 && /* @__PURE__ */ jsxRuntimeExports.jsx("table", { className: "tab3", cellSpacing: 0, cellPadding: 5, children: /* @__PURE__ */ jsxRuntimeExports.jsx("tr", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1", children: [
      "Hint: The database seems to be empty.",
      /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
      /* @__PURE__ */ jsxRuntimeExports.jsx(A, { href: "/install_demo", children: "You may install the LWT demo database," }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
      "or",
      /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
      /* @__PURE__ */ jsxRuntimeExports.jsx(A, { href: "/edit_languages?new=1", children: "define the first language you want to learn." })
    ] }) }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { children: [
          "Language:",
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            LanguageDropdown,
            {
              onChange: (val) => {
                console.log(val);
                dataService.setActiveLanguage(val);
              },
              defaultValue: activeLanguageId !== null ? activeLanguageId : void 0
            }
          )
        ] }),
        activeLanguage && /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { children: [
          "My last Text (in",
          " " + activeLanguage.LgName,
          ")"
        ] })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("ul", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: /* @__PURE__ */ jsxRuntimeExports.jsx(A, { href: "/edit_texts", children: "My Texts" }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: /* @__PURE__ */ jsxRuntimeExports.jsx(A, { href: "/edit_archivedtexts", children: "My Text Archive" }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(A, { href: "/edit_texttags", children: "My Text Tags" }),
          " ",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(A, { href: "/edit_languages", children: "My Languages" }),
          " ",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: /* @__PURE__ */ jsxRuntimeExports.jsx(A, { href: "/edit_words", children: "My Terms (Words and Expressions)" }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(A, { href: "/edit_tags", children: "My Term Tags" }),
          " ",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(A, { href: "/statistics", children: "My Statistics" }),
          " ",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: /* @__PURE__ */ jsxRuntimeExports.jsx(A, { href: "/check_text", children: "Check a Text" }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: /* @__PURE__ */ jsxRuntimeExports.jsx(A, { href: "/long_text_import", children: "Long Text Import" }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: /* @__PURE__ */ jsxRuntimeExports.jsx(A, { href: "/upload_words", children: "Import Terms" }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(A, { href: "/backup_restore", children: "Backup/Restore/Empty Database" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(A, { href: "/settings", children: "Settings/Preferences" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: /* @__PURE__ */ jsxRuntimeExports.jsx(A, { href: "/info", children: "Help/Information" }) })
      ] })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("p", { className: "smallgray graydotted", children: " " }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("table", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("tbody", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "width50px", children: /* @__PURE__ */ jsxRuntimeExports.jsx("a", { target: "_blank", href: "http://unlicense.org/", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
        "img",
        {
          alt: "Public Domain",
          title: "Public Domain",
          src: "img/public_domain.png"
        }
      ) }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("td", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("p", { className: "small", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "a",
          {
            href: "https://sourceforge.net/projects/learning-with-texts/",
            target: "_blank",
            children: '"Learning with Texts" (LWT)'
          }
        ),
        " ",
        "is free and unencumbered software released",
        /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
        "into the",
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "a",
          {
            href: "https://en.wikipedia.org/wiki/Public_domain_software",
            target: "_blank",
            children: "PUBLIC DOMAIN"
          }
        ),
        ". LWT React Port is as well. Clone, modify, go wild. Learn more languages, help more learn more languages.",
        /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
        /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "http://unlicense.org/", target: "_blank", children: "More information and detailed Unlicense ..." }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
        "This is LWT-React Version ",
        versionNumber,
        " (Released:",
        " ",
        releaseDate,
        ")",
        /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "a",
          {
            href: "https://en.wikipedia.org/wiki/Database",
            target: "_blank",
            children: "Database"
          }
        ),
        ": ",
        /* @__PURE__ */ jsxRuntimeExports.jsx("i", { children: "lwt" }),
        " on",
        /* @__PURE__ */ jsxRuntimeExports.jsx("i", { children: dbBackend }),
        " /",
        /* @__PURE__ */ jsxRuntimeExports.jsxs(
          "span",
          {
            title: "Manage Table Sets",
            onClick: () => {
              navigate("/table_set_management");
            },
            className: "click",
            children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx("i", { children: "Default" }),
              " Table Set"
            ]
          }
        ),
        "/ Size: 94.5 MB",
        /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
        /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "Persistence strategy: " }),
        PersistanceStrategy[AppVariables.persistMethod],
        /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
        /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "https://en.wikipedia.org/wiki/Front-end_web_development", children: "Frontend:" }),
        "  ",
        /* @__PURE__ */ jsxRuntimeExports.jsxs(
          "a",
          {
            href: "https://en.wikipedia.org/wiki/React_(JavaScript_library)",
            target: "_blank",
            children: [
              frontend,
              "/",
              frontendVersion
            ]
          }
        ),
        /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "a",
          {
            href: "https://en.wikipedia.org/wiki/Web_server",
            target: "_blank",
            children: "Web Server"
          }
        ),
        ": ",
        /* @__PURE__ */ jsxRuntimeExports.jsx("i", { children: "test" }),
        " / Server Software:",
        /* @__PURE__ */ jsxRuntimeExports.jsxs(
          "a",
          {
            href: "https://en.wikipedia.org/wiki/Apache_HTTP_Server",
            target: "_blank",
            children: [
              server,
              "/",
              serverVersion
            ]
          }
        ),
        "  ",
        /* @__PURE__ */ jsxRuntimeExports.jsxs("a", { href: "https://en.wikipedia.org/wiki/MySQL", target: "_blank", children: [
          dbBackend,
          "/",
          dbVersion
        ] }),
        "  ",
        /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
        /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: frontendSource, children: "LWT React source" })
      ] }) })
    ] }) }) })
  ] });
}
class StructError extends TypeError {
  constructor(failure, failures) {
    let cached;
    const { message, explanation, ...rest } = failure;
    const { path } = failure;
    const msg = path.length === 0 ? message : `At path: ${path.join(".")} -- ${message}`;
    super(explanation ?? msg);
    if (explanation != null)
      this.cause = msg;
    Object.assign(this, rest);
    this.name = this.constructor.name;
    this.failures = () => {
      return cached ?? (cached = [failure, ...failures()]);
    };
  }
}
function isIterable(x2) {
  return isObject(x2) && typeof x2[Symbol.iterator] === "function";
}
function isObject(x2) {
  return typeof x2 === "object" && x2 != null;
}
function print(value) {
  if (typeof value === "symbol") {
    return value.toString();
  }
  return typeof value === "string" ? JSON.stringify(value) : `${value}`;
}
function shiftIterator(input) {
  const { done, value } = input.next();
  return done ? void 0 : value;
}
function toFailure(result, context, struct, value) {
  if (result === true) {
    return;
  } else if (result === false) {
    result = {};
  } else if (typeof result === "string") {
    result = { message: result };
  }
  const { path, branch } = context;
  const { type: type2 } = struct;
  const { refinement, message = `Expected a value of type \`${type2}\`${refinement ? ` with refinement \`${refinement}\`` : ""}, but received: \`${print(value)}\`` } = result;
  return {
    value,
    type: type2,
    refinement,
    key: path[path.length - 1],
    path,
    branch,
    ...result,
    message
  };
}
function* toFailures(result, context, struct, value) {
  if (!isIterable(result)) {
    result = [result];
  }
  for (const r2 of result) {
    const failure = toFailure(r2, context, struct, value);
    if (failure) {
      yield failure;
    }
  }
}
function* run(value, struct, options = {}) {
  const { path = [], branch = [value], coerce = false, mask: mask2 = false } = options;
  const ctx = { path, branch };
  if (coerce) {
    value = struct.coercer(value, ctx);
    if (mask2 && struct.type !== "type" && isObject(struct.schema) && isObject(value) && !Array.isArray(value)) {
      for (const key in value) {
        if (struct.schema[key] === void 0) {
          delete value[key];
        }
      }
    }
  }
  let status = "valid";
  for (const failure of struct.validator(value, ctx)) {
    failure.explanation = options.message;
    status = "not_valid";
    yield [failure, void 0];
  }
  for (let [k2, v2, s] of struct.entries(value, ctx)) {
    const ts = run(v2, s, {
      path: k2 === void 0 ? path : [...path, k2],
      branch: k2 === void 0 ? branch : [...branch, v2],
      coerce,
      mask: mask2,
      message: options.message
    });
    for (const t2 of ts) {
      if (t2[0]) {
        status = t2[0].refinement != null ? "not_refined" : "not_valid";
        yield [t2[0], void 0];
      } else if (coerce) {
        v2 = t2[1];
        if (k2 === void 0) {
          value = v2;
        } else if (value instanceof Map) {
          value.set(k2, v2);
        } else if (value instanceof Set) {
          value.add(v2);
        } else if (isObject(value)) {
          if (v2 !== void 0 || k2 in value)
            value[k2] = v2;
        }
      }
    }
  }
  if (status !== "not_valid") {
    for (const failure of struct.refiner(value, ctx)) {
      failure.explanation = options.message;
      status = "not_refined";
      yield [failure, void 0];
    }
  }
  if (status === "valid") {
    yield [void 0, value];
  }
}
class Struct {
  constructor(props) {
    const { type: type2, schema, validator, refiner, coercer = (value) => value, entries = function* () {
    } } = props;
    this.type = type2;
    this.schema = schema;
    this.entries = entries;
    this.coercer = coercer;
    if (validator) {
      this.validator = (value, context) => {
        const result = validator(value, context);
        return toFailures(result, context, this, value);
      };
    } else {
      this.validator = () => [];
    }
    if (refiner) {
      this.refiner = (value, context) => {
        const result = refiner(value, context);
        return toFailures(result, context, this, value);
      };
    } else {
      this.refiner = () => [];
    }
  }
  /**
   * Assert that a value passes the struct's validation, throwing if it doesn't.
   */
  assert(value, message) {
    return assert(value, this, message);
  }
  /**
   * Create a value with the struct's coercion logic, then validate it.
   */
  create(value, message) {
    return create(value, this, message);
  }
  /**
   * Check if a value passes the struct's validation.
   */
  is(value) {
    return is(value, this);
  }
  /**
   * Mask a value, coercing and validating it, but returning only the subset of
   * properties defined by the struct's schema.
   */
  mask(value, message) {
    return mask(value, this, message);
  }
  /**
   * Validate a value with the struct's validation logic, returning a tuple
   * representing the result.
   *
   * You may optionally pass `true` for the `withCoercion` argument to coerce
   * the value before attempting to validate it. If you do, the result will
   * contain the coerced result when successful.
   */
  validate(value, options = {}) {
    return validate(value, this, options);
  }
}
function assert(value, struct, message) {
  const result = validate(value, struct, { message });
  if (result[0]) {
    throw result[0];
  }
}
function create(value, struct, message) {
  const result = validate(value, struct, { coerce: true, message });
  if (result[0]) {
    throw result[0];
  } else {
    return result[1];
  }
}
function mask(value, struct, message) {
  const result = validate(value, struct, { coerce: true, mask: true, message });
  if (result[0]) {
    throw result[0];
  } else {
    return result[1];
  }
}
function is(value, struct) {
  const result = validate(value, struct);
  return !result[0];
}
function validate(value, struct, options = {}) {
  const tuples = run(value, struct, options);
  const tuple = shiftIterator(tuples);
  if (tuple[0]) {
    const error = new StructError(tuple[0], function* () {
      for (const t2 of tuples) {
        if (t2[0]) {
          yield t2[0];
        }
      }
    });
    return [error, void 0];
  } else {
    const v2 = tuple[1];
    return [void 0, v2];
  }
}
function define(name, validator) {
  return new Struct({ type: name, schema: null, validator });
}
function omit(struct, keys) {
  const { schema } = struct;
  const subschema = { ...schema };
  for (const key of keys) {
    delete subschema[key];
  }
  switch (struct.type) {
    case "type":
      return type(subschema);
    default:
      return object(subschema);
  }
}
function pick(struct, keys) {
  const { schema } = struct;
  const subschema = {};
  for (const key of keys) {
    subschema[key] = schema[key];
  }
  return object(subschema);
}
function any() {
  return define("any", () => true);
}
function array(Element2) {
  return new Struct({
    type: "array",
    schema: Element2,
    *entries(value) {
      if (Element2 && Array.isArray(value)) {
        for (const [i, v2] of value.entries()) {
          yield [i, v2, Element2];
        }
      }
    },
    coercer(value) {
      return Array.isArray(value) ? value.slice() : value;
    },
    validator(value) {
      return Array.isArray(value) || `Expected an array value, but received: ${print(value)}`;
    }
  });
}
function enums(values) {
  const schema = {};
  const description = values.map((v2) => print(v2)).join();
  for (const key of values) {
    schema[key] = key;
  }
  return new Struct({
    type: "enums",
    schema,
    validator(value) {
      return values.includes(value) || `Expected one of \`${description}\`, but received: ${print(value)}`;
    }
  });
}
function never() {
  return define("never", () => false);
}
function number() {
  return define("number", (value) => {
    return typeof value === "number" && !isNaN(value) || `Expected a number, but received: ${print(value)}`;
  });
}
function object(schema) {
  const knowns = schema ? Object.keys(schema) : [];
  const Never = never();
  return new Struct({
    type: "object",
    schema: schema ? schema : null,
    *entries(value) {
      if (schema && isObject(value)) {
        const unknowns = new Set(Object.keys(value));
        for (const key of knowns) {
          unknowns.delete(key);
          yield [key, value[key], schema[key]];
        }
        for (const key of unknowns) {
          yield [key, value[key], Never];
        }
      }
    },
    validator(value) {
      return isObject(value) || `Expected an object, but received: ${print(value)}`;
    },
    coercer(value) {
      return isObject(value) ? { ...value } : value;
    }
  });
}
function optional(struct) {
  return new Struct({
    ...struct,
    validator: (value, ctx) => value === void 0 || struct.validator(value, ctx),
    refiner: (value, ctx) => value === void 0 || struct.refiner(value, ctx)
  });
}
function string() {
  return define("string", (value) => {
    return typeof value === "string" || `Expected a string, but received: ${print(value)}`;
  });
}
function type(schema) {
  const keys = Object.keys(schema);
  return new Struct({
    type: "type",
    schema,
    *entries(value) {
      if (isObject(value)) {
        for (const k2 of keys) {
          yield [k2, value[k2], schema[k2]];
        }
      }
    },
    validator(value) {
      return isObject(value) || `Expected an object, but received: ${print(value)}`;
    },
    coercer(value) {
      return isObject(value) ? { ...value } : value;
    }
  });
}
function getSize(value) {
  if (value instanceof Map || value instanceof Set) {
    return value.size;
  } else {
    return value.length;
  }
}
function nonempty(struct) {
  return refine(struct, "nonempty", (value) => {
    const size2 = getSize(value);
    return size2 > 0 || `Expected a nonempty ${struct.type} but received an empty one`;
  });
}
function size(struct, min2, max2 = min2) {
  const expected = `Expected a ${struct.type}`;
  const of2 = min2 === max2 ? `of \`${min2}\`` : `between \`${min2}\` and \`${max2}\``;
  return refine(struct, "size", (value) => {
    if (typeof value === "number" || value instanceof Date) {
      return min2 <= value && value <= max2 || `${expected} ${of2} but received \`${value}\``;
    } else if (value instanceof Map || value instanceof Set) {
      const { size: size2 } = value;
      return min2 <= size2 && size2 <= max2 || `${expected} with a size ${of2} but received one with a size of \`${size2}\``;
    } else {
      const { length } = value;
      return min2 <= length && length <= max2 || `${expected} with a length ${of2} but received one with a length of \`${length}\``;
    }
  });
}
function refine(struct, name, refiner) {
  return new Struct({
    ...struct,
    *refiner(value, ctx) {
      yield* struct.refiner(value, ctx);
      const result = refiner(value, ctx);
      const failures = toFailures(result, ctx, struct, value);
      for (const failure of failures) {
        yield { ...failure, refinement: name };
      }
    }
  });
}
function brandedString(brandName, refiner) {
  const refinedType = refiner ? refine(string(), `branded-string-${brandName}-refinement`, refiner) : string();
  return define(
    `branded-string-${brandName}`,
    (v2) => refinedType.is(v2)
  );
}
function brandedNumber(brandName, refiner) {
  const refinedType = refiner ? refine(number(), `branded-number-${brandName}-refinement`, refiner) : number();
  return define(
    `branded-number-${brandName}`,
    (v2) => refinedType.is(v2)
  );
}
const isValidURL = (validationString) => validationString.startsWith("http://") || validationString.startsWith("https://");
const isValidURLTemplate = (validationString) => validationString.startsWith("*http://") || validationString.startsWith("*https://");
const URLValidator = () => string() && define("url", isValidURL);
const URLTemplateValidator = () => string() && define("urlTemplate", isValidURLTemplate);
const NumberInListValidator = (numbers) => refine(
  number(),
  "Zero or One",
  (val) => numbers.includes(val)
);
const BooleanNumberValidator = NumberInListValidator([0, 1]);
const TimestampValidator = () => number();
const archivedtextsId = brandedNumber("archivedtextsId");
const archtexttagsId = brandedNumber("archtexttagsId");
const languagesId = brandedNumber("languagesId");
const sentencesId = brandedNumber("sentencesId");
const settingsId = brandedString("settingsId");
const tagsId = brandedNumber("tagsId");
const tags2Id = brandedNumber("tags2Id");
const textitemsId = brandedNumber("textitemsId");
const textsId = brandedNumber("textsId");
brandedNumber("texttagsId");
const wordsId = brandedNumber("wordsId");
brandedNumber("wordtagsId");
object({
  // AtID: int(11) unsigned NOT NULL AUTO_INCREMENT,
  // PRIMARY KEY (`AtID`),
  AtID: archivedtextsId,
  // AtLgID: int(11) unsigned NOT NULL,
  // KEY `AtLgID` (`AtLgID`)
  AtLgID: languagesId,
  // AtTitle: varchar(200) NOT NULL,
  AtTitle: nonempty(string()),
  // AtText: text NOT NULL,
  AtText: nonempty(string()),
  // AtAnnotatedText: longtext NOT NULL,
  AtAnnotatedText: nonempty(string()),
  // AtAudioURI: varchar(200) DEFAULT NULL,
  AtAudioURI: optional(URLValidator()),
  // AtSourceURI: varchar(1000) DEFAULT NULL,
  AtSourceURI: optional(URLValidator())
});
object({
  // AgAtID: int(11) unsigned NOT NULL,
  // KEY `AgAtID` (`AgAtID`),
  AgAtID: archtexttagsId,
  // AgT2ID: int(11) unsigned NOT NULL,
  // KEY `AgT2ID` (`AgT2ID`)
  AgT2ID: tags2Id
  // KEY (`AgAtID`,`AgT2ID`),
});
const textSizes = [100, 150, 200, 250];
const LanguagesValidator = object({
  // LgID: int(11) unsigned NOT NULL AUTO_INCREMENT,
  // KEY (`LgID`),
  LgID: languagesId,
  // LgName: varchar(40) NOT NULL,
  // UNIQUE KEY `LgName` (`LgName`)
  // TODO no duplicates
  LgName: size(string(), 1, 40),
  // LgDict1URI: varchar(200) NOT NULL,
  LgDict1URI: nonempty(URLTemplateValidator()),
  // LgDict2URI: varchar(200) DEFAULT NULL,
  LgDict2URI: optional(URLTemplateValidator()),
  // LgGoogleTranslateURI: varchar(200) DEFAULT NULL,
  LgGoogleTranslateURI: optional(URLTemplateValidator()),
  // LgExportTemplate: varchar(1000) DEFAULT NULL,
  LgExportTemplate: optional(string()),
  // LgTextSize: int(5) unsigned NOT NULL DEFAULT '100',
  LgTextSize: NumberInListValidator(textSizes),
  // LgCharacterSubstitutions: varchar(500) NOT NULL,
  LgCharacterSubstitutions: nonempty(string()),
  // LgRegexpSplitSentences: varchar(500) NOT NULL,
  LgRegexpSplitSentences: nonempty(string()),
  // LgExceptionsSplitSentences: varchar(500) NOT NULL,
  LgExceptionsSplitSentences: nonempty(string()),
  // LgRegexpWordCharacters: varchar(500) NOT NULL,
  LgRegexpWordCharacters: nonempty(string()),
  // LgRemoveSpaces: int(1) unsigned NOT NULL DEFAULT '0',
  LgRemoveSpaces: BooleanNumberValidator,
  // LgSplitEachChar: int(1) unsigned NOT NULL DEFAULT '0',
  LgSplitEachChar: BooleanNumberValidator,
  // LgRightToLeft: int(1) unsigned NOT NULL DEFAULT '0',
  LgRightToLeft: BooleanNumberValidator
});
const LanguagesValidatorNoId = omit(LanguagesValidator, ["LgID"]);
object({
  // SeID: int(11) unsigned NOT NULL AUTO_INCREMENT,
  // PRIMARY KEY (`SeID`),
  SeID: sentencesId,
  // SeLgID: int(11) unsigned NOT NULL,
  // KEY `SeLgID` (`SeLgID`),
  SeLgID: languagesId,
  // SeTxID: int(11) unsigned NOT NULL,
  // KEY `SeTxID` (`SeTxID`),
  SeTxID: textsId,
  // SeOrder: int(11) unsigned NOT NULL,
  // KEY `SeOrder` (`SeOrder`)
  SeOrder: number(),
  // SeText: text,
  SeText: nonempty(string())
});
const SettingsValidator = object({
  // StKey: varchar(40) NOT NULL,
  // PRIMARY KEY (`StKey`)
  StKey: settingsId,
  // StValue: varchar(40) DEFAULT NULL,
  StValue: nonempty(string())
});
const TagsValidator = object({
  // TgID: int(11) unsigned NOT NULL AUTO_INCREMENT,
  // PRIMARY KEY (`TgID`),
  TgID: tagsId,
  // TgText: varchar(20) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  // UNIQUE KEY `TgText` (`TgText`)
  TgText: nonempty(string()),
  // TgComment: varchar(200) NOT NULL DEFAULT '',
  TgComment: optional(string())
});
const Tags2Validator = object({
  // T2ID: int(11) unsigned NOT NULL AUTO_INCREMENT,
  // PRIMARY KEY (`T2ID`),
  T2ID: tags2Id,
  // T2Text: varchar(20) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  // UNIQUE KEY `T2Text` (`T2Text`)
  T2Text: nonempty(string()),
  // T2Comment: varchar(200) NOT NULL DEFAULT '',
  T2Comment: optional(string())
});
object({
  // TiID: int(11) unsigned NOT NULL AUTO_INCREMENT,
  // KEY (`TiID`),
  TiID: textitemsId,
  // TiLgID: int(11) unsigned NOT NULL,
  // KEY `TiLgID` (`TiLgID`),
  TiLgID: languagesId,
  // TiTxID: int(11) unsigned NOT NULL,
  // KEY `TiTxID` (`TiTxID`),
  TiTxID: textsId,
  // TiSeID: int(11) unsigned NOT NULL,
  // KEY `TiSeID` (`TiSeID`),
  TiSeID: sentencesId,
  // TiOrder: int(11) unsigned NOT NULL,
  // KEY `TiOrder` (`TiOrder`),
  TiOrder: number(),
  // TiWordCount: int(1) unsigned NOT NULL,
  TiWordCount: number(),
  // TiText: string,
  // TiText: varchar(250) NOT NULL,
  TiText: nonempty(string()),
  // TiTextLC: varchar(250) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  // KEY `TiTextLC` (`TiTextLC`),
  TiTextLC: nonempty(string()),
  // TiIsNotWord: tinyint(1) NOT NULL,
  // KEY `TiIsNotWord` (`TiIsNotWord`)
  TiIsNotWord: number()
});
const TextsValidator = object({
  // TxID: int(11) unsigned NOT NULL AUTO_INCREMENT,
  // PRIMARY KEY (`TxID`),
  TxID: textsId,
  // TxLgID: int(11) unsigned NOT NULL,
  // KEY `TxLgID` (`TxLgID`)
  TxLgID: languagesId,
  // TxTitle: varchar(200) NOT NULL,
  TxTitle: nonempty(string()),
  // TxText: text NOT NULL,
  // TODO max 65,000 bytes
  TxText: nonempty(string()),
  // TxAnnotatedText: longtext NOT NULL,
  TxAnnotatedText: nonempty(string()),
  // TxAudioURI: varchar(200) DEFAULT NULL,
  TxAudioURI: optional(URLValidator()),
  // TxSourceURI: varchar(1000) DEFAULT NULL,
  TxSourceURI: optional(URLValidator())
});
const TextsValidatorNoId = omit(TextsValidator, ["TxID"]);
object({
  // TtTxID: int(11) unsigned NOT NULL,
  // KEY `TtTxID` (`TtTxID`),
  TtTxID: textsId,
  // TtT2ID: int(11) unsigned NOT NULL,
  // KEY `TtT2ID` (`TtT2ID`)
  TtT2ID: tags2Id
  // KEY (`TtTxID`,`TtT2ID`),
});
const WordsValidator = object({
  // WoID: int(11) unsigned NOT NULL AUTO_INCREMENT,
  // PRIMARY KEY (`WoID`),
  WoID: wordsId,
  // WoLgID: int(11) unsigned NOT NULL,
  // KEY `WoLgID` (`WoLgID`),
  WoLgID: languagesId,
  // WoText: varchar(250) NOT NULL,
  WoText: nonempty(string()),
  // WoTextLC: varchar(250) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  // KEY `WoTextLC` (`WoTextLC`),
  WoTextLC: nonempty(string()),
  // WoStatus: tinyint(4) NOT NULL,
  // KEY `WoStatus` (`WoStatus`),
  WoStatus: enums([0, 1, 2, 3, 4, 5, 98, 99]),
  // WoTranslation: varchar(500) NOT NULL DEFAULT '*',
  // KEY `WoTranslation` (`WoTranslation`(333)),
  WoTranslation: nonempty(string()),
  // WoRomanization: varchar(100) DEFAULT NULL,
  WoRomanization: optional(string()),
  // WoSentence: varchar(1000) DEFAULT NULL,
  WoSentence: optional(string()),
  // WoCreated: timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  // KEY `WoCreated` (`WoCreated`),
  WoCreated: TimestampValidator(),
  // TODO make into unix timestamp ms
  // WoCreated: TimestampValidator(),
  // WoStatusChanged: timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',
  // KEY `WoStatusChanged` (`WoStatusChanged`),
  WoStatusChanged: TimestampValidator(),
  // WoTodayScore: double NOT NULL DEFAULT '0',
  // KEY `WoTodayScore` (`WoTodayScore`),
  WoTodayScore: number(),
  // WoTomorrowScore: double NOT NULL DEFAULT '0',
  // KEY `WoTomorrowScore` (`WoTomorrowScore`),
  WoTomorrowScore: number(),
  // WoRandom: double NOT NULL DEFAULT '0',
  // KEY `WoRandom` (`WoRandom`)
  WoRandom: number()
  // UNIQUE KEY `WoLgIDTextLC` (`WoLgID`,`WoTextLC`),
});
const WordsValidatorNoId = omit(WordsValidator, ["WoID"]);
object({
  // WtWoID: int(11) unsigned NOT NULL,
  // KEY `WtWoID` (`WtWoID`)
  WtWoID: wordsId,
  // WtTgID: int(11) unsigned NOT NULL,
  // KEY `WtTgID` (`WtTgID`),
  WtTgID: tagsId
  // KEY (`WtWoID`,`WtTgID`),
});
const AddNewWordValidator = omit(WordsValidatorNoId, [
  "WoStatusChanged",
  "WoTodayScore",
  "WoTomorrowScore",
  "WoRandom"
]);
const AddNewTextValidator = omit(TextsValidatorNoId, [
  "TxAnnotatedText"
]);
omit(LanguagesValidatorNoId, []);
const identityMap = (val) => val;
const parseNumMap = (value) => Number.parseInt(value, 10);
const emptyToNullMap = (value) => value === "" ? void 0 : value;
function RefMap(validator) {
  const values = Object.keys(validator.schema);
  const individualRefs = Object.fromEntries(
    values.map((key) => [
      key,
      reactExports.useRef()
    ])
  );
  individualRefs["clearAll"] = () => {
    values.forEach((val) => individualRefs[val].current.value = "");
  };
  return individualRefs;
}
function ResetForm(refMap) {
  Object.keys(refMap).forEach(
    (key) => refMap[key].current.value = ""
  );
}
function CheckAndSubmit(refMap, preValidateMap, validator, takeValidatedObject, omit$1 = null) {
  const values = Object.fromEntries(
    Object.keys(refMap).filter((val) => (omit$1 === null || val !== omit$1) && val !== "clearAll").map((refKey) => {
      console.log(refKey);
      return [
        refKey,
        (preValidateMap[refKey] || identityMap)(
          refMap[refKey].current?.value,
          refMap
        )
      ];
    })
  );
  const [validationErrors, postValidationObj] = omit(validator, [omit$1]).validate(values);
  console.log("TEST123", validationErrors, postValidationObj);
  if (!validationErrors && postValidationObj) {
    takeValidatedObject(postValidationObj);
    ResetForm(refMap);
  }
}
function WordTagsSelectDropdown({ wordID }) {
  const [{ wordtags, tags: tags3 }] = useData(["wordtags", "tags"]);
  return /* @__PURE__ */ jsxRuntimeExports.jsx("ul", { id: "termtags", children: wordtags.filter(({ WtWoID }) => {
    return WtWoID === wordID;
  }).map((tag) => {
    return /* @__PURE__ */ jsxRuntimeExports.jsx("li", {
      // TODO better lookup very inefficient
      children: tags3.find(({ TgID }) => {
        return tag.WtTgID === TgID;
      }).TgText
    });
  }) });
}
function buildFormInput(refMap, entry) {
  const ReturnedComponent = reactExports.useMemo(
    () => (args) => {
      return /* @__PURE__ */ jsxRuntimeExports.jsx(
        FormInput,
        {
          ...args,
          refMap,
          fixedEntry: entry && args.fixed && entry[args.entryKey] ? entry : void 0,
          defaultEntry: entry && args.default && entry[args.entryKey] ? entry : void 0
        }
      );
    },
    Object.values(entry || {})
  );
  return ReturnedComponent;
}
function FormInput({
  // TODO nonoptional add dot
  // TODO errorlines
  // TODO onChange
  // TODO probably best to just pass validator in here & build refmap here
  // TODO data_info for more informative text in error fields
  // TODO partial input & make sure key matches partial
  entryKey,
  refMap,
  defaultEntry,
  fixedEntry,
  ...nativeProps
}) {
  if (fixedEntry && defaultEntry) {
    throw new Error("Can't have fixed and default set!");
  }
  return /* @__PURE__ */ jsxRuntimeExports.jsx(
    "input",
    {
      defaultValue: defaultEntry === void 0 ? void 0 : defaultEntry[entryKey],
      value: fixedEntry === void 0 ? void 0 : fixedEntry[entryKey],
      name: entryKey,
      ref: refMap[entryKey],
      ...nativeProps
    }
  );
}
function owin(url) {
  window.open(
    url,
    "dictwin",
    "width=800, height=400, scrollbars=yes, menubar=no, resizable=yes, status=no"
  );
}
function createTheDictUrl$1(u2, w2) {
  const r2 = "trans.php?x=2&i=" + escape(u2) + "&t=" + w2;
  return r2;
}
function translateSentence2(url, sentctl) {
  if (typeof sentctl != "undefined" && url != "") {
    const text = sentctl.value;
    if (typeof text == "string") {
      owin(createTheDictUrl$1(url, text.replace(/[{}]/g, "")));
    }
  }
}
function AddNewWordPane({
  word,
  langId,
  existingTerm = void 0
}) {
  const validator = AddNewWordValidator;
  const refMap = RefMap(validator);
  const [{ languages: languages2 }] = useData(["languages"]);
  const navigator2 = useInternalNavigate();
  const lang = languages2.find((lang2) => lang2.LgID === langId);
  const [FormErrors, setFormErrors] = reactExports.useState({ WoText: false });
  const setFormErrorLine = (key) => (value) => setFormErrors({ ...FormErrors, [key]: value });
  console.log("TEST123-form", { existingTerm, lang, langId });
  const WoInput = buildFormInput(refMap, { WoText: word || "" });
  const isEdit = existingTerm !== void 0;
  const termStatus = isEdit ? `${existingTerm.WoStatus}` : "1";
  if (!lang) {
    throw new Error("Incorrect Language Set!");
  }
  const langString = lang.LgName;
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("form", { name: "newword", className: "validate", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("input", { type: "hidden", name: "fromAnn", value: "" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        "input",
        {
          type: "hidden",
          name: "WoLgID",
          ref: refMap.WoLgID,
          id: "langfield",
          value: langId
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        "input",
        {
          type: "hidden",
          name: "WoCreated",
          ref: refMap.WoCreated,
          id: "langfield",
          value: langId
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        "input",
        {
          type: "hidden",
          name: "WoTextLC",
          ref: refMap.WoTextLC
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports.jsx("input", { type: "hidden", name: "tid", value: "11" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("input", { type: "hidden", name: "ord", value: "7" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("table", { className: "tab2", cellSpacing: 0, cellPadding: 5, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("tbody", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Language:" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: langString })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { title: "Only change uppercase/lowercase!", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: /* @__PURE__ */ jsxRuntimeExports.jsxs("b", { children: [
            isEdit ? "Edit" : "New",
            " Term:"
          ] }) }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1", children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              WoInput,
              {
                className: "notempty checkoutsidebmp",
                type: "text",
                entryKey: "WoText",
                default: true,
                onChange: () => (
                  // TODO bring into buildFormInput
                  CheckErrors("WoText", refMap, setFormErrorLine("WoText"))
                ),
                size: 35
              }
            ),
            /* @__PURE__ */ jsxRuntimeExports.jsx(RequiredLineButton, {})
          ] })
        ] }),
        FormErrors.WoText && /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { title: "Only change uppercase/lowercase!", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { style: { color: "red" }, children: "ERROR" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", {})
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Translation:" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
            "textarea",
            {
              name: "WoTranslation",
              ref: refMap.WoTranslation,
              onChange: () => CheckErrors(
                "WoTranslation",
                refMap,
                setFormErrorLine("WoTranslation")
              ),
              className: "setfocus textarea-noreturn checklength checkoutsidebmp",
              maxLength: 500,
              cols: 35,
              rows: 3
            }
          ) })
        ] }),
        FormErrors.WoTranslation && /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { title: "Only change uppercase/lowercase!", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { style: { color: "red" }, children: "ERROR" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", {})
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Tags:" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
            "ul",
            {
              id: "termtags",
              className: "tagit ui-widget ui-widget-content ui-corner-all",
              children: /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { className: "tagit-new", children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx(
                  "span",
                  {
                    role: "status",
                    "aria-live": "polite",
                    className: "ui-helper-hidden-accessible"
                  }
                ),
                /* @__PURE__ */ jsxRuntimeExports.jsx(
                  "input",
                  {
                    type: "text",
                    maxLength: 20,
                    onChange: (event) => handleFormChange("WoTranslation", event.target.value),
                    size: 20,
                    className: "ui-widget-content ui-autocomplete-input",
                    autoComplete: "off"
                  }
                )
              ] })
            }
          ) })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Romaniz.:" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
            FormInput,
            {
              type: "text",
              className: "checkoutsidebmp",
              entryKey: "WoRomanization",
              refMap,
              maxLength: 100,
              size: 35
            }
          ) })
        ] }),
        FormErrors.WoRomanization && /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { title: "Only change uppercase/lowercase!", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { style: { color: "red" }, children: "ERROR" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", {})
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 right", children: [
            "Sentence",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "Term in :"
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
            "textarea",
            {
              name: "WoSentence",
              className: "textarea-noreturn checklength checkoutsidebmp",
              maxLength: 1e3,
              cols: 35,
              rows: 3,
              ref: refMap.WoSentence
            }
          ) })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Status:" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: /* @__PURE__ */ jsxRuntimeExports.jsx(StatusRadioButtons, { termStatus, refMap }) })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("tr", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 right", colSpan: 2, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("script", { type: "text/javascript" }),
          "Lookup Term:",
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "a",
            {
              href: replaceTemplate(lang.LgDict1URI, word),
              target: "ru",
              children: "Dict1"
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: replaceTemplate(lang.LgDict2URI, word), target: "ru", children: "Dict2" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "span",
            {
              className: "click",
              onClick: () => {
                owin(replaceTemplate(lang.LgGoogleTranslateURI, word));
              },
              children: "GTr"
            }
          ),
          "| Sent.:",
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "span",
            {
              className: "click",
              onClick: () => {
                translateSentence2(
                  // TODO url
                  `http://translate.google.com/?ie=UTF-8&sl=${lang.LgGoogleTranslateURI}&tl=en&text=###`,
                  refMap.WoSentence.current
                );
              },
              children: "GTr"
            }
          ),
          "     ",
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "input",
            {
              type: "button",
              value: "Save",
              onClick: () => {
                console.log("SAVING");
                CheckAndSubmit(
                  refMap,
                  {
                    WoStatus: parseNumMap,
                    WoLgID: parseNumMap,
                    WoCreated: () => {
                      return Date.now();
                    },
                    WoTextLC: (_2, refMap2) => refMap2["WoText"].current.value.toLowerCase()
                  },
                  validator,
                  (value) => {
                    dataService.addTerm(value);
                    navigator2("/edit_words");
                  }
                );
              }
            }
          )
        ] }) })
      ] }) })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { id: "exsent", children: /* @__PURE__ */ jsxRuntimeExports.jsxs(
      "span",
      {
        className: "click",
        onClick: () => {
          do_ajax_show_sentences(
            // TODO values
            2,
            "宪",
            "document.forms['newword'].WoSentence"
          );
        },
        children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "sticky-notes-stack", title: "Show Sentences" }),
          "Show Sentences"
        ]
      }
    ) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "ul",
      {
        className: "ui-autocomplete ui-front ui-menu ui-widget ui-widget-content ui-corner-all",
        id: "ui-id-1",
        tabIndex: 0
      }
    )
  ] });
}
function replaceTemplate(templateStr, word) {
  return templateStr.replace("###", word);
}
function CheckErrors(keyChanged, refMap, setFieldError) {
  const error = pick(WordsValidatorNoId, [keyChanged]).validate({ [keyChanged]: refMap[keyChanged].current.value })[0];
  console.log("TEST123-Val", keyChanged, refMap[keyChanged], error);
  if (!error) {
    return setFieldError(false);
  }
  return setFieldError(true);
}
function StatusRadioButtons({
  termStatus,
  refMap
}) {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("span", { className: "status1", title: "Learning", children: [
      " ",
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        "input",
        {
          type: "radio",
          name: "WoStatus",
          value: "1",
          defaultChecked: termStatus === "1",
          ref: refMap.WoStatus
        }
      ),
      "1 "
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("span", { className: "status2", title: "Learning", children: [
      " ",
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        "input",
        {
          type: "radio",
          name: "WoStatus",
          defaultChecked: termStatus === "2",
          value: "2"
        }
      ),
      "2 "
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("span", { className: "status3", title: "Learning", children: [
      " ",
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        "input",
        {
          type: "radio",
          name: "WoStatus",
          defaultChecked: termStatus === "3",
          value: "3"
        }
      ),
      "3 "
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("span", { className: "status4", title: "Learning", children: [
      " ",
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        "input",
        {
          type: "radio",
          name: "WoStatus",
          defaultChecked: termStatus === "4",
          value: "4"
        }
      ),
      "4 "
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("span", { className: "status5", title: "Learned", children: [
      " ",
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        "input",
        {
          type: "radio",
          name: "WoStatus",
          defaultChecked: termStatus === "5",
          value: "5"
        }
      ),
      "5 "
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("span", { className: "status99", title: "Well Known", children: [
      " ",
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        "input",
        {
          type: "radio",
          name: "WoStatus",
          defaultChecked: termStatus === "99",
          value: "99"
        }
      ),
      "WKn "
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("span", { className: "status98", title: "Ignored", children: [
      " ",
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        "input",
        {
          type: "radio",
          name: "WoStatus",
          value: "98",
          defaultChecked: termStatus === "98"
        }
      ),
      "Ign "
    ] })
  ] });
}
function do_ajax_show_sentences(lang, word, ctl) {
  console.log(lang, word, ctl);
}
function BackupScreen() {
  const navigate = useInternalNavigate();
  const restoreBackup = reactExports.useRef();
  return /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, { children: /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(Header, { title: "Backup/Restore/Empty Database" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("p", { children: " " }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "form",
      {
        encType: "multipart/form-data",
        action: "/backup_restore",
        method: "post",
        onSubmit: "return confirm('Are you sure?');",
        children: /* @__PURE__ */ jsxRuntimeExports.jsx("table", { className: "tab1", cellSpacing: 0, cellPadding: 5, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("tbody", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1 center", children: "Backup" }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1", children: [
              /* @__PURE__ */ jsxRuntimeExports.jsxs("p", { className: "smallgray2", children: [
                "The database ",
                /* @__PURE__ */ jsxRuntimeExports.jsx("i", { children: "lwt" }),
                " (Default Table Set) will be exported to a gzipped SQL file.",
                /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                "Please keep this file in a safe place.",
                /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                "If necessary, you can recreate the database via the Restore function below.",
                /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                "Important: If the backup file is too large, the restore may not be possible (see limits below)."
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("p", { className: "right", children: [
                " ",
                /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                /* @__PURE__ */ jsxRuntimeExports.jsx(
                  "input",
                  {
                    type: "button",
                    name: "backup",
                    onClick: () => dataService.downloadBackup(),
                    value: "Download LWT Backup"
                  }
                )
              ] })
            ] })
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1 center", children: "Restore" }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1", children: [
              /* @__PURE__ */ jsxRuntimeExports.jsxs("p", { className: "smallgray2", children: [
                "The database ",
                /* @__PURE__ */ jsxRuntimeExports.jsx("i", { children: "lwt" }),
                " (Default Table Set) will be",
                /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "replaced" }),
                " by the data in the specified backup file",
                /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                "(gzipped or normal SQL file, created above).",
                /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                /* @__PURE__ */ jsxRuntimeExports.jsxs("span", { className: "smallgray", children: [
                  "Important: If the backup file is too large, the restore may not be possible.",
                  /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                  "Upload limits (in bytes):",
                  /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "post_max_size = 8M / upload_max_filesize = 2M" }),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                  'If needed, increase in "" and restart server.',
                  /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                  " "
                ] })
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("p", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("input", { name: "thefile", type: "file", ref: restoreBackup }) }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("p", { className: "right", children: [
                " ",
                /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "red2", children: "YOU MAY LOSE DATA - BE CAREFUL:      " }),
                /* @__PURE__ */ jsxRuntimeExports.jsx(
                  "input",
                  {
                    type: "button",
                    name: "restore",
                    value: "Restore from LWT Backup",
                    onClick: () => {
                      if (restoreBackup.current && restoreBackup.current.files) {
                        dataService.restoreFromBackup(
                          restoreBackup.current.files[0]
                        );
                      }
                    }
                  }
                )
              ] })
            ] })
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1 center", children: [
              "Install",
              /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
              "LWT",
              /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
              "Demo"
            ] }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1", children: [
              /* @__PURE__ */ jsxRuntimeExports.jsxs("p", { className: "smallgray2", children: [
                "The database ",
                /* @__PURE__ */ jsxRuntimeExports.jsx("i", { children: "lwt" }),
                " (Default Table Set) will be",
                /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "replaced" }),
                " by the LWT demo database."
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("p", { className: "right", children: [
                " ",
                /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                /* @__PURE__ */ jsxRuntimeExports.jsx(
                  "input",
                  {
                    type: "button",
                    value: "Install LWT Demo Database",
                    onClick: () => {
                      if (confirmDelete()) {
                        dataService.installDemoDatabase();
                      }
                    }
                  }
                )
              ] })
            ] })
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1 center", children: [
              "Empty",
              /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
              "Database"
            ] }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1", children: [
              /* @__PURE__ */ jsxRuntimeExports.jsxs("p", { className: "smallgray2", children: [
                "Empty (= ",
                /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "delete" }),
                " the contents of) all tables - except the Settings - of your database ",
                /* @__PURE__ */ jsxRuntimeExports.jsx("i", { children: "lwt" }),
                " (Default Table Set)."
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("p", { className: "right", children: [
                " ",
                /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "red2", children: "YOU MAY LOSE DATA - BE CAREFUL:      " }),
                /* @__PURE__ */ jsxRuntimeExports.jsx(
                  "input",
                  {
                    type: "button",
                    name: "empty",
                    onClick: () => {
                      if (confirmDelete()) {
                        dataService.emptyDatabase();
                      }
                    },
                    value: "Empty LWT Database"
                  }
                )
              ] })
            ] })
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("tr", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", colSpan: 2, children: /* @__PURE__ */ jsxRuntimeExports.jsx(
            "input",
            {
              type: "button",
              value: "<< Back",
              onClick: () => {
                navigate("/");
              }
            }
          ) }) })
        ] }) })
      }
    )
  ] }) });
}
function StatisticsComponent() {
  const [{ languages: languages2, languageStatusStatistics }] = useData([
    "languages",
    "languageStatusStatistics"
  ]);
  const periods = [
    "Today",
    "Yesterday",
    "Last 7 d",
    "Last 30 d",
    "Last 365 d",
    "All Time"
  ];
  console.log("TEST123", languageStatusStatistics);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(Header, { title: "My Statistics" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("p", { children: " " }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("h4", { children: [
      "Breakdown by Language and Term Status",
      /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
      "(Click on numbers to see the list of terms)"
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("table", { className: "tab3", cellSpacing: 0, cellPadding: 5, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("tbody", { children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1", children: "Language" }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1", children: [
          "Total",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1", children: [
          "Active",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "(1..5)"
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1", children: [
          "Learning",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "(1..4)"
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1", children: [
          "Unknown",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "(1)"
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1", children: [
          "Learning",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "(2)"
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1", children: [
          "Learning",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "(3)"
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1", children: [
          "Learning",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "(4)"
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1", children: [
          "Learned",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "(5)"
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1", children: [
          "Well",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "Known",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "(99)"
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1", children: [
          "Known",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "(5+99)"
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1", children: [
          "Ign.",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "(98)"
        ] })
      ] }),
      languageStatusStatistics && languages2.map((language) => {
        const statuses = [
          //               15
          // ,14
          1,
          2,
          3,
          4,
          5,
          99,
          599,
          98
        ];
        return /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: language.LgName }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx(A, { href: `/edit_words?filterlang=${language.LgID}`, children: /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: languageStatusStatistics[language.LgID]["total"] }) }) }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
            A,
            {
              href: `/edit_words?filterlang=${language.LgID}&status=${15}`,
              children: /* @__PURE__ */ jsxRuntimeExports.jsxs("b", { children: [
                " ",
                languageStatusStatistics[language.LgID][15]
              ] })
            }
          ) }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
            A,
            {
              href: `/edit_words?filterlang=${language.LgID}&status=${14}`,
              children: /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: languageStatusStatistics[language.LgID][14] })
            }
          ) }),
          languageStatusStatistics && statuses.map((statusVal) => {
            return /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsxs("span", { className: `status${statusVal}`, children: [
              " ",
              /* @__PURE__ */ jsxRuntimeExports.jsx(
                A,
                {
                  href: `/edit_words?filterlang=${language.LgID}&status=${statusVal}`,
                  children: languageStatusStatistics[language.LgID][statusVal]
                }
              ),
              " "
            ] }) });
          })
        ] }) });
      })
    ] }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("h4", { children: [
      "Breakdown by Language and Time Range",
      /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
      '(Terms created (C), Terms changed status = Activity (A), Terms set to "Known" (K))'
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("table", { className: "tab3", cellSpacing: 0, cellPadding: 5, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("tbody", { children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1", rowSpan: 2, children: "Language" }),
        periods.map((period) => {
          return /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1", colSpan: 3, children: period });
        })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("tr", { children: periods.map(() => {
        return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1", children: "C" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1", children: "A" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1", children: "K" })
        ] });
      }) }),
      languages2.map((language) => {
        return /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: language.LgName }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "status1", children: " TODO " }) }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "status3", children: " TODO " }) }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "status5stat", children: " TODO " }) }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "status1", children: " TODO " }) }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "status3", children: " TODO " }) }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "status5stat", children: " TODO " }) }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "status1", children: " TODO " }) }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "status3", children: " TODO " }) }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "status5stat", children: " TODO " }) }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "status1", children: " TODO " }) }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "status3", children: " TODO " }) }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "status5stat", children: " TODO " }) }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "status1", children: " TODO " }) }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "status3", children: " TODO " }) }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "status5stat", children: " TODO " }) }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "status1", children: " TODO " }) }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "status3", children: " TODO " }) }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "status5stat", children: " TODO " }) })
        ] }) });
      }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1", children: /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "TOTAL" }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "status1", children: " TODO " }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "status3", children: " TODO " }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "status5stat", children: " TODO " }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "status1", children: " TODO " }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "status3", children: " 47 " }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "status5stat", children: " TODO " }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "status1", children: " TODO " }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "status3", children: " TODO " }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "status5stat", children: " TODO " }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "status1", children: " TODO " }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "status3", children: " TODO " }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "status5stat", children: " TODO " }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "status1", children: " TODO " }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "status3", children: " TODO " }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "status5stat", children: " TODO " }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "status1", children: " TODO " }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "status3", children: " TODO " }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "status5stat", children: " TODO " }) })
      ] })
    ] }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("p", { children: /* @__PURE__ */ jsxRuntimeExports.jsx(NavigateButton, {
      value: "<< Back",
      navigateTo: "/"
      /* HOME */
    }) })
  ] });
}
function NavigateButton({
  value,
  navigateTo
}) {
  const navigate = useInternalNavigate();
  return /* @__PURE__ */ jsxRuntimeExports.jsx(
    "input",
    {
      type: "button",
      value,
      onClick: () => {
        navigate(navigateTo);
      }
    }
  );
}
function CheckText() {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(Header, { title: "Check Text" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("p", { children: " " }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("form", { className: "validate", action: "/check_text", method: "post", children: /* @__PURE__ */ jsxRuntimeExports.jsx("table", { className: "tab3", cellSpacing: 0, cellPadding: 5, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("tbody", { children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Language:" }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(LanguageDropdown, {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx(RequiredLineButton, {})
        ] })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 right", children: [
          "Text:",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "(max.",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "65,000",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "bytes)"
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "textarea",
            {
              name: "TxText",
              className: "notempty checkbytes checkoutsidebmp",
              maxLength: 65e3,
              cols: 60,
              rows: 20
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsx(RequiredLineButton, {})
        ] })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("tr", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 right", colSpan: 2, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(NavigateButton, { value: "<< Back", navigateTo: "/" }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "input",
          {
            type: "button",
            name: "op",
            value: "Check",
            onClick: () => {
              window.alert("TODO");
            }
          }
        )
      ] }) })
    ] }) }) })
  ] });
}
function usePager(data, page, pageSize) {
  const dataOnPage = data.slice(pageSize * (page - 1), pageSize * page);
  const numPages = Math.ceil(data.length / pageSize);
  console.log("PAGER", { data, page, pageSize, dataOnPage });
  return { dataOnPage, numPages };
}
function useSelection(data, key) {
  const [selectedValues, setSelectedValues] = reactExports.useState(
    /* @__PURE__ */ new Set()
  );
  const onSelect = (val, selecting) => {
    if (selecting) {
      return setSelectedValues(/* @__PURE__ */ new Set([...selectedValues, val[key]]));
    }
    const newSet = /* @__PURE__ */ new Set([...selectedValues]);
    newSet.delete(val[key]);
    setSelectedValues(newSet);
    return;
  };
  return {
    selectedValues,
    checkboxPropsForEntry: (val) => {
      const isChecked = selectedValues.has(val[key]);
      return { onChange: () => onSelect(val, !isChecked), checked: isChecked };
    },
    // onSelectId:(id:[TKey])=>{
    //   const isSelected = selectedValues.has(id);
    // },
    onSelectAll: () => setSelectedValues(new Set(data.map((val) => val[key]))),
    onSelectNone: () => setSelectedValues(/* @__PURE__ */ new Set()),
    onSelect
  };
}
function Pager({
  currentPage,
  numPages
}) {
  const updateParams = useUpdateParams();
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    currentPage > 1 ? /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        Icon,
        {
          onClick: () => updateParams({ page: "1" }),
          src: "control-stop-180",
          title: "First Page"
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        Icon,
        {
          onClick: () => updateParams({ page: `${currentPage - 1}` }),
          src: "control-180",
          title: "Previous Page"
        }
      )
    ] }) : /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
      "   ",
      /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "placeholder", alt: "-" }),
      " ",
      /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "placeholder", alt: "-" }),
      " "
    ] }),
    numPages === 1 ? "1" : /* @__PURE__ */ jsxRuntimeExports.jsx(
      "select",
      {
        name: `page${currentPage}`,
        value: currentPage,
        onChange: ({ target: { value } }) => updateParams({ page: value }),
        children: [...new Array(numPages).keys()].map((pageNumber) => {
          const isSelected = currentPage === pageNumber + 1;
          return /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: pageNumber + 1, selected: isSelected, children: pageNumber + 1 });
        })
      }
    ),
    `of ${numPages}`,
    currentPage < numPages ? /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        Icon,
        {
          src: "control",
          title: "Next Page",
          onClick: () => {
            updateParams({ page: `${currentPage + 1}` });
          }
        }
      ),
      " ",
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        Icon,
        {
          src: "control-stop",
          title: "Last Page",
          onClick: () => updateParams({ page: `${numPages}` })
        }
      ),
      "   "
    ] }) : /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "placeholder", alt: "-" }),
      " ",
      /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "placeholder", alt: "-" }),
      "   "
    ] })
  ] });
}
const isTags = (tags3) => tags3[0] && "TgID" in tags3[0];
function TagDropDown({
  tags: tags3,
  tagKey
}) {
  const updateParams = useUpdateParams();
  console.log("TEST123-tag", tags3);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(
    "select",
    {
      name: "tag1",
      onChange: ({ target: { value } }) => {
        updateParams({ [tagKey]: value });
      },
      children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "", selected: true, children: "[Filter off]" }),
        isTags(tags3) ? tags3.map((tag) => {
          return /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: tag.TgID, children: tag.TgText });
        }) : tags3.map((tag) => {
          return /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: tag.T2ID, children: tag.T2Text });
        }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("option", { disabled: true, children: "--------" }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "-1", children: "UNTAGGED" })
      ]
    }
  );
}
function TermsHeader() {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1 sorttable_nosort", children: "Mark" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1 sorttable_nosort", children: "Act." }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1 clickable", children: [
      "Term /",
      /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
      "Romanization"
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1 clickable", children: [
      "Translation [Tags]",
      /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("span", { id: "waitinfo", className: "hide", children: [
        "Please ",
        /* @__PURE__ */ jsxRuntimeExports.jsx("img", { src: "icn/waiting2.gif" }),
        " wait ..."
      ] })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1 sorttable_nosort", children: [
      "Se.",
      /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
      "?"
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1 sorttable_numeric clickable", children: [
      "Stat./",
      /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
      "Days"
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1 sorttable_numeric clickable", children: [
      "Score",
      /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
      "%"
    ] })
  ] });
}
function TermsFilterBox({
  numTerms,
  currentPage,
  activeLanguageId,
  numPages,
  tag12
}) {
  const [{ tags: tags3, texts: texts2 }] = useData(["tags", "texts"]);
  const navigate = useInternalNavigate();
  const updateParams = useUpdateParams();
  return /* @__PURE__ */ jsxRuntimeExports.jsx("table", { className: "tab1", cellSpacing: 0, cellPadding: 5, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("tbody", { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("tr", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1", colSpan: 4, children: [
      "Filter",
      /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "funnel", title: "Filter" }),
      " ",
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        "input",
        {
          type: "button",
          value: "Reset All",
          onClick: () => resetAll()
        }
      )
    ] }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center", colSpan: 2, children: [
        "Language:",
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          LanguageDropdown,
          {
            onChange: (val) => {
              if (val === -1) {
                dataService.setActiveLanguage(null);
              } else {
                dataService.setActiveLanguage(val);
              }
            },
            defaultValue: activeLanguageId !== null ? activeLanguageId : void 0,
            header: "Filter off"
          }
        )
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center", colSpan: 2, children: [
        "Text:",
        /* @__PURE__ */ jsxRuntimeExports.jsxs(
          "select",
          {
            name: "text",
            onChange: ({ target: { value } }) => {
              updateParams({ text: value === "-1" ? null : value });
            },
            children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: -1, selected: true, children: "[Filter off]" }),
              (activeLanguageId !== null ? texts2.filter(({ TxLgID }) => {
                return TxLgID === activeLanguageId;
              }) : texts2).map((text) => {
                return /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: text.TxID, children: text.TxTitle });
              })
            ]
          }
        )
      ] })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs(
        "td",
        {
          style: { whiteSpace: "nowrap" },
          className: "td1 center",
          colSpan: 2,
          children: [
            "Status:",
            /* @__PURE__ */ jsxRuntimeExports.jsxs(
              "select",
              {
                name: "status",
                onChange: ({ target: { value: selectedValue } }) => {
                  updateParams({ status: selectedValue });
                },
                children: [
                  /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "", selected: true, children: "[Filter off]" }),
                  new Array(5).fill(0).map((_2, ii2) => {
                    const val = ii2 + 1;
                    return /* @__PURE__ */ jsxRuntimeExports.jsxs("option", { value: val, children: [
                      val === 5 ? "Learned" : "Learning",
                      " [",
                      val,
                      "]"
                    ] });
                  }),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "99", children: "Well Known [WKn]" }),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "98", children: "Ignored [Ign]" }),
                  new Array(4).fill(0).map((_2, ii2) => {
                    const val = ii2 + 1;
                    return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
                      /* @__PURE__ */ jsxRuntimeExports.jsx("option", { disabled: true, children: "--------" }),
                      new Array(5 - val).fill(0).map((__, jj2) => {
                        const jVal = jj2 + 1;
                        return /* @__PURE__ */ jsxRuntimeExports.jsxs("option", { value: `${val}${jVal}`, children: [
                          val + jVal === 5 ? "Learning/-ed" : "Learning",
                          " [",
                          val,
                          "..",
                          val + jVal,
                          "]"
                        ] });
                      })
                    ] });
                  }),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("option", { disabled: true, children: "--------" }),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "599", children: "All known [5+WKn]" })
                ]
              }
            )
          ]
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports.jsxs(
        "td",
        {
          style: { whiteSpace: "nowrap" },
          className: "td1 center",
          colSpan: 2,
          children: [
            "Term, Rom., Transl. (Wildc.=*):",
            /* @__PURE__ */ jsxRuntimeExports.jsx("input", { type: "text", name: "query", value: "", maxLength: 50, size: 15 }),
            " ",
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              "input",
              {
                type: "button",
                name: "querybutton",
                value: "Filter",
                onChange: ({ target: { value: selectedValue } }) => {
                  updateParams({ query: selectedValue });
                }
              }
            ),
            " ",
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              "input",
              {
                type: "button",
                value: "Clear",
                onChange: () => {
                  navigate(`/edit_words?page=${currentPage}&query=`);
                }
              }
            )
          ]
        }
      )
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs(
        "td",
        {
          style: { whiteSpace: "nowrap" },
          className: "td1 center",
          colSpan: 2,
          children: [
            "Tag #1:",
            /* @__PURE__ */ jsxRuntimeExports.jsx(TagDropDown, { tags: tags3, tagKey: "tag1" })
          ]
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        TagAndOr,
        {
          defaultValue: tag12,
          onChange: ({ target: { value } }) => {
            navigate(`/edit_words?page=${1}&tag12=${value}`);
          }
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { style: { whiteSpace: "nowrap" }, className: "td1 center", children: [
        "Tag #2:",
        /* @__PURE__ */ jsxRuntimeExports.jsx(TagDropDown, { tags: tags3, tagKey: "tag2" })
      ] })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { style: { whiteSpace: "nowrap" }, className: "th1", children: [
        numTerms,
        " Terms"
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1", style: { whiteSpace: "nowrap" }, colSpan: 2, children: [
        "   ",
        /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "placeholder", alt: "-" }),
        " ",
        /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "placeholder", alt: "-" }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(Pager, { currentPage, numPages })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { style: { whiteSpace: "nowrap" }, className: "th1", children: [
        "Sort Order:",
        /* @__PURE__ */ jsxRuntimeExports.jsxs(
          "select",
          {
            name: "sort",
            defaultValue: "3",
            onChange: ({ target: { value } }) => {
              navigate(`/edit_words?page=1&sort=${value}`);
            },
            children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "1", children: "Term A-Z" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "2", children: "Translation A-Z" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "3", children: "Newest first" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "7", children: "Oldest first" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "4", children: "Status" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "5", children: "Score Value (%)" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "6", children: "Word Count Active Texts" })
            ]
          }
        )
      ] })
    ] })
  ] }) });
}
function TagAndOr({
  onChange,
  defaultValue
}) {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { style: { whiteSpace: "nowrap" }, className: "td1 center", children: [
    "Tag #1 ..",
    /* @__PURE__ */ jsxRuntimeExports.jsxs("select", { defaultValue, name: "tag12", onChange, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: 0, children: "... OR ..." }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: 1, children: "... AND ..." })
    ] }),
    ".. Tag #2"
  ] });
}
function TermsFooter({
  numTerms,
  currentPage,
  numPages
}) {
  return /* @__PURE__ */ jsxRuntimeExports.jsx("table", { className: "tab1", cellSpacing: 0, cellPadding: 5, children: /* @__PURE__ */ jsxRuntimeExports.jsx("tbody", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { style: { whiteSpace: "nowrap" }, className: "th1", children: [
      numTerms,
      " Term",
      numTerms === 1 ? "" : "s"
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { style: { whiteSpace: "nowrap" }, className: "th1", children: [
      "   ",
      /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "placeholder", alt: "-" }),
      " ",
      /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "placeholder", alt: "-" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Pager, { currentPage, numPages })
    ] })
  ] }) }) });
}
function TermLine({
  word,
  onSelect,
  isSelected
}) {
  const termID = word.WoID;
  const sentence = word.WoSentence;
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("td", { name: "rec${termID}", className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx(A, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(
      "input",
      {
        name: "marked[]",
        type: "checkbox",
        className: "markcheck",
        checked: isSelected,
        value: termID,
        onChange: ({ target: { checked } }) => {
          onSelect(word.WoID, checked);
        }
      }
    ) }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { style: { whiteSpace: "nowrap" }, className: "td1 center", children: [
      " ",
      /* @__PURE__ */ jsxRuntimeExports.jsx(A, { href: `/edit_words?chg=${termID}`, children: /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "sticky-note--pencil", title: "Edit" }) }),
      " ",
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        Icon,
        {
          onClick: () => {
            if (confirmDelete()) {
              dataService.deleteTerm(word.WoID);
            }
          },
          src: "minus-button",
          title: "Delete"
        }
      ),
      " "
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: word.WoText }),
      " /",
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        "span",
        {
          id: `roman${termID}`,
          className: "edit_area clickedit",
          title: "Click to edit...",
          children: word.WoRomanization
        }
      )
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        "span",
        {
          id: `trans${termID}`,
          className: "edit_area clickedit",
          title: "Click to edit...",
          children: word.WoTranslation
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "smallgray2" })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: sentence !== null ? /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "status", title: `${sentence}`, alt: "Yes" }) : /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "status-busy", title: "(No valid sentence)", alt: "No" }) }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", title: "Learning", children: "1/1" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("td", { style: { whiteSpace: "nowrap" }, className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsxs("span", { className: "scorered", children: [
      "0",
      /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "status-busy", title: "Test today!" })
    ] }) })
  ] });
}
const sortingMethod = (sort) => {
  switch (sort) {
    case 7:
      return (a, b2) => {
        return a.WoCreated > b2.WoCreated ? 1 : a.WoCreated < b2.WoCreated ? -1 : 0;
      };
    case 3:
      return (a, b2) => {
        return a.WoCreated > b2.WoCreated ? -1 : a.WoCreated < b2.WoCreated ? 1 : 0;
      };
    case 5:
      return (a, b2) => {
        return a.WoCreated > b2.WoCreated ? -1 : a.WoCreated < b2.WoCreated ? 1 : 0;
      };
    case 4:
      return (a, b2) => {
        return a.WoStatus > b2.WoStatus ? -1 : a.WoStatus < b2.WoStatus ? 1 : 0;
      };
    case 1:
      return (a, b2) => {
        return a.WoText > b2.WoText ? -1 : a.WoText < b2.WoText ? 1 : 0;
      };
    case 2:
      return (a, b2) => {
        return a.WoTranslation > b2.WoTranslation ? 1 : a.WoTranslation < b2.WoTranslation ? -1 : 0;
      };
    case 6:
      return (a, b2) => {
        return a.WoCreated > b2.WoCreated ? -1 : a.WoCreated < b2.WoCreated ? 1 : 0;
      };
  }
};
function Terms({
  pageNum = null,
  // filterlang = null,
  sort = null,
  status = null,
  textFilter,
  tag1,
  tag12 = 0,
  tag2
}) {
  const [{ words: words2, activeLanguage, settings: settings2, wordtags }] = useData([
    "words",
    "activeLanguage",
    "settings",
    "wordtags"
    // 'texttags',
  ]);
  const pageSize = settings2["set-terms-per-page"] || -1;
  const filteredWords = words2.filter((val) => {
    const allTagsForThisWord = wordtags.filter(({ WtWoID }) => {
      return WtWoID === val.WoID;
    });
    const isRightText = textFilter === null ? true : (
      // TODO - find if in target text
      // : Number.parseInt(val.WoText) === textFilter;
      true
    );
    const isRightStatus = status === null ? true : val.WoStatus === status;
    const isRightLang = activeLanguage === null ? true : val.WoLgID === activeLanguage?.LgID;
    const isRightTag1 = tag1 === null ? true : allTagsForThisWord.find((val2) => {
      return val2.WtTgID === tag1;
    });
    const isRightTag2 = tag2 === null ? true : allTagsForThisWord.find((val2) => {
      return val2.WtTgID === tag2;
    });
    const compoundTagStatement = tag12 === 0 ? (
      // need an extra check to avoid sticking when only one tag is specified? I think
      isRightTag1 || (tag2 === null ? false : isRightTag2)
    ) : isRightTag1 && isRightTag2;
    return isRightStatus && isRightText && isRightLang && compoundTagStatement;
  });
  const sortedWords = sort !== null ? filteredWords.sort(sortingMethod(sort)) : filteredWords;
  const currentPage = pageNum !== null ? pageNum : 1;
  const { onSelectAll, onSelectNone, selectedValues, onSelect } = useSelection(
    filteredWords,
    "WoID"
  );
  const { dataOnPage: displayedWords, numPages } = usePager(
    sortedWords,
    currentPage,
    pageSize
  );
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      Header,
      {
        title: `My ${activeLanguage?.LgName || ""} Terms (Words and Expressions)`
      }
    ),
    activeLanguage !== void 0 ? /* @__PURE__ */ jsxRuntimeExports.jsx("p", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs(A, { href: `/edit_words?new=1&lang=${activeLanguage.LgID}`, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "plus-button", title: "New" }),
      "New ",
      activeLanguage.LgName,
      " Term ..."
    ] }) }) : /* @__PURE__ */ jsxRuntimeExports.jsxs("p", { children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "plus-button", title: "New" }),
      " New Term? - Set Language Filter first ..."
    ] }),
    sortedWords && /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        TermsFilterBox,
        {
          tag12,
          activeLanguageId: activeLanguage !== void 0 ? activeLanguage.LgID : null,
          numTerms: sortedWords.length,
          currentPage,
          numPages
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        TermMultiActions,
        {
          selectedTerms: selectedValues,
          onSelectAll,
          onSelectNone
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("table", { className: "sortable tab1", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(TermsHeader, {}),
        /* @__PURE__ */ jsxRuntimeExports.jsx("tbody", { children: displayedWords.map((word) => {
          return /* @__PURE__ */ jsxRuntimeExports.jsx(
            TermLine,
            {
              word,
              onSelect,
              isSelected: selectedValues.has(word.WoID)
            }
          );
        }) })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        TermsFooter,
        {
          numPages,
          numTerms: sortedWords.length,
          currentPage
        }
      )
    ] })
  ] });
}
function ChangeTerm({ chgID }) {
  const [{ words: words2, activeLanguage }] = useData(["words", "activeLanguage"]);
  const term = words2.find((val) => {
    return val.WoID === chgID;
  });
  const validator = WordsValidator;
  const refMap = RefMap(validator);
  const navigator2 = useInternalNavigate();
  const WoInput = reactExports.useMemo(() => {
    return buildFormInput(refMap, term);
  }, [term]);
  if (!term) {
    throw new Error("Invalid Change ID!");
  }
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      Header,
      {
        title: `My ${activeLanguage?.LgName} Terms (Words and Expressions)`
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx("h4", { children: "Edit Term" }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("form", { name: "editword", className: "validate", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(WoInput, { type: "hidden", entryKey: "WoID", fixed: true }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(WoInput, { type: "hidden", entryKey: "WoLgID", fixed: true }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("input", { type: "hidden", name: "WoOldStatus", value: term.WoStatus }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("table", { className: "tab3", cellSpacing: 0, cellPadding: 5, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Language:" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: activeLanguage?.LgName })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { title: "Normally only change uppercase/lowercase here!", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Term:" }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1", children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              WoInput,
              {
                className: "notempty setfocus checkoutsidebmp",
                type: "text",
                entryKey: "WoText",
                maxLength: 250,
                size: 40,
                default: true
              }
            ),
            /* @__PURE__ */ jsxRuntimeExports.jsx(RequiredLineButton, {})
          ] })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Translation:" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
            "textarea",
            {
              className: "textarea-noreturn checklength checkoutsidebmp",
              maxLength: 500,
              name: "WoTranslation",
              cols: 40,
              rows: 3,
              defaultValue: term.WoTranslation
            }
          ) })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Tags:" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: /* @__PURE__ */ jsxRuntimeExports.jsx(WordTagsSelectDropdown, { wordID: term.WoID }) })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Romaniz.:" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
            WoInput,
            {
              type: "text",
              className: "checkoutsidebmp",
              maxLength: 100,
              size: 40,
              entryKey: "WoRomanization",
              default: true
            }
          ) })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 right", children: [
            "Sentence",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "Term in ",
            "{...}",
            ":"
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
            "textarea",
            {
              className: "textarea-noreturn checklength checkoutsidebmp",
              maxLength: 1e3,
              name: "WoSentence",
              cols: 40,
              rows: 3,
              defaultValue: term.WoSentence
            }
          ) })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Status:" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: term.WoStatus })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("tr", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 right", colSpan: 2, children: [
          " ",
          "   ",
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "input",
            {
              type: "button",
              value: "Cancel",
              onClick: () => {
                navigator2(`/edit_words#rec${chgID}`);
              }
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsx("input", { type: "button", value: "Change" })
        ] }) })
      ] })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { id: "exsent", children: /* @__PURE__ */ jsxRuntimeExports.jsxs(
      "span",
      {
        className: "click",
        onClick: () => {
          do_ajax_show_sentences(term.WoLgID, term.WoTextLC, term.WoSentence);
        },
        children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "sticky-notes-stack", title: "Show Sentences" }),
          " Show Sentences"
        ]
      }
    ) })
  ] });
}
function AddTerm({ langId }) {
  const [{ languages: languages2 }] = useData(["languages"]);
  const language = languages2.find((val) => {
    return val.LgID === langId;
  });
  if (!language) {
    throw new Error("Invalid Language ID!");
  }
  const validator = WordsValidatorNoId;
  const refMap = RefMap(validator);
  const navigator2 = useInternalNavigate();
  const WoInput = buildFormInput(refMap, { WoLgID: langId });
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(Header, { title: `TODO` }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("h4", { children: "New Term" }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("form", { name: "newword", className: "validate", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(WoInput, { type: "hidden", entryKey: "WoLgID", fixed: true }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("table", { className: "tab3", cellSpacing: 0, cellPadding: 5, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Language:" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: language.LgName })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { title: "Normally only change uppercase/lowercase here!", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Term:" }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1", children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              WoInput,
              {
                className: "notempty setfocus checkoutsidebmp",
                type: "text",
                entryKey: "WoText",
                maxLength: 250,
                size: 40
              }
            ),
            /* @__PURE__ */ jsxRuntimeExports.jsx(RequiredLineButton, {})
          ] })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Translation:" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
            "textarea",
            {
              className: "textarea-noreturn checklength checkoutsidebmp",
              maxLength: 500,
              name: "WoTranslation",
              cols: 40,
              rows: 3,
              ref: refMap.WoTranslation
            }
          ) })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Tags:" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1" })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Romaniz.:" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
            WoInput,
            {
              type: "text",
              className: "checkoutsidebmp",
              maxLength: 100,
              size: 40,
              entryKey: "WoRomanization"
            }
          ) })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 right", children: [
            "Sentence",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "Term in ",
            "{...}",
            ":"
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
            "textarea",
            {
              className: "textarea-noreturn checklength checkoutsidebmp",
              maxLength: 1e3,
              name: "WoSentence",
              cols: 40,
              rows: 3,
              ref: refMap.WoSentence
            }
          ) })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Status:" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(StatusRadioButtons, { termStatus: "1", refMap })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("tr", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 right", colSpan: 2, children: [
          " ",
          "   ",
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "input",
            {
              type: "button",
              value: "Cancel",
              onClick: () => {
                navigator2(`/edit_words`);
              }
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsx("input", { type: "button", value: "Change" })
        ] }) })
      ] })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { id: "exsent", children: /* @__PURE__ */ jsxRuntimeExports.jsxs(
      "span",
      {
        className: "click",
        onClick: () => {
          do_ajax_show_sentences(
            refMap.WoLgID.current.value,
            refMap.WoTextLC.current.value,
            refMap.WoSentence.current.value
          );
        },
        children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "sticky-notes-stack", title: "Show Sentences" }),
          " Show Sentences"
        ]
      }
    ) })
  ] });
}
function TermMultiActions({
  selectedTerms,
  onSelectAll,
  onSelectNone
}) {
  return /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, { children: /* @__PURE__ */ jsxRuntimeExports.jsx("form", { name: "form1", children: /* @__PURE__ */ jsxRuntimeExports.jsx("table", { className: "tab1", cellSpacing: 0, cellPadding: 5, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("tbody", { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("tr", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1", colSpan: 2, children: [
      "Multi Actions",
      /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "lightning", title: "Multi Actions" })
    ] }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("input", { type: "button", value: "Mark All", onClick: onSelectAll }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("input", { type: "button", value: "Mark None", onClick: onSelectNone })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center", children: [
        "Marked Texts",
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "select",
          {
            name: "markaction",
            id: "markaction",
            onChange: () => {
            },
            disabled: selectedTerms.size === 0,
            children: /* @__PURE__ */ jsxRuntimeExports.jsx(GetAllWordsActionsSelectOptions, {})
          }
        )
      ] })
    ] })
  ] }) }) }) });
}
function GetAllWordsActionsSelectOptions() {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "", selected: true, children: "[Choose...]" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("option", { disabled: true, children: "------------" }),
    "// TODO actions",
    /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "testall", children: "Test ALL Terms" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("option", { disabled: true, children: "------------" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "spl1all", children: "Increase Status by 1 [+1]" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "smi1all", children: "Reduce Status by 1 [-1]" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("option", { disabled: true, children: "------------" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("option", { disabled: true, children: "------------" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "todayall", children: "Set Status Date to Today" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("option", { disabled: true, children: "------------" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "lowerall", children: "Set ALL Terms to Lowercase" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "capall", children: "Capitalize ALL Terms" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "delsentall", children: "Delete Sentences of ALL Terms" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("option", { disabled: true, children: "------------" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "addtagall", children: "Add Tag" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "deltagall", children: "Remove Tag" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("option", { disabled: true, children: "------------" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "expall", children: "Export ALL Terms (Anki)" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "expall2", children: "Export ALL Terms (TSV)" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "expall3", children: "Export ALL Terms (Flexible)" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("option", { disabled: true, children: "------------" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "delall", children: "Delete ALL Terms" })
  ] });
}
function DisplayTextTags({
  query,
  page = 1
}) {
  const [{ tags2: tags22, archtexttags: archtexttags2, texttags: texttags2, settings: settings2 }] = useData([
    "tags2",
    "archtexttags",
    "texttags",
    "settings"
  ]);
  const navigate = useInternalNavigate();
  const { onSelectAll, onSelectNone, checkboxPropsForEntry, selectedValues } = useSelection(tags22, "T2ID");
  const pageSize = settings2["set-tags-per-page"] || 1;
  const recno = tags22.length;
  const { dataOnPage, numPages } = usePager(tags22, page, pageSize);
  console.log(page, numPages, pageSize);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(Header, { title: "Edit Text Tags" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("p", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs(A, { href: "/edit_texttags?new=1", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "plus-button", title: "New", alt: "New" }),
      " New Text Tag ..."
    ] }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("form", { name: "form1", children: /* @__PURE__ */ jsxRuntimeExports.jsxs("table", { className: "tab1", cellSpacing: 0, cellPadding: 5, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("tr", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1", colSpan: 4, children: [
        "Filter ",
        /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "funnel", title: "Filter" }),
        " ",
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "input",
          {
            type: "button",
            value: "Reset All",
            onClick: () => {
            }
          }
        )
      ] }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("tr", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center", colSpan: 4, children: [
        "Tag Text or Comment:",
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "input",
          {
            type: "text",
            name: "query",
            defaultValue: query,
            maxLength: 50,
            size: 15
          }
        ),
        " ",
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "input",
          {
            type: "button",
            name: "querybutton",
            value: "Filter",
            onClick: () => {
              navigate(`/edit_texttags?page=${1}&query=${query}`);
            }
          }
        ),
        " ",
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "input",
          {
            type: "button",
            value: "Clear",
            onClick: () => {
              navigate(`/edit_texttags?page=${1}&query=`);
            }
          }
        )
      ] }) })
    ] }) }),
    recno === 0 ? /* @__PURE__ */ jsxRuntimeExports.jsx("p", { children: "No tags found." }) : /* @__PURE__ */ jsxRuntimeExports.jsxs(
      "form",
      {
        name: "form2",
        action: "<?php echo $_SERVER['PHP_SELF']; ?>",
        method: "post",
        children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("input", { type: "hidden", name: "data", value: "" }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("table", { className: "tab1", cellSpacing: 0, cellPadding: 5, children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("tr", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1 center", colSpan: 2, children: [
              "Multi Actions ",
              /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "lightning", title: "Multi Actions" })
            ] }) }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("tr", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center", colSpan: 2, children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "ALL" }),
              " ",
              dataOnPage.length,
              " ",
              dataOnPage.length === 1 ? "Tag" : "Tags",
              /* @__PURE__ */ jsxRuntimeExports.jsx(
                "select",
                {
                  name: "allaction",
                  onChange: "allActionGo(document.form2, document.form2.allaction,<?php echo $recno; ?>);",
                  children: /* @__PURE__ */ jsxRuntimeExports.jsx(GetAllTagsActionsSelectOptions, {})
                }
              )
            ] }) }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
              /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center", children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("input", { type: "button", value: "Mark All", onClick: onSelectAll }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("input", { type: "button", value: "Mark None", onClick: onSelectNone })
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center", children: [
                "Marked Tags: ",
                /* @__PURE__ */ jsxRuntimeExports.jsx(
                  "select",
                  {
                    name: "markaction",
                    id: "markaction",
                    disabled: selectedValues.size === 0,
                    onChange: (val) => {
                      multiActionGo(
                        // TODO
                        () => {
                        },
                        // TODO ref
                        val
                      );
                    },
                    children: /* @__PURE__ */ jsxRuntimeExports.jsx(GetMultipleTagsActionsSelectOptions, {})
                  }
                )
              ] })
            ] })
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("table", { className: "sortable tab1", cellSpacing: 0, cellPadding: 5, children: [
            /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1 sorttable_nosort", children: "Mark" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1 sorttable_nosort", children: "Actions" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1 clickable", children: "Tag Text" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1 clickable", children: "Tag Comment" }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1 clickable", children: [
                "Texts",
                /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                "With Tag"
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1 clickable", children: [
                "Arch.Texts",
                /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                "With Tag"
              ] })
            ] }),
            tags22.map((tag) => {
              const c2 = texttags2.filter(({ TtT2ID }) => {
                return tag.T2ID === TtT2ID;
              }).length;
              const ca2 = archtexttags2.filter(({ AgT2ID }) => {
                return tag.T2ID === AgT2ID;
              }).length;
              return /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx(A, { name: "rec' . $record['T2ID'] . '", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                  "input",
                  {
                    name: "marked[]",
                    type: "checkbox",
                    className: "markcheck",
                    ...checkboxPropsForEntry(tag),
                    value: "' . $record['T2ID'] . '"
                  }
                ) }) }),
                /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center", style: { whiteSpace: "nowrap" }, children: [
                  " ",
                  /* @__PURE__ */ jsxRuntimeExports.jsx(A, { href: `/edit_texttags?chg=${tag.T2ID}`, children: /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "document--pencil", title: "Edit" }) }),
                  " ",
                  /* @__PURE__ */ jsxRuntimeExports.jsx(
                    A,
                    {
                      children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                        Icon,
                        {
                          onClick: () => {
                            if (confirmDelete()) {
                              dataService.deleteTextTag(tag.T2ID);
                            }
                          },
                          src: "minus-button",
                          title: "Delete"
                        }
                      )
                    }
                  ),
                  " "
                ] }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: tag.T2Text }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: tag.T2Comment }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: c2 > 0 ? /* @__PURE__ */ jsxRuntimeExports.jsx(A, { href: `/edit_archivedtexts?tag1=${tag.T2ID}`, children: c2 }) : "0" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: ca2 > 0 ? /* @__PURE__ */ jsxRuntimeExports.jsx(A, { href: `/edit_archivedtexts?tag1=${tag.T2ID}`, children: ca2 }) : "0" })
              ] });
            })
          ] })
        ]
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(Pager, { currentPage: page, numPages })
  ] });
}
function NewTextTag() {
  const validator = Tags2Validator;
  const refMap = RefMap(validator);
  const navigator2 = useInternalNavigate();
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(Header, { title: "My Text Tags" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("h4", { children: "New Tag" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "form",
      {
        name: "newtag",
        className: "validate",
        action: "<?php echo $_SERVER['PHP_SELF']; ?>",
        method: "post",
        children: /* @__PURE__ */ jsxRuntimeExports.jsxs("table", { className: "tab3", cellSpacing: 0, cellPadding: 5, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Tag:" }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1", children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx(
                FormInput,
                {
                  className: "notempty setfocus noblanksnocomma checkoutsidebmp",
                  type: "text",
                  entryKey: "T2Text",
                  refMap,
                  maxLength: 20,
                  size: 20
                }
              ),
              /* @__PURE__ */ jsxRuntimeExports.jsx(RequiredLineButton, {})
            ] })
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Comment:" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
              "textarea",
              {
                className: "textarea-noreturn checklength checkoutsidebmp",
                maxLength: 200,
                name: "T2Comment",
                ref: refMap.T2Comment,
                cols: 40,
                rows: 3
              }
            ) })
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("tr", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 right", colSpan: 2, children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              "input",
              {
                type: "button",
                value: "Cancel",
                onClick: () => {
                  navigator2("/edit_texttags");
                }
              }
            ),
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              "input",
              {
                type: "button",
                name: "op",
                value: "Save",
                onClick: () => {
                  CheckAndSubmit(
                    refMap,
                    {},
                    validator,
                    (value) => {
                      dataService.addTextTag(value);
                      navigator2("/edit_texttags");
                    },
                    "T2ID"
                  );
                }
              }
            )
          ] }) })
        ] })
      }
    )
  ] });
}
function EditTextTag({ chgID }) {
  const [{ tags2: tags22 }] = useData(["tags2"]);
  const changingTag = tags22.find(({ T2ID }) => {
    return chgID === T2ID;
  });
  if (!changingTag) {
    throw new Error("invalid change ID");
  }
  const validator = Tags2Validator;
  const refMap = RefMap(validator);
  const navigator2 = useInternalNavigate();
  const TgInput = buildFormInput(refMap, changingTag);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(Header, { title: "My Text Tags" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("h4", { children: "Edit Tag" }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs(
      "form",
      {
        name: "edittag",
        className: "validate",
        action: "<?php echo $_SERVER['PHP_SELF']; ?>#rec<?php echo $_REQUEST['chg']; ?>",
        method: "post",
        children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(TgInput, { type: "hidden", entryKey: "T2ID", fixed: true }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("table", { className: "tab3", cellSpacing: 0, cellPadding: 5, children: [
            /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Tag:" }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1", children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx(
                  TgInput,
                  {
                    className: "notempty setfocus noblanksnocomma checkoutsidebmp",
                    type: "text",
                    entryKey: "T2Text",
                    default: true,
                    maxLength: 20,
                    size: 20
                  }
                ),
                /* @__PURE__ */ jsxRuntimeExports.jsx(RequiredLineButton, {})
              ] })
            ] }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Comment:" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                "textarea",
                {
                  className: "textarea-noreturn checklength checkoutsidebmp",
                  maxLength: 200,
                  name: "T2Comment",
                  ref: refMap.T2Comment,
                  cols: 40,
                  rows: 3,
                  defaultValue: changingTag.T2Comment
                }
              ) })
            ] }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("tr", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 right", colSpan: 2, children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx(
                "input",
                {
                  type: "button",
                  value: "Cancel",
                  onClick: () => {
                    navigator2(`/edit_texttags.php#rec${chgID}`);
                  }
                }
              ),
              /* @__PURE__ */ jsxRuntimeExports.jsx(
                "input",
                {
                  type: "button",
                  name: "op",
                  value: "Change",
                  onClick: () => {
                    CheckAndSubmit(
                      refMap,
                      {},
                      validator,
                      (value) => {
                        dataService.addTextTag(value);
                        navigator2("/edit_texttags");
                      },
                      "T2ID"
                    );
                  }
                }
              )
            ] }) })
          ] })
        ]
      }
    )
  ] });
}
function GetMultipleTagsActionsSelectOptions() {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "", children: "[Choose...]" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "del", children: "Delete Marked Tags" })
  ] });
}
function GetAllTagsActionsSelectOptions() {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "", children: "[Choose...]" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "delall", children: "Delete ALL Tags" })
  ] });
}
function GetMultipleArchivedTextActionsSelectOptions() {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "", children: "[Choose...]" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("option", { disabled: true, children: "------------" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "addtag", children: "Add Tag" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "deltag", children: "Remove Tag" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("option", { disabled: true, children: "------------" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "unarch", children: "Unarchive Marked Texts" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("option", { disabled: true, children: "------------" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "del", children: "Delete Marked Texts" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "delall", children: "Delete ALL Tags" })
  ] });
}
function resetAll(refMap) {
  window.alert("TODO Function not implemented.");
}
function EditArchivedTexts({
  query,
  currentPage
}) {
  const [{ tags: tags3, languages: languages2, activeLanguage, numArchivedTexts, archivedtexts: archivedtexts2 }] = useData([
    "languages",
    "activeLanguage",
    "numArchivedTexts",
    "archivedtexts",
    "tags"
  ]);
  const pageSize = 15;
  const [filterLanguageID, setFilterLanguage] = reactExports.useState(
    activeLanguage ? activeLanguage.LgID : null
  );
  const filteredTexts = filterLanguageID !== null ? archivedtexts2.filter(({ AtLgID }) => {
    return AtLgID === filterLanguageID;
  }) : archivedtexts2;
  const { dataOnPage, numPages } = usePager(
    filteredTexts,
    currentPage,
    pageSize
  );
  const recno = numArchivedTexts;
  const navigate = useInternalNavigate();
  const { onSelectAll, onSelectNone, checkboxPropsForEntry, selectedValues } = useSelection(archivedtexts2, "AtID");
  const queryRef = reactExports.useRef();
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(Header, { title: `My ${activeLanguage?.LgName || ""} Text Archive` }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("p", { children: " " }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("form", { name: "form1", children: /* @__PURE__ */ jsxRuntimeExports.jsxs("table", { className: "tab1", cellSpacing: 0, cellPadding: 5, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("tr", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1", colSpan: 4, children: [
        "Filter ",
        /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "funnel", title: "Filter" }),
        " ",
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "input",
          {
            type: "button",
            value: "Reset All",
            onClick: () => resetAll()
          }
        )
      ] }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center", colSpan: 2, children: [
          "Language:",
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            LanguageDropdown,
            {
              header: "[Filter off]",
              onChange: (val) => {
                if (val === -1) {
                  dataService.setActiveLanguage(null);
                } else {
                  dataService.setActiveLanguage(val);
                }
              }
            }
          )
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center", colSpan: 2, children: [
          "Text Title (Wildc.=*):",
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "input",
            {
              type: "text",
              name: "query",
              ref: queryRef,
              value: query,
              maxLength: 50,
              size: 15
            }
          ),
          " ",
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "input",
            {
              type: "button",
              name: "querybutton",
              value: "Filter",
              onClick: () => navigate(
                `/edit_archivedtexts?page=1&query=${queryRef.current?.value || ""}`
              )
            }
          ),
          " ",
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "input",
            {
              type: "button",
              value: "Clear",
              onClick: () => navigate(`/edit_archivedtexts`)
            }
          )
        ] })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs(
          "td",
          {
            className: "td1 center",
            colSpan: 2,
            style: { whiteSpace: "nowrap" },
            children: [
              "Tag #1:",
              /* @__PURE__ */ jsxRuntimeExports.jsx(TagDropDown, { tags: tags3, tagKey: "tag1" })
            ]
          }
        ),
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          TagAndOr,
          {
            onChange: ({ target: { value: val } }) => navigate(`/edit_archivedtexts?tag12=${val}`)
          }
        ),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center", style: { whiteSpace: "nowrap" }, children: [
          "Tag #2:",
          /* @__PURE__ */ jsxRuntimeExports.jsx(TagDropDown, { tags: tags3, tagKey: "tag2" })
        ] })
      ] })
    ] }) }),
    recno === 0 ? /* @__PURE__ */ jsxRuntimeExports.jsx("p", { children: "No archived texts found." }) : /* @__PURE__ */ jsxRuntimeExports.jsxs("form", { name: "form2", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("input", { type: "hidden", name: "data", value: "" }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("table", { className: "tab1", cellSpacing: 0, cellPadding: 5, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("tr", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1", colSpan: 2, children: [
          "Multi Actions ",
          /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "lightning", title: "Multi Actions" })
        ] }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center", children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("input", { type: "button", value: "Mark All", onClick: onSelectAll }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("input", { type: "button", value: "Mark None", onClick: onSelectNone })
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center", children: [
            "Marked Texts: ",
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              "select",
              {
                name: "markaction",
                id: "markaction",
                disabled: selectedValues.size === 0,
                onChange: (val) => {
                  multiActionGo(
                    () => {
                    },
                    // TODO ref
                    val
                  );
                },
                children: /* @__PURE__ */ jsxRuntimeExports.jsx(GetMultipleArchivedTextActionsSelectOptions, {})
              }
            )
          ] })
        ] })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("table", { className: "sortable tab1", cellSpacing: 0, cellPadding: 5, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1 sorttable_nosort", children: "Mark" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1 sorttable_nosort", children: "Actions" }),
          filterLanguageID === null && /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, { children: /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1 clickable", children: "Lang." }) }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1 clickable", children: [
            "Title [Tags] / Audio: ",
            /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "speaker-volume", title: "With Audio" }),
            ", Src.Link: ",
            /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "chain", title: "Source Link available" }),
            ", Ann.Text: ",
            /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "tick", title: "Annotated Text available" })
          ] })
        ] }),
        dataOnPage.map((text) => {
          const languageForLine = languages2.find(
            (lang) => lang.LgID === text.AtLgID
          );
          return /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx("a", { name: "rec' . $record['AtID'] . '", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
              "input",
              {
                name: "marked[]",
                className: "markcheck",
                type: "checkbox",
                ...checkboxPropsForEntry(text),
                value: "' . $record['AtID'] . '"
              }
            ) }) }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { style: { whiteSpace: "nowrap" }, className: "td1 center", children: [
              " ",
              /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "' . $_SERVER['PHP_SELF'] . '?unarch=' . $record['AtID'] . '", children: /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "inbox-upload", title: "Unarchive" }) }),
              " ",
              /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "' . $_SERVER['PHP_SELF'] . '?chg=' . $record['AtID'] . '", children: /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "document--pencil", title: "Edit" }) }),
              " ",
              /* @__PURE__ */ jsxRuntimeExports.jsx(
                "span",
                {
                  className: "click",
                  onClick: () => {
                    if (confirmDelete()) {
                      dataService.deleteArchivedText(text.AtID);
                    }
                  },
                  children: /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "minus-button", title: "Delete" })
                }
              ),
              " "
            ] }),
            filterLanguageID === null && /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, { children: /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: languageForLine?.LgName }) }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center", children: [
              text.AtTitle,
              /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "smallgray2" }),
              text.AtAudioURI && /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "speaker-volume", title: "With Audio" }),
              text.AtSourceURI && /* @__PURE__ */ jsxRuntimeExports.jsx(
                "a",
                {
                  href: "' . $record['AtSourceURI'] . '",
                  target: "_blank",
                  children: /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "chain", title: "Link to Text Source" })
                }
              ),
              text.AtAnnotatedText && /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "tick", title: "Annotated Text available" })
            ] })
          ] }) });
        })
      ] })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(Pager, { currentPage, numPages }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("p", { children: /* @__PURE__ */ jsxRuntimeExports.jsx(
      "input",
      {
        type: "button",
        value: "Active Texts",
        onClick: () => navigate(`/edit_texts?query=&page=1`)
      }
    ) })
  ] });
}
var lib = { exports: {} };
var Modal$2 = {};
var propTypes = { exports: {} };
var ReactPropTypesSecret$1 = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
var ReactPropTypesSecret_1 = ReactPropTypesSecret$1;
var ReactPropTypesSecret = ReactPropTypesSecret_1;
function emptyFunction() {
}
function emptyFunctionWithReset() {
}
emptyFunctionWithReset.resetWarningCache = emptyFunction;
var factoryWithThrowingShims = function() {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      return;
    }
    var err = new Error(
      "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
    );
    err.name = "Invariant Violation";
    throw err;
  }
  shim.isRequired = shim;
  function getShim() {
    return shim;
  }
  var ReactPropTypes = {
    array: shim,
    bigint: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,
    any: shim,
    arrayOf: getShim,
    element: shim,
    elementType: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim,
    checkPropTypes: emptyFunctionWithReset,
    resetWarningCache: emptyFunction
  };
  ReactPropTypes.PropTypes = ReactPropTypes;
  return ReactPropTypes;
};
{
  propTypes.exports = factoryWithThrowingShims();
}
var propTypesExports = propTypes.exports;
const PropTypes = /* @__PURE__ */ getDefaultExportFromCjs(propTypesExports);
var ModalPortal = { exports: {} };
var focusManager = {};
var tabbable$1 = { exports: {} };
(function(module, exports) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = findTabbableDescendants;
  /*!
   * Adapted from jQuery UI core
   *
   * http://jqueryui.com
   *
   * Copyright 2014 jQuery Foundation and other contributors
   * Released under the MIT license.
   * http://jquery.org/license
   *
   * http://api.jqueryui.com/category/ui-core/
   */
  var DISPLAY_NONE = "none";
  var DISPLAY_CONTENTS = "contents";
  var tabbableNode = /input|select|textarea|button|object|iframe/;
  function isNotOverflowing(element, style) {
    return style.getPropertyValue("overflow") !== "visible" || // if 'overflow: visible' set, check if there is actually any overflow
    element.scrollWidth <= 0 && element.scrollHeight <= 0;
  }
  function hidesContents(element) {
    var zeroSize = element.offsetWidth <= 0 && element.offsetHeight <= 0;
    if (zeroSize && !element.innerHTML)
      return true;
    try {
      var style = window.getComputedStyle(element);
      var displayValue = style.getPropertyValue("display");
      return zeroSize ? displayValue !== DISPLAY_CONTENTS && isNotOverflowing(element, style) : displayValue === DISPLAY_NONE;
    } catch (exception) {
      console.warn("Failed to inspect element style");
      return false;
    }
  }
  function visible(element) {
    var parentElement = element;
    var rootNode = element.getRootNode && element.getRootNode();
    while (parentElement) {
      if (parentElement === document.body)
        break;
      if (rootNode && parentElement === rootNode)
        parentElement = rootNode.host.parentNode;
      if (hidesContents(parentElement))
        return false;
      parentElement = parentElement.parentNode;
    }
    return true;
  }
  function focusable(element, isTabIndexNotNaN) {
    var nodeName = element.nodeName.toLowerCase();
    var res = tabbableNode.test(nodeName) && !element.disabled || (nodeName === "a" ? element.href || isTabIndexNotNaN : isTabIndexNotNaN);
    return res && visible(element);
  }
  function tabbable3(element) {
    var tabIndex = element.getAttribute("tabindex");
    if (tabIndex === null)
      tabIndex = void 0;
    var isTabIndexNaN = isNaN(tabIndex);
    return (isTabIndexNaN || tabIndex >= 0) && focusable(element, !isTabIndexNaN);
  }
  function findTabbableDescendants(element) {
    var descendants = [].slice.call(element.querySelectorAll("*"), 0).reduce(function(finished, el2) {
      return finished.concat(!el2.shadowRoot ? [el2] : findTabbableDescendants(el2.shadowRoot));
    }, []);
    return descendants.filter(tabbable3);
  }
  module.exports = exports["default"];
})(tabbable$1, tabbable$1.exports);
var tabbableExports = tabbable$1.exports;
Object.defineProperty(focusManager, "__esModule", {
  value: true
});
focusManager.resetState = resetState$4;
focusManager.log = log$4;
focusManager.handleBlur = handleBlur;
focusManager.handleFocus = handleFocus;
focusManager.markForFocusLater = markForFocusLater;
focusManager.returnFocus = returnFocus;
focusManager.popWithoutFocus = popWithoutFocus;
focusManager.setupScopedFocus = setupScopedFocus;
focusManager.teardownScopedFocus = teardownScopedFocus;
var _tabbable = tabbableExports;
var _tabbable2 = _interopRequireDefault$4(_tabbable);
function _interopRequireDefault$4(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}
var focusLaterElements = [];
var modalElement = null;
var needToFocus = false;
function resetState$4() {
  focusLaterElements = [];
}
function log$4() {
}
function handleBlur() {
  needToFocus = true;
}
function handleFocus() {
  if (needToFocus) {
    needToFocus = false;
    if (!modalElement) {
      return;
    }
    setTimeout(function() {
      if (modalElement.contains(document.activeElement)) {
        return;
      }
      var el2 = (0, _tabbable2.default)(modalElement)[0] || modalElement;
      el2.focus();
    }, 0);
  }
}
function markForFocusLater() {
  focusLaterElements.push(document.activeElement);
}
function returnFocus() {
  var preventScroll = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
  var toFocus = null;
  try {
    if (focusLaterElements.length !== 0) {
      toFocus = focusLaterElements.pop();
      toFocus.focus({ preventScroll });
    }
    return;
  } catch (e2) {
    console.warn(["You tried to return focus to", toFocus, "but it is not in the DOM anymore"].join(" "));
  }
}
function popWithoutFocus() {
  focusLaterElements.length > 0 && focusLaterElements.pop();
}
function setupScopedFocus(element) {
  modalElement = element;
  if (window.addEventListener) {
    window.addEventListener("blur", handleBlur, false);
    document.addEventListener("focus", handleFocus, true);
  } else {
    window.attachEvent("onBlur", handleBlur);
    document.attachEvent("onFocus", handleFocus);
  }
}
function teardownScopedFocus() {
  modalElement = null;
  if (window.addEventListener) {
    window.removeEventListener("blur", handleBlur);
    document.removeEventListener("focus", handleFocus);
  } else {
    window.detachEvent("onBlur", handleBlur);
    document.detachEvent("onFocus", handleFocus);
  }
}
var scopeTab = { exports: {} };
(function(module, exports) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = scopeTab2;
  var _tabbable3 = tabbableExports;
  var _tabbable22 = _interopRequireDefault2(_tabbable3);
  function _interopRequireDefault2(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function getActiveElement() {
    var el2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : document;
    return el2.activeElement.shadowRoot ? getActiveElement(el2.activeElement.shadowRoot) : el2.activeElement;
  }
  function scopeTab2(node, event) {
    var tabbable3 = (0, _tabbable22.default)(node);
    if (!tabbable3.length) {
      event.preventDefault();
      return;
    }
    var target = void 0;
    var shiftKey = event.shiftKey;
    var head = tabbable3[0];
    var tail = tabbable3[tabbable3.length - 1];
    var activeElement2 = getActiveElement();
    if (node === activeElement2) {
      if (!shiftKey)
        return;
      target = tail;
    }
    if (tail === activeElement2 && !shiftKey) {
      target = head;
    }
    if (head === activeElement2 && shiftKey) {
      target = tail;
    }
    if (target) {
      event.preventDefault();
      target.focus();
      return;
    }
    var checkSafari = /(\bChrome\b|\bSafari\b)\//.exec(navigator.userAgent);
    var isSafariDesktop = checkSafari != null && checkSafari[1] != "Chrome" && /\biPod\b|\biPad\b/g.exec(navigator.userAgent) == null;
    if (!isSafariDesktop)
      return;
    var x2 = tabbable3.indexOf(activeElement2);
    if (x2 > -1) {
      x2 += shiftKey ? -1 : 1;
    }
    target = tabbable3[x2];
    if (typeof target === "undefined") {
      event.preventDefault();
      target = shiftKey ? tail : head;
      target.focus();
      return;
    }
    event.preventDefault();
    target.focus();
  }
  module.exports = exports["default"];
})(scopeTab, scopeTab.exports);
var scopeTabExports = scopeTab.exports;
var ariaAppHider$1 = {};
var warning = function() {
};
var warning_1 = warning;
var safeHTMLElement = {};
var exenv = { exports: {} };
/*!
  Copyright (c) 2015 Jed Watson.
  Based on code that is Copyright 2013-2015, Facebook, Inc.
  All rights reserved.
*/
(function(module) {
  (function() {
    var canUseDOM = !!(typeof window !== "undefined" && window.document && window.document.createElement);
    var ExecutionEnvironment = {
      canUseDOM,
      canUseWorkers: typeof Worker !== "undefined",
      canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),
      canUseViewport: canUseDOM && !!window.screen
    };
    if (module.exports) {
      module.exports = ExecutionEnvironment;
    } else {
      window.ExecutionEnvironment = ExecutionEnvironment;
    }
  })();
})(exenv);
var exenvExports = exenv.exports;
Object.defineProperty(safeHTMLElement, "__esModule", {
  value: true
});
safeHTMLElement.canUseDOM = safeHTMLElement.SafeNodeList = safeHTMLElement.SafeHTMLCollection = void 0;
var _exenv = exenvExports;
var _exenv2 = _interopRequireDefault$3(_exenv);
function _interopRequireDefault$3(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}
var EE = _exenv2.default;
var SafeHTMLElement = EE.canUseDOM ? window.HTMLElement : {};
safeHTMLElement.SafeHTMLCollection = EE.canUseDOM ? window.HTMLCollection : {};
safeHTMLElement.SafeNodeList = EE.canUseDOM ? window.NodeList : {};
safeHTMLElement.canUseDOM = EE.canUseDOM;
safeHTMLElement.default = SafeHTMLElement;
Object.defineProperty(ariaAppHider$1, "__esModule", {
  value: true
});
ariaAppHider$1.resetState = resetState$3;
ariaAppHider$1.log = log$3;
ariaAppHider$1.assertNodeList = assertNodeList;
ariaAppHider$1.setElement = setElement;
ariaAppHider$1.validateElement = validateElement;
ariaAppHider$1.hide = hide;
ariaAppHider$1.show = show;
ariaAppHider$1.documentNotReadyOrSSRTesting = documentNotReadyOrSSRTesting;
var _warning = warning_1;
var _warning2 = _interopRequireDefault$2(_warning);
var _safeHTMLElement$1 = safeHTMLElement;
function _interopRequireDefault$2(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}
var globalElement = null;
function resetState$3() {
  if (globalElement) {
    if (globalElement.removeAttribute) {
      globalElement.removeAttribute("aria-hidden");
    } else if (globalElement.length != null) {
      globalElement.forEach(function(element) {
        return element.removeAttribute("aria-hidden");
      });
    } else {
      document.querySelectorAll(globalElement).forEach(function(element) {
        return element.removeAttribute("aria-hidden");
      });
    }
  }
  globalElement = null;
}
function log$3() {
}
function assertNodeList(nodeList, selector) {
  if (!nodeList || !nodeList.length) {
    throw new Error("react-modal: No elements were found for selector " + selector + ".");
  }
}
function setElement(element) {
  var useElement = element;
  if (typeof useElement === "string" && _safeHTMLElement$1.canUseDOM) {
    var el2 = document.querySelectorAll(useElement);
    assertNodeList(el2, useElement);
    useElement = el2;
  }
  globalElement = useElement || globalElement;
  return globalElement;
}
function validateElement(appElement) {
  var el2 = appElement || globalElement;
  if (el2) {
    return Array.isArray(el2) || el2 instanceof HTMLCollection || el2 instanceof NodeList ? el2 : [el2];
  } else {
    (0, _warning2.default)(false, ["react-modal: App element is not defined.", "Please use `Modal.setAppElement(el)` or set `appElement={el}`.", "This is needed so screen readers don't see main content", "when modal is opened. It is not recommended, but you can opt-out", "by setting `ariaHideApp={false}`."].join(" "));
    return [];
  }
}
function hide(appElement) {
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = void 0;
  try {
    for (var _iterator = validateElement(appElement)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var el2 = _step.value;
      el2.setAttribute("aria-hidden", "true");
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }
}
function show(appElement) {
  var _iteratorNormalCompletion2 = true;
  var _didIteratorError2 = false;
  var _iteratorError2 = void 0;
  try {
    for (var _iterator2 = validateElement(appElement)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
      var el2 = _step2.value;
      el2.removeAttribute("aria-hidden");
    }
  } catch (err) {
    _didIteratorError2 = true;
    _iteratorError2 = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion2 && _iterator2.return) {
        _iterator2.return();
      }
    } finally {
      if (_didIteratorError2) {
        throw _iteratorError2;
      }
    }
  }
}
function documentNotReadyOrSSRTesting() {
  globalElement = null;
}
var classList = {};
Object.defineProperty(classList, "__esModule", {
  value: true
});
classList.resetState = resetState$2;
classList.log = log$2;
var htmlClassList = {};
var docBodyClassList = {};
function removeClass(at, cls) {
  at.classList.remove(cls);
}
function resetState$2() {
  var htmlElement = document.getElementsByTagName("html")[0];
  for (var cls in htmlClassList) {
    removeClass(htmlElement, htmlClassList[cls]);
  }
  var body = document.body;
  for (var _cls in docBodyClassList) {
    removeClass(body, docBodyClassList[_cls]);
  }
  htmlClassList = {};
  docBodyClassList = {};
}
function log$2() {
}
var incrementReference = function incrementReference2(poll, className) {
  if (!poll[className]) {
    poll[className] = 0;
  }
  poll[className] += 1;
  return className;
};
var decrementReference = function decrementReference2(poll, className) {
  if (poll[className]) {
    poll[className] -= 1;
  }
  return className;
};
var trackClass = function trackClass2(classListRef, poll, classes) {
  classes.forEach(function(className) {
    incrementReference(poll, className);
    classListRef.add(className);
  });
};
var untrackClass = function untrackClass2(classListRef, poll, classes) {
  classes.forEach(function(className) {
    decrementReference(poll, className);
    poll[className] === 0 && classListRef.remove(className);
  });
};
classList.add = function add(element, classString) {
  return trackClass(element.classList, element.nodeName.toLowerCase() == "html" ? htmlClassList : docBodyClassList, classString.split(" "));
};
classList.remove = function remove(element, classString) {
  return untrackClass(element.classList, element.nodeName.toLowerCase() == "html" ? htmlClassList : docBodyClassList, classString.split(" "));
};
var portalOpenInstances$1 = {};
Object.defineProperty(portalOpenInstances$1, "__esModule", {
  value: true
});
portalOpenInstances$1.log = log$1;
portalOpenInstances$1.resetState = resetState$1;
function _classCallCheck$2(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
var PortalOpenInstances = function PortalOpenInstances2() {
  var _this = this;
  _classCallCheck$2(this, PortalOpenInstances2);
  this.register = function(openInstance) {
    if (_this.openInstances.indexOf(openInstance) !== -1) {
      return;
    }
    _this.openInstances.push(openInstance);
    _this.emit("register");
  };
  this.deregister = function(openInstance) {
    var index2 = _this.openInstances.indexOf(openInstance);
    if (index2 === -1) {
      return;
    }
    _this.openInstances.splice(index2, 1);
    _this.emit("deregister");
  };
  this.subscribe = function(callback) {
    _this.subscribers.push(callback);
  };
  this.emit = function(eventType) {
    _this.subscribers.forEach(function(subscriber) {
      return subscriber(
        eventType,
        // shallow copy to avoid accidental mutation
        _this.openInstances.slice()
      );
    });
  };
  this.openInstances = [];
  this.subscribers = [];
};
var portalOpenInstances = new PortalOpenInstances();
function log$1() {
  console.log("portalOpenInstances ----------");
  console.log(portalOpenInstances.openInstances.length);
  portalOpenInstances.openInstances.forEach(function(p2) {
    return console.log(p2);
  });
  console.log("end portalOpenInstances ----------");
}
function resetState$1() {
  portalOpenInstances = new PortalOpenInstances();
}
portalOpenInstances$1.default = portalOpenInstances;
var bodyTrap$1 = {};
Object.defineProperty(bodyTrap$1, "__esModule", {
  value: true
});
bodyTrap$1.resetState = resetState;
bodyTrap$1.log = log;
var _portalOpenInstances = portalOpenInstances$1;
var _portalOpenInstances2 = _interopRequireDefault$1(_portalOpenInstances);
function _interopRequireDefault$1(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}
var before = void 0, after = void 0, instances = [];
function resetState() {
  var _arr = [before, after];
  for (var _i = 0; _i < _arr.length; _i++) {
    var item = _arr[_i];
    if (!item)
      continue;
    item.parentNode && item.parentNode.removeChild(item);
  }
  before = after = null;
  instances = [];
}
function log() {
  console.log("bodyTrap ----------");
  console.log(instances.length);
  var _arr2 = [before, after];
  for (var _i2 = 0; _i2 < _arr2.length; _i2++) {
    var item = _arr2[_i2];
    var check = item || {};
    console.log(check.nodeName, check.className, check.id);
  }
  console.log("edn bodyTrap ----------");
}
function focusContent() {
  if (instances.length === 0) {
    return;
  }
  instances[instances.length - 1].focusContent();
}
function bodyTrap(eventType, openInstances) {
  if (!before && !after) {
    before = document.createElement("div");
    before.setAttribute("data-react-modal-body-trap", "");
    before.style.position = "absolute";
    before.style.opacity = "0";
    before.setAttribute("tabindex", "0");
    before.addEventListener("focus", focusContent);
    after = before.cloneNode();
    after.addEventListener("focus", focusContent);
  }
  instances = openInstances;
  if (instances.length > 0) {
    if (document.body.firstChild !== before) {
      document.body.insertBefore(before, document.body.firstChild);
    }
    if (document.body.lastChild !== after) {
      document.body.appendChild(after);
    }
  } else {
    if (before.parentElement) {
      before.parentElement.removeChild(before);
    }
    if (after.parentElement) {
      after.parentElement.removeChild(after);
    }
  }
}
_portalOpenInstances2.default.subscribe(bodyTrap);
(function(module, exports) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _extends2 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(obj) {
    return typeof obj;
  } : function(obj) {
    return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  };
  var _createClass2 = function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  var _react3 = reactExports;
  var _propTypes3 = propTypesExports;
  var _propTypes22 = _interopRequireDefault2(_propTypes3);
  var _focusManager = focusManager;
  var focusManager$1 = _interopRequireWildcard2(_focusManager);
  var _scopeTab = scopeTabExports;
  var _scopeTab2 = _interopRequireDefault2(_scopeTab);
  var _ariaAppHider2 = ariaAppHider$1;
  var ariaAppHider2 = _interopRequireWildcard2(_ariaAppHider2);
  var _classList = classList;
  var classList$1 = _interopRequireWildcard2(_classList);
  var _safeHTMLElement3 = safeHTMLElement;
  var _safeHTMLElement22 = _interopRequireDefault2(_safeHTMLElement3);
  var _portalOpenInstances3 = portalOpenInstances$1;
  var _portalOpenInstances22 = _interopRequireDefault2(_portalOpenInstances3);
  function _interopRequireWildcard2(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj.default = obj;
      return newObj;
    }
  }
  function _interopRequireDefault2(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function _classCallCheck2(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn2(self2, call) {
    if (!self2) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self2;
  }
  function _inherits2(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var CLASS_NAMES = {
    overlay: "ReactModal__Overlay",
    content: "ReactModal__Content"
  };
  var isTabKey = function isTabKey2(event) {
    return event.code === "Tab" || event.keyCode === 9;
  };
  var isEscKey = function isEscKey2(event) {
    return event.code === "Escape" || event.keyCode === 27;
  };
  var ariaHiddenInstances = 0;
  var ModalPortal2 = function(_Component) {
    _inherits2(ModalPortal3, _Component);
    function ModalPortal3(props) {
      _classCallCheck2(this, ModalPortal3);
      var _this = _possibleConstructorReturn2(this, (ModalPortal3.__proto__ || Object.getPrototypeOf(ModalPortal3)).call(this, props));
      _this.setOverlayRef = function(overlay) {
        _this.overlay = overlay;
        _this.props.overlayRef && _this.props.overlayRef(overlay);
      };
      _this.setContentRef = function(content) {
        _this.content = content;
        _this.props.contentRef && _this.props.contentRef(content);
      };
      _this.afterClose = function() {
        var _this$props = _this.props, appElement = _this$props.appElement, ariaHideApp = _this$props.ariaHideApp, htmlOpenClassName = _this$props.htmlOpenClassName, bodyOpenClassName2 = _this$props.bodyOpenClassName, parentSelector2 = _this$props.parentSelector;
        var parentDocument = parentSelector2 && parentSelector2().ownerDocument || document;
        bodyOpenClassName2 && classList$1.remove(parentDocument.body, bodyOpenClassName2);
        htmlOpenClassName && classList$1.remove(parentDocument.getElementsByTagName("html")[0], htmlOpenClassName);
        if (ariaHideApp && ariaHiddenInstances > 0) {
          ariaHiddenInstances -= 1;
          if (ariaHiddenInstances === 0) {
            ariaAppHider2.show(appElement);
          }
        }
        if (_this.props.shouldFocusAfterRender) {
          if (_this.props.shouldReturnFocusAfterClose) {
            focusManager$1.returnFocus(_this.props.preventScroll);
            focusManager$1.teardownScopedFocus();
          } else {
            focusManager$1.popWithoutFocus();
          }
        }
        if (_this.props.onAfterClose) {
          _this.props.onAfterClose();
        }
        _portalOpenInstances22.default.deregister(_this);
      };
      _this.open = function() {
        _this.beforeOpen();
        if (_this.state.afterOpen && _this.state.beforeClose) {
          clearTimeout(_this.closeTimer);
          _this.setState({ beforeClose: false });
        } else {
          if (_this.props.shouldFocusAfterRender) {
            focusManager$1.setupScopedFocus(_this.node);
            focusManager$1.markForFocusLater();
          }
          _this.setState({ isOpen: true }, function() {
            _this.openAnimationFrame = requestAnimationFrame(function() {
              _this.setState({ afterOpen: true });
              if (_this.props.isOpen && _this.props.onAfterOpen) {
                _this.props.onAfterOpen({
                  overlayEl: _this.overlay,
                  contentEl: _this.content
                });
              }
            });
          });
        }
      };
      _this.close = function() {
        if (_this.props.closeTimeoutMS > 0) {
          _this.closeWithTimeout();
        } else {
          _this.closeWithoutTimeout();
        }
      };
      _this.focusContent = function() {
        return _this.content && !_this.contentHasFocus() && _this.content.focus({ preventScroll: true });
      };
      _this.closeWithTimeout = function() {
        var closesAt = Date.now() + _this.props.closeTimeoutMS;
        _this.setState({ beforeClose: true, closesAt }, function() {
          _this.closeTimer = setTimeout(_this.closeWithoutTimeout, _this.state.closesAt - Date.now());
        });
      };
      _this.closeWithoutTimeout = function() {
        _this.setState({
          beforeClose: false,
          isOpen: false,
          afterOpen: false,
          closesAt: null
        }, _this.afterClose);
      };
      _this.handleKeyDown = function(event) {
        if (isTabKey(event)) {
          (0, _scopeTab2.default)(_this.content, event);
        }
        if (_this.props.shouldCloseOnEsc && isEscKey(event)) {
          event.stopPropagation();
          _this.requestClose(event);
        }
      };
      _this.handleOverlayOnClick = function(event) {
        if (_this.shouldClose === null) {
          _this.shouldClose = true;
        }
        if (_this.shouldClose && _this.props.shouldCloseOnOverlayClick) {
          if (_this.ownerHandlesClose()) {
            _this.requestClose(event);
          } else {
            _this.focusContent();
          }
        }
        _this.shouldClose = null;
      };
      _this.handleContentOnMouseUp = function() {
        _this.shouldClose = false;
      };
      _this.handleOverlayOnMouseDown = function(event) {
        if (!_this.props.shouldCloseOnOverlayClick && event.target == _this.overlay) {
          event.preventDefault();
        }
      };
      _this.handleContentOnClick = function() {
        _this.shouldClose = false;
      };
      _this.handleContentOnMouseDown = function() {
        _this.shouldClose = false;
      };
      _this.requestClose = function(event) {
        return _this.ownerHandlesClose() && _this.props.onRequestClose(event);
      };
      _this.ownerHandlesClose = function() {
        return _this.props.onRequestClose;
      };
      _this.shouldBeClosed = function() {
        return !_this.state.isOpen && !_this.state.beforeClose;
      };
      _this.contentHasFocus = function() {
        return document.activeElement === _this.content || _this.content.contains(document.activeElement);
      };
      _this.buildClassName = function(which, additional) {
        var classNames = (typeof additional === "undefined" ? "undefined" : _typeof(additional)) === "object" ? additional : {
          base: CLASS_NAMES[which],
          afterOpen: CLASS_NAMES[which] + "--after-open",
          beforeClose: CLASS_NAMES[which] + "--before-close"
        };
        var className = classNames.base;
        if (_this.state.afterOpen) {
          className = className + " " + classNames.afterOpen;
        }
        if (_this.state.beforeClose) {
          className = className + " " + classNames.beforeClose;
        }
        return typeof additional === "string" && additional ? className + " " + additional : className;
      };
      _this.attributesFromObject = function(prefix, items) {
        return Object.keys(items).reduce(function(acc, name) {
          acc[prefix + "-" + name] = items[name];
          return acc;
        }, {});
      };
      _this.state = {
        afterOpen: false,
        beforeClose: false
      };
      _this.shouldClose = null;
      _this.moveFromContentToOverlay = null;
      return _this;
    }
    _createClass2(ModalPortal3, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        if (this.props.isOpen) {
          this.open();
        }
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps, prevState) {
        if (this.props.isOpen && !prevProps.isOpen) {
          this.open();
        } else if (!this.props.isOpen && prevProps.isOpen) {
          this.close();
        }
        if (this.props.shouldFocusAfterRender && this.state.isOpen && !prevState.isOpen) {
          this.focusContent();
        }
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        if (this.state.isOpen) {
          this.afterClose();
        }
        clearTimeout(this.closeTimer);
        cancelAnimationFrame(this.openAnimationFrame);
      }
    }, {
      key: "beforeOpen",
      value: function beforeOpen() {
        var _props = this.props, appElement = _props.appElement, ariaHideApp = _props.ariaHideApp, htmlOpenClassName = _props.htmlOpenClassName, bodyOpenClassName2 = _props.bodyOpenClassName, parentSelector2 = _props.parentSelector;
        var parentDocument = parentSelector2 && parentSelector2().ownerDocument || document;
        bodyOpenClassName2 && classList$1.add(parentDocument.body, bodyOpenClassName2);
        htmlOpenClassName && classList$1.add(parentDocument.getElementsByTagName("html")[0], htmlOpenClassName);
        if (ariaHideApp) {
          ariaHiddenInstances += 1;
          ariaAppHider2.hide(appElement);
        }
        _portalOpenInstances22.default.register(this);
      }
      // Don't steal focus from inner elements
    }, {
      key: "render",
      value: function render() {
        var _props2 = this.props, id2 = _props2.id, className = _props2.className, overlayClassName = _props2.overlayClassName, defaultStyles = _props2.defaultStyles, children = _props2.children;
        var contentStyles = className ? {} : defaultStyles.content;
        var overlayStyles = overlayClassName ? {} : defaultStyles.overlay;
        if (this.shouldBeClosed()) {
          return null;
        }
        var overlayProps = {
          ref: this.setOverlayRef,
          className: this.buildClassName("overlay", overlayClassName),
          style: _extends2({}, overlayStyles, this.props.style.overlay),
          onClick: this.handleOverlayOnClick,
          onMouseDown: this.handleOverlayOnMouseDown
        };
        var contentProps = _extends2({
          id: id2,
          ref: this.setContentRef,
          style: _extends2({}, contentStyles, this.props.style.content),
          className: this.buildClassName("content", className),
          tabIndex: "-1",
          onKeyDown: this.handleKeyDown,
          onMouseDown: this.handleContentOnMouseDown,
          onMouseUp: this.handleContentOnMouseUp,
          onClick: this.handleContentOnClick,
          role: this.props.role,
          "aria-label": this.props.contentLabel
        }, this.attributesFromObject("aria", _extends2({ modal: true }, this.props.aria)), this.attributesFromObject("data", this.props.data || {}), {
          "data-testid": this.props.testId
        });
        var contentElement2 = this.props.contentElement(contentProps, children);
        return this.props.overlayElement(overlayProps, contentElement2);
      }
    }]);
    return ModalPortal3;
  }(_react3.Component);
  ModalPortal2.defaultProps = {
    style: {
      overlay: {},
      content: {}
    },
    defaultStyles: {}
  };
  ModalPortal2.propTypes = {
    isOpen: _propTypes22.default.bool.isRequired,
    defaultStyles: _propTypes22.default.shape({
      content: _propTypes22.default.object,
      overlay: _propTypes22.default.object
    }),
    style: _propTypes22.default.shape({
      content: _propTypes22.default.object,
      overlay: _propTypes22.default.object
    }),
    className: _propTypes22.default.oneOfType([_propTypes22.default.string, _propTypes22.default.object]),
    overlayClassName: _propTypes22.default.oneOfType([_propTypes22.default.string, _propTypes22.default.object]),
    parentSelector: _propTypes22.default.func,
    bodyOpenClassName: _propTypes22.default.string,
    htmlOpenClassName: _propTypes22.default.string,
    ariaHideApp: _propTypes22.default.bool,
    appElement: _propTypes22.default.oneOfType([_propTypes22.default.instanceOf(_safeHTMLElement22.default), _propTypes22.default.instanceOf(_safeHTMLElement3.SafeHTMLCollection), _propTypes22.default.instanceOf(_safeHTMLElement3.SafeNodeList), _propTypes22.default.arrayOf(_propTypes22.default.instanceOf(_safeHTMLElement22.default))]),
    onAfterOpen: _propTypes22.default.func,
    onAfterClose: _propTypes22.default.func,
    onRequestClose: _propTypes22.default.func,
    closeTimeoutMS: _propTypes22.default.number,
    shouldFocusAfterRender: _propTypes22.default.bool,
    shouldCloseOnOverlayClick: _propTypes22.default.bool,
    shouldReturnFocusAfterClose: _propTypes22.default.bool,
    preventScroll: _propTypes22.default.bool,
    role: _propTypes22.default.string,
    contentLabel: _propTypes22.default.string,
    aria: _propTypes22.default.object,
    data: _propTypes22.default.object,
    children: _propTypes22.default.node,
    shouldCloseOnEsc: _propTypes22.default.bool,
    overlayRef: _propTypes22.default.func,
    contentRef: _propTypes22.default.func,
    id: _propTypes22.default.string,
    overlayElement: _propTypes22.default.func,
    contentElement: _propTypes22.default.func,
    testId: _propTypes22.default.string
  };
  exports.default = ModalPortal2;
  module.exports = exports["default"];
})(ModalPortal, ModalPortal.exports);
var ModalPortalExports = ModalPortal.exports;
function componentWillMount() {
  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);
  if (state !== null && state !== void 0) {
    this.setState(state);
  }
}
function componentWillReceiveProps(nextProps) {
  function updater(prevState) {
    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);
    return state !== null && state !== void 0 ? state : null;
  }
  this.setState(updater.bind(this));
}
function componentWillUpdate(nextProps, nextState) {
  try {
    var prevProps = this.props;
    var prevState = this.state;
    this.props = nextProps;
    this.state = nextState;
    this.__reactInternalSnapshotFlag = true;
    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(
      prevProps,
      prevState
    );
  } finally {
    this.props = prevProps;
    this.state = prevState;
  }
}
componentWillMount.__suppressDeprecationWarning = true;
componentWillReceiveProps.__suppressDeprecationWarning = true;
componentWillUpdate.__suppressDeprecationWarning = true;
function polyfill(Component) {
  var prototype = Component.prototype;
  if (!prototype || !prototype.isReactComponent) {
    throw new Error("Can only polyfill class components");
  }
  if (typeof Component.getDerivedStateFromProps !== "function" && typeof prototype.getSnapshotBeforeUpdate !== "function") {
    return Component;
  }
  var foundWillMountName = null;
  var foundWillReceivePropsName = null;
  var foundWillUpdateName = null;
  if (typeof prototype.componentWillMount === "function") {
    foundWillMountName = "componentWillMount";
  } else if (typeof prototype.UNSAFE_componentWillMount === "function") {
    foundWillMountName = "UNSAFE_componentWillMount";
  }
  if (typeof prototype.componentWillReceiveProps === "function") {
    foundWillReceivePropsName = "componentWillReceiveProps";
  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === "function") {
    foundWillReceivePropsName = "UNSAFE_componentWillReceiveProps";
  }
  if (typeof prototype.componentWillUpdate === "function") {
    foundWillUpdateName = "componentWillUpdate";
  } else if (typeof prototype.UNSAFE_componentWillUpdate === "function") {
    foundWillUpdateName = "UNSAFE_componentWillUpdate";
  }
  if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
    var componentName = Component.displayName || Component.name;
    var newApiName = typeof Component.getDerivedStateFromProps === "function" ? "getDerivedStateFromProps()" : "getSnapshotBeforeUpdate()";
    throw Error(
      "Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n" + componentName + " uses " + newApiName + " but also contains the following legacy lifecycles:" + (foundWillMountName !== null ? "\n  " + foundWillMountName : "") + (foundWillReceivePropsName !== null ? "\n  " + foundWillReceivePropsName : "") + (foundWillUpdateName !== null ? "\n  " + foundWillUpdateName : "") + "\n\nThe above lifecycles should be removed. Learn more about this warning here:\nhttps://fb.me/react-async-component-lifecycle-hooks"
    );
  }
  if (typeof Component.getDerivedStateFromProps === "function") {
    prototype.componentWillMount = componentWillMount;
    prototype.componentWillReceiveProps = componentWillReceiveProps;
  }
  if (typeof prototype.getSnapshotBeforeUpdate === "function") {
    if (typeof prototype.componentDidUpdate !== "function") {
      throw new Error(
        "Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype"
      );
    }
    prototype.componentWillUpdate = componentWillUpdate;
    var componentDidUpdate = prototype.componentDidUpdate;
    prototype.componentDidUpdate = function componentDidUpdatePolyfill(prevProps, prevState, maybeSnapshot) {
      var snapshot = this.__reactInternalSnapshotFlag ? this.__reactInternalSnapshot : maybeSnapshot;
      componentDidUpdate.call(this, prevProps, prevState, snapshot);
    };
  }
  return Component;
}
const reactLifecyclesCompat_es = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  polyfill
}, Symbol.toStringTag, { value: "Module" }));
const require$$6 = /* @__PURE__ */ getAugmentedNamespace(reactLifecyclesCompat_es);
Object.defineProperty(Modal$2, "__esModule", {
  value: true
});
Modal$2.bodyOpenClassName = Modal$2.portalClassName = void 0;
var _extends$1 = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var _createClass$1 = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
var _react = reactExports;
var _react2 = _interopRequireDefault(_react);
var _reactDom = reactDomExports;
var _reactDom2 = _interopRequireDefault(_reactDom);
var _propTypes = propTypesExports;
var _propTypes2 = _interopRequireDefault(_propTypes);
var _ModalPortal = ModalPortalExports;
var _ModalPortal2 = _interopRequireDefault(_ModalPortal);
var _ariaAppHider = ariaAppHider$1;
var ariaAppHider = _interopRequireWildcard(_ariaAppHider);
var _safeHTMLElement = safeHTMLElement;
var _safeHTMLElement2 = _interopRequireDefault(_safeHTMLElement);
var _reactLifecyclesCompat = require$$6;
function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  } else {
    var newObj = {};
    if (obj != null) {
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key))
          newObj[key] = obj[key];
      }
    }
    newObj.default = obj;
    return newObj;
  }
}
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}
function _classCallCheck$1(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn$1(self2, call) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call && (typeof call === "object" || typeof call === "function") ? call : self2;
}
function _inherits$1(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var portalClassName = Modal$2.portalClassName = "ReactModalPortal";
var bodyOpenClassName = Modal$2.bodyOpenClassName = "ReactModal__Body--open";
var isReact16 = _safeHTMLElement.canUseDOM && _reactDom2.default.createPortal !== void 0;
var createHTMLElement = function createHTMLElement2(name) {
  return document.createElement(name);
};
var getCreatePortal = function getCreatePortal2() {
  return isReact16 ? _reactDom2.default.createPortal : _reactDom2.default.unstable_renderSubtreeIntoContainer;
};
function getParentElement(parentSelector2) {
  return parentSelector2();
}
var Modal$1 = function(_Component) {
  _inherits$1(Modal2, _Component);
  function Modal2() {
    var _ref;
    var _temp, _this, _ret;
    _classCallCheck$1(this, Modal2);
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    return _ret = (_temp = (_this = _possibleConstructorReturn$1(this, (_ref = Modal2.__proto__ || Object.getPrototypeOf(Modal2)).call.apply(_ref, [this].concat(args))), _this), _this.removePortal = function() {
      !isReact16 && _reactDom2.default.unmountComponentAtNode(_this.node);
      var parent = getParentElement(_this.props.parentSelector);
      if (parent && parent.contains(_this.node)) {
        parent.removeChild(_this.node);
      } else {
        console.warn('React-Modal: "parentSelector" prop did not returned any DOM element. Make sure that the parent element is unmounted to avoid any memory leaks.');
      }
    }, _this.portalRef = function(ref) {
      _this.portal = ref;
    }, _this.renderPortal = function(props) {
      var createPortal = getCreatePortal();
      var portal = createPortal(_this, _react2.default.createElement(_ModalPortal2.default, _extends$1({ defaultStyles: Modal2.defaultStyles }, props)), _this.node);
      _this.portalRef(portal);
    }, _temp), _possibleConstructorReturn$1(_this, _ret);
  }
  _createClass$1(Modal2, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (!_safeHTMLElement.canUseDOM)
        return;
      if (!isReact16) {
        this.node = createHTMLElement("div");
      }
      this.node.className = this.props.portalClassName;
      var parent = getParentElement(this.props.parentSelector);
      parent.appendChild(this.node);
      !isReact16 && this.renderPortal(this.props);
    }
  }, {
    key: "getSnapshotBeforeUpdate",
    value: function getSnapshotBeforeUpdate(prevProps) {
      var prevParent = getParentElement(prevProps.parentSelector);
      var nextParent = getParentElement(this.props.parentSelector);
      return { prevParent, nextParent };
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps, _2, snapshot) {
      if (!_safeHTMLElement.canUseDOM)
        return;
      var _props = this.props, isOpen = _props.isOpen, portalClassName2 = _props.portalClassName;
      if (prevProps.portalClassName !== portalClassName2) {
        this.node.className = portalClassName2;
      }
      var prevParent = snapshot.prevParent, nextParent = snapshot.nextParent;
      if (nextParent !== prevParent) {
        prevParent.removeChild(this.node);
        nextParent.appendChild(this.node);
      }
      if (!prevProps.isOpen && !isOpen)
        return;
      !isReact16 && this.renderPortal(this.props);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (!_safeHTMLElement.canUseDOM || !this.node || !this.portal)
        return;
      var state = this.portal.state;
      var now = Date.now();
      var closesAt = state.isOpen && this.props.closeTimeoutMS && (state.closesAt || now + this.props.closeTimeoutMS);
      if (closesAt) {
        if (!state.beforeClose) {
          this.portal.closeWithTimeout();
        }
        setTimeout(this.removePortal, closesAt - now);
      } else {
        this.removePortal();
      }
    }
  }, {
    key: "render",
    value: function render() {
      if (!_safeHTMLElement.canUseDOM || !isReact16) {
        return null;
      }
      if (!this.node && isReact16) {
        this.node = createHTMLElement("div");
      }
      var createPortal = getCreatePortal();
      return createPortal(_react2.default.createElement(_ModalPortal2.default, _extends$1({
        ref: this.portalRef,
        defaultStyles: Modal2.defaultStyles
      }, this.props)), this.node);
    }
  }], [{
    key: "setAppElement",
    value: function setAppElement(element) {
      ariaAppHider.setElement(element);
    }
    /* eslint-disable react/no-unused-prop-types */
    /* eslint-enable react/no-unused-prop-types */
  }]);
  return Modal2;
}(_react.Component);
Modal$1.propTypes = {
  isOpen: _propTypes2.default.bool.isRequired,
  style: _propTypes2.default.shape({
    content: _propTypes2.default.object,
    overlay: _propTypes2.default.object
  }),
  portalClassName: _propTypes2.default.string,
  bodyOpenClassName: _propTypes2.default.string,
  htmlOpenClassName: _propTypes2.default.string,
  className: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.shape({
    base: _propTypes2.default.string.isRequired,
    afterOpen: _propTypes2.default.string.isRequired,
    beforeClose: _propTypes2.default.string.isRequired
  })]),
  overlayClassName: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.shape({
    base: _propTypes2.default.string.isRequired,
    afterOpen: _propTypes2.default.string.isRequired,
    beforeClose: _propTypes2.default.string.isRequired
  })]),
  appElement: _propTypes2.default.oneOfType([_propTypes2.default.instanceOf(_safeHTMLElement2.default), _propTypes2.default.instanceOf(_safeHTMLElement.SafeHTMLCollection), _propTypes2.default.instanceOf(_safeHTMLElement.SafeNodeList), _propTypes2.default.arrayOf(_propTypes2.default.instanceOf(_safeHTMLElement2.default))]),
  onAfterOpen: _propTypes2.default.func,
  onRequestClose: _propTypes2.default.func,
  closeTimeoutMS: _propTypes2.default.number,
  ariaHideApp: _propTypes2.default.bool,
  shouldFocusAfterRender: _propTypes2.default.bool,
  shouldCloseOnOverlayClick: _propTypes2.default.bool,
  shouldReturnFocusAfterClose: _propTypes2.default.bool,
  preventScroll: _propTypes2.default.bool,
  parentSelector: _propTypes2.default.func,
  aria: _propTypes2.default.object,
  data: _propTypes2.default.object,
  role: _propTypes2.default.string,
  contentLabel: _propTypes2.default.string,
  shouldCloseOnEsc: _propTypes2.default.bool,
  overlayRef: _propTypes2.default.func,
  contentRef: _propTypes2.default.func,
  id: _propTypes2.default.string,
  overlayElement: _propTypes2.default.func,
  contentElement: _propTypes2.default.func
};
Modal$1.defaultProps = {
  isOpen: false,
  portalClassName,
  bodyOpenClassName,
  role: "dialog",
  ariaHideApp: true,
  closeTimeoutMS: 0,
  shouldFocusAfterRender: true,
  shouldCloseOnEsc: true,
  shouldCloseOnOverlayClick: true,
  shouldReturnFocusAfterClose: true,
  preventScroll: false,
  parentSelector: function parentSelector() {
    return document.body;
  },
  overlayElement: function overlayElement(props, contentEl) {
    return _react2.default.createElement(
      "div",
      props,
      contentEl
    );
  },
  contentElement: function contentElement(props, children) {
    return _react2.default.createElement(
      "div",
      props,
      children
    );
  }
};
Modal$1.defaultStyles = {
  overlay: {
    position: "fixed",
    top: 0,
    left: 0,
    right: 0,
    bottom: 0,
    backgroundColor: "rgba(255, 255, 255, 0.75)"
  },
  content: {
    position: "absolute",
    top: "40px",
    left: "40px",
    right: "40px",
    bottom: "40px",
    border: "1px solid #ccc",
    background: "#fff",
    overflow: "auto",
    WebkitOverflowScrolling: "touch",
    borderRadius: "4px",
    outline: "none",
    padding: "20px"
  }
};
(0, _reactLifecyclesCompat.polyfill)(Modal$1);
Modal$2.default = Modal$1;
(function(module, exports) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _Modal = Modal$2;
  var _Modal2 = _interopRequireDefault2(_Modal);
  function _interopRequireDefault2(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  exports.default = _Modal2.default;
  module.exports = exports["default"];
})(lib, lib.exports);
var libExports = lib.exports;
const Modal = /* @__PURE__ */ getDefaultExportFromCjs(libExports);
const LANGS = [
  "Afrikaans",
  "Arabic",
  "Belarusian",
  "Bulgarian",
  "Catalan",
  "Chinese (Simplified)",
  "Chinese (Traditional)",
  "Croatian",
  "Czech",
  "Danish",
  "Dutch",
  "English",
  "Esperanto",
  "Estonian",
  "Finnish",
  "French",
  "German",
  "Greek (Modern)",
  "Hebrew",
  "Hungarian",
  "Italian",
  "Japanese",
  "Korean",
  "Latin",
  "Latvian",
  "Lithuanian",
  "Macedonian",
  "Norwegian Bokmål",
  "Polish",
  "Portuguese",
  "Romanian",
  "Russian",
  "Serbian",
  "Slovak",
  "Spanish",
  "Swedish",
  "Thai",
  "Turkish",
  "Ukrainian"
];
const LANGDEFS = {
  Afrikaans: {
    LgGlosbeKey: "af",
    LgGTransKey: "af",
    LgTextSize: 150,
    LgRegexpSplitSentences: "\\-\\'a-zA-ZÀ-ÖØ-öø-ȳЀ-ӹ",
    LgRegexpWordCharacters: ".!?:;",
    LgSplitEachChar: false,
    LgRemoveSpaces: false,
    LgRightToLeft: false
  },
  Arabic: {
    LgGlosbeKey: "ar",
    LgGTransKey: "ar",
    LgTextSize: 200,
    LgRegexpSplitSentences: "\\x{0600}-\\x{061A}\\x{0620}-\\x{06FF}\\x{0750}-\\x{077F}\\x{FB50}-\\x{FDFF}\\x{FE70}-\\x{FEFF}",
    LgRegexpWordCharacters: ".!?:;\\x{061B}\\x{061F}",
    LgSplitEachChar: false,
    LgRemoveSpaces: false,
    LgRightToLeft: true
  },
  Belarusian: {
    LgGlosbeKey: "be",
    LgGTransKey: "be",
    LgTextSize: 150,
    LgRegexpSplitSentences: "\\-\\'a-zA-ZÀ-ÖØ-öø-ȳЀ-ӹ",
    LgRegexpWordCharacters: ".!?:;",
    LgSplitEachChar: false,
    LgRemoveSpaces: false,
    LgRightToLeft: false
  },
  Bulgarian: {
    LgGlosbeKey: "bg",
    LgGTransKey: "bg",
    LgTextSize: 150,
    LgRegexpSplitSentences: "\\-\\'a-zA-ZÀ-ÖØ-öø-ȳЀ-ӹ",
    LgRegexpWordCharacters: ".!?:;",
    LgSplitEachChar: false,
    LgRemoveSpaces: false,
    LgRightToLeft: false
  },
  Catalan: {
    LgGlosbeKey: "ca",
    LgGTransKey: "ca",
    LgTextSize: 150,
    LgRegexpSplitSentences: "\\-\\'a-zA-ZÀ-ÖØ-öø-ȳЀ-ӹ",
    LgRegexpWordCharacters: ".!?:;",
    LgSplitEachChar: false,
    LgRemoveSpaces: false,
    LgRightToLeft: false
  },
  "Chinese (Simplified)": {
    LgGlosbeKey: "zh",
    LgGTransKey: "zh-CN",
    LgTextSize: 200,
    LgRegexpSplitSentences: "\\x{4E00}-\\x{9FFF}\\x{F900}-\\x{FAFF}",
    LgRegexpWordCharacters: ".!?:;。！？：；",
    LgSplitEachChar: true,
    LgRemoveSpaces: true,
    LgRightToLeft: false
  },
  "Chinese (Traditional)": {
    LgGlosbeKey: "zh",
    LgGTransKey: "zh-TW",
    LgTextSize: 200,
    LgRegexpSplitSentences: "\\x{4E00}-\\x{9FFF}\\x{F900}-\\x{FAFF}\\x{3100}-\\x{312F}",
    LgRegexpWordCharacters: ".!?:;。！？：；",
    LgSplitEachChar: true,
    LgRemoveSpaces: true,
    LgRightToLeft: false
  },
  Croatian: {
    LgGlosbeKey: "hr",
    LgGTransKey: "hr",
    LgTextSize: 150,
    LgRegexpSplitSentences: "\\-\\'a-zA-ZÀ-ÖØ-öø-ȳЀ-ӹ",
    LgRegexpWordCharacters: ".!?:;",
    LgSplitEachChar: false,
    LgRemoveSpaces: false,
    LgRightToLeft: false
  },
  Czech: {
    LgGlosbeKey: "cs",
    LgGTransKey: "cs",
    LgTextSize: 150,
    LgRegexpSplitSentences: "\\-\\'a-zA-ZÀ-ÖØ-öø-ȳЀ-ӹ",
    LgRegexpWordCharacters: ".!?:;",
    LgSplitEachChar: false,
    LgRemoveSpaces: false,
    LgRightToLeft: false
  },
  Danish: {
    LgGlosbeKey: "da",
    LgGTransKey: "da",
    LgTextSize: 150,
    LgRegexpSplitSentences: "\\-\\'a-zA-ZÀ-ÖØ-öø-ȳЀ-ӹ",
    LgRegexpWordCharacters: ".!?:;",
    LgSplitEachChar: false,
    LgRemoveSpaces: false,
    LgRightToLeft: false
  },
  Dutch: {
    LgGlosbeKey: "nl",
    LgGTransKey: "nl",
    LgTextSize: 150,
    LgRegexpSplitSentences: "\\-\\'a-zA-ZÀ-ÖØ-öø-ȳЀ-ӹ",
    LgRegexpWordCharacters: ".!?:;",
    LgSplitEachChar: false,
    LgRemoveSpaces: false,
    LgRightToLeft: false
  },
  English: {
    LgGlosbeKey: "en",
    LgGTransKey: "en",
    LgTextSize: 150,
    LgRegexpSplitSentences: "\\-\\'a-zA-ZÀ-ÖØ-öø-ȳЀ-ӹ",
    LgRegexpWordCharacters: ".!?:;",
    LgSplitEachChar: false,
    LgRemoveSpaces: false,
    LgRightToLeft: false
  },
  Esperanto: {
    LgGlosbeKey: "eo",
    LgGTransKey: "eo",
    LgTextSize: 150,
    LgRegexpSplitSentences: "\\-\\'a-zA-ZÀ-ÖØ-öø-ȳЀ-ӹ",
    LgRegexpWordCharacters: ".!?:;",
    LgSplitEachChar: false,
    LgRemoveSpaces: false,
    LgRightToLeft: false
  },
  Estonian: {
    LgGlosbeKey: "et",
    LgGTransKey: "et",
    LgTextSize: 150,
    LgRegexpSplitSentences: "\\-\\'a-zA-ZÀ-ÖØ-öø-ȳЀ-ӹ",
    LgRegexpWordCharacters: ".!?:;",
    LgSplitEachChar: false,
    LgRemoveSpaces: false,
    LgRightToLeft: false
  },
  Finnish: {
    LgGlosbeKey: "fi",
    LgGTransKey: "fi",
    LgTextSize: 150,
    LgRegexpSplitSentences: "\\-\\'a-zA-ZÀ-ÖØ-öø-ȳЀ-ӹ",
    LgRegexpWordCharacters: ".!?:;",
    LgSplitEachChar: false,
    LgRemoveSpaces: false,
    LgRightToLeft: false
  },
  French: {
    LgGlosbeKey: "fr",
    LgGTransKey: "fr",
    LgTextSize: 150,
    LgRegexpSplitSentences: "\\-\\'a-zA-ZÀ-ÖØ-öø-ȳЀ-ӹ",
    LgRegexpWordCharacters: ".!?:;",
    LgSplitEachChar: false,
    LgRemoveSpaces: false,
    LgRightToLeft: false
  },
  German: {
    LgGlosbeKey: "de",
    LgGTransKey: "de",
    LgTextSize: 150,
    LgRegexpSplitSentences: "\\-\\'a-zA-ZÀ-ÖØ-öø-ȳЀ-ӹ",
    LgRegexpWordCharacters: ".!?:;",
    LgSplitEachChar: false,
    LgRemoveSpaces: false,
    LgRightToLeft: false
  },
  "Greek (Modern)": {
    LgGlosbeKey: "el",
    LgGTransKey: "el",
    LgTextSize: 150,
    LgRegexpSplitSentences: "\\x{0370}-\\x{03FF}\\x{1F00}-\\x{1FFF}",
    LgRegexpWordCharacters: ".!?:;",
    LgSplitEachChar: false,
    LgRemoveSpaces: false,
    LgRightToLeft: false
  },
  Hebrew: {
    LgGlosbeKey: "he",
    LgGTransKey: "iw",
    LgTextSize: 200,
    LgRegexpSplitSentences: "\\x{0590}-\\x{05FF}",
    LgRegexpWordCharacters: ".!?:;",
    LgSplitEachChar: false,
    LgRemoveSpaces: false,
    LgRightToLeft: true
  },
  Hungarian: {
    LgGlosbeKey: "hu",
    LgGTransKey: "hu",
    LgTextSize: 150,
    LgRegexpSplitSentences: "\\-\\'a-zA-ZÀ-ÖØ-öø-ȳЀ-ӹ",
    LgRegexpWordCharacters: ".!?:;",
    LgSplitEachChar: false,
    LgRemoveSpaces: false,
    LgRightToLeft: false
  },
  Italian: {
    LgGlosbeKey: "it",
    LgGTransKey: "it",
    LgTextSize: 150,
    LgRegexpSplitSentences: "\\-\\'a-zA-ZÀ-ÖØ-öø-ȳЀ-ӹ",
    LgRegexpWordCharacters: ".!?:;",
    LgSplitEachChar: false,
    LgRemoveSpaces: false,
    LgRightToLeft: false
  },
  Japanese: {
    LgGlosbeKey: "ja",
    LgGTransKey: "ja",
    LgTextSize: 200,
    LgRegexpSplitSentences: "\\x{4E00}-\\x{9FFF}\\x{F900}-\\x{FAFF}\\x{3040}-\\x{30FF}\\x{31F0}-\\x{31FF}",
    LgRegexpWordCharacters: ".!?:;。！？：；",
    LgSplitEachChar: true,
    LgRemoveSpaces: true,
    LgRightToLeft: false
  },
  Korean: {
    LgGlosbeKey: "ko",
    LgGTransKey: "ko",
    LgTextSize: 200,
    LgRegexpSplitSentences: "\\x{4E00}-\\x{9FFF}\\x{F900}-\\x{FAFF}\\x{1100}-\\x{11FF}\\x{3130}-\\x{318F}\\x{AC00}-\\x{D7A0}",
    LgRegexpWordCharacters: ".!?:;。！？：；",
    LgSplitEachChar: false,
    LgRemoveSpaces: false,
    LgRightToLeft: false
  },
  Latin: {
    LgGlosbeKey: "la",
    LgGTransKey: "la",
    LgTextSize: 150,
    LgRegexpSplitSentences: "\\-\\'a-zA-ZÀ-ÖØ-öø-ȳЀ-ӹ",
    LgRegexpWordCharacters: ".!?:;",
    LgSplitEachChar: false,
    LgRemoveSpaces: false,
    LgRightToLeft: false
  },
  Latvian: {
    LgGlosbeKey: "lv",
    LgGTransKey: "lv",
    LgTextSize: 150,
    LgRegexpSplitSentences: "\\-\\'a-zA-ZÀ-ÖØ-öø-ȳЀ-ӹ",
    LgRegexpWordCharacters: ".!?:;",
    LgSplitEachChar: false,
    LgRemoveSpaces: false,
    LgRightToLeft: false
  },
  Lithuanian: {
    LgGlosbeKey: "lt",
    LgGTransKey: "lt",
    LgTextSize: 150,
    LgRegexpSplitSentences: "\\-\\'a-zA-ZÀ-ÖØ-öø-ȳЀ-ӹ",
    LgRegexpWordCharacters: ".!?:;",
    LgSplitEachChar: false,
    LgRemoveSpaces: false,
    LgRightToLeft: false
  },
  Macedonian: {
    LgGlosbeKey: "mk",
    LgGTransKey: "mk",
    LgTextSize: 150,
    LgRegexpSplitSentences: "\\-\\'a-zA-ZÀ-ÖØ-öø-ȳЀ-ӹ",
    LgRegexpWordCharacters: ".!?:;",
    LgSplitEachChar: false,
    LgRemoveSpaces: false,
    LgRightToLeft: false
  },
  "Norwegian Bokmål": {
    LgGlosbeKey: "nb",
    LgGTransKey: "no",
    LgTextSize: 150,
    LgRegexpSplitSentences: "\\-\\'a-zA-ZÀ-ÖØ-öø-ȳЀ-ӹ",
    LgRegexpWordCharacters: ".!?:;",
    LgSplitEachChar: false,
    LgRemoveSpaces: false,
    LgRightToLeft: false
  },
  Polish: {
    LgGlosbeKey: "pl",
    LgGTransKey: "pl",
    LgTextSize: 150,
    LgRegexpSplitSentences: "\\-\\'a-zA-ZÀ-ÖØ-öø-ȳЀ-ӹ",
    LgRegexpWordCharacters: ".!?:;",
    LgSplitEachChar: false,
    LgRemoveSpaces: false,
    LgRightToLeft: false
  },
  Portuguese: {
    LgGlosbeKey: "pt",
    LgGTransKey: "pt",
    LgTextSize: 150,
    LgRegexpSplitSentences: "\\-\\'a-zA-ZÀ-ÖØ-öø-ȳЀ-ӹ",
    LgRegexpWordCharacters: ".!?:;",
    LgSplitEachChar: false,
    LgRemoveSpaces: false,
    LgRightToLeft: false
  },
  Romanian: {
    LgGlosbeKey: "ro",
    LgGTransKey: "ro",
    LgTextSize: 150,
    LgRegexpSplitSentences: "\\-\\'a-zA-ZÀ-ÖØ-öø-ȳЀ-ӹ",
    LgRegexpWordCharacters: ".!?:;",
    LgSplitEachChar: false,
    LgRemoveSpaces: false,
    LgRightToLeft: false
  },
  Russian: {
    LgGlosbeKey: "ru",
    LgGTransKey: "ru",
    LgTextSize: 150,
    LgRegexpSplitSentences: "\\-\\'a-zA-ZÀ-ÖØ-öø-ȳЀ-ӹ",
    LgRegexpWordCharacters: ".!?:;",
    LgSplitEachChar: false,
    LgRemoveSpaces: false,
    LgRightToLeft: false
  },
  Serbian: {
    LgGlosbeKey: "sr",
    LgGTransKey: "sr",
    LgTextSize: 150,
    LgRegexpSplitSentences: "\\-\\'a-zA-ZÀ-ÖØ-öø-ȳЀ-ӹ",
    LgRegexpWordCharacters: ".!?:;",
    LgSplitEachChar: false,
    LgRemoveSpaces: false,
    LgRightToLeft: false
  },
  Slovak: {
    LgGlosbeKey: "sk",
    LgGTransKey: "sk",
    LgTextSize: 150,
    LgRegexpSplitSentences: "\\-\\'a-zA-ZÀ-ÖØ-öø-ȳЀ-ӹ",
    LgRegexpWordCharacters: ".!?:;",
    LgSplitEachChar: false,
    LgRemoveSpaces: false,
    LgRightToLeft: false
  },
  Spanish: {
    LgGlosbeKey: "es",
    LgGTransKey: "es",
    LgTextSize: 150,
    LgRegexpSplitSentences: "\\-\\'a-zA-ZÀ-ÖØ-öø-ȳЀ-ӹ",
    LgRegexpWordCharacters: ".!?:;",
    LgSplitEachChar: false,
    LgRemoveSpaces: false,
    LgRightToLeft: false
  },
  Swedish: {
    LgGlosbeKey: "sv",
    LgGTransKey: "sv",
    LgTextSize: 150,
    LgRegexpSplitSentences: "\\-\\'a-zA-ZÀ-ÖØ-öø-ȳЀ-ӹ",
    LgRegexpWordCharacters: ".!?:;",
    LgSplitEachChar: false,
    LgRemoveSpaces: false,
    LgRightToLeft: false
  },
  Thai: {
    LgGlosbeKey: "th",
    LgGTransKey: "th",
    LgTextSize: 200,
    LgRegexpSplitSentences: "\\x{0E00}-\\x{0E7F}",
    LgRegexpWordCharacters: ".!?:;",
    LgSplitEachChar: false,
    LgRemoveSpaces: false,
    LgRightToLeft: false
  },
  Turkish: {
    LgGlosbeKey: "tr",
    LgGTransKey: "tr",
    LgTextSize: 150,
    LgRegexpSplitSentences: "\\-\\'a-zA-ZÀ-ÖØ-öø-ȳЀ-ӹ",
    LgRegexpWordCharacters: ".!?:;",
    LgSplitEachChar: false,
    LgRemoveSpaces: false,
    LgRightToLeft: false
  },
  Ukrainian: {
    LgGlosbeKey: "uk",
    LgGTransKey: "uk",
    LgTextSize: 150,
    LgRegexpSplitSentences: "\\-\\'a-zA-ZÀ-ÖØ-öø-ȳЀ-ӹ",
    LgRegexpWordCharacters: ".!?:;",
    LgSplitEachChar: false,
    LgRemoveSpaces: false,
    LgRightToLeft: false
  }
};
function wizard_go(refL1, refL2, onSuccess) {
  const l1 = refL1.current?.value;
  const l2 = refL2.current?.value;
  if (l1 === void 0 || l2 === void 0) {
    throw new Error("Undefined refs");
  }
  if (l1 == "") {
    alert("Please choose your native language (L1)!");
    return;
  }
  if (l2 == "") {
    alert("Please choose your language you want to read/study (L2)!");
    return;
  }
  if (l2 == l1) {
    alert("L1 L2 Languages must not be equal!");
    return;
  }
  onSuccess(l1, l2);
}
function NewLanguageWizard({
  onSuccess,
  onExit
}) {
  const refL1 = reactExports.useRef();
  const refL2 = reactExports.useRef();
  return /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "center", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("p", { className: "wizard", children: /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "wizard", title: "Language Settings Wizard" }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("h3", { className: "wizard", children: "Language Settings Wizard" }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("p", { className: "wizard", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "My Native language is:" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
      "L1:",
      /* @__PURE__ */ jsxRuntimeExports.jsxs("select", { ref: refL1, name: "l1", id: "l1", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "", children: "[Choose...]" }),
        LANGS.map((lang) => {
          return /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: lang, children: lang });
        })
      ] })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("p", { className: "wizard", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "I want to study:" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
      "L2:",
      /* @__PURE__ */ jsxRuntimeExports.jsxs("select", { name: "l2", id: "l2", ref: refL2, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "", selected: true, children: "[Choose...]" }),
        LANGS.map((lang) => {
          return /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: lang, children: lang });
        })
      ] })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("p", { className: "wizard", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
      "input",
      {
        type: "button",
        style: { fontSize: "1.1em" },
        value: "Set Language Settings",
        onClick: () => wizard_go(refL1, refL2, onSuccess)
      }
    ) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("p", { className: "wizard", children: /* @__PURE__ */ jsxRuntimeExports.jsx("input", { type: "button", value: "Cancel", onClick: () => onExit() }) })
  ] }) });
}
const languagePreValidateMap = {
  LgTextSize: parseNumMap,
  LgRemoveSpaces: parseNumMap,
  LgSplitEachChar: parseNumMap,
  LgRightToLeft: parseNumMap,
  LgDict2URI: emptyToNullMap
};
function TextSizeSelect({
  refMap,
  entryKey,
  defaultValue = 100
}) {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(
    "select",
    {
      name: entryKey,
      className: "notempty",
      ref: refMap[entryKey],
      defaultValue,
      children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "100", children: "100 %" }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "150", children: "150 %" }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "200", children: "200 %" }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "250", children: "250 %" })
      ]
    }
  );
}
function oewin(url) {
  window.open(
    url,
    "editwin",
    "width=800, height=600, scrollbars=yes, menubar=no, resizable=yes, status=no"
  );
}
function EditLanguage({ chgID }) {
  const [{ languages: languages2 }] = useData(["languages"]);
  const changingLang = languages2.find(({ LgID }) => {
    return LgID === chgID;
  });
  if (!changingLang) {
    throw new Error("Invalid Change ID!");
  }
  const validator = LanguagesValidator;
  const navigator2 = useInternalNavigate();
  const refMap = RefMap(validator);
  const LgInput = buildFormInput(refMap, changingLang);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(Header, { title: "TODO" }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("h4", { children: [
      "Edit Language",
      /* @__PURE__ */ jsxRuntimeExports.jsx("a", { target: "_blank", href: "info.htm#howtolang", children: /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "question-frame", title: "Help" }) })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("form", { className: "validate", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(LgInput, { type: "hidden", entryKey: "LgID", fixed: true }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("table", { className: "tab1", cellSpacing: 0, cellPadding: 5, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: 'Study Language "L2":' }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1", children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              LgInput,
              {
                type: "text",
                className: "notempty setfocus checkoutsidebmp",
                entryKey: "LgName",
                maxLength: 40,
                size: 40,
                default: true
              }
            ),
            /* @__PURE__ */ jsxRuntimeExports.jsx(RequiredLineButton, {})
          ] })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Dictionary 1 URI:" }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1", children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              LgInput,
              {
                type: "text",
                className: "notempty checkdicturl checkoutsidebmp",
                entryKey: "LgDict1URI",
                default: true,
                maxLength: 200,
                size: 60
              }
            ),
            /* @__PURE__ */ jsxRuntimeExports.jsx(RequiredLineButton, {})
          ] })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Dictionary 2 URI:" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
            LgInput,
            {
              type: "text",
              className: "checkdicturl checkoutsidebmp",
              entryKey: "LgDict2URI",
              default: true,
              maxLength: 200,
              size: 60
            }
          ) })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "GoogleTranslate URI:" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
            LgInput,
            {
              default: true,
              type: "text",
              className: "checkdicturl checkoutsidebmp",
              entryKey: "LgGoogleTranslateURI",
              maxLength: 200,
              size: 60
            }
          ) })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Text Size:" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: /* @__PURE__ */ jsxRuntimeExports.jsx(TextSizeSelect, { entryKey: "LgTextSize", refMap }) })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Character Substitutions:" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
            LgInput,
            {
              type: "text",
              className: "checkoutsidebmp",
              entryKey: "LgCharacterSubstitutions",
              default: true,
              maxLength: 500,
              size: 60
            }
          ) })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "RegExp Split Sentences:" }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1", children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              LgInput,
              {
                type: "text",
                className: "notempty checkoutsidebmp",
                entryKey: "LgRegexpSplitSentences",
                default: true,
                maxLength: 500,
                size: 60
              }
            ),
            /* @__PURE__ */ jsxRuntimeExports.jsx(RequiredLineButton, {})
          ] })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Exceptions Split Sentences:" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
            LgInput,
            {
              type: "text",
              className: "checkoutsidebmp",
              entryKey: "LgExceptionsSplitSentences",
              default: true,
              maxLength: 500,
              size: 60
            }
          ) })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "RegExp Word Characters:" }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1", children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              LgInput,
              {
                type: "text",
                className: "notempty checkoutsidebmp",
                entryKey: "LgRegexpWordCharacters",
                default: true,
                maxLength: 500,
                size: 60
              }
            ),
            /* @__PURE__ */ jsxRuntimeExports.jsx(RequiredLineButton, {})
          ] })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Make each character a word:" }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1", children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              SelectBoolean,
              {
                selKey: "LgSplitEachChar",
                entry: changingLang,
                refMap
              }
            ),
            "(e.g. for Chinese, Japanese, etc.)"
          ] })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Remove spaces:" }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1", children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              SelectBoolean,
              {
                selKey: "LgRemoveSpaces",
                entry: changingLang,
                refMap
              }
            ),
            "(e.g. for Chinese, Japanese, etc.)"
          ] })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Right-To-Left Script:" }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1", children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              SelectBoolean,
              {
                selKey: "LgRightToLeft",
                entry: changingLang,
                refMap
              }
            ),
            "(e.g. for Arabic, Hebrew, Farsi, Urdu, etc.)"
          ] })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 right", children: [
            "Export Template",
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              Icon,
              {
                src: "question-frame",
                title: "Help",
                className: "click",
                onClick: () => {
                  oewin("info_export_template.htm");
                }
              }
            ),
            ":"
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
            LgInput,
            {
              type: "text",
              className: "checkoutsidebmp",
              entryKey: "LgExportTemplate",
              default: true,
              maxLength: 1e3,
              size: 60
            }
          ) })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("tr", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 right", colSpan: 2, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "input",
            {
              type: "button",
              value: "Cancel",
              onClick: () => {
                navigator2("/edit_languages");
              }
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "input",
            {
              type: "button",
              value: "Change",
              onClick: () => {
                CheckAndSubmit(
                  refMap,
                  languagePreValidateMap,
                  validator,
                  (value) => {
                    dataService.editLanguage(chgID, value);
                    navigator2("/edit_words");
                  }
                );
              }
            }
          )
        ] }) })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("p", { className: "smallgray", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "Warning:" }),
        " Changing certain language settings (e.g. RegExp Word Characters, etc.)",
        /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
        "may cause partial or complete loss of improved annotated texts!"
      ] })
    ] })
  ] });
}
function SelectBoolean({
  entry,
  selKey,
  refMap
}) {
  const entryVal = entry[selKey];
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("select", { ref: refMap[selKey], name: selKey, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: 0, selected: entryVal === 0, children: "No" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: 1, selected: entryVal === 1, children: "Yes" })
  ] });
}
function DisplayTags({
  query,
  currentPage
}) {
  const [{ tags: tags3, settings: settings2 }] = useData(["tags", "settings"]);
  const navigate = useInternalNavigate();
  const tagCount = tags3.length;
  const recno = tags3.length;
  const pageSize = settings2["set-tags-per-page"] || 1;
  const { dataOnPage, numPages } = usePager(tags3, currentPage, pageSize);
  const { checkboxPropsForEntry, selectedValues, onSelectAll, onSelectNone } = useSelection(tags3, "TgID");
  const queryRef = reactExports.useRef(null);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(Header, { title: "Word Tags" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("p", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs(A, { href: "/edit_tags?new=1", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "plus-button", title: "New" }),
      " New Term Tag ..."
    ] }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("form", { name: "form1", children: /* @__PURE__ */ jsxRuntimeExports.jsxs("table", { className: "tab1", cellSpacing: 0, cellPadding: 5, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("tr", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1", colSpan: 4, children: [
        "Filter ",
        /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "funnel", title: "Filter" }),
        " ",
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          NavigateButton,
          {
            value: "Reset All",
            navigateTo: `/edit_tags?page=${1}`
          }
        )
      ] }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("tr", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center", colSpan: 4, children: [
        "Tag Text or Comment:",
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "input",
          {
            type: "text",
            name: "query",
            ref: queryRef,
            value: query,
            maxLength: 50,
            size: 15
          }
        ),
        " ",
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "input",
          {
            type: "button",
            name: "querybutton",
            value: "Filter",
            onClick: () => {
              navigate(
                `/edit_tags?page=1&query=${queryRef.current?.value || ""}`
              );
            }
          }
        ),
        " ",
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "input",
          {
            type: "button",
            value: "Clear",
            onClick: () => {
              navigate(`/edit_tags?page=${1}&query=`);
            }
          }
        )
      ] }) })
    ] }) }),
    recno === 0 ? /* @__PURE__ */ jsxRuntimeExports.jsx("p", { children: "No tags found." }) : /* @__PURE__ */ jsxRuntimeExports.jsxs(
      "form",
      {
        name: "form2",
        action: "<?php echo _SERVER['PHP_SELF']; ?>",
        method: "post",
        children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("input", { type: "hidden", name: "data", value: "" }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("table", { className: "tab1", cellSpacing: 0, cellPadding: 5, children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("tr", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1 center", colSpan: 2, children: [
              "Multi Actions ",
              /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "lightning", title: "Multi Actions" })
            ] }) }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("tr", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center", colSpan: 2, children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "ALL" }),
              " ",
              dataOnPage.length,
              " ",
              dataOnPage.length === 1 ? "Tag" : "Tags",
              /* @__PURE__ */ jsxRuntimeExports.jsx(
                "select",
                {
                  name: "allaction",
                  disabled: false,
                  onChange: "allActionGo(document.form2, document.form2.allaction,<?php echo recno; ?>);",
                  children: /* @__PURE__ */ jsxRuntimeExports.jsx(GetAllTagsActionsSelectOptions, {})
                }
              )
            ] }) }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
              /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center", children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("input", { type: "button", value: "Mark All", onClick: onSelectAll }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("input", { type: "button", value: "Mark None", onClick: onSelectNone })
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center", children: [
                "Marked Tags: ",
                /* @__PURE__ */ jsxRuntimeExports.jsx(
                  "select",
                  {
                    name: "markaction",
                    id: "markaction",
                    disabled: selectedValues.size === 0,
                    onChange: (val) => {
                      multiActionGo(
                        () => {
                        },
                        // TODO ref
                        val
                      );
                    },
                    children: /* @__PURE__ */ jsxRuntimeExports.jsx(GetMultipleTagsActionsSelectOptions, {})
                  }
                )
              ] })
            ] })
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("table", { className: "sortable tab1", cellSpacing: 0, cellPadding: 5, children: [
            /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1 sorttable_nosort", children: "Mark" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1 sorttable_nosort", children: "Actions" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1 clickable", children: "Tag Text" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1 clickable", children: "Tag Comment" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1 clickable", children: "Terms With Tag" })
            ] }),
            dataOnPage.map((tag) => {
              return /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx(A, { name: "rec' . record['TgID'] . '", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                  "input",
                  {
                    name: "marked[]",
                    type: "checkbox",
                    ...checkboxPropsForEntry(tag),
                    className: "markcheck",
                    value: "' . record['TgID'] . '"
                  }
                ) }) }),
                /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center", style: { whiteSpace: "nowrap" }, children: [
                  " ",
                  /* @__PURE__ */ jsxRuntimeExports.jsx(A, { href: `/edit_tags?chg=${tag.TgID}`, children: /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "document--pencil", title: "Edit" }) }),
                  " ",
                  /* @__PURE__ */ jsxRuntimeExports.jsx(
                    Icon,
                    {
                      onClick: () => {
                        if (confirmDelete()) {
                          dataService.deleteTermTag(tag.TgID);
                        }
                      },
                      src: "minus-button",
                      title: "Delete"
                    }
                  ),
                  " "
                ] }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: tag.TgText }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: tag.TgComment }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: tagCount > 0 ? /* @__PURE__ */ jsxRuntimeExports.jsx(A, { href: `/edit_words?tag1=${tag.TgID}`, children: tagCount }) : "0" })
              ] });
            })
          ] })
        ]
      }
    ),
    numPages > 1 && /* @__PURE__ */ jsxRuntimeExports.jsx("form", { name: "form3", action: "#", children: /* @__PURE__ */ jsxRuntimeExports.jsx("table", { className: "tab1", cellSpacing: 0, cellPadding: 5, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1", style: { whiteSpace: "nowrap" }, children: [
        "Tag",
        recno == 1 ? "" : "s"
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1", style: { whiteSpace: "nowrap" } })
    ] }) }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(Pager, { currentPage, numPages })
  ] });
}
function NewTag() {
  const preValidateMap = {
    TgText: identityMap,
    TgComment: emptyToNullMap
  };
  const validator = TagsValidator;
  const refMap = RefMap(validator);
  const navigator2 = useInternalNavigate();
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(Header, { title: "My Term Tags" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("h4", { children: "New Tag" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "form",
      {
        name: "newtag",
        className: "validate",
        action: "<?php echo $_SERVER['PHP_SELF']; ?>",
        method: "post",
        children: /* @__PURE__ */ jsxRuntimeExports.jsxs("table", { className: "tab3", cellSpacing: 0, cellPadding: 5, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Tag:" }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1", children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx(
                FormInput,
                {
                  className: "notempty setfocus noblanksnocomma checkoutsidebmp",
                  type: "text",
                  entryKey: "TgText",
                  refMap,
                  maxLength: 20,
                  size: 20
                }
              ),
              /* @__PURE__ */ jsxRuntimeExports.jsx(RequiredLineButton, {})
            ] })
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Comment:" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
              "textarea",
              {
                className: "textarea-noreturn checklength checkoutsidebmp",
                maxLength: 200,
                ref: refMap.TgComment,
                name: "TgComment",
                cols: 40,
                rows: 3
              }
            ) })
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("tr", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 right", colSpan: 2, children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              "input",
              {
                type: "button",
                value: "Cancel",
                onClick: () => {
                  navigator2("/edit_tags");
                }
              }
            ),
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              "input",
              {
                type: "button",
                name: "op",
                value: "Save",
                onClick: () => {
                  CheckAndSubmit(
                    refMap,
                    preValidateMap,
                    validator,
                    (value) => {
                      dataService.addTag(value);
                      navigator2("/edit_tags");
                    },
                    "TgID"
                  );
                }
              }
            )
          ] }) })
        ] })
      }
    )
  ] });
}
function EditTag({ chgId }) {
  const [{ tags: tags3 }] = useData(["tags"]);
  const changingTag = tags3.find(({ TgID }) => {
    return TgID === chgId;
  });
  if (!changingTag) {
    throw new Error("Invalid Tag ID");
  }
  const preValidateMap = {
    TgText: identityMap,
    TgComment: emptyToNullMap
  };
  const validator = TagsValidator;
  const refMap = RefMap(validator);
  const navigator2 = useInternalNavigate();
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(Header, { title: "My Term Tags" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("h4", { children: "Edit Tag" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "form",
      {
        name: "newtag",
        className: "validate",
        method: "post",
        children: /* @__PURE__ */ jsxRuntimeExports.jsxs("table", { className: "tab3", cellSpacing: 0, cellPadding: 5, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Tag:" }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1", children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx(
                FormInput,
                {
                  className: "notempty setfocus noblanksnocomma checkoutsidebmp",
                  type: "text",
                  entryKey: "TgText",
                  defaultEntry: changingTag,
                  refMap,
                  maxLength: 20,
                  size: 20
                }
              ),
              /* @__PURE__ */ jsxRuntimeExports.jsx(RequiredLineButton, {})
            ] })
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Comment:" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
              "textarea",
              {
                className: "textarea-noreturn checklength checkoutsidebmp",
                maxLength: 200,
                ref: refMap.TgComment,
                name: "TgComment",
                cols: 40,
                defaultValue: changingTag.TgComment,
                rows: 3
              }
            ) })
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("tr", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 right", colSpan: 2, children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              "input",
              {
                type: "button",
                value: "Cancel",
                onClick: () => {
                  navigator2("/edit_tags");
                }
              }
            ),
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              "input",
              {
                type: "button",
                name: "op",
                value: "Save",
                onClick: () => {
                  CheckAndSubmit(
                    refMap,
                    preValidateMap,
                    validator,
                    (value) => {
                      dataService.editTag(changingTag.TgID, value);
                      navigator2("/edit_tags");
                    },
                    "TgID"
                  );
                }
              }
            )
          ] }) })
        ] })
      }
    )
  ] });
}
function InfoPage() {
  return /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("body", { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs(
      "div",
      {
        id: "floatdiv",
        style: {
          position: "absolute",
          width: "auto",
          height: "auto",
          top: "44633.8px",
          padding: "5px",
          background: "rgb(221, 221, 221)",
          border: "1px solid rgb(136, 136, 136)",
          zIndex: 100,
          fontSize: "10pt",
          textAlign: "center",
          left: "421px"
        },
        children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#", children: "↑ TOP ↑" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#preface", children: "Preface" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#current", children: "Curr. Version " }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#links", children: "Links" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#abstract", children: "Abstract" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#features", children: "Features" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#restrictions", children: "Restrictions" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#license", children: "(Un-) License" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#disclaimer", children: "Disclaimer" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#install", children: "Installation" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#learn", children: "How to learn" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#howto", children: "How to use" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#faq", children: "Q & A" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#ipad", children: "Setup Tablets" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#ipad", children: "Lang. Setup" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#termscores", children: "Term Scores" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#keybind", children: "Key Bindings" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#history", children: "Changelog" })
        ]
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx("script", { type: "text/javascript" }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { style: { marginRight: "100px" }, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("h4", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs(A, { href: "/", target: "_top", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "img",
            {
              src: "img/lwt_icon_big.png",
              className: "lwtlogoright",
              alt: "Logo"
            }
          ),
          "Learning with Texts"
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
        /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "bigger", children: "Help/Information" })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("p", { className: "inline", children: [
        "Jump to topic:",
        /* @__PURE__ */ jsxRuntimeExports.jsxs(
          "select",
          {
            id: "topicjump",
            onChange: "{var qm = document.getElementById('topicjump'); var val=qm.options[qm.selectedIndex].value; qm.selectedIndex=0; if (val != '') { location.href = '#' + val;}}",
            children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "", selected: true, children: "[Select...]" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "preface", children: "Preface" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "current", children: "Current Version" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "links", children: "Links" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "abstract", children: "Abstract" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "features", children: "Features" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "restrictions", children: "Restrictions" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "license", children: "(Un-) License" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "disclaimer", children: "Disclaimer" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "install", children: "Installation" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "learn", children: "How to learn" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "howto", children: "How to use" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "faq", children: "Questions and Answers" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "ipad", children: "Setup for Tablets" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "langsetup", children: "Language Setup" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "termscores", children: "Term Scores" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "keybind", children: "Key Bindings" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "history", children: "Changelog" })
            ]
          }
        )
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("dl", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("dt", { children: [
          "▶",
          /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("a", { name: "preface", id: "preface", children: "Preface" }) }),
          "- ",
          /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#", children: "[↑]" })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("dd", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("ul", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: "I started this software application in 2010 as a hobby project for my personal learning (reading & listening to foreign texts, saving & reviewing new words and expressions)." }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: "In June 2011, I decided to publish the software in the hope that it will be useful to other language learners around the world." }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: "The software is 100 % free, open source, and in the public domain. You may do with it what you like: use it, improve it, change it, publish an improved version, even use it within a commercial product." }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: "English is not my mother tongue - so please forgive me any mistakes." }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: 'A piece of software will be never completely free of "bugs" - please inform me of any problem you will encounter. Your feedback and ideas are always welcome.' }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: "My programming style is quite chaotic, and my software is mostly undocumented. This will annoy people with much better programming habits than mine, but please bear in mind that LWT is a one-man hobby project and completely free." }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: "Thank you for your attention. I hope you will enjoy this application as I do every day." })
        ] }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("dt", { children: [
          "▶",
          /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("a", { name: "current", id: "current", children: "Current Version" }) }),
          "- ",
          /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#", children: "[↑]" })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("dd", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("ul", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            "The current version is ",
            /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "2.0.3" }),
            " (February 15 2022)."
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#history", children: "View the Changelog." }) })
        ] }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("dt", { children: [
          "▶",
          /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("a", { name: "links", id: "links", children: "Important Links" }) }),
          "- ",
          /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#", children: "[↑]" })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("dd", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("ul", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs(
            "a",
            {
              href: "http://sourceforge.net/projects/learning-with-texts/",
              target: "_blank",
              children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "Project Page" }),
                " @ Sourceforge"
              ]
            }
          ) }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsxs(
              "a",
              {
                href: "http://sourceforge.net/projects/learning-with-texts/files/",
                target: "_blank",
                children: [
                  /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "Download Page" }),
                  " @ Sourceforge"
                ]
              }
            ),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsxs(
              "a",
              {
                href: "http://sourceforge.net/projects/lwt/forums/forum/1813497",
                target: "_blank",
                children: [
                  /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "Help Forum" }),
                  " @ Sourceforge"
                ]
              }
            ),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "LWT Online Demo" }),
            " - ",
            /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "try it out:" }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("ul", { children: [
              /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "General Hints:" }),
                /* @__PURE__ */ jsxRuntimeExports.jsxs("ul", { children: [
                  /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: "Do not use for productive work!!" }),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: "Your data may be deleted at any time by other users!!" }),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: "Only one LWT table set is available - the multiple table set feature has been deactivated." }),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: 'You may "reset" the demo by going to "Backup/Restore", and by clicking on "Install LWT Demo Database".' })
                ] })
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                "a",
                {
                  href: "https://learning-with-texts.sourceforge.io/testdb/index",
                  target: "_blank",
                  children: /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "START ONLINE DEMO" })
                }
              ) })
            ] }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "LWT Reviews and Blog Posts" }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("ul", { children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                "a",
                {
                  href: "https://www.mezzoguild.com/how-to-install-learning-with-texts-lwt/",
                  target: "_blank",
                  children: "The Mezzofanti Guild: How To Install Learning With Texts On Your Own Computer"
                }
              ) }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
                "Street-Smart Language Learning™: Using Learning with Texts with Anki 2 (in five parts):",
                /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                "Part",
                /* @__PURE__ */ jsxRuntimeExports.jsx(
                  "a",
                  {
                    href: "http://www.streetsmartlanguagelearning.com/2012/12/using-learning-with-texts-with-anki-2.html",
                    target: "_blank",
                    children: "1"
                  }
                ),
                "/",
                /* @__PURE__ */ jsxRuntimeExports.jsx(
                  "a",
                  {
                    href: "http://www.streetsmartlanguagelearning.com/2013/01/using-learning-with-texts-with-anki-2.html",
                    target: "_blank",
                    children: "2"
                  }
                ),
                "/",
                /* @__PURE__ */ jsxRuntimeExports.jsx(
                  "a",
                  {
                    href: "http://www.streetsmartlanguagelearning.com/2013/01/using-learning-with-texts-with-anki-2_8.html",
                    target: "_blank",
                    children: "3"
                  }
                ),
                "/",
                /* @__PURE__ */ jsxRuntimeExports.jsx(
                  "a",
                  {
                    href: "http://www.streetsmartlanguagelearning.com/2013/01/using-learning-with-texts-with-anki-2_15.html",
                    target: "_blank",
                    children: "4"
                  }
                ),
                "/",
                /* @__PURE__ */ jsxRuntimeExports.jsx(
                  "a",
                  {
                    href: "http://www.streetsmartlanguagelearning.com/2013/01/using-learning-with-texts-with-anki-2_21.html",
                    target: "_blank",
                    children: "5"
                  }
                )
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                "a",
                {
                  href: "https://diyclassics.com/2014/04/11/learning-with-texts-for-classical-languages/",
                  target: "_blank",
                  children: "Learning with Texts for classical languages"
                }
              ) }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                "a",
                {
                  href: "http://chicagoseoul.wordpress.com/2011/07/19/learning-with-texts/",
                  target: "_blank",
                  children: "Chicagoseoul's Blog: Learning with Texts"
                }
              ) }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                "a",
                {
                  href: "http://mikotoneko.wordpress.com/2012/03/09/lwtp1/",
                  target: "_blank",
                  children: "Mikoto's Adventures in Japanese: LWT - Learning With Text Introduction"
                }
              ) }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                "a",
                {
                  href: "http://mikotoneko.wordpress.com/2012/03/13/lwt-a-guide-to-setting-up-for-japanese-learning/",
                  target: "_blank",
                  children: "Mikoto's Adventures in Japanese: LWT - A Guide to Setting up for Japanese Learning"
                }
              ) }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                "a",
                {
                  href: "http://mikotoneko.wordpress.com/2012/04/06/lwt-tricks-of-the-trade/",
                  target: "_blank",
                  children: "Mikoto's Adventures in Japanese: LWT - Tricks of the Trade"
                }
              ) }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                "a",
                {
                  href: "http://mikotoneko.wordpress.com/2012/04/17/lwt-daniels-guide-for-japanese-useage/",
                  target: "_blank",
                  children: "Mikoto's Adventures in Japanese: LWT - Daniel’s Guide for Japanese Usage"
                }
              ) }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                "a",
                {
                  target: "_blank",
                  href: "http://www.youtube.com/watch?v=QSLPOATWAU4",
                  children: "Video about Learning With Texts from Language Vlogger FluentCzech"
                }
              ) }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx(
                  "a",
                  {
                    href: "http://www.fluentin3months.com/learning-with-texts/",
                    target: "_blank",
                    children: "Fluent In 3 Months: Introducing LWT"
                  }
                ),
                /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
              ] })
            ] }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "LWT Forum Threads" }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("ul", { children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                "a",
                {
                  href: "http://how-to-learn-any-language.com/forum/forum_posts.asp?TID=28312&PN=1&TPN=1",
                  target: "_blank",
                  children: "How-To-Learn-Any-Language Forum Thread about LWT"
                }
              ) }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                "a",
                {
                  href: "https://forum.language-learners.org/viewtopic?f=19&t=1993",
                  target: "_blank",
                  children: "Sites/Apps like Readlang, Lingq, Lingua.ly, etc."
                }
              ) }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                "a",
                {
                  href: "https://forum.language-learners.org/viewtopic?f=19&t=5648",
                  target: "_blank",
                  children: "Best dictionaries for use with LWT?"
                }
              ) }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                "a",
                {
                  href: "https://forum.language-learners.org/viewtopic?f=19&t=7156",
                  target: "_blank",
                  children: "Getting the most out of LWT"
                }
              ) }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
            ] })
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "Additional Resources" }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("ul", { children: [
              /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
                "Similar software or services",
                /* @__PURE__ */ jsxRuntimeExports.jsxs("ul", { children: [
                  /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
                    /* @__PURE__ */ jsxRuntimeExports.jsx(
                      "a",
                      {
                        href: "https://sourceforge.net/projects/foreign-language-text-reader/",
                        target: "_blank",
                        children: "FLTR - Foreign Language Text Reader"
                      }
                    ),
                    "(Open Source Java Desktop Application)."
                  ] }),
                  /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
                    /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "http://lingq.com", target: "_blank", children: "LingQ.com" }),
                    "(Web based service with tutoring. An account costs US$ 10 per month)."
                  ] }),
                  /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
                    /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "http://lingro.com/", target: "_blank", children: "lingro.com" }),
                    "(An on-line environment that allows anyone learning a language to quickly look up and learn the vocabulary)."
                  ] }),
                  /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
                    /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "http://readlang.com/", target: "_blank", children: "readlang.com" }),
                    "(An on-line service where you can import articles, read and translate them, and learn new words. Price: US$ 5 per month or US$ 48 per year)."
                  ] })
                ] })
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
                "Resources for various languages",
                /* @__PURE__ */ jsxRuntimeExports.jsx("ul", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
                  /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "http://tinyurl.com/cbpndlt", target: "_blank", children: "GoogleDocs Spreadsheet" }),
                  'with recommendations for LWT Language Settings ("Templates")',
                  /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "Important:" }),
                  " Please be careful when making additions or corrections!"
                ] }) })
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
                "For learners of Japanese",
                /* @__PURE__ */ jsxRuntimeExports.jsx("ul", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                  "a",
                  {
                    href: "http://taku910.github.io/mecab/",
                    target: "_blank",
                    children: "MeCab - Yet Another Part-of-Speech and Morphological Analyzer"
                  }
                ) }) })
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
                "For learners of Chinese",
                /* @__PURE__ */ jsxRuntimeExports.jsx("ul", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
                  /* @__PURE__ */ jsxRuntimeExports.jsx(
                    "a",
                    {
                      href: "https://github.com/fxsjy/jieba",
                      target: "_blank",
                      children: '"Jieba" Chinese text segmentation'
                    }
                  ),
                  "(",
                  /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "https://www.python.org/", target: "_blank", children: "Python" }),
                  "needed). Usage: Download, unzip, run:",
                  /* @__PURE__ */ jsxRuntimeExports.jsx("i", { children: "python -m jieba -d ' ' input.txt >output.txt" })
                ] }) })
              ] })
            ] })
          ] })
        ] }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("dt", { children: [
          "▶",
          /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("a", { name: "abstract", id: "abstract", children: "Abstract" }) }),
          "- ",
          /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#", children: "[↑]" })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("dd", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("ul", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsxs(
              "a",
              {
                href: "http://sourceforge.net/projects/learning-with-texts/",
                target: "_blank",
                children: [
                  /* @__PURE__ */ jsxRuntimeExports.jsx("i", { children: "Learning with Texts" }),
                  " (LWT)"
                ]
              }
            ),
            "is a tool for Language Learning, inspired by:",
            /* @__PURE__ */ jsxRuntimeExports.jsxs("ul", { children: [
              /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "http://sdkrashen.com", target: "_blank", children: "Stephen Krashen's" }),
                "principles in Second Language Acquisition,"
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
                "Steve Kaufmann's",
                /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "http://lingq.com", target: "_blank", children: "LingQ" }),
                "System and"
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
                "ideas from Khatzumoto, published at",
                /* @__PURE__ */ jsxRuntimeExports.jsx(
                  "a",
                  {
                    href: "http://www.alljapaneseallthetime.com",
                    target: "_blank",
                    children: '"AJATT - All Japanese All The Time"'
                  }
                ),
                "."
              ] })
            ] })
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: "You define languages you want to learn and import texts you want to use for learning." }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: 'While listening to the audio (optional), you read the text, save, review and test "terms" (words or multi word expressions, 2 to 9 words).' }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: "In new texts all your previously saved words and expressions are displayed according to their current learn statuses, tooltips show translations and romanizations (readings), editing, changing the status, dictionary lookup, etc. is just a click away." }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            "Import of terms in TSV/CSV format, export in TSV format, and export to",
            /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "http://ankisrs.net", target: "_blank", children: "Anki" }),
            "(prepared for cloze tests), are also possible.",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsxs("b", { children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx("u", { children: "MOST IMPORTANT:" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
              /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
              " To run LWT, you'll need:"
            ] }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "(1) A modern web browser." }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "I recommend (in this order)",
            /* @__PURE__ */ jsxRuntimeExports.jsxs("ul", { children: [
              /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "http://www.google.com/chrome/", target: "_blank", children: "Chrome" }),
                ","
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "http://www.mozilla.org/firefox/", target: "_blank", children: "Firefox" }),
                ","
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "http://www.apple.com/safari/", target: "_blank", children: "Safari" }),
                ", or"
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx(
                  "a",
                  {
                    href: "https://www.microsoft.com/en-us/windows/microsoft-edge",
                    target: "_blank",
                    children: "Microsoft Edge"
                  }
                ),
                "."
              ] })
            ] }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "(2) A local web server." }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "An easy way to install a local web server are preconfigured packages like",
            /* @__PURE__ */ jsxRuntimeExports.jsxs("ul", { children: [
              /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "http://www.easyphp.org/", target: "_blank", children: "EasyPHP" }),
                "or",
                /* @__PURE__ */ jsxRuntimeExports.jsx(
                  "a",
                  {
                    href: "https://www.apachefriends.org/download.html",
                    target: "_blank",
                    children: "XAMPP"
                  }
                ),
                "(Windows), or"
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "http://mamp.info/en/index.html", target: "_blank", children: "MAMP" }),
                "(macOS), or"
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
                "a",
                /* @__PURE__ */ jsxRuntimeExports.jsx(
                  "a",
                  {
                    href: "http://en.wikipedia.org/wiki/LAMP_%28software_bundle%29",
                    target: "_blank",
                    children: "LAMP (Linux-Apache-MySQL-PHP) server"
                  }
                ),
                "(Linux)."
              ] })
            ] }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "(3) The LWT Application." }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "The ZIP Archive ",
            /* @__PURE__ */ jsxRuntimeExports.jsx("i", { children: "lwt_v_x_y.zip" }),
            " can be downloaded",
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              "a",
              {
                href: "http://sourceforge.net/projects/learning-with-texts/files/",
                target: "_blank",
                children: "here"
              }
            ),
            ".",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "The installation is explained ",
            /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#install", children: "here" }),
            ".",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] })
        ] }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("dt", { children: [
          "▶",
          /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("a", { name: "features", id: "features", children: "Features" }) }),
          "- ",
          /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#", children: "[↑]" })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("dd", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("ul", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: "You define languages you want to learn." }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: "You define the web dictionaries you want to use." }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: "You define how sentences and words in the language will be split up." }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: "You upload texts, and they are automatically split into sentences and words! Later re-parsing is possible." }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: "Optional: Assign the URL of an mp3 audio file of the text (Dropbox, local server, ...) in order to listen while reading the text." }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: "You read the text while listening to the audio, and you see immediately the status of every word (unknown, learning, learned, well-known, ignored)." }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: "You click on words, and you use the external dictionaries to find out their meanings." }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: "You save words or expressions (2..9 words) with optional romanization (for asiatic languages), translations and example sentence, you change its status, you edit them whenever needed (like in LingQ)." }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: "You test your understanding of words and expressions within or without sentence context." }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: "MCD (Massive-Context Cloze Deletion) testing, as proposed by Khatzumoto @ AJATT, built-in!" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: "See your progress on the statistics page." }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: "You may export the words and expressions and use them in Anki or other programs." }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: "You may upload words and expressions into LWT (from LingQ or other sources, CSV/TSV) - they are immediately available in all texts!" }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "New since Version 1.5.0:" }),
            " Create and edit an improved annotated text version (a",
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              "a",
              {
                target: "_blank",
                href: "http://learnanylanguage.wikia.com/wiki/Hyperliteral_translations",
                children: "hyperliteral translation"
              }
            ),
            "as",
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              "a",
              {
                target: "_blank",
                href: "http://en.wikipedia.org/wiki/Interlinear_gloss",
                children: "interlinear text"
              }
            ),
            ") for online or offline learning. Read more",
            /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#il", children: "here" }),
            "."
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: "The application is 100 % free, open source, and in the Public Domain. Do with it what you like!" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: "Prerequisites: a local webserver (Apache, PHP, mySQL), e.g. EasyPHP or XAMPP (Windows), MAMP (macOS), or a LAMP server (Linux)." }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: "Enjoy your language learning!" })
        ] }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("dt", { children: [
          "▶",
          /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("a", { name: "restrictions", id: "restrictions", children: "Restrictions" }) }),
          "- ",
          /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#", children: "[↑]" })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("dd", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("ul", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
          "Texts and vocabulary terms with Unicode characters outside the",
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "a",
            {
              href: "https://en.wikipedia.org/wiki/Plane_(Unicode)#Basic_Multilingual_Plane",
              target: "_blank",
              children: "Basic Multilingual Plane"
            }
          ),
          "(BMP; U+0000 to U+FFFF), i.e. with Unicode characters U+10000 and higher, are not supported. Therefore, characters for almost all modern languages, and a large number of symbols, are supported; but historic scripts, certain symbols and notations, and Emojis are not supported."
        ] }) }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("dt", { children: [
          "▶",
          /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("a", { name: "license", id: "license", children: "(Un-) License" }) }),
          "- ",
          /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#", children: "[↑]" })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("dd", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("ul", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsxs(
              "a",
              {
                href: "http://sourceforge.net/projects/learning-with-texts/",
                target: "_blank",
                children: [
                  /* @__PURE__ */ jsxRuntimeExports.jsx("i", { children: '"Learning with Texts"' }),
                  " (LWT)"
                ]
              }
            ),
            "is free and unencumbered software released into the PUBLIC DOMAIN.",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "Please read also the ",
            /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#disclaimer", children: "disclaimer" }),
            ".",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "For more information, please refer to",
            /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "http://unlicense.org/", target: "_blank", children: "http://unlicense.org/" }),
            ".",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            "The following software packages, bundled within the LWT software, have different licenses:",
            /* @__PURE__ */ jsxRuntimeExports.jsxs("ul", { children: [
              /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
                "jQuery, jQueryUI - Copyright © John Resig et.al.,",
                /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "http://jquery.org/license", target: "_blank", children: "http://jquery.org/license" }),
                "(js/jquery.js, js/jquery-ui.min.js)"
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
                "jQuery.ScrollTo - Copyright © Ariel Flesler,",
                /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "http://flesler.blogspot.com", target: "_blank", children: "http://flesler.blogspot.com" }),
                "(js/jquery.scrollTo.min.js)"
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
                "Jeditable - jQuery in-place edit plugin - Copyright © Mika Tuupola, Dylan Verheul,",
                /* @__PURE__ */ jsxRuntimeExports.jsx(
                  "a",
                  {
                    href: "http://www.appelsiini.net/projects/jeditable",
                    target: "_blank",
                    children: "http://www.appelsiini.net/projects/jeditable"
                  }
                ),
                "(js/jquery.jeditable.mini.js)"
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
                "jQueryUI Tag-it! - Copyright © Levy Carneiro Jr.,",
                /* @__PURE__ */ jsxRuntimeExports.jsx(
                  "a",
                  {
                    href: "http://aehlke.github.com/tag-it/",
                    target: "_blank",
                    children: "http://aehlke.github.com/tag-it/"
                  }
                ),
                "(js/tag-it.js)"
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
                "оverLIB 4.22 - Copyright © Erik Bоsrup,",
                /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "http://www.bosrup.com/", target: "_blank", children: "http://www.bosrup.com/" }),
                "(js/overlib/...)"
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
                "sorttable - Copyright © Stuart Langridge,",
                /* @__PURE__ */ jsxRuntimeExports.jsx(
                  "a",
                  {
                    href: "http://www.kryogenix.org/code/browser/sorttable/",
                    target: "_blank",
                    children: "http://www.kryogenix.org/code/browser/sorttable/"
                  }
                ),
                "(js/sorttable/...)"
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
                "CountUp - Copyright © Praveen Lobo,",
                /* @__PURE__ */ jsxRuntimeExports.jsx(
                  "a",
                  {
                    href: "http://PraveenLobo.com/techblog/javascript-countup-timer/",
                    target: "_blank",
                    children: "http://PraveenLobo.com/techblog/javascript-countup-timer/"
                  }
                ),
                "(js/countuptimer.js)"
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
                "jPlayer - Copyright © Happyworm Ltd,",
                /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "http://www.jplayer.org/about/", target: "_blank", children: "http://www.jplayer.org/about/" }),
                "(js/jquery.jplayer.min.js, js/Jplayer.swf, css/jplayer_skin/...)"
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
                "Floating Menu - Copyright © JTricks.com,",
                /* @__PURE__ */ jsxRuntimeExports.jsx(
                  "a",
                  {
                    href: "http://www.jtricks.com/licensing.html",
                    target: "_blank",
                    children: "http://www.jtricks.com/licensing.html"
                  }
                ),
                "(js/floating.js)"
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
                "mobiledetect - Copyright © Șerban Ghiță & Victor Stanciu,",
                /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "http://mobiledetect.net/", target: "_blank", children: "http://mobiledetect.net" }),
                "(php-mobile-detect/Mobile_Detect)"
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
                "iUI - Copyright © iUI,",
                /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "http://www.iui-js.org/", target: "_blank", children: "http://www.iui-js.org/" }),
                "(iui)"
              ] })
            ] }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            'The icons in the "icn" subdirectory are Copyright ©',
            /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "http://p.yusukekamiyamane.com/", target: "_blank", children: "Yusuke Kamiyamane" }),
            ". All rights reserved. Licensed under a",
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              "a",
              {
                href: "http://creativecommons.org/licenses/by/3.0/",
                target: "_blank",
                children: "Creative Commons Attribution 3.0 license"
              }
            ),
            '. The wizard icon "wizard.png" is the "Free Wizard Icon", free for commercial use, from',
            /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "http://www.icojam.com/blog/?p=159", target: "_blank", children: "icojam.com" }),
            "(Author:",
            /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "http://www.icojam.com", target: "_blank", children: "IcoJam / Andrew Zhebrakov" }),
            ").",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            "The following examples, supplied within the LWT download package, have the following licenses:",
            /* @__PURE__ */ jsxRuntimeExports.jsxs("ul", { children: [
              /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
                "Chinese: The Man and the Dog - Copyright © Praxis Language LLC, now ChinesePod Ltd.,",
                /* @__PURE__ */ jsxRuntimeExports.jsx(
                  "a",
                  {
                    href: "http://chinesepod.com/lessons/the-man-and-the-dog",
                    target: "_blank",
                    children: "Source"
                  }
                ),
                ", MP3 licensed under a",
                /* @__PURE__ */ jsxRuntimeExports.jsx(
                  "a",
                  {
                    href: "http://creativecommons.org/licenses/by/3.0/",
                    target: "_blank",
                    children: "Creative Commons 3.0 Unported license"
                  }
                ),
                "."
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
                "German: Die Leiden des jungen Werther by Johann Wolfgang von Goethe - in the",
                /* @__PURE__ */ jsxRuntimeExports.jsx(
                  "a",
                  {
                    href: "http://www.gutenberg.org/wiki/Gutenberg:The_Project_Gutenberg_License",
                    target: "_blank",
                    children: "Public Domain"
                  }
                ),
                ", Source:",
                /* @__PURE__ */ jsxRuntimeExports.jsx(
                  "a",
                  {
                    href: "http://www.gutenberg.org/ebooks/2407",
                    target: "_blank",
                    children: "Text"
                  }
                ),
                ",",
                /* @__PURE__ */ jsxRuntimeExports.jsx(
                  "a",
                  {
                    href: "http://www.gutenberg.org/ebooks/19794",
                    target: "_blank",
                    children: "Audio"
                  }
                ),
                "."
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
                "French: Mon premier don du sang - Copyright © France Bienvenue,",
                /* @__PURE__ */ jsxRuntimeExports.jsx(
                  "a",
                  {
                    href: "http://francebienvenue1.wordpress.com/2011/06/18/generosite/",
                    target: "_blank",
                    children: "Source"
                  }
                ),
                '. License: "Bien sûr, les enseignants de FLE peuvent utiliser nos enregistrements et nos transcriptions pour leurs cours. Merci de mentionner notre site !".'
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: "Korean, Japanese, Thai, Hebrew - own creations from different sources." })
            ] })
          ] })
        ] }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("dt", { children: [
          "▶",
          /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("a", { name: "disclaimer", id: "disclaimer", children: "Disclaimer" }) }),
          "- ",
          /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#", children: "[↑]" })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("dd", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("ul", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: 'THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.' }) }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("dt", { children: [
          "▶",
          /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("a", { name: "install", id: "install", children: "Installation on MS Windows, macOS, Linux" }) }),
          "- ",
          /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#", children: "[↑]" })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("dd", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("ul", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs(
            "a",
            {
              target: "_blank",
              href: "http://learning-with-texts.sourceforge.io/LWT_INSTALLATION.txt",
              children: [
                "Please follow the up-to-date instructions",
                /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("u", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("bigger", { children: "HERE" }) }) }),
                "(you must be online!)."
              ]
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
        ] }) }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("dt", { children: [
          "▶",
          /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("a", { name: "learn", id: "learn", children: "How to learn with LWT" }) }),
          "- ",
          /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#", children: "[↑]" })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("dd", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("ul", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: "Find an interesting text (preferably with an mp3 audio file) in the Internet and load it into LWT. If you are a beginner, look for beginner courses or podcasts in the Internet." }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            "You don't know where to find texts with audio? The",
            /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "http://lingq.com", target: "_blank", children: "LingQ Library" }),
            "has many (only a free registration is needed). Or look into",
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              "a",
              {
                href: "https://www.lingq.com/en/forum/updates-tips-and-known-issues/where-to-find-good-content-to-import/",
                target: "_blank",
                children: "this thread"
              }
            ),
            'in the LingQ Forum, you will find there lots of great links to resources. Or click (within the LingQ library) on "My Imports" - you will find a list of links of "Suggested resources".'
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: "Read the text, look up the new words and expressions (=terms) and save them for review and test." }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: "The good thing with LWT: Every saved term will show up with its translation, status, etc. in all other occurrences of the same text and every other text! So you'll see immediately what you already know and how well you know it. And of course you'll see what you don't know!" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: "Load the MP3 file also on your portable MP3 player and listen to it often." }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            "Review (by reading again) or test your saved words and expressions.",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            "Listen ▶ Read ▶ Review/Test.",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "Listen ▶ Read ▶ Review/Test.",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "......",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: "That's it. It's that simple. " }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            "If you want to know more, watch",
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              "a",
              {
                href: "http://www.youtube.com/user/lingosteve",
                target: "_blank",
                children: "Steve Kaufmann's videos on YouTube"
              }
            ),
            ': "The 7 secrets of language learning", "Language learning FAQ", and many more.'
          ] })
        ] }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("dt", { children: [
          "▶",
          /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("a", { name: "howto", id: "howto", children: "How to use" }) }),
          "- ",
          /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#", children: "[↑]" })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("dd", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs("ul", { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "LWT home screen after installation" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
              /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
              "This is home screen of LWT if the database is empty. Please install the demo database or start with the definition of a language you want to learn.",
              /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
              /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
              /* @__PURE__ */ jsxRuntimeExports.jsx("img", { className: "grayborder", src: "img/23.jpg", alt: "Image" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
              /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
            ] }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "LWT home screen" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
              /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
              "This is normal home screen of LWT. You may choose a language here, but you can do this also later. If you you choose a language, the language filter is pre-set to that language in some other screens. The last text you've read or tested is shown, and you may jump directly into reading, testing or printing of this last text.",
              /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
              /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
              /* @__PURE__ */ jsxRuntimeExports.jsx("img", { className: "grayborder", src: "img/01.jpg", alt: "Image" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
              /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
            ] }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "My Languages" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
              /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
              'The list of languages. Here you can add a new or edit an existent language. If no texts and no saved terms in a language exist, you can delete a language. If you change a language, all texts may be be automatically reparsed to refresh (and correct) the cache of sentences and text items (depends on what language settings you have changed). You can do this also manually by clicking on the yellow flash icon. You can also test all (due) terms of a language or set a language as "current" language.',
              /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
              /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
              /* @__PURE__ */ jsxRuntimeExports.jsx("img", { className: "grayborder", src: "img/02.jpg", alt: "Image" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
              /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
            ] }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("a", { name: "howtolang", id: "howtolang", children: "New/Edit Language" }) }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("a", { name: "go1", id: "go1", children: " " }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
              /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
              "This is the place to define or edit a language you want to study.",
              /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
              /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
              /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: 'If you are new to the system, use the "Language Settings Wizard" first.' }),
              "You only select your native (L1) and study (L2) languages, and let the wizard set all language settings that are marked in yellow. You can always adjust the settings afterwards.",
              /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
              /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
              /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "Explainations of the input fields" }),
              " - please read also",
              /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#langsetup", children: "this section" }),
              ":",
              /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
              /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("ul", { children: [
                /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
                  "The three Uniform Resource Identifiers (",
                  /* @__PURE__ */ jsxRuntimeExports.jsx(
                    "a",
                    {
                      href: "http://en.wikipedia.org/wiki/Uniform_Resource_Identifier",
                      target: "_blank",
                      children: "URIs"
                    }
                  ),
                  ') are URIs to three web dictionaries (the second and third is optional). Use ### as a placeholder for the searchword in the URIs. If ### is missing, the searchword will be appended. If the URI to query "travailler" in WordReference is "http://www.wordreference.com/fren/travailler", you enter: "http://www.wordreference.com/fren/###" or "http://www.wordreference.com/fren/". Another example: The URI to query "travailler" in sansagent is "http://dictionary.sensagent.com/travailler/fr-en/", so you enter in LWT "http://dictionary.sensagent.com/###/fr-en/".',
                  /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                  " ",
                  /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                  'As URI No. 3 ("Google Translate URI") is also used to translate whole sentences, I would recommend to enter here always the link to Google Translate, like shown in the examples. The link to Google Translate is "http://translate.google.com/?ie=UTF-8&sl=..&tl=..&text=###", where the two-character codes after "sl=" andThe three Uniform Resource Identifiers "tl=" designate the',
                  /* @__PURE__ */ jsxRuntimeExports.jsx(
                    "a",
                    {
                      href: "http://www.iana.org/assignments/language-subtag-registry",
                      target: '_blank"',
                      children: 'language codes (or "subtags")'
                    }
                  ),
                  "for the source and the target language. But a different third web dictionary is of course possible, but sentence translations may not work.",
                  /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                  'If the searchword in the three URIs needs to be converted into a different encoding (standard is UTF-8), you can use ###encoding### as a placeholder. Normally you see this right away if terms show up wrongly in the web dictionary. Example: Linguee expects the searchword in ISO-8859-15, not in UTF-8, so you define it this way: "http://www.linguee.de/search?direction=auto&query=###ISO-8859-15###". A list of encodings can be found',
                  /* @__PURE__ */ jsxRuntimeExports.jsx(
                    "a",
                    {
                      href: "http://php.net/manual/en/mbstring.supported-encodings",
                      target: '_blank"',
                      children: "here"
                    }
                  ),
                  ".",
                  /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "IMPORTANT:" }),
                  ` Some dictionaries (including "Google Translate") don't allow to be opened within a frame set. Put an asterisk * in front of the URI (Examples: *http://mywebdict.com?q=### or *http://translate.google.com/?ie=UTF-8&sl=..&tl=..&text=###) to open such a dictionary not within the frame set but in a popup window (please don't forget to deactivate popup window blocking in your browser!).`,
                  /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                  " ",
                  /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                  " ",
                  /* @__PURE__ */ jsxRuntimeExports.jsx("a", { name: "glosbe" }),
                  "One dictionary (",
                  /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "http://glosbe.com/", target: "_blank", children: "Glosbe" }),
                  ') has been closely integrated into LWT via the Glosbe API. To use this dictionary, input the "special" dictionary link "',
                  /* @__PURE__ */ jsxRuntimeExports.jsx("i", { children: "glosbe_api?from=...&dest=...&phrase=###" }),
                  '" (NO "http://" at the beginning!!) with ',
                  /* @__PURE__ */ jsxRuntimeExports.jsx("i", { children: "from" }),
                  ': "L2 language code" (the language of your texts) and',
                  /* @__PURE__ */ jsxRuntimeExports.jsx("i", { children: "dest" }),
                  ': "L1 language code" (e.g. mother tongue). To find the language codes, open',
                  /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "http://glosbe.com/all-languages", target: "_blank", children: "this page" }),
                  'to select the "from" (L2) language. On the next page, select the "L2 - L1" language pair. The URL of the next page shows the two language codes, here as an example "French - English": http://glosbe.com/',
                  /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "fr" }),
                  "/",
                  /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "en" }),
                  '/. The "from" code is "fr", the "dest" code is "en". Using this dictionary makes the transfer of translation(s) from the Glosbe to LWT very easy: just click on the icon next to the translations to copy them into the LWT edit screen. I recommend to use the LWT-integrated Glosbe dictionary as the "Dictionary 1 URI". Note: I cannot guarantee that the Glosbe API and this special integration will work in the future! glosbe_api is just an example how one can integrate a dictionary into LWT.',
                  /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                  " ",
                  /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                  "You don't know how and where to find a good web dictionary? Try these dictionary directories:",
                  /* @__PURE__ */ jsxRuntimeExports.jsxs("ul", { children: [
                    /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                      "a",
                      {
                        href: "http://www.alphadictionary.com/langdir.html",
                        target: "_blank",
                        children: "http://www.alphadictionary.com/langdir.html"
                      }
                    ) }),
                    /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "http://www.lexicool.com/", target: "_blank", children: "http://www.lexicool.com/" }) })
                  ] }),
                  "If you have found a suitable web dictionary, try to translate some words and look whether the word is part of the web address (URI/URL). If yes, replace the word with ### and put this in one of the URI fields within LWT.",
                  /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                  " ",
                  /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
                ] }),
                /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
                  'The entry "Text Size" defines the relative font size of the text. This is great for Chinese, etc.',
                  /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                  " ",
                  /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
                ] }),
                /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
                  '"Character Substitutions" is an optional list of "from=to" items with "|" as list separator. The "from" character is replaced by the "to" character ("to" may be also empty). So different kinds of apostrophes can unified or deleted.',
                  /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                  " ",
                  /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
                ] }),
                /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
                  `"RegExp Split Sentences" is a list of characters that signify a sentence ending (ALWAYS together with a following space or newline!). The space can be omitted (and it is normally), if you set "Make each character a word" to Yes (see below). Whether you include here ":" and ";" - that's your decision. See also`,
                  /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#langsetup", children: "this table" }),
                  ". Characters can be also defined in",
                  /* @__PURE__ */ jsxRuntimeExports.jsx(
                    "a",
                    {
                      href: "http://en.wikipedia.org/wiki/Unicode",
                      target: "_blank",
                      children: "Unicode"
                    }
                  ),
                  'form: "\\x',
                  "....",
                  '"; the Chinese/Japanese full stop "。" is then "\\x',
                  3002,
                  '" (always without "). Please inform yourself about Unicode',
                  /* @__PURE__ */ jsxRuntimeExports.jsx(
                    "a",
                    {
                      href: "http://en.wikipedia.org/wiki/Unicode",
                      target: "_blank",
                      children: "here (general information)"
                    }
                  ),
                  "and",
                  /* @__PURE__ */ jsxRuntimeExports.jsx(
                    "a",
                    {
                      href: "http://unicode.coeurlumiere.com/",
                      target: "_blank",
                      children: "here (Table of Unicode characters)"
                    }
                  ),
                  ".",
                  /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                  " ",
                  /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
                ] }),
                /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
                  `"Exceptions Split Sentences" are a list of exceptions that are NOT to be treated as sentence endings with "|" as list separator. [A-Z] is a character range. If you don't want to split sentences after Mr. / Dr. / A. to Z. / Vd. / Vds. / U.S.A., then you should specify these here: "Mr.|Dr.|[A-Z].|Vd.|Vds.|U.S.A." (without ").`,
                  /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                  " ",
                  /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
                ] }),
                /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
                  '"RegExp Word Characters" is a list of characters OR character ranges "x-y" that defines all characters in a word, e.g. English: "a-zA-Z", German: "a-zA-ZaöüÄÖÜß", Chinese: 一-龥. See also',
                  /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#langsetup", children: "this table" }),
                  ". Characters can be also defined in",
                  /* @__PURE__ */ jsxRuntimeExports.jsx(
                    "a",
                    {
                      href: "http://en.wikipedia.org/wiki/Unicode",
                      target: "_blank",
                      children: "Unicode"
                    }
                  ),
                  'form: "\\x',
                  "....",
                  '"; the Chinese/Japanese character "one" "一" is then "\\x',
                  4,
                  '" (always without "). So the above specification for the range of characters in Chinese "一-龥" can also be specified: "',
                  "\\x{4E00}",
                  "-",
                  "\\x{9FA5}",
                  '".',
                  /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                  " ",
                  /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
                ] })
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
                '"Make each character a word" is a special option for Chinese, etc. This makes EVERY character a single word (normally words are split by any non-word character or a space). See also ',
                /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#langsetup", children: "this table" }),
                ".",
                /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
                '"Remove spaces" is another option for Chinese, etc. It removes all spaces from the text (and the example sentences). See also ',
                /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#langsetup", children: "this table" }),
                ".",
                /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                " ",
                /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
                '"Right-To-Left Script" must be set to "Yes" if the language/script is written from right to left, like Arabic, Hebrew, Farsi, Urdu, etc. ',
                /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                " ",
                /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("a", { name: "extmpl" }),
                '"Export Template". The export template controls "Flexible" Term Exports for the terms of that language. It consists of a string of characters. Some parts of this string are placeholders that are replaced by the actual term data,',
                /* @__PURE__ */ jsxRuntimeExports.jsx("a", { target: "_blank", href: "info_export_template.htm", children: "see this table" }),
                ". For each term (word or expression), that has been selected for export, the placeholders of the export template will be replaced by the term data and the string will be written to the export file. If the export template is empty, nothing will be exported."
              ] })
            ] }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "To understand all these options, please study also",
            /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#langsetup", children: "this" }),
            ", look at the examples and play around with different settings and different texts.",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("img", { className: "grayborder", src: "img/03.jpg", alt: "Image" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "My Texts" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            `The list of texts. You can filter this list according to language, title (wildcard = *) or text tag(s) (see also below). The most important links for each text are "Read" and "Test" - that's the place to read, to listen, to save terms and to review and test your terms in sentence context. To see all terms of a text that you have saved, click on the numbers in column "Saved Wo+Ex". To print, archive, edit (and reparse), or to delete a text, click on the icons in column "Actions". There are more actions available, see "Multi Actions".`,
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("img", { className: "grayborder", src: "img/04.jpg", alt: "Image" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "Multi Actions for marked texts" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            'You can test the terms of the marked texts, delete or archive the marked texts. "Reparse Texts" rebuilds the sentence and the text item cache for all marked texts. "Set Term Sentences" sets a valid sentence (with the term in ',
            "{..}",
            ") for all those saved or imported terms that occur in the text and that do not have a sentence at all or none with ",
            "{term}",
            '. This makes it easy to "create" sentence examples for imported terms.',
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("img", { className: "grayborder", src: "img/14.jpg", alt: "Image" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "My Text Tags" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "The list of your text tags. You can manage your text tags here. With text tags, it will be easier to categorize and organize your texts. The tags are case sensitive, have 1 to 20 characters, and must not contain any spaces or commas.",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("img", { className: "grayborder", src: "img/25.jpg", alt: "Image" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("a", { name: "howtotext", id: "howtotext", children: "New/Edit Text (with Check)" }) }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            `This is the screen to input, check or edit a single text. Try to store not too long texts (the maximum length is 65,000 Bytes). If texts are very long (> 1000 words), certain operations (e.g. loading a text for reading, calculation of known/unknown words) may be quite slow. An audio URI and a link to the text source can also be defined. The best place to store your audios is the "media" subdirectory below the installation directory "lwt" (you have to create it yourself, and you have to copy the audio files into this directory; click Refresh if you don't see just copied media). But a cloud webspace service like DropBox is also possible. In the moment there is no possibility to import/upload an audio file within the LWT application. By the way, you can use MP3, WAV, or OGG media files, but be aware that not all browsers and/or operating systems support all media types! If you click "Check", the text will be parsed and split into sentences and words according to your language settings. Nothing will be stored if you check a text. You can see whether your text needs some editing, or whether your language settings (especially the ones that influence parsing/splitting) need an adjustment. Words (not expressions) that are already in your word list are displayed in red, and the translation is displayed. The Non-Word List shows all stuff between words. The "Check a Text" function can also be started directly from the main menu. If you click on "Change" or "Save", the text will be only saved. If you click on "Change and Open" or "Save and Open", the text will be saved and opened right away.`,
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("img", { className: "grayborder", src: "img/05.jpg", alt: "Image" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            'You can also import a longer text into LWT with the possibility to split it up into several smaller texts. Click on "Long Text Import". You must specify the maximum number of sentences per text, and the handling of newlines for paragraph detection. It is not possible to specify audio files or URIs.',
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("img", { className: "grayborder", src: "img/33.jpg", alt: "Image" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "Read a Text" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            'This is your "working area": Reading (and listening to) a text, saving/editing words and expressions, looking up words, expressions, sentences in external dictionaries or Google Translate. To create an expression, click on the first word. You see "Exp: 2..xx 3..yy 4..zz ...". Just click on the number of words (2..9) of the desired expression you want to save. The dictionary links for multi word expressions are always in the edit frame! You can also use the Keyboard in the text frame, see',
            /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#keybind", children: "Key Bindings" }),
            ". Double clicking on a word sets the audio position approximately to the text position, if an audio was defined. The other audio controls are self-explanatory: automatic repeat, rewind and move forward n seconds, etc.).",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("img", { className: "grayborder", src: "img/06.jpg", alt: "Image" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "Reading a Right-To-Left Script (Hebrew):",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("img", { className: "grayborder", src: "img/26.jpg", alt: "Image" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "With the checkbox [Show All] you can switch the display of text:",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "[Show All] = ON (see below): All terms are shown, and all multi-word terms are shown as superscripts before the first word. The superscript indicates the number of words in the multi-word term.",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("img", { className: "grayborder", src: "img/22.jpg", alt: "Image" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "[Show All] = OFF (see below): Multi-word terms now hide single words and shorter or overlapping multi-word terms. This makes it easier to concentrate on multi-word terms while displaying them without superscripts, but creation and deletion of multi-word terms can be a bit slow in long texts.",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("img", { className: "grayborder", src: "img/30.jpg", alt: "Image" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "Test terms" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            'Tests are only possible if a term has a translation. Terms with status "Ignored" and "Well Known" are never tested, and terms with a positive or zero score are not tested today. In summary, the term score must fall below zero to trigger the test. See also ',
            /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#termscores", children: "Term scores" }),
            ". Terms that are due today are marked with a red bullet in the term table. Terms that are due tomorrow are marked with a yellow bullet in the term table.",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            'During a test, a status display (at the bottom of the test frame) shows you the elapsed time "mm:ss", a small bar graph, and the total, not yet tested, wrong and correct terms in this test.',
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "In the following, L1 denotes you mother tongue (= translations), and L2 the language you want to learn (= the terms (words and expressions).",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "Test terms in a text (L2 -> L1)" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            'This is Test #1 or #4: L2 -> L1 (recognition) - to train your ability to recognize a L2 term. You may test within sentence context (Button "..[L2].."), or just the term (Button "[L2]"). You can also use the Keyboard in the test frame, see',
            /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#keybind", children: "Key Bindings" }),
            ".",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("img", { className: "grayborder", src: "img/07.jpg", alt: "Image" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "Test terms in a text (L1 -> L2)" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            'This is Test #2 or #5: L1 -> L2 (recall) - to train your ability to produce a term from L1. You may test within sentence context (Button "..[L1].."), or just the term (Button "[L1]"). You can also use the Keyboard in the test frame, see',
            /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#keybind", children: "Key Bindings" }),
            ".",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("img", { className: "grayborder", src: "img/11.jpg", alt: "Image" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "Test terms in a text (••• -> L2)" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            'This is test #3: ••• -> L2 (recall) - to train your ability to produce a term only from the sentence context (Button "..[••].."). If you hover over "[•••]", a tooltip displays the translation of the term. You can also use the Keyboard in the test frame, see ',
            /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#keybind", children: "Key Bindings" }),
            ".",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("img", { className: "grayborder", src: "img/12.jpg", alt: "Image" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: 'Test yourself in a table / word list format (Button "Table")' }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            'This is test #6: The selected terms and expressions are presented as a table. You can make invisible either the columns "Term" or "Translation", and you can hide or show the columns "Sentence", "Romanization", "Status" and "Ed" (Edit). To reveal the invisible solution ("Term" or "Translation"), you just click into the empty table cell. You can review or test yourself with or without changing the status by clicking "+" or "-" in the "Status" column. A status in red signifies that the term is due for testing. You can also edit the term by clicking the yellow "Edit" icon. Columns 2 to 6 may also my sorted by clicking on the header row. The initial sort order is according to term score.',
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("img", { className: "grayborder", src: "img/32.jpg", alt: "Image" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "Print a text" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "Here you print a text. Optional: an inline annotation (translation and/or romanization) of terms that are of specified status(es). This screen is also great to just read or study a text.",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "Chinese Text with annotation (Romanization/Pinyin and translation):",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("img", { className: "grayborder", src: "img/20.jpg", alt: "Image" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "Chinese Text with annotation (only Romanization/Pinyin):",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("img", { className: "grayborder", src: "img/21.jpg", alt: "Image" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("a", { name: "il" }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("b", { children: [
              "How to create, edit, and use an ",
              /* @__PURE__ */ jsxRuntimeExports.jsx("i", { children: "Improved Annotated Text" }),
              ":"
            ] }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "Motivation:" }),
            " Annotated texts (as",
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              "a",
              {
                target: "_blank",
                href: "http://en.wikipedia.org/wiki/Interlinear_gloss",
                children: "interlinear text"
              }
            ),
            ") have been used for language learning for a long time. One example are the word-by-word translations in",
            /* @__PURE__ */ jsxRuntimeExports.jsx("a", { target: "_blank", href: "http://en.assimil.com/", children: "Assimil" }),
            "courses. The German",
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              "a",
              {
                target: "_blank",
                href: "http://web.archive.org/web/20070223080453/http://195.149.74.241/BIRKENBIHL/PDF/MethodEnglish.pdf",
                children: "V. F. Birkenbihl"
              }
            ),
            "proposes the creation of interlinear word-by-word or",
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              "a",
              {
                target: "_blank",
                href: "http://learnanylanguage.wikia.com/wiki/Hyperliteral_translations",
                children: "hyperliteral"
              }
            ),
            'translations (calling this creation "decoding") in foreign language learning. Learning Latin or Ancient Greek via interlinear texts is quite old as you can see in',
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              "a",
              {
                target: "_blank",
                href: "http://www.youtube.com/watch?v=XnEKnezLXJg",
                children: "this YouTube video"
              }
            ),
            ".",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            `LWT's old "Print Screen" offers annotations, but it displays ALL translations of a term. The `,
            /* @__PURE__ */ jsxRuntimeExports.jsx("i", { children: "Improved Annotated Text" }),
            "feature enables you to select the best translation for every word in the text. As a result, you create an L1 word-by-word translation that is displayed above the L2 text. This interlinear text is better suited for language study, especially for beginners.",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "Method:" }),
            " While listening to the audio, first follow the blue annotations in your native language while listening and understanding. Later, after understanding the text fully, you read the foreign language text alone. Repeat this often. After these steps, you listen to the text passively or do shadowing.",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            'On the Print Screen, click on "Create" an Improved Annotated Text. The system creates a default annotated text.',
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "Edit Mode:" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("img", { className: "grayborder", src: "img/28.jpg", alt: "Image" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            'Within the "Improved Annotated Text - Edit Mode", you can select the best term translation by clicking on one of the radio buttons. To be able to do this, multiple translations must be delimited by one of the delimiters specified in the LWT Settings (currently: /;|). You can also type in a new translation into the text box at the end (this does not change your saved term translation), or you may change your term by clicking on the yellow icon or add a translation by clicking on the green "+" icon (this does change your saved term translation), and select it afterwards. The "Star" icon indicated that you want the term itself as annotation. ',
            /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "Important:" }),
            ` It's not possible to create new terms here - please do this in the "Read text" screen. Changing the language settings (e.g. the word characters) may have the effect that you have to start from scratch. The best time for the creation of an improved annotated text is after you have read the text completely and created all terms and expressions in the "Read text" screen.`,
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "Warning:" }),
            " If you change the text, you will lose the saved improved annotated text!",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "All changes in the Edit screen are saved automatically in the background!",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            'To leave the Edit mode, click on "Display/Print Mode". You may then print or display (with audio) the text, and work with the text online or offline.',
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "Print Mode:" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("img", { className: "grayborder", src: "img/27.jpg", alt: "Image" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "Display Mode" }),
            ' (with audio player) in a separate window. Clicking the "T" or "A" lightbulb icons hides/shows the text or the blue annotations. You may also click on a single term or a single annotation to show or to hide it. This enables you to test yourself or to concentrate on one text only. Romanizations, if available, appear while hovering over a term.',
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("img", { className: "grayborder", src: "img/29.jpg", alt: "Image" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "My Terms" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            'The list of your saved words or expressions (= terms). You may filter the list of terms by language, text, status, term/romanization/translation (wildcard * possible) or term tag(s). Different sort orders are possible. You can do "multi actions" only on the marked or on all terms (on all pages!). "Se?" displays a green dot if a valid sentences with ',
            "{term}",
            'exists. "Stat/Days" displays the status and the number of days since the last status change. The score of a term is a rough measure (in percent) how well you know a term. Read more about term scores ',
            /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#termscores", children: "here" }),
            ". Terms with zero score are displayed red and should be tested today.",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("img", { className: "grayborder", src: "img/08.jpg", alt: "Image" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "Multi Actions for marked terms" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            'Most actions are self-explanatory. "Test Marked Terms" starts a test with all marked terms. You may delete marked terms and change the status of marked terms. "Set Status Date to Today" is some kind of "trick" for vacations, illnesses, etc.',
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            '"Export Marked Texts (Anki)" exports all terms that have been marked AND have a valid sentence with ',
            "{term}",
            " for Anki. Terms that do not have a sentence with ",
            "{term}",
            ' will NOT be exported. Cloze testing of terms within sentence context can so be easily done in Anki. The export is tab-delimited: (1) term, (2) translation, (3) romanization, (4) Sentence without term (question of cloze test), (5) Sentence with term (answer of cloze test), (6) Language, (7) ID Number, (8) Tag list. Anki template decks (for Anki Version 1 and 2) are provided: "LWT.anki" and "LWT.apkg" in directory "anki".',
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            '"Export Marked Texts (TSV)" exports all terms that have been marked. The export is tab-delimited: (1) term, (2) translation, (3) sentence, (4) romanization, (5) status, (6) language, (7) ID Number, (8) tag list.',
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("img", { className: "grayborder", src: "img/16.jpg", alt: "Image" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "Multi Actions for all terms on all pages of the current query" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "Explanations see above.",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("img", { className: "grayborder", src: "img/17.jpg", alt: "Image" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "My Term Tags" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "The list of your term tags. You can manage your term tags here. With term tags, it will be easier to categorize and organize your terms. The tags are case sensitive, have 1 to 20 characters, and must not contain any spaces or commas.",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("img", { className: "grayborder", src: "img/24.jpg", alt: "Image" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "My Text Archive" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            'The list of archived texts. To unarchive, to edit or to delete a text, click on the icon under "Actions". There are also "Multi Actions" available.',
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "What is the difference between (active) texts and archived texts?",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("ul", { children: [
              /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "(Active) texts" }),
                /* @__PURE__ */ jsxRuntimeExports.jsxs("ul", { children: [
                  /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: "They have been parsed and tokenized according to the rules defined for the language." }),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: "The result is stored in a cache of sentences and text items." }),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: "They use a lot of space in the database." }),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: "Reading with term creation/editing and dictionary lookup is possible." }),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: "Testing of a stored term that occurs in the text, is possible. A terms will be tested within the context of any sentence(s) in all active texts (the number of sentences may be set (1, 2, or 3) as a preference)." })
                ] }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "Archived texts" }),
                /* @__PURE__ */ jsxRuntimeExports.jsxs("ul", { children: [
                  /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: "They are not parsed and tokenized, only the text is stored." }),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: "Compared with active texts, they don't use much space in the database, because no sentences and no text items are stored." }),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: "Reading with term creation/editing and dictionary lookup is not possible." }),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: "Testing of a stored term, that occurs in the text, is possible, but a term will be tested ONLY within the context of the sentence(s) that has/have been stored with the term in the sentence field, if the term does not occur in any active text." })
                ] })
              ] })
            ] }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("img", { className: "grayborder", src: "img/13.jpg", alt: "Image" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "Multi Actions for marked archived texts" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("img", { className: "grayborder", src: "img/15.jpg", alt: "Image" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "My Statistics" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "It's self-explanatory and shows your performance. The numbers in the first table are links, by clicking on them you jump to the table of all terms in that status and language.",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("img", { className: "grayborder", src: "img/09.jpg", alt: "Image" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "Import Terms" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            'Import a list of terms for a language, and set the status for all to a specified value. You can specify a file to upload or type/paste the data directly into the textbox. Format: one term per line, fields (columns) are separated either by comma ("CSV" file, e.g. used in LingQ as export format), TAB ("TSV" file, e.g. copy and paste from a spreadsheet program, not possible if you type in data manually) or # (if you type in data manually). The field/column assignment must be specified on the left. Important: You must import a term. The translation can be omitted if the status should be set to 98 or 99 (ignore/well known). Translation, romanization and sentence are all optional, but please understand that tests are only possible if terms have a translation. If a term already exists in the database (comparison is NOT case sensitive), it will not be overwritten; the line will be ignored. You can change this by setting "Overwrite existent terms" to "Yes". Be careful using this screen, a database backup before the import and double-checking everything is always advisable!',
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("img", { className: "grayborder", src: "img/10.jpg", alt: "Image" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "Backup/Restore/Empty Database" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            'This screen offers a possibility to save, restore or empty the LWT database (ONLY the current table set!). This makes it easy to try out new things or just to make regular backups. "Restore" only accepts files that have been created with the "Backup" function above. "Empty Database" deletes the data of all tables (except the settings) of the current table set, and you can start from scratch afterwards. Be careful: you may lose valuable data!',
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("img", { className: "grayborder", src: "img/18.jpg", alt: "Image" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "Settings/Preferences" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "In this screen you can adjust the program according to your needs. The geometric properties of the ",
            /* @__PURE__ */ jsxRuntimeExports.jsx("i", { children: "Read Text" }),
            " and",
            /* @__PURE__ */ jsxRuntimeExports.jsx("i", { children: "Test" }),
            ' screens can be changed. This is important because different browsers and font sizes may result in an unpleasant viewing experience. The waiting time to display the next test and to hide the old message after a test assessment can also be changed. The number of sentences displayed during testing and generated during term creation can be set to 1 (default), 2 or 3; if set to 2 or 3 you are able to do "MCD" (Massive-Context Cloze Deletion) testing, proposed by Khatzumoto @ AJATT. The number of items per page on different screens can be set, and you can decide whether you want to see the word counts on the textpage immediately (page may load slow) or later (faster initial loading).',
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("img", { className: "grayborder", src: "img/19.jpg", alt: "Image" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsxs("b", { children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx("a", { name: "mue" }),
              "Multiple LWT table sets"
            ] }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "WARNING:" }),
            ' The use of the "Multiple LWT table sets" feature on an external web server may cause a',
            /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "monstrous database size" }),
            ' if some users import many or large texts. Without further improvements (e. g. user quotas, etc.), LWT with activated "Multiple LWT table sets" is in its current version ',
            /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "not suitable" }),
            " to be run in a public environment on an external web server!",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            'When you start using LWT, you store all your data in the "Default Table Set" within the database you have defined in the file "connect.inc" during the LWT installation.',
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            `Beginning with LWT Version 1.5.3, you are able to create and to use unlimited LWT table sets within one database (as space and MySQL limitations permit). This feature is especially useful for users who want to set up a multi user environment with a set of tables for each user. You can also create one table set for every language you study - this allows you to create different term/text tags for each language. If you don't need this feature, you just use LWT like in earlier versions with the "default table set". Please observe that the "Backup/Restore/Empty Database" function only works for the CURRENT table set, NOT for ALL table sets you have created!`,
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            'Just click on the link at the bottom of the LWT home screen where the current table set name (or "Default") is displayed. In a new screen "Select, Create or Delete a Table Set" you may switch and manage table sets. A table set name is max. 20 characters long. Allowed characters are only: a-z, A-Z, 0-9, and the underscore "_".',
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("img", { className: "grayborder", src: "img/31.jpg", alt: "Image" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            'If you want "switch off" this feature, and use just one table set, you may define the name in the file "connect.inc":',
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: '$tbpref = "";' }),
            "       // only the default table set",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: '$tbpref = "setname";' }),
            '       // only the table set "setname"',
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            'After adding such a line in the file "connect.inc", you are not able to select, create or delete table sets anymore. Only the one you have defined in "connect.inc" will be used. Please observe the rules for table set names (see above)!!',
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            'If more than one table set exists, and $tbpref was NOT set to a fixed value in "connect.inc", you can select the desired table set via "start" (use this as start page if several people use their own table set), or by clicking on the LWT icon or title in the LWT menu screen "index".',
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "By hovering over the LWT icon in the top left corner of every screen, you can display the current table set in a yellow tooltip.",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("dt", { children: [
          "▶",
          /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("a", { name: "faq", id: "faq", children: "Questions and Answers" }) }),
          "- ",
          /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#", children: "[↑]" })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("dd", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("ul", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            "I want to use LWT, and I see something like this:",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("img", { className: "grayborder", src: "img/prob1.png", alt: "Image" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "Answer: Your local webserver (Apache) is not running. Please start it via EasyPHP or MAMP control program/panel.",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            "I want to use LWT, and I see something like this:",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("img", { className: "grayborder", src: "img/prob2.png", alt: "Image" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "Answer: The server is running, but the application is not found. Maybe the Uniform Resource Identifier (URI) is wrong or misspelled. Please check/correct it. Or the URI is correct, and the application is installed, but not in the correct directory ",
            /* @__PURE__ */ jsxRuntimeExports.jsx("i", { children: "lwt" }),
            " below ",
            /* @__PURE__ */ jsxRuntimeExports.jsx("i", { children: "htdocs" }),
            ". Please install/copy/move it into the correct directory.",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            "I want to use LWT, and I see this:",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("img", { className: "grayborder", src: "img/prob3.png", alt: "Image" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "Answer: Either the database (MySQL) is not running, or the database connection parameters in",
            /* @__PURE__ */ jsxRuntimeExports.jsx("i", { children: "../htdocs/lwt/connect.inc" }),
            " are wrong. Please check/correct the database connection parameters and/or start MySQL via the MAMP or EasyPHP control program/panel.",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            "I want to use LWT, and I see this:",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("img", { className: "grayborder", src: "img/prob4.png", alt: "Image" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "Answer: The Webserver and the database is running, but the database connection parameter file",
            /* @__PURE__ */ jsxRuntimeExports.jsx("i", { children: "../htdocs/lwt/connect.inc" }),
            " is not found. Please rename one of the connection files (according to your server) to",
            /* @__PURE__ */ jsxRuntimeExports.jsx("i", { children: "../htdocs/lwt/connect.inc" }),
            ".",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            "I have installed or updated LWT on Linux, but the application does not run as expected:",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            'Answer 1: The Webserver does not have full access to all LWT files (insufficient rights). Open a terminal window, go to the directory where the directory "lwt" has been created with all LWT files, e. g. ',
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "cd /var/www/html" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "Now execute:",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "sudo chmod -R 755 lwt" }),
            ".",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            'Answer 2: The PHP "mbstring" extension is not installed. Please install it;',
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              "a",
              {
                href: "https://askubuntu.com/questions/491629/how-to-install-php-mbstring-extension-in-ubuntu",
                target: "_blank",
                children: "see this article"
              }
            ),
            ".",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] })
        ] }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("dt", { children: [
          "▶",
          /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("a", { name: "ipad", id: "ipad", children: "Setup for Tablets" }) }),
          "- ",
          /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#", children: "[↑]" })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("dd", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("ul", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: "If you want to use LWT on a tablet: that's possible (even the audio player works!)." }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: 'In "Settings/Preferences", set the "Frame Set Display Mode" to "Auto" or "Force Mobile". On other mobile devices, you may also try "Force Non-Mobile" if you are unhappy with the results.' }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: "Try to reduce the length of your texts to reduce scrolling." }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: "It's also a good idea to install and run LWT at a web hoster. So you can access LWT easily if you are often on the go." }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            "I hope you will enjoy using LWT on a tablet although creating new terms and copy & paste can be a bit tedious.",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] })
        ] }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("dt", { children: [
          "▶",
          /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("a", { name: "langsetup", id: "langsetup", children: "Language Setup" }) }),
          "- ",
          /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#", children: "[↑]" })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("dd", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("ul", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            'This section shows some language setups ("RegExp Split Sentences", "RegExp Word Characters", "Make each character a word", "Remove spaces") for different languages. They are only recommendations, and you may change them according to your needs (and texts). See also ',
            /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#go1", children: "here" }),
            ".",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            'If you are unsure, try the "Language Settings Wizard" first. Later you can adjust the settings.',
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            "Please inform yourself about Unicode",
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              "a",
              {
                href: "http://en.wikipedia.org/wiki/Unicode",
                target: "_blank",
                children: "here (general information)"
              }
            ),
            "and",
            /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "http://unicode.coeurlumiere.com/", target: "_blank", children: "here (Table of Unicode characters)" }),
            "and about the characters that occur in the language you learn!",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("table", { className: "tab3", cellSpacing: 0, cellPadding: 5, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("tbody", { children: [
              /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { className: "tr1", children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1", children: "Language" }),
                /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1", children: [
                  "RegExp",
                  /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                  "Split",
                  /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                  "Sentences"
                ] }),
                /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1", children: [
                  "RegExp",
                  /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                  "Word",
                  /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                  "Characters"
                ] }),
                /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1", children: [
                  "Make each",
                  /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                  "character",
                  /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                  "a word"
                ] }),
                /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1", children: [
                  "Remove",
                  /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                  "spaces"
                ] })
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { className: "tr1", children: [
                /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1", children: [
                  "Latin and all languages",
                  /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                  "with a Latin derived alphabet",
                  /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                  "(English, French, German, etc.)"
                ] }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: ".!?:;" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "a-zA-ZÀ-ÖØ-öø-ȳ" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "No" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "No" })
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { className: "tr1", children: [
                /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1", children: [
                  "Languages with a",
                  /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                  "Cyrillic-derived alphabet",
                  /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                  "(Russian, Bulgarian, Ukrainian, etc.)"
                ] }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: ".!?:;" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "a-zA-ZÀ-ÖØ-öø-ȳЀ-ӹ" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "No" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "No" })
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { className: "tr1", children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "Greek" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: ".!?:;" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "\\x{0370}-\\x{03FF}\\x{1F00}-\\x{1FFF}" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "No" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "No" })
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { className: "tr1", children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "Hebrew (Right-To-Left = Yes)" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: ".!?:;" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "\\x{0590}-\\x{05FF}" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "No" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "No" })
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { className: "tr1", children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "Thai" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: ".!?:;" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "ก-๛" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "No" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "Yes" })
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { className: "tr1", children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "Chinese" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: ".!?:;。！？：；" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "一-龥" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "Yes or No" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "Yes" })
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { className: "tr1", children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "Japanese" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: ".!?:;。！？：；" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "一-龥ぁ-ヾ" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "Yes or No" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "Yes" })
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { className: "tr1", children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "Korean" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: ".!?:;。！？：；" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "가-힣ᄀ-ᇂ" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "No" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "No or Yes" })
              ] })
            ] }) }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            `"\\'" = Apostrophe, and/or "\\-" = Dash, may be added to "RegExp Word Characters", then words like "aujourd'hui" or "non-government-owned" are one word, instead of two or more single words. If you omit "\\'" and/or "\\-" here, you can still create a multi-word expression "aujourd'hui", etc., later.`,
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            '":" and ";" may be omitted in "RegExp Split Sentences", but longer example sentences may result from this.',
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            '"Make each character a word" = "Yes" should only be set in Chinese, Japanese, and similar languages. Normally words are split by any non-word character or whitespace. If you choose "Yes", then you do not need to insert spaces to specify word endings. If you choose "No", then you must prepare texts without whitespace by inserting whitespace to specify words. If you are a beginner, "Yes" may be better for you. If you are an advanced learner, and you have a possibility to prepare a text in the above described way, then "No" may be better for you.',
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: '"Remove spaces" = "Yes" should only be set in Chinese, Japanese, and similar languages to remove whitespace that has been automatically or manually inserted to specify words.' })
        ] }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("dt", { children: [
          "▶",
          /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("a", { name: "termscores", id: "termscores", children: "Term Scores" }) }),
          "- ",
          /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#", children: "[↑]" })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("dd", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("ul", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            'The score of a term is a rough measure (in percent) how well you know a term. It is displayed in "My Terms", and it is used in tests to decide which terms are tested next.',
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            "The score is calculated as follows:",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              "img",
              {
                className: "grayborder",
                src: "img/score1full.png",
                alt: "Image"
              }
            ),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "Terms with status 1 are tested either today (if not created today) or tomorrow (if created today, or a test failed today). Terms set to status 2 should be retested after 2 days. Terms set to status 3 should be retested after 9 days. Terms set to status 4 should be retested after 27 days. Terms set to status 5 should be retested after 72 days.",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            "Example 1: Five terms were tested today; they are now in status 1, 2, 3, 4, and 5. The term with status 1 is still unknown (failed the test, so the score is still 0 %). The term with status 5 is well known (score: 100 %).",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              "img",
              {
                className: "grayborder",
                src: "img/score2.png",
                alt: "Image"
              }
            ),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            "Example 2: Five terms were not tested for some time; they are in status 1, 2, 3, 4, and 5. All of them have a score of 0, because the number of days indicate that you may have forgotten them. Therefore all should be retested today.",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              "img",
              {
                className: "grayborder",
                src: "img/score3.png",
                alt: "Image"
              }
            )
          ] })
        ] }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("dt", { children: [
          "▶",
          /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("a", { name: "keybind", id: "keybind", children: "Key Bindings" }) }),
          "- ",
          /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#", children: "[↑]" })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("dd", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("ul", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            "Important: Before using the keyboard you must set the focus within the frame by clicking once on the frame!",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            "Key Bindings in the TEXT Frame",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("table", { className: "tab3", cellSpacing: 0, cellPadding: 5, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("tbody", { children: [
              /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { className: "tr1", children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1", children: "Key(s)" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1", children: "Action(s)" })
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { className: "tr1", children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "RETURN" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "The next UNKNOWN (blue) word in the text will be shown for creation" })
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { className: "tr1", children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "RIGHT or SPACE" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "Mark next SAVED (non-blue) term (*)" })
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { className: "tr1", children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "LEFT" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "Mark previous SAVED (non-blue) term (*)" })
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { className: "tr1", children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "HOME" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "Mark first SAVED (non-blue) term (*)" })
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { className: "tr1", children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "END" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "Mark last SAVED (non-blue) term (*)" })
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { className: "tr1", children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "1, 2, 3, 4, 5" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "Set status of marked term to 1, 2, 3, 4, or 5" })
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { className: "tr1", children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "I" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: 'Set status of marked term to "Ignored"' })
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { className: "tr1", children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "W" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: 'Set status of marked term to "Well Known"' })
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { className: "tr1", children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "E" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "Edit marked term" })
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { className: "tr1", children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "A" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "Set audio position according to position of marked term." })
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { className: "tr1", children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "ESC" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "Reset marked term(s)" })
              ] })
            ] }) }),
            "(*) Only saved terms with the status(es) defined/filtered in the settings are visited and marked!",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            "Key Bindings in the TEST Frame",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("table", { className: "tab3", cellSpacing: 0, cellPadding: 5, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("tbody", { children: [
              /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { className: "tr1", children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1", children: "Key(s)" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1", children: "Action(s)" })
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { className: "tr1", children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "SPACE" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "Show solution" })
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { className: "tr1", children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "UP" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "Set status of tested term to (old status plus 1)" })
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { className: "tr1", children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "DOWN" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "Set status of tested term to (old status minus 1)" })
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { className: "tr1", children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "ESC" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "Do not change status of tested term" })
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { className: "tr1", children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "1, 2, 3, 4, 5" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "Set status of tested term to 1, 2, 3, 4, or 5" })
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { className: "tr1", children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "I" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: 'Set status of tested term to "Ignored"' })
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { className: "tr1", children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "W" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: 'Set status of tested term to "Well Known"' })
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { className: "tr1", children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "E" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: "Edit tested term" })
              ] })
            ] }) })
          ] })
        ] }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("dt", { children: [
          "▶",
          /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("a", { name: "history", id: "history", children: "Changelog" }) }),
          "- ",
          /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#", children: "[↑]" })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("dd", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("ul", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            "2.0.3 (February 15 2022):",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "An incompatibility with PHP 8.1+ (changed mysqli_report default setting in PHP 8.1+) has been fixed.",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            "2.0.2 (September 07 2021):",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            'An incompatibility with PHP 8+ (removed function "get_magic_quotes_gpc()" in PHP 8+) has been fixed. Thanks to Lucas L. for the hint.',
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            "2.0.1 (October 07 2020):",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "A bug when visiting terms/expressions with key strokes LEFT or RIGHT after a previous status change and with a set status filtering has been fixed.",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            "2.0.0 (October 04 2020):",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "No code changes. Sourceforge links corrected.",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "The old links [lwt.sf.net], [lwt.sourceforge.net] or [sourceforge.net/projects/lwt] are no longer valid!",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "The new links are now",
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              "a",
              {
                href: "https://learning-with-texts.sourceforge.io",
                target: "_blank",
                children: "learning-with-texts.sourceforge.io"
              }
            ),
            "(documentation and demo database) and",
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              "a",
              {
                href: "https://sourceforge.net/projects/learning-with-texts",
                target: "_blank",
                children: "sourceforge.net/projects/learning-with-texts"
              }
            ),
            "(project home and downloads).",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            "1.6.3 (April 06 2020):",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "Some missing confirmation dialogues (when deleting a single text, text tag, term, term tag, or language) added.",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            '1.6.2 (March 10 2018, this page "info.htm" last updated August 12 2019):',
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "New features:",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "Audio playback speed can now be set between 0.5x and 1.5x.",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            'Waiting wheel (to indicate saving data to database in the background) added in "Edit Improved Annotated Text".',
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "Checking for characters in the Unicode Supplementary Multilingual Planes (> U+FFFF) like emojis or very rare characters improved/added. Such characters are currently not supported.",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "Updates/bug fixes:",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "jQuery library updated to v1.12.4.",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            '"Mobile_Detect" updated to v2.8.30.',
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "LWT demo database updated.",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "Documentation updated.",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "Some minor glitches fixed.",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            'Glosbe API calls via "glosbe_api" in demo database and language settings wizard removed - they often did not work due to API restrictions. The file "glosbe_api" is still supplied as an example of a close integration of a dictionary API into LWT.',
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            '1.6.1 (February 01 2016, this page "info.htm" last updated January 13 2018):',
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "The jQuery and jPlayer libraries have been updated to v1.12.0 and v2.9.2, respectively. The jQuery.ScrollTo package has been updated to v2.1.2.",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "#links", children: "Link" }),
            ' to Chinese text segmentation "Jieba" added in documentation (Important Links - Additional Resources - For learners of Chinese).',
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { children: [
            "1.6.0 (January 28 2016):",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "As mysql_* database calls are deprecated and are no longer supported by PHP, they have been changed to the corresponding mysqli_* calls. If you run a server with PHP version 7.0.0 or higher, you MUST use LWT 1.6.0 or higher. Thanks to Laurens Vercaigne for his work!",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "Debugging updated. Status information on start page improved. Documentation updated.",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
          ] })
        ] }) })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("p", { className: "smallgray graydotted", children: " " }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("table", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("tbody", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "width50px", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
          "a",
          {
            target: "_blank",
            href: "http://en.wikipedia.org/wiki/Public_domain_software",
            children: /* @__PURE__ */ jsxRuntimeExports.jsx("img", { src: "img/public_domain.png", alt: "Public Domain" })
          }
        ) }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("p", { className: "smallgray", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "a",
            {
              href: "http://sourceforge.net/projects/learning-with-texts/",
              target: "_blank",
              children: '"Learning with Texts" (LWT)'
            }
          ),
          "is released into the Public Domain. This applies worldwide.",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "In case this is not legally possible, any entity is granted the right to use this work for any purpose,",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "without any conditions, unless such conditions are required by law."
        ] }) })
      ] }) }) })
    ] })
  ] }) });
}
function LanguageLine({
  language,
  activeLanguageId,
  texts: texts2,
  terms,
  archivedtexts: archivedtexts2
}) {
  const id2 = language.LgID;
  const thisRowActive = activeLanguageId === id2;
  const numTextsThisLanguage = texts2.filter(
    (text) => text.TxLgID === id2
  ).length;
  const numTermsThisLanguage = terms.filter(
    (term) => term.WoLgID === id2
  ).length;
  const numArchivedThisLanguage = archivedtexts2.filter(
    (text) => text.AtLgID === id2
  ).length;
  const TdTh = ({ children }) => {
    if (thisRowActive) {
      return /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1 center", children });
    }
    return /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children });
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
    thisRowActive ? /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
      Icon,
      {
        onClick: () => {
          dataService.setActiveLanguage(thisRowActive ? null : id2);
        },
        src: "exclamation-red",
        title: "Current Language"
      }
    ) }) : /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
      Icon,
      {
        onClick: () => {
          dataService.setActiveLanguage(thisRowActive ? null : id2);
        },
        src: "tick-button",
        title: "Set as Current Language"
      }
    ) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(TdTh, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(A, { href: `/do_test?lang=${id2}`, children: /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "question-balloon", title: "Test" }) }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs(TdTh, { children: [
      " ",
      /* @__PURE__ */ jsxRuntimeExports.jsx(A, { href: `/edit_languages?chg=${id2}`, children: /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "document--pencil", title: "Edit" }) }),
      " ",
      numTermsThisLanguage === 0 && numArchivedThisLanguage === 0 && numTextsThisLanguage === 0 ? /* @__PURE__ */ jsxRuntimeExports.jsx(
        "span",
        {
          className: "click",
          onClick: () => {
            if (confirmDelete()) {
              dataService.deleteLanguage(language.LgID);
            }
          },
          children: /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "minus-button", title: "Delete" })
        }
      ) : /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "placeholder", title: "Delete not possible" }),
      " "
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(TdTh, { children: language.LgName }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(TdTh, { children: numTextsThisLanguage !== 0 ? /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(A, { href: `/edit_texts?filterlang=${language.LgID}`, children: numTextsThisLanguage }),
      "  ",
      /* @__PURE__ */ jsxRuntimeExports.jsx(A, { href: `/edit_languages?refresh=${language.LgID}`, children: /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "lightning", title: "Reparse Texts" }) })
    ] }) : 0 }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(TdTh, { children: numArchivedThisLanguage !== 0 ? /* @__PURE__ */ jsxRuntimeExports.jsx(A, { href: `/edit_archivedtexts?filterlang=${language.LgID}`, children: numArchivedThisLanguage }) : 0 }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(TdTh, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(A, { href: `/edit_words?filterlang=${language.LgID}`, children: numTermsThisLanguage }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(TdTh, { children: language.LgExportTemplate !== void 0 ? /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "status", title: "Yes" }) : /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "status-busy", title: "No" }) })
  ] });
}
function LanguagesPage() {
  const [{ languages: languages2, activeLanguageId, texts: texts2, words: words2, archivedtexts: archivedtexts2 }] = useData([
    "languages",
    "activeLanguageId",
    "texts",
    "words",
    "archivedtexts"
  ]);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(Header, { title: "My Languages" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("p", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs(A, { href: `/edit_languages?new=${1}`, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "plus-button", title: "New" }),
      " New Language ..."
    ] }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("table", { className: "sortable tab1", cellSpacing: 0, cellPadding: 5, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("thead", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1 sorttable_nosort", children: [
          "Curr.",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "Lang."
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1 sorttable_nosort", children: [
          "Test",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "↓↓↓"
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1 sorttable_nosort", children: "Actions" }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1 clickable", children: "Language" }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1 sorttable_numeric clickable", children: [
          "Texts,",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "Reparse"
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1 sorttable_numeric clickable", children: [
          "Arch.",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "Texts"
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1 sorttable_numeric clickable", children: "Terms" }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1 sorttable_nosort", children: [
          "Export",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "Template?"
        ] })
      ] }) }),
      languages2.map((lang) => {
        return /* @__PURE__ */ jsxRuntimeExports.jsx(
          LanguageLine,
          {
            texts: texts2,
            archivedtexts: archivedtexts2,
            terms: words2,
            language: lang,
            activeLanguageId
          }
        );
      })
    ] })
  ] });
}
const TextMultiAction = {
  test: (selectedValues) => {
    console.log("test");
  },
  addtag: (selectedValues) => {
    console.log("addtag");
  },
  deltag: (selectedValues) => {
    console.log("deltag");
  },
  rebuild: (selectedValues) => {
    console.log("rebuild");
  },
  setsent: (selectedValues) => {
    console.log("setsent");
  },
  arch: (selectedValues) => {
    console.log("arch");
  },
  del: (selectedValues) => {
    console.log("del");
  }
};
function TextMultiActions({
  onSelectAll,
  onSelectNone,
  selectedValues
}) {
  return /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, { children: /* @__PURE__ */ jsxRuntimeExports.jsx("form", { name: "form1", action: "#", children: /* @__PURE__ */ jsxRuntimeExports.jsx("table", { className: "tab1", cellSpacing: 0, cellPadding: 5, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("tbody", { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("tr", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1", colSpan: 2, children: [
      "Multi Actions",
      /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "lightning", title: "Multi Actions" })
    ] }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("input", { type: "button", value: "Mark All", onClick: onSelectAll }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("input", { type: "button", value: "Mark None", onClick: onSelectNone })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center", children: [
        "Marked Texts",
        /* @__PURE__ */ jsxRuntimeExports.jsxs(
          "select",
          {
            name: "markaction",
            id: "markaction",
            disabled: selectedValues.size === 0,
            onChange: ({ target: { value } }) => {
              TextMultiAction[value](
                selectedValues
              );
            },
            children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { disabled: true, children: "------------" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "test", children: "Test Marked Texts" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { disabled: true, children: "------------" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "addtag", children: "Add Tag" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "deltag", children: "Remove Tag" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { disabled: true, children: "------------" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "rebuild", children: "Reparse Texts" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "setsent", children: "Set Term Sentences" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { disabled: true, children: "------------" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "arch", children: "Archive Marked Texts" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { disabled: true, children: "------------" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "del", children: "Delete Marked Texts" })
            ]
          }
        )
      ] })
    ] })
  ] }) }) }) });
}
function LibraryHeader() {
  return /* @__PURE__ */ jsxRuntimeExports.jsx("thead", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1 sorttable_nosort", children: "Mark" }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1 sorttable_nosort", children: [
      "Read",
      /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
      "& Test"
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1 sorttable_nosort", children: "Actions" }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1 clickable", children: [
      "Title [Tags] / Audio: ",
      /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "speaker-volume", title: "With Audio" }),
      ", Src.Link: ",
      /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "chain", title: "Source Link available" }),
      ", Ann.Text: ",
      /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "tick", title: "Annotated Text available" })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1 sorttable_numeric clickable", children: [
      "Total",
      /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
      "Words"
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1 sorttable_numeric clickable", children: [
      "Saved",
      /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
      "Wo+Ex"
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1 sorttable_numeric clickable", children: [
      "Unkn.",
      /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
      "Words"
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1 sorttable_numeric clickable", children: [
      "Unkn.",
      /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
      "%"
    ] })
  ] }) });
}
function LibraryFooter({
  numTexts,
  currentPage,
  numPages
}) {
  return /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, { children: /* @__PURE__ */ jsxRuntimeExports.jsx("table", { className: "tab1", cellSpacing: 0, cellPadding: 5, children: /* @__PURE__ */ jsxRuntimeExports.jsx("tbody", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { style: { whiteSpace: "nowrap" }, className: "th1", children: [
      numTexts,
      " Texts"
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { style: { whiteSpace: "nowrap" }, className: "th1", children: [
      "   ",
      /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "placeholder", alt: "-" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "placeholder", alt: "-" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Pager, { currentPage, numPages })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { style: { whiteSpace: "nowrap" }, className: "th1", children: [
      "   ",
      /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "placeholder", alt: "-" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "placeholder", alt: "-" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        ResizePage,
        {
          pageSize: 15,
          onPageResize: function(newSize) {
            throw new Error("Function not implemented.");
          }
        }
      )
    ] })
  ] }) }) }) });
}
function ResizePage({
  pageSize,
  onPageResize
}) {
  const numberOptions = 15;
  const options = new Array(numberOptions).fill(0).map((_2, ii2) => (ii2 + 1) * 5);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    "#/Page:",
    " ",
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "select",
      {
        value: pageSize,
        onChange: (val) => onPageResize(Number.parseInt(val)),
        children: options.map((val) => {
          return /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: val, children: val });
        })
      }
    )
  ] });
}
function LibraryRow({
  text,
  checked,
  onChange
}) {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx(A, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(
      "input",
      {
        name: "marked[]",
        className: "markcheck",
        type: "checkbox",
        checked,
        onChange: () => onChange(),
        value: "2"
      }
    ) }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { style: { whiteSpace: "nowrap" }, className: "td1 center", children: [
      " ",
      /* @__PURE__ */ jsxRuntimeExports.jsx(A, { href: `/do_text?start=${text.TxID}`, children: /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "book-open-bookmark", title: "Read" }) }),
      " ",
      /* @__PURE__ */ jsxRuntimeExports.jsx(A, { href: `/do_test?text=${text.TxID}`, children: /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "question-balloon", title: "Test" }) }),
      " "
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center", style: { whiteSpace: "nowrap" }, children: [
      " ",
      /* @__PURE__ */ jsxRuntimeExports.jsx(A, { href: `/print_text?text=${text.TxID}`, children: /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "printer", title: "Print" }) }),
      " ",
      /* @__PURE__ */ jsxRuntimeExports.jsx(A, { href: `/edit_texts?arch=${text.TxID}`, children: /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "inbox-download", title: "Archive" }) }),
      " ",
      /* @__PURE__ */ jsxRuntimeExports.jsx(A, { href: `/edit_texts?chg=${text.TxID}`, children: /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "document--pencil", title: "Edit" }) }),
      " ",
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        "span",
        {
          className: "click",
          onClick: () => dataService.deleteText(text.TxID),
          children: /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "minus-button", title: "Delete" })
        }
      ),
      " "
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center", children: [
      text.title,
      /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "smallgray2", children: text.tags && "[" + text.tags.map((tag, ii2) => {
        return ii2 > 0 ? " " + tag : tag;
      }) + "]" }),
      text.audioAvailable && /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "speaker-volume" }),
      text.link && /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "chain" }),
      text.annotatedAvailable && /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "tick" })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: text.totalWords }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: text.saved }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: text.unk }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: text.unkPerc })
  ] });
}
function Library({
  currentPage,
  query = null,
  filterTag1 = null,
  filterTag2 = null
}) {
  const [{ textDetails, activeLanguage, texttags: texttags2, tags2: tags22, settings: settings2 }] = useData([
    "textDetails",
    "activeLanguage",
    "texttags",
    "tags2",
    "settings"
  ]);
  console.log("TEST123-library", {
    activeLanguage,
    tags2: tags22,
    texttags: texttags2,
    textDetails
  });
  const pageSize = settings2["set-texts-per-page"] || -1;
  const { numPages, dataOnPage } = usePager(
    textDetails || [],
    currentPage,
    pageSize
  );
  const paramUpdater = useUpdateParams();
  const navigator2 = useInternalNavigate();
  const queryRef = reactExports.useRef();
  const {
    selectedValues,
    onSelectAll,
    onSelectNone,
    onSelect,
    checkboxPropsForEntry
  } = useSelection(textDetails || [], "TxID");
  const recno = (textDetails || []).length;
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      Header,
      {
        title: activeLanguage ? `My ${activeLanguage.LgName} Texts` : ""
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("p", { children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs(A, { href: `/edit_texts?new=${1}`, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "plus-button", title: "New" }),
        " New Text ..."
      ] }),
      "  |  ",
      /* @__PURE__ */ jsxRuntimeExports.jsxs(A, { href: "/long_text_import", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "plus-button", title: "Long Text Import" }),
        " Long Text Import ..."
      ] })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("form", { name: "form1", children: /* @__PURE__ */ jsxRuntimeExports.jsxs("table", { className: "tab1", cellSpacing: 0, cellPadding: 5, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("tr", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1", colSpan: 4, children: [
        "Filter ",
        /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "funnel", title: "Filter" }),
        " ",
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "input",
          {
            type: "button",
            value: "Reset All",
            onClick: () => {
              resetAll();
              navigator2("/edit_texts");
            }
          }
        )
      ] }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center", colSpan: 2, children: [
          "Language:",
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            LanguageDropdown,
            {
              name: "filterlang",
              header: "Filter off",
              onChange: (val) => {
                if (val === -1) {
                  dataService.setActiveLanguage(null);
                } else {
                  dataService.setActiveLanguage(val);
                }
              },
              defaultValue: activeLanguage?.LgID
            }
          )
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center", colSpan: 2, children: [
          "Text Title (Wildc.=*):",
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "input",
            {
              type: "text",
              name: "query",
              ref: queryRef,
              defaultValue: query || "",
              maxLength: 50,
              size: 15
            }
          ),
          " ",
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "input",
            {
              type: "button",
              name: "querybutton",
              value: "Filter",
              onClick: () => navigator2(
                `/edit_texts?page=1&query=${queryRef.current?.value || ""}`
              )
            }
          ),
          " ",
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "input",
            {
              type: "button",
              value: "Clear",
              onClick: () => {
                navigator2("/edit_texts?page=1&query=");
                if (queryRef.current) {
                  queryRef.current.value = "";
                }
              }
            }
          )
        ] })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs(
          "td",
          {
            className: "td1 center",
            colSpan: 2,
            style: { whiteSpace: "nowrap" },
            children: [
              "Tag #1:",
              /* @__PURE__ */ jsxRuntimeExports.jsx(TagDropDown, { tags: tags22, tagKey: "tag1" })
            ]
          }
        ),
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          TagAndOr,
          {
            onChange: ({ target: { value } }) => {
              paramUpdater({ tag12: value });
            }
          }
        ),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center", style: { whiteSpace: "nowrap" }, children: [
          "Tag #2:",
          /* @__PURE__ */ jsxRuntimeExports.jsx(TagDropDown, { tags: tags22, tagKey: "tag2" })
        ] })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1", colSpan: 1, style: { whiteSpace: "nowrap" }, children: `${recno} Text${recno === 1 ? "" : "s"}` }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1", colSpan: 2, style: { whiteSpace: "nowrap" }, children: /* @__PURE__ */ jsxRuntimeExports.jsx(Pager, { currentPage, numPages }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1", colSpan: 1, style: { whiteSpace: "nowrap" }, children: [
          "Sort Order:",
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "select",
            {
              name: "sort",
              onChange: "{val=document.form1.sort.options[document.form1.sort.selectedIndex].value; location.href='edit_texts.php?page=1&sort=' + val;}"
            }
          )
        ] })
      ] })
    ] }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      TextMultiActions,
      {
        onSelectAll,
        onSelectNone,
        selectedValues
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("table", { className: "sortable tab1", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(LibraryHeader, {}),
        /* @__PURE__ */ jsxRuntimeExports.jsx("tbody", { children: dataOnPage && dataOnPage.map((text) => {
          return /* @__PURE__ */ jsxRuntimeExports.jsx(LibraryRow, { text, ...checkboxPropsForEntry(text) });
        }) })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        LibraryFooter,
        {
          numTexts: textDetails ? textDetails.length : 0,
          currentPage,
          numPages
        }
      )
    ] })
  ] });
}
function EditText({ chgID }) {
  const [{ texts: texts2 }] = useData(["texts"]);
  const editingText = texts2.find(({ TxID }) => {
    return TxID === chgID;
  });
  if (!editingText) {
    throw new Error("Invalid change ID");
  }
  const validator = TextsValidator;
  const navigator2 = useInternalNavigate();
  const refMap = RefMap(validator);
  const TxInput = buildFormInput(refMap, editingText);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(Header, { title: "My Texts" }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("h4", { children: [
      "Edit Text",
      " ",
      /* @__PURE__ */ jsxRuntimeExports.jsx("a", { target: "_blank", href: "info.htm#howtotext", children: /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "question-frame", title: "Help" }) })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs(
      "form",
      {
        className: "validate",
        action: "<?php echo $_SERVER['PHP_SELF']; ?>#rec<?php echo $_REQUEST['chg']; ?>",
        method: "post",
        children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(TxInput, { type: "hidden", entryKey: "TxID", fixed: true }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("table", { className: "tab3", cellSpacing: 0, cellPadding: 5, children: [
            /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Language:" }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1", children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx(LanguageDropdown, { defaultValue: editingText.TxLgID }),
                /* @__PURE__ */ jsxRuntimeExports.jsx(RequiredLineButton, {})
              ] })
            ] }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Title:" }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1", children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx(
                  TxInput,
                  {
                    type: "text",
                    className: "notempty checkoutsidebmp",
                    entryKey: "TxTitle",
                    default: true,
                    maxLength: 200,
                    size: 60
                  }
                ),
                " ",
                /* @__PURE__ */ jsxRuntimeExports.jsx(RequiredLineButton, {})
              ] })
            ] }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
              /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 right", children: [
                "Text:",
                /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                "(max.",
                /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                "65,000",
                /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                "bytes)"
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1", children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx(
                  "textarea",
                  {
                    name: "TxText",
                    className: "notempty checkbytes checkoutsidebmp",
                    maxLength: 65e3,
                    cols: 60,
                    rows: 20,
                    defaultValue: editingText.TxText
                  }
                ),
                /* @__PURE__ */ jsxRuntimeExports.jsx(RequiredLineButton, {})
              ] })
            ] }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Ann.Text:" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1" })
            ] }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Source URI:" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                TxInput,
                {
                  type: "text",
                  className: "checkurl checkoutsidebmp",
                  entryKey: "TxSourceURI",
                  default: true,
                  maxLength: 1e3,
                  size: 60
                }
              ) })
            ] }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Tags:" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1" })
            ] }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Audio-URI:" }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1", children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx(
                  TxInput,
                  {
                    type: "text",
                    className: "checkoutsidebmp",
                    entryKey: "TxAudioURI",
                    default: true,
                    maxLength: 200,
                    size: 60
                  }
                ),
                /* @__PURE__ */ jsxRuntimeExports.jsx("span", { id: "mediaselect" })
              ] })
            ] }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("tr", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 right", colSpan: 2, children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx(
                "input",
                {
                  type: "button",
                  value: "Cancel",
                  onClick: () => {
                    navigator2(`/edit_texts.php#rec${chgID}`);
                  }
                }
              ),
              /* @__PURE__ */ jsxRuntimeExports.jsx(
                "input",
                {
                  type: "button",
                  onClick: () => {
                    window.alert("TODO");
                  },
                  value: "Check"
                }
              ),
              /* @__PURE__ */ jsxRuntimeExports.jsx(
                "input",
                {
                  type: "button",
                  onClick: () => {
                    window.alert("TODO");
                  },
                  value: "Change"
                }
              ),
              /* @__PURE__ */ jsxRuntimeExports.jsx(
                "input",
                {
                  type: "button",
                  onClick: () => {
                    window.alert("TODO");
                  },
                  value: "Change and Open"
                }
              )
            ] }) })
          ] })
        ]
      }
    )
  ] });
}
function LongTextVerify({
  verifying
}) {
  const navigate = useInternalNavigate();
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(Header, { title: "Long Text Import" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("p", { children: " " }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs(
      "form",
      {
        encType: "multipart/form-data",
        action: "/long_text_import",
        method: "post",
        children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("input", { type: "hidden", name: "LgID", value: "2" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("input", { type: "hidden", name: "TxTitle", value: "TODO" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("input", { type: "hidden", name: "TxSourceURI", value: "" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("input", { type: "hidden", name: "TextTags", value: "null" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("input", { type: "hidden", name: "TextCount", value: "12" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("table", { className: "tab3", cellSpacing: 0, cellPadding: 5, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("tbody", { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("tr", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", colSpan: 2, children: verifying.length > 1 ? `This long text will be split into ${verifying.length} shorter
                texts - as follows:` : "This text can fit as a single text" }) }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("tr", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 right", colSpan: 2, children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx(
                "input",
                {
                  type: "button",
                  value: "Cancel",
                  onClick: () => {
                    navigate("/");
                  }
                }
              ),
              "  |  ",
              /* @__PURE__ */ jsxRuntimeExports.jsx(
                "input",
                {
                  type: "button",
                  value: "Go Back",
                  onClick: () => {
                    history.back();
                  }
                }
              ),
              "  |  ",
              /* @__PURE__ */ jsxRuntimeExports.jsx(
                "input",
                {
                  type: "button",
                  value: `Create ${verifying.length} texts`,
                  onClick: () => {
                    verifying.forEach((text) => {
                      dataService.addText(text);
                    });
                  }
                }
              )
            ] }) }),
            verifying.map(({ TxText }, ii2) => {
              return /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
                /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 right", children: [
                  /* @__PURE__ */ jsxRuntimeExports.jsxs("b", { children: [
                    "Text ",
                    ii2 + 1,
                    ":"
                  ] }),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                  "Length:",
                  /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                  byteSizeOfString(TxText),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                  "Bytes"
                ] }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                  "textarea",
                  {
                    readOnly: true,
                    name: `text[${ii2}]`,
                    cols: 60,
                    rows: 10,
                    defaultValue: TxText
                  }
                ) })
              ] });
            })
          ] }) })
        ]
      }
    )
  ] });
}
function ImportLongText({
  onSetVerify
}) {
  const [{ languages: languages2, tags: tags3, texts: texts2, activeLanguageId }] = useData([
    "languages",
    "tags",
    "texts",
    "activeLanguageId"
  ]);
  const navigate = useInternalNavigate();
  const validator = object({
    TxText: string(),
    TxLgID: number(),
    TxTitle: string()
  });
  const refMap = RefMap(validator);
  const TxInput = buildFormInput(refMap);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(Header, { title: "Import Long Text" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("table", { className: "tab3", cellSpacing: 0, cellPadding: 5, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("tbody", { children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Language:" }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            LanguageDropdown,
            {
              defaultValue: activeLanguageId ? activeLanguageId : void 0,
              onChange: (val) => dataService.setActiveLanguage(val),
              dropdownRef: refMap.TxLgID
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsx(RequiredLineButton, {})
        ] })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Title:" }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            TxInput,
            {
              type: "text",
              className: "notempty checkoutsidebmp",
              entryKey: "TxTitle",
              maxLength: 200,
              size: 60
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsx(RequiredLineButton, {})
        ] })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Text:" }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1", children: [
          "Either specify a ",
          /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "File to upload" }),
          ":",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx("input", { name: "thefile", type: "file" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "Or" }),
          " paste a text from the clipboard (and do ",
          /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "NOT" }),
          "specify file):",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "textarea",
            {
              className: "checkoutsidebmp",
              ref: refMap.TxText,
              name: "Upload",
              cols: 60,
              rows: 15
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("p", { className: "smallgray", children: [
            "If the text is too long, the import may not be possible.",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "Current upload limits (in bytes):",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "post_max_size = 8M / upload_max_filesize = 2M" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "If needed, increase in ",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            '"" ',
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "and restart server."
          ] })
        ] })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 right", children: [
          "NEWLINES and",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "Paragraphs:"
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs(
            "select",
            {
              name: "paragraph_handling",
              defaultValue: "1",
              onChange: () => {
              },
              children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "1", children: "ONE NEWLINE: Paragraph ends" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "2", children: "TWO NEWLINEs: Paragraph ends. Single NEWLINE converted to SPACE" })
              ]
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsx(RequiredLineButton, {})
        ] })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 right", children: [
          "Maximum",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "Sentences",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "per Text:"
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "input",
            {
              type: "text",
              className: "notempty posintnumber",
              name: "maxsent",
              value: "50",
              maxLength: 3,
              size: 3
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsx(RequiredLineButton, {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("span", { className: "smallgray", children: [
            "Values higher than 100 may slow down text display.",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "Very low values (< 5) may result in too many texts.",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "The maximum number of new texts must not exceed 980.",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "A single new text will never exceed the length of 65,000 bytes."
          ] })
        ] })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Source URI:" }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
          TxInput,
          {
            type: "text",
            className: "checkurl checkoutsidebmp",
            entryKey: "TxSourceURI",
            maxLength: 1e3,
            size: 60
          }
        ) })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Tags:" }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
          "ul",
          {
            id: "texttags",
            className: "tagit ui-widget ui-widget-content ui-corner-all",
            children: /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { className: "tagit-new", children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx(
                "span",
                {
                  role: "status",
                  "aria-live": "polite",
                  className: "ui-helper-hidden-accessible"
                }
              ),
              /* @__PURE__ */ jsxRuntimeExports.jsx(
                "input",
                {
                  type: "text",
                  maxLength: 20,
                  size: 20,
                  className: "ui-widget-content ui-autocomplete-input",
                  autoComplete: "off"
                }
              )
            ] })
          }
        ) })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("tr", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 right", colSpan: 2, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "input",
          {
            type: "button",
            value: "Cancel",
            onClick: () => {
              navigate("/");
            }
          }
        ),
        "  |  ",
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "input",
          {
            type: "button",
            value: "NEXT STEP: Check the Texts",
            onClick: () => {
              console.log("LONGIMPORT", refMap.TxText.current);
              CheckAndSubmit(
                refMap,
                { TxLgID: parseNumMap },
                validator,
                ({ TxText, TxLgID, TxTitle }) => {
                  const splitTexts = splitCheckText(
                    TxText,
                    languages2.find((lang) => {
                      return lang.LgID === TxLgID;
                    }),
                    -2
                  );
                  console.log(splitTexts);
                  onSetVerify(
                    splitTexts.map((text, ii2) => {
                      return {
                        TxText: text,
                        TxLgID,
                        TxTitle: `${TxTitle} [${ii2 + 1}/${splitTexts.length}]`
                      };
                    })
                  );
                }
              );
            }
          }
        )
      ] }) })
    ] }) })
  ] });
}
function LongText() {
  const [verifying, setVerifying] = reactExports.useState(null);
  const isVerify = verifying !== null;
  return /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, { children: isVerify ? /* @__PURE__ */ jsxRuntimeExports.jsx(LongTextVerify, { verifying }) : /* @__PURE__ */ jsxRuntimeExports.jsx(ImportLongText, { onSetVerify: setVerifying }) });
}
function NewLanguage() {
  const [wizardOpen, setWizardOpen] = reactExports.useState(false);
  const navigator2 = useInternalNavigate();
  const validator = LanguagesValidatorNoId;
  const refMap = RefMap(validator);
  const defaultLgForm = {
    LgRegexpWordCharacters: "a-zA-ZÀ-ÖØ-öø-ȳ",
    LgExportTemplate: "$y	$t\n",
    LgExceptionsSplitSentences: "Mr.|Dr.|[A-Z].|Vd.|Vds.",
    LgRegexpSplitSentences: '.!?:;"',
    LgGoogleTranslateURI: "*http://translate.google.com/?ie=UTF-8&sl=••&tl=••&text=###",
    LgCharacterSubstitutions: "´='|`='|’='|‘='|...=…|..=‥"
  };
  const LgInput = buildFormInput(refMap, defaultLgForm);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(Header, { title: "New Language" }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("h4", { children: [
      "New Language",
      /* @__PURE__ */ jsxRuntimeExports.jsx("a", { target: "_blank", href: "info#howtolang", children: /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "question-frame", title: "Help" }) })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("form", { className: "validate", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("table", { className: "tab1", cellSpacing: 0, cellPadding: 5, children: /* @__PURE__ */ jsxRuntimeExports.jsx("tbody", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("tr", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center backlightyellow", colSpan: 2, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          Icon,
          {
            src: "wizard",
            title: "Language Settings Wizard",
            className: "click",
            onClick: () => {
              setWizardOpen(true);
            }
          }
        ),
        /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
        /* @__PURE__ */ jsxRuntimeExports.jsxs(
          "span",
          {
            className: "click",
            onClick: () => {
              setWizardOpen(true);
            },
            children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "arrow-000-medium", title: "->" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "Language Settings Wizard" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "arrow-180-medium", title: "<-" })
            ]
          }
        ),
        /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("span", { className: "smallgray", children: [
          "Select your native (L1) and study (L2) languages, and let the wizard set all marked language settings!",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "(You can adjust the settings afterwards.)"
        ] })
      ] }) }) }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("table", { className: "tab1", cellSpacing: 0, cellPadding: 5, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("tbody", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right backlightyellow", children: 'Study Language "L2":' }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1", children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              LgInput,
              {
                type: "text",
                className: "notempty setfocus checkoutsidebmp",
                entryKey: "LgName",
                maxLength: 40,
                size: 40,
                default: true
              }
            ),
            /* @__PURE__ */ jsxRuntimeExports.jsx(RequiredLineButton, {})
          ] })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right backlightyellow", children: "Dictionary 1 URI:" }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1", children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              LgInput,
              {
                type: "text",
                className: "checkdicturl notempty checkoutsidebmp",
                entryKey: "LgDict1URI",
                maxLength: 200,
                size: 60
              }
            ),
            /* @__PURE__ */ jsxRuntimeExports.jsx(RequiredLineButton, {})
          ] })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Dictionary 2 URI:" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
            LgInput,
            {
              type: "text",
              className: "checkdicturl checkoutsidebmp",
              entryKey: "LgDict2URI",
              maxLength: 200,
              size: 60
            }
          ) })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right backlightyellow", children: "GoogleTranslate URI:" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
            LgInput,
            {
              type: "text",
              className: "checkdicturl checkoutsidebmp",
              entryKey: "LgGoogleTranslateURI",
              maxLength: 200,
              size: 60,
              default: true
            }
          ) })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right backlightyellow", children: "Text Size:" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: /* @__PURE__ */ jsxRuntimeExports.jsx(TextSizeSelect, { refMap, entryKey: "LgTextSize" }) })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Character Substitutions:" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
            LgInput,
            {
              type: "text",
              className: "checkoutsidebmp",
              entryKey: "LgCharacterSubstitutions",
              maxLength: 500,
              size: 60,
              default: true
            }
          ) })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right backlightyellow", children: "RegExp Split Sentences:" }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1", children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              LgInput,
              {
                type: "text",
                className: "notempty checkoutsidebmp",
                entryKey: "LgRegexpSplitSentences",
                default: true,
                maxLength: 500,
                size: 60
              }
            ),
            /* @__PURE__ */ jsxRuntimeExports.jsx(RequiredLineButton, {})
          ] })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Exceptions Split Sentences:" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
            LgInput,
            {
              type: "text",
              className: "checkoutsidebmp",
              entryKey: "LgExceptionsSplitSentences",
              default: true,
              maxLength: 500,
              size: 60
            }
          ) })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right backlightyellow", children: "RegExp Word Characters:" }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1", children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              LgInput,
              {
                type: "text",
                className: "notempty checkoutsidebmp",
                entryKey: "LgRegexpWordCharacters",
                default: true,
                maxLength: 500,
                size: 60
              }
            ),
            /* @__PURE__ */ jsxRuntimeExports.jsx(RequiredLineButton, {})
          ] })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right backlightyellow", children: "Make each character a word:" }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1", children: [
            /* @__PURE__ */ jsxRuntimeExports.jsxs("select", { name: "LgSplitEachChar", ref: refMap.LgSplitEachChar, children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "0", children: "No" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "1", children: "Yes" })
            ] }),
            "(e.g. for Chinese, Japanese, etc.)"
          ] })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right backlightyellow", children: "Remove spaces:" }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1", children: [
            /* @__PURE__ */ jsxRuntimeExports.jsxs("select", { name: "LgRemoveSpaces", ref: refMap.LgRemoveSpaces, children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "0", children: "No" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "1", children: "Yes" })
            ] }),
            "(e.g. for Chinese, Japanese, etc.)"
          ] })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right backlightyellow", children: "Right-To-Left Script:" }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1", children: [
            /* @__PURE__ */ jsxRuntimeExports.jsxs("select", { ref: refMap.LgRightToLeft, name: "LgRightToLeft", children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "0", children: "No" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "1", children: "Yes" })
            ] }),
            "(e.g. for Arabic, Hebrew, Farsi, Urdu, etc.)"
          ] })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 right", children: [
            "Export Template",
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              Icon,
              {
                className: "click",
                src: "question-frame",
                title: "Help",
                onClick: () => {
                  oewin("info_export_template");
                }
              }
            ),
            ":"
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
            LgInput,
            {
              type: "text",
              className: "checkoutsidebmp",
              entryKey: "LgExportTemplate",
              default: true,
              maxLength: 1e3,
              size: 60
            }
          ) })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("tr", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 right", colSpan: 2, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "input",
            {
              type: "button",
              value: "Cancel",
              onClick: () => {
                navigator2("/edit_languages");
              }
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "input",
            {
              type: "button",
              name: "op",
              value: "Save",
              onClick: () => {
                CheckAndSubmit(
                  refMap,
                  languagePreValidateMap,
                  validator,
                  (value) => {
                    dataService.addLanguage(value);
                    navigator2("/edit_languages");
                  }
                );
              }
            }
          )
        ] }) })
      ] }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("p", { className: "smallgray", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "Important:" }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
        'The placeholders "••" for the from/sl and dest/tl language codes in the URIs must be ',
        /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "replaced" }),
        " by the actual source and target language codes!",
        /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
        /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "info#howtolang", target: "_blank", children: "Please read the documentation" }),
        ". Languages with a ",
        /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "non-Latin alphabet need special attention" }),
        ",",
        /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "info#langsetup", target: "_blank", children: "see also here" }),
        "."
      ] })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      Modal,
      {
        isOpen: wizardOpen,
        style: {
          content: {
            // TODO not hardcoded
            backgroundColor: "black",
            width: "80%",
            height: "80%",
            left: "10%",
            top: "10%"
          }
        },
        contentLabel: "Wizard Modal",
        className: "center",
        children: /* @__PURE__ */ jsxRuntimeExports.jsx(
          NewLanguageWizard,
          {
            onSuccess: (l1, l2) => {
              const originSpec = LANGDEFS[l1];
              const targetSpec = LANGDEFS[l2];
              refMap["LgName"].current.value = l2;
              console.log(refMap.LgName.current.value, l1, l2);
              refMap["LgDict1URI"].current.value = `*https://de.glosbe.com/${targetSpec.LgGlosbeKey}/${originSpec.LgGlosbeKey}/###`;
              refMap["LgGoogleTranslateURI"].current.value = `*http://translate.google.com/?ie=UTF-8&sl=${targetSpec.LgGTransKey}&tl=${originSpec.LgGTransKey}&text=###`;
              refMap["LgTextSize"].current.value = targetSpec.LgTextSize;
              refMap["LgRegexpWordCharacters"].current.value = targetSpec.LgRegexpWordCharacters;
              refMap["LgRegexpSplitSentences"].current.value = targetSpec.LgRegexpSplitSentences;
              refMap["LgSplitEachChar"].current.value = targetSpec.LgSplitEachChar ? 1 : 0;
              refMap["LgRemoveSpaces"].current.value = targetSpec.LgRemoveSpaces ? 1 : 0;
              refMap["LgRightToLeft"].current.value = targetSpec.LgRightToLeft ? 1 : 0;
              setWizardOpen(false);
            },
            onExit: () => {
              setWizardOpen(false);
            }
          }
        )
      }
    )
  ] });
}
function PrintText({ textID }) {
  const [{ texts: texts2, languages: languages2 }] = useData(["texts", "languages"]);
  const showingText = texts2.find(({ TxID }) => {
    return TxID === textID;
  });
  if (!showingText) {
    throw new Error("invalid Text ID!");
  }
  const language = languages2.find(({ LgID }) => {
    return LgID === showingText.TxLgID;
  });
  if (!language) {
    throw new Error("invalid Text Language ID!");
  }
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "noprint", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        Header,
        {
          title: `PRINT&nbsp▶${showingText.TxTitle} ${showingText.TxSourceURI ? jsxRuntimeExports.jsx("a", { href: showingText.TxSourceURI, target: "_blank", children: jsxRuntimeExports.jsx(Icon, { src: "chain", title: "Text Source" }) }) : jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, {})}) . '}`
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("p", { id: "printoptions", children: [
        "Terms with ",
        /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "status(es)" }),
        " ",
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "select",
          {
            id: "status",
            children: "echo get_wordstatus_selectoptions($statusrange, true, true, false)"
          }
        ),
        " ",
        "...",
        /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
        "will be ",
        /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "annotated" }),
        ' with "',
        /* @__PURE__ */ jsxRuntimeExports.jsxs(
          "select",
          {
            id: "ann",
            children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx(
                "option",
                {
                  value: "0",
                  children: "Nothing"
                }
              ),
              /* @__PURE__ */ jsxRuntimeExports.jsx(
                "option",
                {
                  value: "1",
                  children: "Translation"
                }
              ),
              /* @__PURE__ */ jsxRuntimeExports.jsx(
                "option",
                {
                  value: "5",
                  children: "Translation &amp Tags"
                }
              ),
              /* @__PURE__ */ jsxRuntimeExports.jsx(
                "option",
                {
                  value: "2",
                  children: "Romanization"
                }
              ),
              /* @__PURE__ */ jsxRuntimeExports.jsx(
                "option",
                {
                  value: "3",
                  children: "Romanization &amp Translation"
                }
              ),
              /* @__PURE__ */ jsxRuntimeExports.jsx(
                "option",
                {
                  value: "7",
                  children: "Romanization, Translation &amp Tags"
                }
              )
            ]
          }
        ),
        /* @__PURE__ */ jsxRuntimeExports.jsxs(
          "select",
          {
            id: "annplcmnt",
            children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx(
                "option",
                {
                  value: "0",
                  children: "behind"
                }
              ),
              /* @__PURE__ */ jsxRuntimeExports.jsx(
                "option",
                {
                  value: "1",
                  children: "in front of"
                }
              ),
              /* @__PURE__ */ jsxRuntimeExports.jsx(
                "option",
                {
                  value: "2",
                  children: "above (ruby)"
                }
              )
            ]
          }
        ),
        " ",
        "the term.",
        /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "input",
          {
            type: "button",
            value: "Print it!",
            onClick: () => window.print()
          }
        ),
        " ",
        "(only the text below the line)"
      ] })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "div",
      {
        id: "print",
        children: /* @__PURE__ */ jsxRuntimeExports.jsxs(
          "p",
          {
            style: { fontSize: language.LgTextSize },
            children: [
              showingText.TxTitle,
              /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
              /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
              showingText.TxText
            ]
          }
        )
      }
    )
  ] });
}
var src = { exports: {} };
var cssProperties = [
  "alignContent",
  "MozAlignContent",
  "WebkitAlignContent",
  "MSAlignContent",
  "OAlignContent",
  "alignItems",
  "MozAlignItems",
  "WebkitAlignItems",
  "MSAlignItems",
  "OAlignItems",
  "alignSelf",
  "MozAlignSelf",
  "WebkitAlignSelf",
  "MSAlignSelf",
  "OAlignSelf",
  "all",
  "MozAll",
  "WebkitAll",
  "MSAll",
  "OAll",
  "animation",
  "MozAnimation",
  "WebkitAnimation",
  "MSAnimation",
  "OAnimation",
  "animationDelay",
  "MozAnimationDelay",
  "WebkitAnimationDelay",
  "MSAnimationDelay",
  "OAnimationDelay",
  "animationDirection",
  "MozAnimationDirection",
  "WebkitAnimationDirection",
  "MSAnimationDirection",
  "OAnimationDirection",
  "animationDuration",
  "MozAnimationDuration",
  "WebkitAnimationDuration",
  "MSAnimationDuration",
  "OAnimationDuration",
  "animationFillMode",
  "MozAnimationFillMode",
  "WebkitAnimationFillMode",
  "MSAnimationFillMode",
  "OAnimationFillMode",
  "animationIterationCount",
  "MozAnimationIterationCount",
  "WebkitAnimationIterationCount",
  "MSAnimationIterationCount",
  "OAnimationIterationCount",
  "animationName",
  "MozAnimationName",
  "WebkitAnimationName",
  "MSAnimationName",
  "OAnimationName",
  "animationPlayState",
  "MozAnimationPlayState",
  "WebkitAnimationPlayState",
  "MSAnimationPlayState",
  "OAnimationPlayState",
  "animationTimingFunction",
  "MozAnimationTimingFunction",
  "WebkitAnimationTimingFunction",
  "MSAnimationTimingFunction",
  "OAnimationTimingFunction",
  "backfaceVisibility",
  "MozBackfaceVisibility",
  "WebkitBackfaceVisibility",
  "MSBackfaceVisibility",
  "OBackfaceVisibility",
  "background",
  "MozBackground",
  "WebkitBackground",
  "MSBackground",
  "OBackground",
  "backgroundAttachment",
  "MozBackgroundAttachment",
  "WebkitBackgroundAttachment",
  "MSBackgroundAttachment",
  "OBackgroundAttachment",
  "backgroundBlendMode",
  "MozBackgroundBlendMode",
  "WebkitBackgroundBlendMode",
  "MSBackgroundBlendMode",
  "OBackgroundBlendMode",
  "backgroundClip",
  "MozBackgroundClip",
  "WebkitBackgroundClip",
  "MSBackgroundClip",
  "OBackgroundClip",
  "backgroundColor",
  "MozBackgroundColor",
  "WebkitBackgroundColor",
  "MSBackgroundColor",
  "OBackgroundColor",
  "backgroundImage",
  "MozBackgroundImage",
  "WebkitBackgroundImage",
  "MSBackgroundImage",
  "OBackgroundImage",
  "backgroundOrigin",
  "MozBackgroundOrigin",
  "WebkitBackgroundOrigin",
  "MSBackgroundOrigin",
  "OBackgroundOrigin",
  "backgroundPosition",
  "MozBackgroundPosition",
  "WebkitBackgroundPosition",
  "MSBackgroundPosition",
  "OBackgroundPosition",
  "backgroundRepeat",
  "MozBackgroundRepeat",
  "WebkitBackgroundRepeat",
  "MSBackgroundRepeat",
  "OBackgroundRepeat",
  "backgroundSize",
  "MozBackgroundSize",
  "WebkitBackgroundSize",
  "MSBackgroundSize",
  "OBackgroundSize",
  "blockSize",
  "MozBlockSize",
  "WebkitBlockSize",
  "MSBlockSize",
  "OBlockSize",
  "border",
  "MozBorder",
  "WebkitBorder",
  "MSBorder",
  "OBorder",
  "borderBlockEnd",
  "MozBorderBlockEnd",
  "WebkitBorderBlockEnd",
  "MSBorderBlockEnd",
  "OBorderBlockEnd",
  "borderBlockEndColor",
  "MozBorderBlockEndColor",
  "WebkitBorderBlockEndColor",
  "MSBorderBlockEndColor",
  "OBorderBlockEndColor",
  "borderBlockEndStyle",
  "MozBorderBlockEndStyle",
  "WebkitBorderBlockEndStyle",
  "MSBorderBlockEndStyle",
  "OBorderBlockEndStyle",
  "borderBlockEndWidth",
  "MozBorderBlockEndWidth",
  "WebkitBorderBlockEndWidth",
  "MSBorderBlockEndWidth",
  "OBorderBlockEndWidth",
  "borderBlockStart",
  "MozBorderBlockStart",
  "WebkitBorderBlockStart",
  "MSBorderBlockStart",
  "OBorderBlockStart",
  "borderBlockStartColor",
  "MozBorderBlockStartColor",
  "WebkitBorderBlockStartColor",
  "MSBorderBlockStartColor",
  "OBorderBlockStartColor",
  "borderBlockStartStyle",
  "MozBorderBlockStartStyle",
  "WebkitBorderBlockStartStyle",
  "MSBorderBlockStartStyle",
  "OBorderBlockStartStyle",
  "borderBlockStartWidth",
  "MozBorderBlockStartWidth",
  "WebkitBorderBlockStartWidth",
  "MSBorderBlockStartWidth",
  "OBorderBlockStartWidth",
  "borderBottom",
  "MozBorderBottom",
  "WebkitBorderBottom",
  "MSBorderBottom",
  "OBorderBottom",
  "borderBottomColor",
  "MozBorderBottomColor",
  "WebkitBorderBottomColor",
  "MSBorderBottomColor",
  "OBorderBottomColor",
  "borderBottomLeftRadius",
  "MozBorderBottomLeftRadius",
  "WebkitBorderBottomLeftRadius",
  "MSBorderBottomLeftRadius",
  "OBorderBottomLeftRadius",
  "borderBottomRightRadius",
  "MozBorderBottomRightRadius",
  "WebkitBorderBottomRightRadius",
  "MSBorderBottomRightRadius",
  "OBorderBottomRightRadius",
  "borderBottomStyle",
  "MozBorderBottomStyle",
  "WebkitBorderBottomStyle",
  "MSBorderBottomStyle",
  "OBorderBottomStyle",
  "borderBottomWidth",
  "MozBorderBottomWidth",
  "WebkitBorderBottomWidth",
  "MSBorderBottomWidth",
  "OBorderBottomWidth",
  "borderCollapse",
  "MozBorderCollapse",
  "WebkitBorderCollapse",
  "MSBorderCollapse",
  "OBorderCollapse",
  "borderColor",
  "MozBorderColor",
  "WebkitBorderColor",
  "MSBorderColor",
  "OBorderColor",
  "borderImage",
  "MozBorderImage",
  "WebkitBorderImage",
  "MSBorderImage",
  "OBorderImage",
  "borderImageOutset",
  "MozBorderImageOutset",
  "WebkitBorderImageOutset",
  "MSBorderImageOutset",
  "OBorderImageOutset",
  "borderImageRepeat",
  "MozBorderImageRepeat",
  "WebkitBorderImageRepeat",
  "MSBorderImageRepeat",
  "OBorderImageRepeat",
  "borderImageSlice",
  "MozBorderImageSlice",
  "WebkitBorderImageSlice",
  "MSBorderImageSlice",
  "OBorderImageSlice",
  "borderImageSource",
  "MozBorderImageSource",
  "WebkitBorderImageSource",
  "MSBorderImageSource",
  "OBorderImageSource",
  "borderImageWidth",
  "MozBorderImageWidth",
  "WebkitBorderImageWidth",
  "MSBorderImageWidth",
  "OBorderImageWidth",
  "borderInlineEnd",
  "MozBorderInlineEnd",
  "WebkitBorderInlineEnd",
  "MSBorderInlineEnd",
  "OBorderInlineEnd",
  "borderInlineEndColor",
  "MozBorderInlineEndColor",
  "WebkitBorderInlineEndColor",
  "MSBorderInlineEndColor",
  "OBorderInlineEndColor",
  "borderInlineEndStyle",
  "MozBorderInlineEndStyle",
  "WebkitBorderInlineEndStyle",
  "MSBorderInlineEndStyle",
  "OBorderInlineEndStyle",
  "borderInlineEndWidth",
  "MozBorderInlineEndWidth",
  "WebkitBorderInlineEndWidth",
  "MSBorderInlineEndWidth",
  "OBorderInlineEndWidth",
  "borderInlineStart",
  "MozBorderInlineStart",
  "WebkitBorderInlineStart",
  "MSBorderInlineStart",
  "OBorderInlineStart",
  "borderInlineStartColor",
  "MozBorderInlineStartColor",
  "WebkitBorderInlineStartColor",
  "MSBorderInlineStartColor",
  "OBorderInlineStartColor",
  "borderInlineStartStyle",
  "MozBorderInlineStartStyle",
  "WebkitBorderInlineStartStyle",
  "MSBorderInlineStartStyle",
  "OBorderInlineStartStyle",
  "borderInlineStartWidth",
  "MozBorderInlineStartWidth",
  "WebkitBorderInlineStartWidth",
  "MSBorderInlineStartWidth",
  "OBorderInlineStartWidth",
  "borderLeft",
  "MozBorderLeft",
  "WebkitBorderLeft",
  "MSBorderLeft",
  "OBorderLeft",
  "borderLeftColor",
  "MozBorderLeftColor",
  "WebkitBorderLeftColor",
  "MSBorderLeftColor",
  "OBorderLeftColor",
  "borderLeftStyle",
  "MozBorderLeftStyle",
  "WebkitBorderLeftStyle",
  "MSBorderLeftStyle",
  "OBorderLeftStyle",
  "borderLeftWidth",
  "MozBorderLeftWidth",
  "WebkitBorderLeftWidth",
  "MSBorderLeftWidth",
  "OBorderLeftWidth",
  "borderRadius",
  "MozBorderRadius",
  "WebkitBorderRadius",
  "MSBorderRadius",
  "OBorderRadius",
  "borderRight",
  "MozBorderRight",
  "WebkitBorderRight",
  "MSBorderRight",
  "OBorderRight",
  "borderRightColor",
  "MozBorderRightColor",
  "WebkitBorderRightColor",
  "MSBorderRightColor",
  "OBorderRightColor",
  "borderRightStyle",
  "MozBorderRightStyle",
  "WebkitBorderRightStyle",
  "MSBorderRightStyle",
  "OBorderRightStyle",
  "borderRightWidth",
  "MozBorderRightWidth",
  "WebkitBorderRightWidth",
  "MSBorderRightWidth",
  "OBorderRightWidth",
  "borderSpacing",
  "MozBorderSpacing",
  "WebkitBorderSpacing",
  "MSBorderSpacing",
  "OBorderSpacing",
  "borderStyle",
  "MozBorderStyle",
  "WebkitBorderStyle",
  "MSBorderStyle",
  "OBorderStyle",
  "borderTop",
  "MozBorderTop",
  "WebkitBorderTop",
  "MSBorderTop",
  "OBorderTop",
  "borderTopColor",
  "MozBorderTopColor",
  "WebkitBorderTopColor",
  "MSBorderTopColor",
  "OBorderTopColor",
  "borderTopLeftRadius",
  "MozBorderTopLeftRadius",
  "WebkitBorderTopLeftRadius",
  "MSBorderTopLeftRadius",
  "OBorderTopLeftRadius",
  "borderTopRightRadius",
  "MozBorderTopRightRadius",
  "WebkitBorderTopRightRadius",
  "MSBorderTopRightRadius",
  "OBorderTopRightRadius",
  "borderTopStyle",
  "MozBorderTopStyle",
  "WebkitBorderTopStyle",
  "MSBorderTopStyle",
  "OBorderTopStyle",
  "borderTopWidth",
  "MozBorderTopWidth",
  "WebkitBorderTopWidth",
  "MSBorderTopWidth",
  "OBorderTopWidth",
  "borderWidth",
  "MozBorderWidth",
  "WebkitBorderWidth",
  "MSBorderWidth",
  "OBorderWidth",
  "bottom",
  "MozBottom",
  "WebkitBottom",
  "MSBottom",
  "OBottom",
  "boxDecorationBreak",
  "MozBoxDecorationBreak",
  "WebkitBoxDecorationBreak",
  "MSBoxDecorationBreak",
  "OBoxDecorationBreak",
  "boxShadow",
  "MozBoxShadow",
  "WebkitBoxShadow",
  "MSBoxShadow",
  "OBoxShadow",
  "boxSizing",
  "MozBoxSizing",
  "WebkitBoxSizing",
  "MSBoxSizing",
  "OBoxSizing",
  "breakAfter",
  "MozBreakAfter",
  "WebkitBreakAfter",
  "MSBreakAfter",
  "OBreakAfter",
  "breakBefore",
  "MozBreakBefore",
  "WebkitBreakBefore",
  "MSBreakBefore",
  "OBreakBefore",
  "breakInside",
  "MozBreakInside",
  "WebkitBreakInside",
  "MSBreakInside",
  "OBreakInside",
  "captionSide",
  "MozCaptionSide",
  "WebkitCaptionSide",
  "MSCaptionSide",
  "OCaptionSide",
  "caretColor",
  "MozCaretColor",
  "WebkitCaretColor",
  "MSCaretColor",
  "OCaretColor",
  "ch",
  "MozCh",
  "WebkitCh",
  "MSCh",
  "OCh",
  "clear",
  "MozClear",
  "WebkitClear",
  "MSClear",
  "OClear",
  "clip",
  "MozClip",
  "WebkitClip",
  "MSClip",
  "OClip",
  "clipPath",
  "MozClipPath",
  "WebkitClipPath",
  "MSClipPath",
  "OClipPath",
  "cm",
  "MozCm",
  "WebkitCm",
  "MSCm",
  "OCm",
  "color",
  "MozColor",
  "WebkitColor",
  "MSColor",
  "OColor",
  "columnCount",
  "MozColumnCount",
  "WebkitColumnCount",
  "MSColumnCount",
  "OColumnCount",
  "columnFill",
  "MozColumnFill",
  "WebkitColumnFill",
  "MSColumnFill",
  "OColumnFill",
  "columnGap",
  "MozColumnGap",
  "WebkitColumnGap",
  "MSColumnGap",
  "OColumnGap",
  "columnRule",
  "MozColumnRule",
  "WebkitColumnRule",
  "MSColumnRule",
  "OColumnRule",
  "columnRuleColor",
  "MozColumnRuleColor",
  "WebkitColumnRuleColor",
  "MSColumnRuleColor",
  "OColumnRuleColor",
  "columnRuleStyle",
  "MozColumnRuleStyle",
  "WebkitColumnRuleStyle",
  "MSColumnRuleStyle",
  "OColumnRuleStyle",
  "columnRuleWidth",
  "MozColumnRuleWidth",
  "WebkitColumnRuleWidth",
  "MSColumnRuleWidth",
  "OColumnRuleWidth",
  "columnSpan",
  "MozColumnSpan",
  "WebkitColumnSpan",
  "MSColumnSpan",
  "OColumnSpan",
  "columnWidth",
  "MozColumnWidth",
  "WebkitColumnWidth",
  "MSColumnWidth",
  "OColumnWidth",
  "columns",
  "MozColumns",
  "WebkitColumns",
  "MSColumns",
  "OColumns",
  "content",
  "MozContent",
  "WebkitContent",
  "MSContent",
  "OContent",
  "counterIncrement",
  "MozCounterIncrement",
  "WebkitCounterIncrement",
  "MSCounterIncrement",
  "OCounterIncrement",
  "counterReset",
  "MozCounterReset",
  "WebkitCounterReset",
  "MSCounterReset",
  "OCounterReset",
  "cursor",
  "MozCursor",
  "WebkitCursor",
  "MSCursor",
  "OCursor",
  "deg",
  "MozDeg",
  "WebkitDeg",
  "MSDeg",
  "ODeg",
  "direction",
  "MozDirection",
  "WebkitDirection",
  "MSDirection",
  "ODirection",
  "display",
  "MozDisplay",
  "WebkitDisplay",
  "MSDisplay",
  "ODisplay",
  "dpcm",
  "MozDpcm",
  "WebkitDpcm",
  "MSDpcm",
  "ODpcm",
  "dpi",
  "MozDpi",
  "WebkitDpi",
  "MSDpi",
  "ODpi",
  "dppx",
  "MozDppx",
  "WebkitDppx",
  "MSDppx",
  "ODppx",
  "em",
  "MozEm",
  "WebkitEm",
  "MSEm",
  "OEm",
  "emptyCells",
  "MozEmptyCells",
  "WebkitEmptyCells",
  "MSEmptyCells",
  "OEmptyCells",
  "ex",
  "MozEx",
  "WebkitEx",
  "MSEx",
  "OEx",
  "filter",
  "MozFilter",
  "WebkitFilter",
  "MSFilter",
  "OFilter",
  "flexBasis",
  "MozFlexBasis",
  "WebkitFlexBasis",
  "MSFlexBasis",
  "OFlexBasis",
  "flexDirection",
  "MozFlexDirection",
  "WebkitFlexDirection",
  "MSFlexDirection",
  "OFlexDirection",
  "flexFlow",
  "MozFlexFlow",
  "WebkitFlexFlow",
  "MSFlexFlow",
  "OFlexFlow",
  "flexGrow",
  "MozFlexGrow",
  "WebkitFlexGrow",
  "MSFlexGrow",
  "OFlexGrow",
  "flexShrink",
  "MozFlexShrink",
  "WebkitFlexShrink",
  "MSFlexShrink",
  "OFlexShrink",
  "flexWrap",
  "MozFlexWrap",
  "WebkitFlexWrap",
  "MSFlexWrap",
  "OFlexWrap",
  "float",
  "MozFloat",
  "WebkitFloat",
  "MSFloat",
  "OFloat",
  "font",
  "MozFont",
  "WebkitFont",
  "MSFont",
  "OFont",
  "fontFamily",
  "MozFontFamily",
  "WebkitFontFamily",
  "MSFontFamily",
  "OFontFamily",
  "fontFeatureSettings",
  "MozFontFeatureSettings",
  "WebkitFontFeatureSettings",
  "MSFontFeatureSettings",
  "OFontFeatureSettings",
  "fontKerning",
  "MozFontKerning",
  "WebkitFontKerning",
  "MSFontKerning",
  "OFontKerning",
  "fontLanguageOverride",
  "MozFontLanguageOverride",
  "WebkitFontLanguageOverride",
  "MSFontLanguageOverride",
  "OFontLanguageOverride",
  "fontSize",
  "MozFontSize",
  "WebkitFontSize",
  "MSFontSize",
  "OFontSize",
  "fontSizeAdjust",
  "MozFontSizeAdjust",
  "WebkitFontSizeAdjust",
  "MSFontSizeAdjust",
  "OFontSizeAdjust",
  "fontStretch",
  "MozFontStretch",
  "WebkitFontStretch",
  "MSFontStretch",
  "OFontStretch",
  "fontStyle",
  "MozFontStyle",
  "WebkitFontStyle",
  "MSFontStyle",
  "OFontStyle",
  "fontSynthesis",
  "MozFontSynthesis",
  "WebkitFontSynthesis",
  "MSFontSynthesis",
  "OFontSynthesis",
  "fontVariant",
  "MozFontVariant",
  "WebkitFontVariant",
  "MSFontVariant",
  "OFontVariant",
  "fontVariantAlternates",
  "MozFontVariantAlternates",
  "WebkitFontVariantAlternates",
  "MSFontVariantAlternates",
  "OFontVariantAlternates",
  "fontVariantCaps",
  "MozFontVariantCaps",
  "WebkitFontVariantCaps",
  "MSFontVariantCaps",
  "OFontVariantCaps",
  "fontVariantEastAsian",
  "MozFontVariantEastAsian",
  "WebkitFontVariantEastAsian",
  "MSFontVariantEastAsian",
  "OFontVariantEastAsian",
  "fontVariantLigatures",
  "MozFontVariantLigatures",
  "WebkitFontVariantLigatures",
  "MSFontVariantLigatures",
  "OFontVariantLigatures",
  "fontVariantNumeric",
  "MozFontVariantNumeric",
  "WebkitFontVariantNumeric",
  "MSFontVariantNumeric",
  "OFontVariantNumeric",
  "fontVariantPosition",
  "MozFontVariantPosition",
  "WebkitFontVariantPosition",
  "MSFontVariantPosition",
  "OFontVariantPosition",
  "fontWeight",
  "MozFontWeight",
  "WebkitFontWeight",
  "MSFontWeight",
  "OFontWeight",
  "fr",
  "MozFr",
  "WebkitFr",
  "MSFr",
  "OFr",
  "grad",
  "MozGrad",
  "WebkitGrad",
  "MSGrad",
  "OGrad",
  "grid",
  "MozGrid",
  "WebkitGrid",
  "MSGrid",
  "OGrid",
  "gridArea",
  "MozGridArea",
  "WebkitGridArea",
  "MSGridArea",
  "OGridArea",
  "gridAutoColumns",
  "MozGridAutoColumns",
  "WebkitGridAutoColumns",
  "MSGridAutoColumns",
  "OGridAutoColumns",
  "gridAutoFlow",
  "MozGridAutoFlow",
  "WebkitGridAutoFlow",
  "MSGridAutoFlow",
  "OGridAutoFlow",
  "gridAutoRows",
  "MozGridAutoRows",
  "WebkitGridAutoRows",
  "MSGridAutoRows",
  "OGridAutoRows",
  "gridColumn",
  "MozGridColumn",
  "WebkitGridColumn",
  "MSGridColumn",
  "OGridColumn",
  "gridColumnEnd",
  "MozGridColumnEnd",
  "WebkitGridColumnEnd",
  "MSGridColumnEnd",
  "OGridColumnEnd",
  "gridColumnGap",
  "MozGridColumnGap",
  "WebkitGridColumnGap",
  "MSGridColumnGap",
  "OGridColumnGap",
  "gridColumnStart",
  "MozGridColumnStart",
  "WebkitGridColumnStart",
  "MSGridColumnStart",
  "OGridColumnStart",
  "gridGap",
  "MozGridGap",
  "WebkitGridGap",
  "MSGridGap",
  "OGridGap",
  "gridRow",
  "MozGridRow",
  "WebkitGridRow",
  "MSGridRow",
  "OGridRow",
  "gridRowEnd",
  "MozGridRowEnd",
  "WebkitGridRowEnd",
  "MSGridRowEnd",
  "OGridRowEnd",
  "gridRowGap",
  "MozGridRowGap",
  "WebkitGridRowGap",
  "MSGridRowGap",
  "OGridRowGap",
  "gridRowStart",
  "MozGridRowStart",
  "WebkitGridRowStart",
  "MSGridRowStart",
  "OGridRowStart",
  "gridTemplate",
  "MozGridTemplate",
  "WebkitGridTemplate",
  "MSGridTemplate",
  "OGridTemplate",
  "gridTemplateAreas",
  "MozGridTemplateAreas",
  "WebkitGridTemplateAreas",
  "MSGridTemplateAreas",
  "OGridTemplateAreas",
  "gridTemplateColumns",
  "MozGridTemplateColumns",
  "WebkitGridTemplateColumns",
  "MSGridTemplateColumns",
  "OGridTemplateColumns",
  "gridTemplateRows",
  "MozGridTemplateRows",
  "WebkitGridTemplateRows",
  "MSGridTemplateRows",
  "OGridTemplateRows",
  "height",
  "MozHeight",
  "WebkitHeight",
  "MSHeight",
  "OHeight",
  "hyphens",
  "MozHyphens",
  "WebkitHyphens",
  "MSHyphens",
  "OHyphens",
  "hz",
  "MozHz",
  "WebkitHz",
  "MSHz",
  "OHz",
  "imageOrientation",
  "MozImageOrientation",
  "WebkitImageOrientation",
  "MSImageOrientation",
  "OImageOrientation",
  "imageRendering",
  "MozImageRendering",
  "WebkitImageRendering",
  "MSImageRendering",
  "OImageRendering",
  "imageResolution",
  "MozImageResolution",
  "WebkitImageResolution",
  "MSImageResolution",
  "OImageResolution",
  "imeMode",
  "MozImeMode",
  "WebkitImeMode",
  "MSImeMode",
  "OImeMode",
  "in",
  "MozIn",
  "WebkitIn",
  "MSIn",
  "OIn",
  "inherit",
  "MozInherit",
  "WebkitInherit",
  "MSInherit",
  "OInherit",
  "initial",
  "MozInitial",
  "WebkitInitial",
  "MSInitial",
  "OInitial",
  "inlineSize",
  "MozInlineSize",
  "WebkitInlineSize",
  "MSInlineSize",
  "OInlineSize",
  "isolation",
  "MozIsolation",
  "WebkitIsolation",
  "MSIsolation",
  "OIsolation",
  "justifyContent",
  "MozJustifyContent",
  "WebkitJustifyContent",
  "MSJustifyContent",
  "OJustifyContent",
  "khz",
  "MozKhz",
  "WebkitKhz",
  "MSKhz",
  "OKhz",
  "left",
  "MozLeft",
  "WebkitLeft",
  "MSLeft",
  "OLeft",
  "letterSpacing",
  "MozLetterSpacing",
  "WebkitLetterSpacing",
  "MSLetterSpacing",
  "OLetterSpacing",
  "lineBreak",
  "MozLineBreak",
  "WebkitLineBreak",
  "MSLineBreak",
  "OLineBreak",
  "lineHeight",
  "MozLineHeight",
  "WebkitLineHeight",
  "MSLineHeight",
  "OLineHeight",
  "listStyle",
  "MozListStyle",
  "WebkitListStyle",
  "MSListStyle",
  "OListStyle",
  "listStyleImage",
  "MozListStyleImage",
  "WebkitListStyleImage",
  "MSListStyleImage",
  "OListStyleImage",
  "listStylePosition",
  "MozListStylePosition",
  "WebkitListStylePosition",
  "MSListStylePosition",
  "OListStylePosition",
  "listStyleType",
  "MozListStyleType",
  "WebkitListStyleType",
  "MSListStyleType",
  "OListStyleType",
  "margin",
  "MozMargin",
  "WebkitMargin",
  "MSMargin",
  "OMargin",
  "marginBlockEnd",
  "MozMarginBlockEnd",
  "WebkitMarginBlockEnd",
  "MSMarginBlockEnd",
  "OMarginBlockEnd",
  "marginBlockStart",
  "MozMarginBlockStart",
  "WebkitMarginBlockStart",
  "MSMarginBlockStart",
  "OMarginBlockStart",
  "marginBottom",
  "MozMarginBottom",
  "WebkitMarginBottom",
  "MSMarginBottom",
  "OMarginBottom",
  "marginInlineEnd",
  "MozMarginInlineEnd",
  "WebkitMarginInlineEnd",
  "MSMarginInlineEnd",
  "OMarginInlineEnd",
  "marginInlineStart",
  "MozMarginInlineStart",
  "WebkitMarginInlineStart",
  "MSMarginInlineStart",
  "OMarginInlineStart",
  "marginLeft",
  "MozMarginLeft",
  "WebkitMarginLeft",
  "MSMarginLeft",
  "OMarginLeft",
  "marginRight",
  "MozMarginRight",
  "WebkitMarginRight",
  "MSMarginRight",
  "OMarginRight",
  "marginTop",
  "MozMarginTop",
  "WebkitMarginTop",
  "MSMarginTop",
  "OMarginTop",
  "mask",
  "MozMask",
  "WebkitMask",
  "MSMask",
  "OMask",
  "maskClip",
  "MozMaskClip",
  "WebkitMaskClip",
  "MSMaskClip",
  "OMaskClip",
  "maskComposite",
  "MozMaskComposite",
  "WebkitMaskComposite",
  "MSMaskComposite",
  "OMaskComposite",
  "maskImage",
  "MozMaskImage",
  "WebkitMaskImage",
  "MSMaskImage",
  "OMaskImage",
  "maskMode",
  "MozMaskMode",
  "WebkitMaskMode",
  "MSMaskMode",
  "OMaskMode",
  "maskOrigin",
  "MozMaskOrigin",
  "WebkitMaskOrigin",
  "MSMaskOrigin",
  "OMaskOrigin",
  "maskPosition",
  "MozMaskPosition",
  "WebkitMaskPosition",
  "MSMaskPosition",
  "OMaskPosition",
  "maskRepeat",
  "MozMaskRepeat",
  "WebkitMaskRepeat",
  "MSMaskRepeat",
  "OMaskRepeat",
  "maskSize",
  "MozMaskSize",
  "WebkitMaskSize",
  "MSMaskSize",
  "OMaskSize",
  "maskType",
  "MozMaskType",
  "WebkitMaskType",
  "MSMaskType",
  "OMaskType",
  "maxHeight",
  "MozMaxHeight",
  "WebkitMaxHeight",
  "MSMaxHeight",
  "OMaxHeight",
  "maxWidth",
  "MozMaxWidth",
  "WebkitMaxWidth",
  "MSMaxWidth",
  "OMaxWidth",
  "minBlockSize",
  "MozMinBlockSize",
  "WebkitMinBlockSize",
  "MSMinBlockSize",
  "OMinBlockSize",
  "minHeight",
  "MozMinHeight",
  "WebkitMinHeight",
  "MSMinHeight",
  "OMinHeight",
  "minInlineSize",
  "MozMinInlineSize",
  "WebkitMinInlineSize",
  "MSMinInlineSize",
  "OMinInlineSize",
  "minWidth",
  "MozMinWidth",
  "WebkitMinWidth",
  "MSMinWidth",
  "OMinWidth",
  "mixBlendMode",
  "MozMixBlendMode",
  "WebkitMixBlendMode",
  "MSMixBlendMode",
  "OMixBlendMode",
  "mm",
  "MozMm",
  "WebkitMm",
  "MSMm",
  "OMm",
  "ms",
  "MozMs",
  "WebkitMs",
  "MSMs",
  "OMs",
  "objectFit",
  "MozObjectFit",
  "WebkitObjectFit",
  "MSObjectFit",
  "OObjectFit",
  "objectPosition",
  "MozObjectPosition",
  "WebkitObjectPosition",
  "MSObjectPosition",
  "OObjectPosition",
  "offsetBlockEnd",
  "MozOffsetBlockEnd",
  "WebkitOffsetBlockEnd",
  "MSOffsetBlockEnd",
  "OOffsetBlockEnd",
  "offsetBlockStart",
  "MozOffsetBlockStart",
  "WebkitOffsetBlockStart",
  "MSOffsetBlockStart",
  "OOffsetBlockStart",
  "offsetInlineEnd",
  "MozOffsetInlineEnd",
  "WebkitOffsetInlineEnd",
  "MSOffsetInlineEnd",
  "OOffsetInlineEnd",
  "offsetInlineStart",
  "MozOffsetInlineStart",
  "WebkitOffsetInlineStart",
  "MSOffsetInlineStart",
  "OOffsetInlineStart",
  "opacity",
  "MozOpacity",
  "WebkitOpacity",
  "MSOpacity",
  "OOpacity",
  "order",
  "MozOrder",
  "WebkitOrder",
  "MSOrder",
  "OOrder",
  "orphans",
  "MozOrphans",
  "WebkitOrphans",
  "MSOrphans",
  "OOrphans",
  "outline",
  "MozOutline",
  "WebkitOutline",
  "MSOutline",
  "OOutline",
  "outlineColor",
  "MozOutlineColor",
  "WebkitOutlineColor",
  "MSOutlineColor",
  "OOutlineColor",
  "outlineOffset",
  "MozOutlineOffset",
  "WebkitOutlineOffset",
  "MSOutlineOffset",
  "OOutlineOffset",
  "outlineStyle",
  "MozOutlineStyle",
  "WebkitOutlineStyle",
  "MSOutlineStyle",
  "OOutlineStyle",
  "outlineWidth",
  "MozOutlineWidth",
  "WebkitOutlineWidth",
  "MSOutlineWidth",
  "OOutlineWidth",
  "overflow",
  "MozOverflow",
  "WebkitOverflow",
  "MSOverflow",
  "OOverflow",
  "overflowWrap",
  "MozOverflowWrap",
  "WebkitOverflowWrap",
  "MSOverflowWrap",
  "OOverflowWrap",
  "overflowX",
  "MozOverflowX",
  "WebkitOverflowX",
  "MSOverflowX",
  "OOverflowX",
  "overflowY",
  "MozOverflowY",
  "WebkitOverflowY",
  "MSOverflowY",
  "OOverflowY",
  "padding",
  "MozPadding",
  "WebkitPadding",
  "MSPadding",
  "OPadding",
  "paddingBlockEnd",
  "MozPaddingBlockEnd",
  "WebkitPaddingBlockEnd",
  "MSPaddingBlockEnd",
  "OPaddingBlockEnd",
  "paddingBlockStart",
  "MozPaddingBlockStart",
  "WebkitPaddingBlockStart",
  "MSPaddingBlockStart",
  "OPaddingBlockStart",
  "paddingBottom",
  "MozPaddingBottom",
  "WebkitPaddingBottom",
  "MSPaddingBottom",
  "OPaddingBottom",
  "paddingInlineEnd",
  "MozPaddingInlineEnd",
  "WebkitPaddingInlineEnd",
  "MSPaddingInlineEnd",
  "OPaddingInlineEnd",
  "paddingInlineStart",
  "MozPaddingInlineStart",
  "WebkitPaddingInlineStart",
  "MSPaddingInlineStart",
  "OPaddingInlineStart",
  "paddingLeft",
  "MozPaddingLeft",
  "WebkitPaddingLeft",
  "MSPaddingLeft",
  "OPaddingLeft",
  "paddingRight",
  "MozPaddingRight",
  "WebkitPaddingRight",
  "MSPaddingRight",
  "OPaddingRight",
  "paddingTop",
  "MozPaddingTop",
  "WebkitPaddingTop",
  "MSPaddingTop",
  "OPaddingTop",
  "pageBreakAfter",
  "MozPageBreakAfter",
  "WebkitPageBreakAfter",
  "MSPageBreakAfter",
  "OPageBreakAfter",
  "pageBreakBefore",
  "MozPageBreakBefore",
  "WebkitPageBreakBefore",
  "MSPageBreakBefore",
  "OPageBreakBefore",
  "pageBreakInside",
  "MozPageBreakInside",
  "WebkitPageBreakInside",
  "MSPageBreakInside",
  "OPageBreakInside",
  "pc",
  "MozPc",
  "WebkitPc",
  "MSPc",
  "OPc",
  "perspective",
  "MozPerspective",
  "WebkitPerspective",
  "MSPerspective",
  "OPerspective",
  "perspectiveOrigin",
  "MozPerspectiveOrigin",
  "WebkitPerspectiveOrigin",
  "MSPerspectiveOrigin",
  "OPerspectiveOrigin",
  "pointerEvents",
  "MozPointerEvents",
  "WebkitPointerEvents",
  "MSPointerEvents",
  "OPointerEvents",
  "position",
  "MozPosition",
  "WebkitPosition",
  "MSPosition",
  "OPosition",
  "pt",
  "MozPt",
  "WebkitPt",
  "MSPt",
  "OPt",
  "px",
  "MozPx",
  "WebkitPx",
  "MSPx",
  "OPx",
  "q",
  "MozQ",
  "WebkitQ",
  "MSQ",
  "OQ",
  "quotes",
  "MozQuotes",
  "WebkitQuotes",
  "MSQuotes",
  "OQuotes",
  "rad",
  "MozRad",
  "WebkitRad",
  "MSRad",
  "ORad",
  "rem",
  "MozRem",
  "WebkitRem",
  "MSRem",
  "ORem",
  "resize",
  "MozResize",
  "WebkitResize",
  "MSResize",
  "OResize",
  "revert",
  "MozRevert",
  "WebkitRevert",
  "MSRevert",
  "ORevert",
  "right",
  "MozRight",
  "WebkitRight",
  "MSRight",
  "ORight",
  "rubyAlign",
  "MozRubyAlign",
  "WebkitRubyAlign",
  "MSRubyAlign",
  "ORubyAlign",
  "rubyMerge",
  "MozRubyMerge",
  "WebkitRubyMerge",
  "MSRubyMerge",
  "ORubyMerge",
  "rubyPosition",
  "MozRubyPosition",
  "WebkitRubyPosition",
  "MSRubyPosition",
  "ORubyPosition",
  "s",
  "MozS",
  "WebkitS",
  "MSS",
  "OS",
  "scrollBehavior",
  "MozScrollBehavior",
  "WebkitScrollBehavior",
  "MSScrollBehavior",
  "OScrollBehavior",
  "scrollSnapCoordinate",
  "MozScrollSnapCoordinate",
  "WebkitScrollSnapCoordinate",
  "MSScrollSnapCoordinate",
  "OScrollSnapCoordinate",
  "scrollSnapDestination",
  "MozScrollSnapDestination",
  "WebkitScrollSnapDestination",
  "MSScrollSnapDestination",
  "OScrollSnapDestination",
  "scrollSnapType",
  "MozScrollSnapType",
  "WebkitScrollSnapType",
  "MSScrollSnapType",
  "OScrollSnapType",
  "shapeImageThreshold",
  "MozShapeImageThreshold",
  "WebkitShapeImageThreshold",
  "MSShapeImageThreshold",
  "OShapeImageThreshold",
  "shapeMargin",
  "MozShapeMargin",
  "WebkitShapeMargin",
  "MSShapeMargin",
  "OShapeMargin",
  "shapeOutside",
  "MozShapeOutside",
  "WebkitShapeOutside",
  "MSShapeOutside",
  "OShapeOutside",
  "tabSize",
  "MozTabSize",
  "WebkitTabSize",
  "MSTabSize",
  "OTabSize",
  "tableLayout",
  "MozTableLayout",
  "WebkitTableLayout",
  "MSTableLayout",
  "OTableLayout",
  "textAlign",
  "MozTextAlign",
  "WebkitTextAlign",
  "MSTextAlign",
  "OTextAlign",
  "textAlignLast",
  "MozTextAlignLast",
  "WebkitTextAlignLast",
  "MSTextAlignLast",
  "OTextAlignLast",
  "textCombineUpright",
  "MozTextCombineUpright",
  "WebkitTextCombineUpright",
  "MSTextCombineUpright",
  "OTextCombineUpright",
  "textDecoration",
  "MozTextDecoration",
  "WebkitTextDecoration",
  "MSTextDecoration",
  "OTextDecoration",
  "textDecorationColor",
  "MozTextDecorationColor",
  "WebkitTextDecorationColor",
  "MSTextDecorationColor",
  "OTextDecorationColor",
  "textDecorationLine",
  "MozTextDecorationLine",
  "WebkitTextDecorationLine",
  "MSTextDecorationLine",
  "OTextDecorationLine",
  "textDecorationStyle",
  "MozTextDecorationStyle",
  "WebkitTextDecorationStyle",
  "MSTextDecorationStyle",
  "OTextDecorationStyle",
  "textEmphasis",
  "MozTextEmphasis",
  "WebkitTextEmphasis",
  "MSTextEmphasis",
  "OTextEmphasis",
  "textEmphasisColor",
  "MozTextEmphasisColor",
  "WebkitTextEmphasisColor",
  "MSTextEmphasisColor",
  "OTextEmphasisColor",
  "textEmphasisPosition",
  "MozTextEmphasisPosition",
  "WebkitTextEmphasisPosition",
  "MSTextEmphasisPosition",
  "OTextEmphasisPosition",
  "textEmphasisStyle",
  "MozTextEmphasisStyle",
  "WebkitTextEmphasisStyle",
  "MSTextEmphasisStyle",
  "OTextEmphasisStyle",
  "textIndent",
  "MozTextIndent",
  "WebkitTextIndent",
  "MSTextIndent",
  "OTextIndent",
  "textOrientation",
  "MozTextOrientation",
  "WebkitTextOrientation",
  "MSTextOrientation",
  "OTextOrientation",
  "textOverflow",
  "MozTextOverflow",
  "WebkitTextOverflow",
  "MSTextOverflow",
  "OTextOverflow",
  "textRendering",
  "MozTextRendering",
  "WebkitTextRendering",
  "MSTextRendering",
  "OTextRendering",
  "textShadow",
  "MozTextShadow",
  "WebkitTextShadow",
  "MSTextShadow",
  "OTextShadow",
  "textTransform",
  "MozTextTransform",
  "WebkitTextTransform",
  "MSTextTransform",
  "OTextTransform",
  "textUnderlinePosition",
  "MozTextUnderlinePosition",
  "WebkitTextUnderlinePosition",
  "MSTextUnderlinePosition",
  "OTextUnderlinePosition",
  "top",
  "MozTop",
  "WebkitTop",
  "MSTop",
  "OTop",
  "touchAction",
  "MozTouchAction",
  "WebkitTouchAction",
  "MSTouchAction",
  "OTouchAction",
  "transform",
  "MozTransform",
  "WebkitTransform",
  "msTransform",
  "OTransform",
  "transformBox",
  "MozTransformBox",
  "WebkitTransformBox",
  "MSTransformBox",
  "OTransformBox",
  "transformOrigin",
  "MozTransformOrigin",
  "WebkitTransformOrigin",
  "MSTransformOrigin",
  "OTransformOrigin",
  "transformStyle",
  "MozTransformStyle",
  "WebkitTransformStyle",
  "MSTransformStyle",
  "OTransformStyle",
  "transition",
  "MozTransition",
  "WebkitTransition",
  "MSTransition",
  "OTransition",
  "transitionDelay",
  "MozTransitionDelay",
  "WebkitTransitionDelay",
  "MSTransitionDelay",
  "OTransitionDelay",
  "transitionDuration",
  "MozTransitionDuration",
  "WebkitTransitionDuration",
  "MSTransitionDuration",
  "OTransitionDuration",
  "transitionProperty",
  "MozTransitionProperty",
  "WebkitTransitionProperty",
  "MSTransitionProperty",
  "OTransitionProperty",
  "transitionTimingFunction",
  "MozTransitionTimingFunction",
  "WebkitTransitionTimingFunction",
  "MSTransitionTimingFunction",
  "OTransitionTimingFunction",
  "turn",
  "MozTurn",
  "WebkitTurn",
  "MSTurn",
  "OTurn",
  "unicodeBidi",
  "MozUnicodeBidi",
  "WebkitUnicodeBidi",
  "MSUnicodeBidi",
  "OUnicodeBidi",
  "unset",
  "MozUnset",
  "WebkitUnset",
  "MSUnset",
  "OUnset",
  "verticalAlign",
  "MozVerticalAlign",
  "WebkitVerticalAlign",
  "MSVerticalAlign",
  "OVerticalAlign",
  "vh",
  "MozVh",
  "WebkitVh",
  "MSVh",
  "OVh",
  "visibility",
  "MozVisibility",
  "WebkitVisibility",
  "MSVisibility",
  "OVisibility",
  "vmax",
  "MozVmax",
  "WebkitVmax",
  "MSVmax",
  "OVmax",
  "vmin",
  "MozVmin",
  "WebkitVmin",
  "MSVmin",
  "OVmin",
  "vw",
  "MozVw",
  "WebkitVw",
  "MSVw",
  "OVw",
  "whiteSpace",
  "MozWhiteSpace",
  "WebkitWhiteSpace",
  "MSWhiteSpace",
  "OWhiteSpace",
  "widows",
  "MozWidows",
  "WebkitWidows",
  "MSWidows",
  "OWidows",
  "width",
  "MozWidth",
  "WebkitWidth",
  "MSWidth",
  "OWidth",
  "willChange",
  "MozWillChange",
  "WebkitWillChange",
  "MSWillChange",
  "OWillChange",
  "wordBreak",
  "MozWordBreak",
  "WebkitWordBreak",
  "MSWordBreak",
  "OWordBreak",
  "wordSpacing",
  "MozWordSpacing",
  "WebkitWordSpacing",
  "MSWordSpacing",
  "OWordSpacing",
  "wordWrap",
  "MozWordWrap",
  "WebkitWordWrap",
  "MSWordWrap",
  "OWordWrap",
  "writingMode",
  "MozWritingMode",
  "WebkitWritingMode",
  "MSWritingMode",
  "OWritingMode",
  "zIndex",
  "MozZIndex",
  "WebkitZIndex",
  "MSZIndex",
  "OZIndex",
  "fontSize",
  "MozFontSize",
  "WebkitFontSize",
  "MSFontSize",
  "OFontSize",
  "flex",
  "MozFlex",
  "WebkitFlex",
  "MSFlex",
  "OFlex",
  "fr",
  "MozFr",
  "WebkitFr",
  "MSFr",
  "OFr",
  "overflowScrolling",
  "MozOverflowScrolling",
  "WebkitOverflowScrolling",
  "MSOverflowScrolling",
  "OOverflowScrolling",
  "userSelect",
  "MozUserSelect",
  "WebkitUserSelect",
  "MSUserSelect",
  "OUserSelect"
];
src.exports;
(function(module) {
  var properties = cssProperties;
  var PropTypes2 = propTypesExports;
  module.exports = function(props, propName, componentName) {
    var styles = props[propName];
    if (!styles) {
      return;
    }
    var failures = [];
    Object.keys(styles).forEach(function(styleKey) {
      if (properties.indexOf(styleKey) === -1) {
        failures.push(styleKey);
      }
    });
    if (failures.length) {
      throw new Error("Prop " + propName + " passed to " + componentName + ". Has invalid keys " + failures.join(", "));
    }
  };
  module.exports.isRequired = function(props, propName, componentName) {
    if (!props[propName]) {
      throw new Error("Prop " + propName + " passed to " + componentName + " is required");
    }
    return module.exports(props, propName, componentName);
  };
  module.exports.supportingArrays = PropTypes2.oneOfType([
    PropTypes2.arrayOf(module.exports),
    module.exports
  ]);
})(src);
var srcExports = src.exports;
const stylePropType = /* @__PURE__ */ getDefaultExportFromCjs(srcExports);
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties(Constructor, staticProps);
  return Constructor;
}
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
function ownKeys(object2, enumerableOnly) {
  var keys = Object.keys(object2);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object2);
    if (enumerableOnly)
      symbols = symbols.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object2, sym).enumerable;
      });
    keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys(Object(source), true).forEach(function(key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass)
    _setPrototypeOf(subClass, superClass);
}
function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf(o);
}
function _setPrototypeOf(o, p2) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p3) {
    o2.__proto__ = p3;
    return o2;
  };
  return _setPrototypeOf(o, p2);
}
function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function() {
    }));
    return true;
  } catch (e2) {
    return false;
  }
}
function _assertThisInitialized(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _possibleConstructorReturn(self2, call) {
  if (call && (typeof call === "object" || typeof call === "function")) {
    return call;
  }
  return _assertThisInitialized(self2);
}
function _createSuper(Derived) {
  return function() {
    var Super = _getPrototypeOf(Derived), result;
    if (_isNativeReflectConstruct()) {
      var NewTarget = _getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn(this, result);
  };
}
var Pane = /* @__PURE__ */ function(_React$PureComponent) {
  _inherits(Pane2, _React$PureComponent);
  var _super = _createSuper(Pane2);
  function Pane2() {
    _classCallCheck(this, Pane2);
    return _super.apply(this, arguments);
  }
  _createClass(Pane2, [{
    key: "render",
    value: function render() {
      var _this$props = this.props, children = _this$props.children, className = _this$props.className, split = _this$props.split, styleProps = _this$props.style, size2 = _this$props.size, eleRef = _this$props.eleRef;
      var classes = ["Pane", split, className];
      var style = {
        flex: 1,
        position: "relative",
        outline: "none"
      };
      if (size2 !== void 0) {
        if (split === "vertical") {
          style.width = size2;
        } else {
          style.height = size2;
          style.display = "flex";
        }
        style.flex = "none";
      }
      style = Object.assign({}, style, styleProps || {});
      return /* @__PURE__ */ React.createElement("div", {
        ref: eleRef,
        className: classes.join(" "),
        style
      }, children);
    }
  }]);
  return Pane2;
}(React.PureComponent);
Pane.propTypes = {
  className: PropTypes.string.isRequired,
  children: PropTypes.node.isRequired,
  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  split: PropTypes.oneOf(["vertical", "horizontal"]),
  style: stylePropType,
  eleRef: PropTypes.func
};
Pane.defaultProps = {};
var RESIZER_DEFAULT_CLASSNAME = "Resizer";
var Resizer = /* @__PURE__ */ function(_React$Component) {
  _inherits(Resizer2, _React$Component);
  var _super = _createSuper(Resizer2);
  function Resizer2() {
    _classCallCheck(this, Resizer2);
    return _super.apply(this, arguments);
  }
  _createClass(Resizer2, [{
    key: "render",
    value: function render() {
      var _this$props = this.props, className = _this$props.className, _onClick = _this$props.onClick, _onDoubleClick = _this$props.onDoubleClick, _onMouseDown = _this$props.onMouseDown, _onTouchEnd = _this$props.onTouchEnd, _onTouchStart = _this$props.onTouchStart, resizerClassName = _this$props.resizerClassName, split = _this$props.split, style = _this$props.style;
      var classes = [resizerClassName, split, className];
      return /* @__PURE__ */ React.createElement("span", {
        role: "presentation",
        className: classes.join(" "),
        style,
        onMouseDown: function onMouseDown(event) {
          return _onMouseDown(event);
        },
        onTouchStart: function onTouchStart(event) {
          event.preventDefault();
          _onTouchStart(event);
        },
        onTouchEnd: function onTouchEnd(event) {
          event.preventDefault();
          _onTouchEnd(event);
        },
        onClick: function onClick(event) {
          if (_onClick) {
            event.preventDefault();
            _onClick(event);
          }
        },
        onDoubleClick: function onDoubleClick(event) {
          if (_onDoubleClick) {
            event.preventDefault();
            _onDoubleClick(event);
          }
        }
      });
    }
  }]);
  return Resizer2;
}(React.Component);
Resizer.propTypes = {
  className: PropTypes.string.isRequired,
  onClick: PropTypes.func,
  onDoubleClick: PropTypes.func,
  onMouseDown: PropTypes.func.isRequired,
  onTouchStart: PropTypes.func.isRequired,
  onTouchEnd: PropTypes.func.isRequired,
  split: PropTypes.oneOf(["vertical", "horizontal"]),
  style: stylePropType,
  resizerClassName: PropTypes.string.isRequired
};
Resizer.defaultProps = {
  resizerClassName: RESIZER_DEFAULT_CLASSNAME
};
function unFocus(document2, window2) {
  if (document2.selection) {
    document2.selection.empty();
  } else {
    try {
      window2.getSelection().removeAllRanges();
    } catch (e2) {
    }
  }
}
function getDefaultSize(defaultSize, minSize, maxSize, draggedSize) {
  if (typeof draggedSize === "number") {
    var min2 = typeof minSize === "number" ? minSize : 0;
    var max2 = typeof maxSize === "number" && maxSize >= 0 ? maxSize : Infinity;
    return Math.max(min2, Math.min(max2, draggedSize));
  }
  if (defaultSize !== void 0) {
    return defaultSize;
  }
  return minSize;
}
function removeNullChildren(children) {
  return React.Children.toArray(children).filter(function(c2) {
    return c2;
  });
}
var SplitPane = /* @__PURE__ */ function(_React$Component) {
  _inherits(SplitPane2, _React$Component);
  var _super = _createSuper(SplitPane2);
  function SplitPane2(props) {
    var _this;
    _classCallCheck(this, SplitPane2);
    _this = _super.call(this, props);
    _this.onMouseDown = _this.onMouseDown.bind(_assertThisInitialized(_this));
    _this.onTouchStart = _this.onTouchStart.bind(_assertThisInitialized(_this));
    _this.onMouseMove = _this.onMouseMove.bind(_assertThisInitialized(_this));
    _this.onTouchMove = _this.onTouchMove.bind(_assertThisInitialized(_this));
    _this.onMouseUp = _this.onMouseUp.bind(_assertThisInitialized(_this));
    var size2 = props.size, defaultSize = props.defaultSize, minSize = props.minSize, maxSize = props.maxSize, primary = props.primary;
    var initialSize = size2 !== void 0 ? size2 : getDefaultSize(defaultSize, minSize, maxSize, null);
    _this.state = {
      active: false,
      resized: false,
      pane1Size: primary === "first" ? initialSize : void 0,
      pane2Size: primary === "second" ? initialSize : void 0,
      // these are props that are needed in static functions. ie: gDSFP
      instanceProps: {
        size: size2
      }
    };
    return _this;
  }
  _createClass(SplitPane2, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      document.addEventListener("mouseup", this.onMouseUp);
      document.addEventListener("mousemove", this.onMouseMove);
      document.addEventListener("touchmove", this.onTouchMove);
      this.setState(SplitPane2.getSizeUpdate(this.props, this.state));
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      document.removeEventListener("mouseup", this.onMouseUp);
      document.removeEventListener("mousemove", this.onMouseMove);
      document.removeEventListener("touchmove", this.onTouchMove);
    }
  }, {
    key: "onMouseDown",
    value: function onMouseDown(event) {
      var eventWithTouches = Object.assign({}, event, {
        touches: [{
          clientX: event.clientX,
          clientY: event.clientY
        }]
      });
      this.onTouchStart(eventWithTouches);
    }
  }, {
    key: "onTouchStart",
    value: function onTouchStart(event) {
      var _this$props = this.props, allowResize = _this$props.allowResize, onDragStarted = _this$props.onDragStarted, split = _this$props.split;
      if (allowResize) {
        unFocus(document, window);
        var position = split === "vertical" ? event.touches[0].clientX : event.touches[0].clientY;
        if (typeof onDragStarted === "function") {
          onDragStarted();
        }
        this.setState({
          active: true,
          position
        });
      }
    }
  }, {
    key: "onMouseMove",
    value: function onMouseMove(event) {
      var eventWithTouches = Object.assign({}, event, {
        touches: [{
          clientX: event.clientX,
          clientY: event.clientY
        }]
      });
      this.onTouchMove(eventWithTouches);
    }
  }, {
    key: "onTouchMove",
    value: function onTouchMove(event) {
      var _this$props2 = this.props, allowResize = _this$props2.allowResize, maxSize = _this$props2.maxSize, minSize = _this$props2.minSize, onChange = _this$props2.onChange, split = _this$props2.split, step = _this$props2.step;
      var _this$state = this.state, active = _this$state.active, position = _this$state.position;
      if (allowResize && active) {
        unFocus(document, window);
        var isPrimaryFirst = this.props.primary === "first";
        var ref = isPrimaryFirst ? this.pane1 : this.pane2;
        var ref2 = isPrimaryFirst ? this.pane2 : this.pane1;
        if (ref) {
          var node = ref;
          var node2 = ref2;
          if (node.getBoundingClientRect) {
            var width = node.getBoundingClientRect().width;
            var height = node.getBoundingClientRect().height;
            var current = split === "vertical" ? event.touches[0].clientX : event.touches[0].clientY;
            var size2 = split === "vertical" ? width : height;
            var positionDelta = position - current;
            if (step) {
              if (Math.abs(positionDelta) < step) {
                return;
              }
              positionDelta = ~~(positionDelta / step) * step;
            }
            var sizeDelta = isPrimaryFirst ? positionDelta : -positionDelta;
            var pane1Order = parseInt(window.getComputedStyle(node).order);
            var pane2Order = parseInt(window.getComputedStyle(node2).order);
            if (pane1Order > pane2Order) {
              sizeDelta = -sizeDelta;
            }
            var newMaxSize = maxSize;
            if (maxSize !== void 0 && maxSize <= 0) {
              var splitPane = this.splitPane;
              if (split === "vertical") {
                newMaxSize = splitPane.getBoundingClientRect().width + maxSize;
              } else {
                newMaxSize = splitPane.getBoundingClientRect().height + maxSize;
              }
            }
            var newSize = size2 - sizeDelta;
            var newPosition = position - positionDelta;
            if (newSize < minSize) {
              newSize = minSize;
            } else if (maxSize !== void 0 && newSize > newMaxSize) {
              newSize = newMaxSize;
            } else {
              this.setState({
                position: newPosition,
                resized: true
              });
            }
            if (onChange)
              onChange(newSize);
            this.setState(_defineProperty({
              draggedSize: newSize
            }, isPrimaryFirst ? "pane1Size" : "pane2Size", newSize));
          }
        }
      }
    }
  }, {
    key: "onMouseUp",
    value: function onMouseUp() {
      var _this$props3 = this.props, allowResize = _this$props3.allowResize, onDragFinished = _this$props3.onDragFinished;
      var _this$state2 = this.state, active = _this$state2.active, draggedSize = _this$state2.draggedSize;
      if (allowResize && active) {
        if (typeof onDragFinished === "function") {
          onDragFinished(draggedSize);
        }
        this.setState({
          active: false
        });
      }
    }
    // we have to check values since gDSFP is called on every render and more in StrictMode
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;
      var _this$props4 = this.props, allowResize = _this$props4.allowResize, children = _this$props4.children, className = _this$props4.className, onResizerClick = _this$props4.onResizerClick, onResizerDoubleClick = _this$props4.onResizerDoubleClick, paneClassName = _this$props4.paneClassName, pane1ClassName = _this$props4.pane1ClassName, pane2ClassName = _this$props4.pane2ClassName, paneStyle = _this$props4.paneStyle, pane1StyleProps = _this$props4.pane1Style, pane2StyleProps = _this$props4.pane2Style, resizerClassName = _this$props4.resizerClassName, resizerStyle = _this$props4.resizerStyle, split = _this$props4.split, styleProps = _this$props4.style;
      var _this$state3 = this.state, pane1Size = _this$state3.pane1Size, pane2Size = _this$state3.pane2Size;
      var disabledClass = allowResize ? "" : "disabled";
      var resizerClassNamesIncludingDefault = resizerClassName ? "".concat(resizerClassName, " ").concat(RESIZER_DEFAULT_CLASSNAME) : resizerClassName;
      var notNullChildren = removeNullChildren(children);
      var style = _objectSpread2({
        display: "flex",
        flex: 1,
        height: "100%",
        position: "absolute",
        outline: "none",
        overflow: "hidden",
        MozUserSelect: "text",
        WebkitUserSelect: "text",
        msUserSelect: "text",
        userSelect: "text"
      }, styleProps);
      if (split === "vertical") {
        Object.assign(style, {
          flexDirection: "row",
          left: 0,
          right: 0
        });
      } else {
        Object.assign(style, {
          bottom: 0,
          flexDirection: "column",
          minHeight: "100%",
          top: 0,
          width: "100%"
        });
      }
      var classes = ["SplitPane", className, split, disabledClass];
      var pane1Style = _objectSpread2({}, paneStyle, {}, pane1StyleProps);
      var pane2Style = _objectSpread2({}, paneStyle, {}, pane2StyleProps);
      var pane1Classes = ["Pane1", paneClassName, pane1ClassName].join(" ");
      var pane2Classes = ["Pane2", paneClassName, pane2ClassName].join(" ");
      return /* @__PURE__ */ React.createElement("div", {
        className: classes.join(" "),
        ref: function ref(node) {
          _this2.splitPane = node;
        },
        style
      }, /* @__PURE__ */ React.createElement(Pane, {
        className: pane1Classes,
        key: "pane1",
        eleRef: function eleRef(node) {
          _this2.pane1 = node;
        },
        size: pane1Size,
        split,
        style: pane1Style
      }, notNullChildren[0]), /* @__PURE__ */ React.createElement(Resizer, {
        className: disabledClass,
        onClick: onResizerClick,
        onDoubleClick: onResizerDoubleClick,
        onMouseDown: this.onMouseDown,
        onTouchStart: this.onTouchStart,
        onTouchEnd: this.onMouseUp,
        key: "resizer",
        resizerClassName: resizerClassNamesIncludingDefault,
        split,
        style: resizerStyle || {}
      }), /* @__PURE__ */ React.createElement(Pane, {
        className: pane2Classes,
        key: "pane2",
        eleRef: function eleRef(node) {
          _this2.pane2 = node;
        },
        size: pane2Size,
        split,
        style: pane2Style
      }, notNullChildren[1]));
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(nextProps, prevState) {
      return SplitPane2.getSizeUpdate(nextProps, prevState);
    }
  }, {
    key: "getSizeUpdate",
    value: function getSizeUpdate(props, state) {
      var newState = {};
      var instanceProps = state.instanceProps;
      if (instanceProps.size === props.size && props.size !== void 0) {
        return {};
      }
      var newSize = props.size !== void 0 ? props.size : getDefaultSize(props.defaultSize, props.minSize, props.maxSize, state.draggedSize);
      if (props.size !== void 0) {
        newState.draggedSize = newSize;
      }
      var isPanel1Primary = props.primary === "first";
      newState[isPanel1Primary ? "pane1Size" : "pane2Size"] = newSize;
      newState[isPanel1Primary ? "pane2Size" : "pane1Size"] = void 0;
      newState.instanceProps = {
        size: props.size
      };
      return newState;
    }
  }]);
  return SplitPane2;
}(React.Component);
SplitPane.propTypes = {
  allowResize: PropTypes.bool,
  children: PropTypes.arrayOf(PropTypes.node).isRequired,
  className: PropTypes.string,
  primary: PropTypes.oneOf(["first", "second"]),
  minSize: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  maxSize: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  // eslint-disable-next-line react/no-unused-prop-types
  defaultSize: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  split: PropTypes.oneOf(["vertical", "horizontal"]),
  onDragStarted: PropTypes.func,
  onDragFinished: PropTypes.func,
  onChange: PropTypes.func,
  onResizerClick: PropTypes.func,
  onResizerDoubleClick: PropTypes.func,
  style: stylePropType,
  resizerStyle: stylePropType,
  paneClassName: PropTypes.string,
  pane1ClassName: PropTypes.string,
  pane2ClassName: PropTypes.string,
  paneStyle: stylePropType,
  pane1Style: stylePropType,
  pane2Style: stylePropType,
  resizerClassName: PropTypes.string,
  step: PropTypes.number
};
SplitPane.defaultProps = {
  allowResize: true,
  minSize: 50,
  primary: "first",
  split: "vertical",
  paneClassName: "",
  pane1ClassName: "",
  pane2ClassName: ""
};
polyfill(SplitPane);
var getDefaultParent = function(originalTarget) {
  if (typeof document === "undefined") {
    return null;
  }
  var sampleTarget = Array.isArray(originalTarget) ? originalTarget[0] : originalTarget;
  return sampleTarget.ownerDocument.body;
};
var counterMap = /* @__PURE__ */ new WeakMap();
var uncontrolledNodes = /* @__PURE__ */ new WeakMap();
var markerMap = {};
var lockCount = 0;
var unwrapHost = function(node) {
  return node && (node.host || unwrapHost(node.parentNode));
};
var correctTargets = function(parent, targets) {
  return targets.map(function(target) {
    if (parent.contains(target)) {
      return target;
    }
    var correctedTarget = unwrapHost(target);
    if (correctedTarget && parent.contains(correctedTarget)) {
      return correctedTarget;
    }
    console.error("aria-hidden", target, "in not contained inside", parent, ". Doing nothing");
    return null;
  }).filter(function(x2) {
    return Boolean(x2);
  });
};
var applyAttributeToOthers = function(originalTarget, parentNode, markerName, controlAttribute) {
  var targets = correctTargets(parentNode, Array.isArray(originalTarget) ? originalTarget : [originalTarget]);
  if (!markerMap[markerName]) {
    markerMap[markerName] = /* @__PURE__ */ new WeakMap();
  }
  var markerCounter = markerMap[markerName];
  var hiddenNodes = [];
  var elementsToKeep = /* @__PURE__ */ new Set();
  var elementsToStop = new Set(targets);
  var keep = function(el2) {
    if (!el2 || elementsToKeep.has(el2)) {
      return;
    }
    elementsToKeep.add(el2);
    keep(el2.parentNode);
  };
  targets.forEach(keep);
  var deep = function(parent) {
    if (!parent || elementsToStop.has(parent)) {
      return;
    }
    Array.prototype.forEach.call(parent.children, function(node) {
      if (elementsToKeep.has(node)) {
        deep(node);
      } else {
        var attr = node.getAttribute(controlAttribute);
        var alreadyHidden = attr !== null && attr !== "false";
        var counterValue = (counterMap.get(node) || 0) + 1;
        var markerValue = (markerCounter.get(node) || 0) + 1;
        counterMap.set(node, counterValue);
        markerCounter.set(node, markerValue);
        hiddenNodes.push(node);
        if (counterValue === 1 && alreadyHidden) {
          uncontrolledNodes.set(node, true);
        }
        if (markerValue === 1) {
          node.setAttribute(markerName, "true");
        }
        if (!alreadyHidden) {
          node.setAttribute(controlAttribute, "true");
        }
      }
    });
  };
  deep(parentNode);
  elementsToKeep.clear();
  lockCount++;
  return function() {
    hiddenNodes.forEach(function(node) {
      var counterValue = counterMap.get(node) - 1;
      var markerValue = markerCounter.get(node) - 1;
      counterMap.set(node, counterValue);
      markerCounter.set(node, markerValue);
      if (!counterValue) {
        if (!uncontrolledNodes.has(node)) {
          node.removeAttribute(controlAttribute);
        }
        uncontrolledNodes.delete(node);
      }
      if (!markerValue) {
        node.removeAttribute(markerName);
      }
    });
    lockCount--;
    if (!lockCount) {
      counterMap = /* @__PURE__ */ new WeakMap();
      counterMap = /* @__PURE__ */ new WeakMap();
      uncontrolledNodes = /* @__PURE__ */ new WeakMap();
      markerMap = {};
    }
  };
};
var hideOthers = function(originalTarget, parentNode, markerName) {
  if (markerName === void 0) {
    markerName = "data-aria-hidden";
  }
  var targets = Array.from(Array.isArray(originalTarget) ? originalTarget : [originalTarget]);
  var activeParentNode = parentNode || getDefaultParent(originalTarget);
  if (!activeParentNode) {
    return function() {
      return null;
    };
  }
  targets.push.apply(targets, Array.from(activeParentNode.querySelectorAll("[aria-live]")));
  return applyAttributeToOthers(targets, activeParentNode, markerName, "aria-hidden");
};
/*!
* tabbable 6.2.0
* @license MIT, https://github.com/focus-trap/tabbable/blob/master/LICENSE
*/
var candidateSelectors = ["input:not([inert])", "select:not([inert])", "textarea:not([inert])", "a[href]:not([inert])", "button:not([inert])", "[tabindex]:not(slot):not([inert])", "audio[controls]:not([inert])", "video[controls]:not([inert])", '[contenteditable]:not([contenteditable="false"]):not([inert])', "details>summary:first-of-type:not([inert])", "details:not([inert])"];
var candidateSelector = /* @__PURE__ */ candidateSelectors.join(",");
var NoElement = typeof Element === "undefined";
var matches = NoElement ? function() {
} : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;
var getRootNode = !NoElement && Element.prototype.getRootNode ? function(element) {
  var _element$getRootNode;
  return element === null || element === void 0 ? void 0 : (_element$getRootNode = element.getRootNode) === null || _element$getRootNode === void 0 ? void 0 : _element$getRootNode.call(element);
} : function(element) {
  return element === null || element === void 0 ? void 0 : element.ownerDocument;
};
var isInert = function isInert2(node, lookUp) {
  var _node$getAttribute;
  if (lookUp === void 0) {
    lookUp = true;
  }
  var inertAtt = node === null || node === void 0 ? void 0 : (_node$getAttribute = node.getAttribute) === null || _node$getAttribute === void 0 ? void 0 : _node$getAttribute.call(node, "inert");
  var inert = inertAtt === "" || inertAtt === "true";
  var result = inert || lookUp && node && isInert2(node.parentNode);
  return result;
};
var isContentEditable = function isContentEditable2(node) {
  var _node$getAttribute2;
  var attValue = node === null || node === void 0 ? void 0 : (_node$getAttribute2 = node.getAttribute) === null || _node$getAttribute2 === void 0 ? void 0 : _node$getAttribute2.call(node, "contenteditable");
  return attValue === "" || attValue === "true";
};
var getCandidates = function getCandidates2(el2, includeContainer, filter2) {
  if (isInert(el2)) {
    return [];
  }
  var candidates = Array.prototype.slice.apply(el2.querySelectorAll(candidateSelector));
  if (includeContainer && matches.call(el2, candidateSelector)) {
    candidates.unshift(el2);
  }
  candidates = candidates.filter(filter2);
  return candidates;
};
var getCandidatesIteratively = function getCandidatesIteratively2(elements, includeContainer, options) {
  var candidates = [];
  var elementsToCheck = Array.from(elements);
  while (elementsToCheck.length) {
    var element = elementsToCheck.shift();
    if (isInert(element, false)) {
      continue;
    }
    if (element.tagName === "SLOT") {
      var assigned = element.assignedElements();
      var content = assigned.length ? assigned : element.children;
      var nestedCandidates = getCandidatesIteratively2(content, true, options);
      if (options.flatten) {
        candidates.push.apply(candidates, nestedCandidates);
      } else {
        candidates.push({
          scopeParent: element,
          candidates: nestedCandidates
        });
      }
    } else {
      var validCandidate = matches.call(element, candidateSelector);
      if (validCandidate && options.filter(element) && (includeContainer || !elements.includes(element))) {
        candidates.push(element);
      }
      var shadowRoot = element.shadowRoot || // check for an undisclosed shadow
      typeof options.getShadowRoot === "function" && options.getShadowRoot(element);
      var validShadowRoot = !isInert(shadowRoot, false) && (!options.shadowRootFilter || options.shadowRootFilter(element));
      if (shadowRoot && validShadowRoot) {
        var _nestedCandidates = getCandidatesIteratively2(shadowRoot === true ? element.children : shadowRoot.children, true, options);
        if (options.flatten) {
          candidates.push.apply(candidates, _nestedCandidates);
        } else {
          candidates.push({
            scopeParent: element,
            candidates: _nestedCandidates
          });
        }
      } else {
        elementsToCheck.unshift.apply(elementsToCheck, element.children);
      }
    }
  }
  return candidates;
};
var hasTabIndex = function hasTabIndex2(node) {
  return !isNaN(parseInt(node.getAttribute("tabindex"), 10));
};
var getTabIndex = function getTabIndex2(node) {
  if (!node) {
    throw new Error("No node provided");
  }
  if (node.tabIndex < 0) {
    if ((/^(AUDIO|VIDEO|DETAILS)$/.test(node.tagName) || isContentEditable(node)) && !hasTabIndex(node)) {
      return 0;
    }
  }
  return node.tabIndex;
};
var getSortOrderTabIndex = function getSortOrderTabIndex2(node, isScope) {
  var tabIndex = getTabIndex(node);
  if (tabIndex < 0 && isScope && !hasTabIndex(node)) {
    return 0;
  }
  return tabIndex;
};
var sortOrderedTabbables = function sortOrderedTabbables2(a, b2) {
  return a.tabIndex === b2.tabIndex ? a.documentOrder - b2.documentOrder : a.tabIndex - b2.tabIndex;
};
var isInput = function isInput2(node) {
  return node.tagName === "INPUT";
};
var isHiddenInput = function isHiddenInput2(node) {
  return isInput(node) && node.type === "hidden";
};
var isDetailsWithSummary = function isDetailsWithSummary2(node) {
  var r2 = node.tagName === "DETAILS" && Array.prototype.slice.apply(node.children).some(function(child) {
    return child.tagName === "SUMMARY";
  });
  return r2;
};
var getCheckedRadio = function getCheckedRadio2(nodes, form) {
  for (var i = 0; i < nodes.length; i++) {
    if (nodes[i].checked && nodes[i].form === form) {
      return nodes[i];
    }
  }
};
var isTabbableRadio = function isTabbableRadio2(node) {
  if (!node.name) {
    return true;
  }
  var radioScope = node.form || getRootNode(node);
  var queryRadios = function queryRadios2(name) {
    return radioScope.querySelectorAll('input[type="radio"][name="' + name + '"]');
  };
  var radioSet;
  if (typeof window !== "undefined" && typeof window.CSS !== "undefined" && typeof window.CSS.escape === "function") {
    radioSet = queryRadios(window.CSS.escape(node.name));
  } else {
    try {
      radioSet = queryRadios(node.name);
    } catch (err) {
      console.error("Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s", err.message);
      return false;
    }
  }
  var checked = getCheckedRadio(radioSet, node.form);
  return !checked || checked === node;
};
var isRadio = function isRadio2(node) {
  return isInput(node) && node.type === "radio";
};
var isNonTabbableRadio = function isNonTabbableRadio2(node) {
  return isRadio(node) && !isTabbableRadio(node);
};
var isNodeAttached = function isNodeAttached2(node) {
  var _nodeRoot;
  var nodeRoot = node && getRootNode(node);
  var nodeRootHost = (_nodeRoot = nodeRoot) === null || _nodeRoot === void 0 ? void 0 : _nodeRoot.host;
  var attached = false;
  if (nodeRoot && nodeRoot !== node) {
    var _nodeRootHost, _nodeRootHost$ownerDo, _node$ownerDocument;
    attached = !!((_nodeRootHost = nodeRootHost) !== null && _nodeRootHost !== void 0 && (_nodeRootHost$ownerDo = _nodeRootHost.ownerDocument) !== null && _nodeRootHost$ownerDo !== void 0 && _nodeRootHost$ownerDo.contains(nodeRootHost) || node !== null && node !== void 0 && (_node$ownerDocument = node.ownerDocument) !== null && _node$ownerDocument !== void 0 && _node$ownerDocument.contains(node));
    while (!attached && nodeRootHost) {
      var _nodeRoot2, _nodeRootHost2, _nodeRootHost2$ownerD;
      nodeRoot = getRootNode(nodeRootHost);
      nodeRootHost = (_nodeRoot2 = nodeRoot) === null || _nodeRoot2 === void 0 ? void 0 : _nodeRoot2.host;
      attached = !!((_nodeRootHost2 = nodeRootHost) !== null && _nodeRootHost2 !== void 0 && (_nodeRootHost2$ownerD = _nodeRootHost2.ownerDocument) !== null && _nodeRootHost2$ownerD !== void 0 && _nodeRootHost2$ownerD.contains(nodeRootHost));
    }
  }
  return attached;
};
var isZeroArea = function isZeroArea2(node) {
  var _node$getBoundingClie = node.getBoundingClientRect(), width = _node$getBoundingClie.width, height = _node$getBoundingClie.height;
  return width === 0 && height === 0;
};
var isHidden = function isHidden2(node, _ref) {
  var displayCheck = _ref.displayCheck, getShadowRoot = _ref.getShadowRoot;
  if (getComputedStyle(node).visibility === "hidden") {
    return true;
  }
  var isDirectSummary = matches.call(node, "details>summary:first-of-type");
  var nodeUnderDetails = isDirectSummary ? node.parentElement : node;
  if (matches.call(nodeUnderDetails, "details:not([open]) *")) {
    return true;
  }
  if (!displayCheck || displayCheck === "full" || displayCheck === "legacy-full") {
    if (typeof getShadowRoot === "function") {
      var originalNode = node;
      while (node) {
        var parentElement = node.parentElement;
        var rootNode = getRootNode(node);
        if (parentElement && !parentElement.shadowRoot && getShadowRoot(parentElement) === true) {
          return isZeroArea(node);
        } else if (node.assignedSlot) {
          node = node.assignedSlot;
        } else if (!parentElement && rootNode !== node.ownerDocument) {
          node = rootNode.host;
        } else {
          node = parentElement;
        }
      }
      node = originalNode;
    }
    if (isNodeAttached(node)) {
      return !node.getClientRects().length;
    }
    if (displayCheck !== "legacy-full") {
      return true;
    }
  } else if (displayCheck === "non-zero-area") {
    return isZeroArea(node);
  }
  return false;
};
var isDisabledFromFieldset = function isDisabledFromFieldset2(node) {
  if (/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(node.tagName)) {
    var parentNode = node.parentElement;
    while (parentNode) {
      if (parentNode.tagName === "FIELDSET" && parentNode.disabled) {
        for (var i = 0; i < parentNode.children.length; i++) {
          var child = parentNode.children.item(i);
          if (child.tagName === "LEGEND") {
            return matches.call(parentNode, "fieldset[disabled] *") ? true : !child.contains(node);
          }
        }
        return true;
      }
      parentNode = parentNode.parentElement;
    }
  }
  return false;
};
var isNodeMatchingSelectorFocusable = function isNodeMatchingSelectorFocusable2(options, node) {
  if (node.disabled || // we must do an inert look up to filter out any elements inside an inert ancestor
  //  because we're limited in the type of selectors we can use in JSDom (see related
  //  note related to `candidateSelectors`)
  isInert(node) || isHiddenInput(node) || isHidden(node, options) || // For a details element with a summary, the summary element gets the focus
  isDetailsWithSummary(node) || isDisabledFromFieldset(node)) {
    return false;
  }
  return true;
};
var isNodeMatchingSelectorTabbable = function isNodeMatchingSelectorTabbable2(options, node) {
  if (isNonTabbableRadio(node) || getTabIndex(node) < 0 || !isNodeMatchingSelectorFocusable(options, node)) {
    return false;
  }
  return true;
};
var isValidShadowRootTabbable = function isValidShadowRootTabbable2(shadowHostNode) {
  var tabIndex = parseInt(shadowHostNode.getAttribute("tabindex"), 10);
  if (isNaN(tabIndex) || tabIndex >= 0) {
    return true;
  }
  return false;
};
var sortByOrder = function sortByOrder2(candidates) {
  var regularTabbables = [];
  var orderedTabbables = [];
  candidates.forEach(function(item, i) {
    var isScope = !!item.scopeParent;
    var element = isScope ? item.scopeParent : item;
    var candidateTabindex = getSortOrderTabIndex(element, isScope);
    var elements = isScope ? sortByOrder2(item.candidates) : element;
    if (candidateTabindex === 0) {
      isScope ? regularTabbables.push.apply(regularTabbables, elements) : regularTabbables.push(element);
    } else {
      orderedTabbables.push({
        documentOrder: i,
        tabIndex: candidateTabindex,
        item,
        isScope,
        content: elements
      });
    }
  });
  return orderedTabbables.sort(sortOrderedTabbables).reduce(function(acc, sortable) {
    sortable.isScope ? acc.push.apply(acc, sortable.content) : acc.push(sortable.content);
    return acc;
  }, []).concat(regularTabbables);
};
var tabbable = function tabbable2(container, options) {
  options = options || {};
  var candidates;
  if (options.getShadowRoot) {
    candidates = getCandidatesIteratively([container], options.includeContainer, {
      filter: isNodeMatchingSelectorTabbable.bind(null, options),
      flatten: false,
      getShadowRoot: options.getShadowRoot,
      shadowRootFilter: isValidShadowRootTabbable
    });
  } else {
    candidates = getCandidates(container, options.includeContainer, isNodeMatchingSelectorTabbable.bind(null, options));
  }
  return sortByOrder(candidates);
};
const min = Math.min;
const max = Math.max;
const round = Math.round;
const floor = Math.floor;
const createCoords = (v2) => ({
  x: v2,
  y: v2
});
const oppositeSideMap = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
};
const oppositeAlignmentMap = {
  start: "end",
  end: "start"
};
function clamp(start, value, end) {
  return max(start, min(value, end));
}
function evaluate(value, param) {
  return typeof value === "function" ? value(param) : value;
}
function getSide(placement) {
  return placement.split("-")[0];
}
function getAlignment(placement) {
  return placement.split("-")[1];
}
function getOppositeAxis(axis) {
  return axis === "x" ? "y" : "x";
}
function getAxisLength(axis) {
  return axis === "y" ? "height" : "width";
}
function getSideAxis(placement) {
  return ["top", "bottom"].includes(getSide(placement)) ? "y" : "x";
}
function getAlignmentAxis(placement) {
  return getOppositeAxis(getSideAxis(placement));
}
function getAlignmentSides(placement, rects, rtl) {
  if (rtl === void 0) {
    rtl = false;
  }
  const alignment = getAlignment(placement);
  const alignmentAxis = getAlignmentAxis(placement);
  const length = getAxisLength(alignmentAxis);
  let mainAlignmentSide = alignmentAxis === "x" ? alignment === (rtl ? "end" : "start") ? "right" : "left" : alignment === "start" ? "bottom" : "top";
  if (rects.reference[length] > rects.floating[length]) {
    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);
  }
  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];
}
function getExpandedPlacements(placement) {
  const oppositePlacement = getOppositePlacement(placement);
  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];
}
function getOppositeAlignmentPlacement(placement) {
  return placement.replace(/start|end/g, (alignment) => oppositeAlignmentMap[alignment]);
}
function getSideList(side, isStart, rtl) {
  const lr = ["left", "right"];
  const rl2 = ["right", "left"];
  const tb2 = ["top", "bottom"];
  const bt = ["bottom", "top"];
  switch (side) {
    case "top":
    case "bottom":
      if (rtl)
        return isStart ? rl2 : lr;
      return isStart ? lr : rl2;
    case "left":
    case "right":
      return isStart ? tb2 : bt;
    default:
      return [];
  }
}
function getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {
  const alignment = getAlignment(placement);
  let list = getSideList(getSide(placement), direction === "start", rtl);
  if (alignment) {
    list = list.map((side) => side + "-" + alignment);
    if (flipAlignment) {
      list = list.concat(list.map(getOppositeAlignmentPlacement));
    }
  }
  return list;
}
function getOppositePlacement(placement) {
  return placement.replace(/left|right|bottom|top/g, (side) => oppositeSideMap[side]);
}
function expandPaddingObject(padding) {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    ...padding
  };
}
function getPaddingObject(padding) {
  return typeof padding !== "number" ? expandPaddingObject(padding) : {
    top: padding,
    right: padding,
    bottom: padding,
    left: padding
  };
}
function rectToClientRect(rect) {
  return {
    ...rect,
    top: rect.y,
    left: rect.x,
    right: rect.x + rect.width,
    bottom: rect.y + rect.height
  };
}
function computeCoordsFromPlacement(_ref, placement, rtl) {
  let {
    reference,
    floating
  } = _ref;
  const sideAxis = getSideAxis(placement);
  const alignmentAxis = getAlignmentAxis(placement);
  const alignLength = getAxisLength(alignmentAxis);
  const side = getSide(placement);
  const isVertical = sideAxis === "y";
  const commonX = reference.x + reference.width / 2 - floating.width / 2;
  const commonY = reference.y + reference.height / 2 - floating.height / 2;
  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;
  let coords;
  switch (side) {
    case "top":
      coords = {
        x: commonX,
        y: reference.y - floating.height
      };
      break;
    case "bottom":
      coords = {
        x: commonX,
        y: reference.y + reference.height
      };
      break;
    case "right":
      coords = {
        x: reference.x + reference.width,
        y: commonY
      };
      break;
    case "left":
      coords = {
        x: reference.x - floating.width,
        y: commonY
      };
      break;
    default:
      coords = {
        x: reference.x,
        y: reference.y
      };
  }
  switch (getAlignment(placement)) {
    case "start":
      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);
      break;
    case "end":
      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);
      break;
  }
  return coords;
}
const computePosition$1 = async (reference, floating, config2) => {
  const {
    placement = "bottom",
    strategy = "absolute",
    middleware = [],
    platform: platform2
  } = config2;
  const validMiddleware = middleware.filter(Boolean);
  const rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(floating));
  let rects = await platform2.getElementRects({
    reference,
    floating,
    strategy
  });
  let {
    x: x2,
    y: y2
  } = computeCoordsFromPlacement(rects, placement, rtl);
  let statefulPlacement = placement;
  let middlewareData = {};
  let resetCount = 0;
  for (let i = 0; i < validMiddleware.length; i++) {
    const {
      name,
      fn
    } = validMiddleware[i];
    const {
      x: nextX,
      y: nextY,
      data,
      reset
    } = await fn({
      x: x2,
      y: y2,
      initialPlacement: placement,
      placement: statefulPlacement,
      strategy,
      middlewareData,
      rects,
      platform: platform2,
      elements: {
        reference,
        floating
      }
    });
    x2 = nextX != null ? nextX : x2;
    y2 = nextY != null ? nextY : y2;
    middlewareData = {
      ...middlewareData,
      [name]: {
        ...middlewareData[name],
        ...data
      }
    };
    if (reset && resetCount <= 50) {
      resetCount++;
      if (typeof reset === "object") {
        if (reset.placement) {
          statefulPlacement = reset.placement;
        }
        if (reset.rects) {
          rects = reset.rects === true ? await platform2.getElementRects({
            reference,
            floating,
            strategy
          }) : reset.rects;
        }
        ({
          x: x2,
          y: y2
        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));
      }
      i = -1;
      continue;
    }
  }
  return {
    x: x2,
    y: y2,
    placement: statefulPlacement,
    strategy,
    middlewareData
  };
};
async function detectOverflow(state, options) {
  var _await$platform$isEle;
  if (options === void 0) {
    options = {};
  }
  const {
    x: x2,
    y: y2,
    platform: platform2,
    rects,
    elements,
    strategy
  } = state;
  const {
    boundary = "clippingAncestors",
    rootBoundary = "viewport",
    elementContext = "floating",
    altBoundary = false,
    padding = 0
  } = evaluate(options, state);
  const paddingObject = getPaddingObject(padding);
  const altContext = elementContext === "floating" ? "reference" : "floating";
  const element = elements[altBoundary ? altContext : elementContext];
  const clippingClientRect = rectToClientRect(await platform2.getClippingRect({
    element: ((_await$platform$isEle = await (platform2.isElement == null ? void 0 : platform2.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || await (platform2.getDocumentElement == null ? void 0 : platform2.getDocumentElement(elements.floating)),
    boundary,
    rootBoundary,
    strategy
  }));
  const rect = elementContext === "floating" ? {
    ...rects.floating,
    x: x2,
    y: y2
  } : rects.reference;
  const offsetParent = await (platform2.getOffsetParent == null ? void 0 : platform2.getOffsetParent(elements.floating));
  const offsetScale = await (platform2.isElement == null ? void 0 : platform2.isElement(offsetParent)) ? await (platform2.getScale == null ? void 0 : platform2.getScale(offsetParent)) || {
    x: 1,
    y: 1
  } : {
    x: 1,
    y: 1
  };
  const elementClientRect = rectToClientRect(platform2.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform2.convertOffsetParentRelativeRectToViewportRelativeRect({
    rect,
    offsetParent,
    strategy
  }) : rect);
  return {
    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,
    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,
    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,
    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x
  };
}
const flip = function(options) {
  if (options === void 0) {
    options = {};
  }
  return {
    name: "flip",
    options,
    async fn(state) {
      var _middlewareData$arrow, _middlewareData$flip;
      const {
        placement,
        middlewareData,
        rects,
        initialPlacement,
        platform: platform2,
        elements
      } = state;
      const {
        mainAxis: checkMainAxis = true,
        crossAxis: checkCrossAxis = true,
        fallbackPlacements: specifiedFallbackPlacements,
        fallbackStrategy = "bestFit",
        fallbackAxisSideDirection = "none",
        flipAlignment = true,
        ...detectOverflowOptions
      } = evaluate(options, state);
      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {
        return {};
      }
      const side = getSide(placement);
      const isBasePlacement = getSide(initialPlacement) === initialPlacement;
      const rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(elements.floating));
      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));
      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== "none") {
        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));
      }
      const placements = [initialPlacement, ...fallbackPlacements];
      const overflow = await detectOverflow(state, detectOverflowOptions);
      const overflows = [];
      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];
      if (checkMainAxis) {
        overflows.push(overflow[side]);
      }
      if (checkCrossAxis) {
        const sides = getAlignmentSides(placement, rects, rtl);
        overflows.push(overflow[sides[0]], overflow[sides[1]]);
      }
      overflowsData = [...overflowsData, {
        placement,
        overflows
      }];
      if (!overflows.every((side2) => side2 <= 0)) {
        var _middlewareData$flip2, _overflowsData$filter;
        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;
        const nextPlacement = placements[nextIndex];
        if (nextPlacement) {
          return {
            data: {
              index: nextIndex,
              overflows: overflowsData
            },
            reset: {
              placement: nextPlacement
            }
          };
        }
        let resetPlacement = (_overflowsData$filter = overflowsData.filter((d2) => d2.overflows[0] <= 0).sort((a, b2) => a.overflows[1] - b2.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;
        if (!resetPlacement) {
          switch (fallbackStrategy) {
            case "bestFit": {
              var _overflowsData$map$so;
              const placement2 = (_overflowsData$map$so = overflowsData.map((d2) => [d2.placement, d2.overflows.filter((overflow2) => overflow2 > 0).reduce((acc, overflow2) => acc + overflow2, 0)]).sort((a, b2) => a[1] - b2[1])[0]) == null ? void 0 : _overflowsData$map$so[0];
              if (placement2) {
                resetPlacement = placement2;
              }
              break;
            }
            case "initialPlacement":
              resetPlacement = initialPlacement;
              break;
          }
        }
        if (placement !== resetPlacement) {
          return {
            reset: {
              placement: resetPlacement
            }
          };
        }
      }
      return {};
    }
  };
};
async function convertValueToCoords(state, options) {
  const {
    placement,
    platform: platform2,
    elements
  } = state;
  const rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(elements.floating));
  const side = getSide(placement);
  const alignment = getAlignment(placement);
  const isVertical = getSideAxis(placement) === "y";
  const mainAxisMulti = ["left", "top"].includes(side) ? -1 : 1;
  const crossAxisMulti = rtl && isVertical ? -1 : 1;
  const rawValue = evaluate(options, state);
  let {
    mainAxis,
    crossAxis,
    alignmentAxis
  } = typeof rawValue === "number" ? {
    mainAxis: rawValue,
    crossAxis: 0,
    alignmentAxis: null
  } : {
    mainAxis: 0,
    crossAxis: 0,
    alignmentAxis: null,
    ...rawValue
  };
  if (alignment && typeof alignmentAxis === "number") {
    crossAxis = alignment === "end" ? alignmentAxis * -1 : alignmentAxis;
  }
  return isVertical ? {
    x: crossAxis * crossAxisMulti,
    y: mainAxis * mainAxisMulti
  } : {
    x: mainAxis * mainAxisMulti,
    y: crossAxis * crossAxisMulti
  };
}
const offset = function(options) {
  if (options === void 0) {
    options = 0;
  }
  return {
    name: "offset",
    options,
    async fn(state) {
      const {
        x: x2,
        y: y2
      } = state;
      const diffCoords = await convertValueToCoords(state, options);
      return {
        x: x2 + diffCoords.x,
        y: y2 + diffCoords.y,
        data: diffCoords
      };
    }
  };
};
const shift = function(options) {
  if (options === void 0) {
    options = {};
  }
  return {
    name: "shift",
    options,
    async fn(state) {
      const {
        x: x2,
        y: y2,
        placement
      } = state;
      const {
        mainAxis: checkMainAxis = true,
        crossAxis: checkCrossAxis = false,
        limiter = {
          fn: (_ref) => {
            let {
              x: x3,
              y: y3
            } = _ref;
            return {
              x: x3,
              y: y3
            };
          }
        },
        ...detectOverflowOptions
      } = evaluate(options, state);
      const coords = {
        x: x2,
        y: y2
      };
      const overflow = await detectOverflow(state, detectOverflowOptions);
      const crossAxis = getSideAxis(getSide(placement));
      const mainAxis = getOppositeAxis(crossAxis);
      let mainAxisCoord = coords[mainAxis];
      let crossAxisCoord = coords[crossAxis];
      if (checkMainAxis) {
        const minSide = mainAxis === "y" ? "top" : "left";
        const maxSide = mainAxis === "y" ? "bottom" : "right";
        const min2 = mainAxisCoord + overflow[minSide];
        const max2 = mainAxisCoord - overflow[maxSide];
        mainAxisCoord = clamp(min2, mainAxisCoord, max2);
      }
      if (checkCrossAxis) {
        const minSide = crossAxis === "y" ? "top" : "left";
        const maxSide = crossAxis === "y" ? "bottom" : "right";
        const min2 = crossAxisCoord + overflow[minSide];
        const max2 = crossAxisCoord - overflow[maxSide];
        crossAxisCoord = clamp(min2, crossAxisCoord, max2);
      }
      const limitedCoords = limiter.fn({
        ...state,
        [mainAxis]: mainAxisCoord,
        [crossAxis]: crossAxisCoord
      });
      return {
        ...limitedCoords,
        data: {
          x: limitedCoords.x - x2,
          y: limitedCoords.y - y2
        }
      };
    }
  };
};
function getNodeName(node) {
  if (isNode(node)) {
    return (node.nodeName || "").toLowerCase();
  }
  return "#document";
}
function getWindow$1(node) {
  var _node$ownerDocument;
  return (node == null ? void 0 : (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;
}
function getDocumentElement(node) {
  var _ref;
  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;
}
function isNode(value) {
  return value instanceof Node || value instanceof getWindow$1(value).Node;
}
function isElement$1(value) {
  return value instanceof Element || value instanceof getWindow$1(value).Element;
}
function isHTMLElement$1(value) {
  return value instanceof HTMLElement || value instanceof getWindow$1(value).HTMLElement;
}
function isShadowRoot$1(value) {
  if (typeof ShadowRoot === "undefined") {
    return false;
  }
  return value instanceof ShadowRoot || value instanceof getWindow$1(value).ShadowRoot;
}
function isOverflowElement(element) {
  const {
    overflow,
    overflowX,
    overflowY,
    display
  } = getComputedStyle$1(element);
  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !["inline", "contents"].includes(display);
}
function isTableElement(element) {
  return ["table", "td", "th"].includes(getNodeName(element));
}
function isContainingBlock(element) {
  const webkit = isWebKit();
  const css = getComputedStyle$1(element);
  return css.transform !== "none" || css.perspective !== "none" || (css.containerType ? css.containerType !== "normal" : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== "none" : false) || !webkit && (css.filter ? css.filter !== "none" : false) || ["transform", "perspective", "filter"].some((value) => (css.willChange || "").includes(value)) || ["paint", "layout", "strict", "content"].some((value) => (css.contain || "").includes(value));
}
function getContainingBlock(element) {
  let currentNode = getParentNode(element);
  while (isHTMLElement$1(currentNode) && !isLastTraversableNode(currentNode)) {
    if (isContainingBlock(currentNode)) {
      return currentNode;
    } else {
      currentNode = getParentNode(currentNode);
    }
  }
  return null;
}
function isWebKit() {
  if (typeof CSS === "undefined" || !CSS.supports)
    return false;
  return CSS.supports("-webkit-backdrop-filter", "none");
}
function isLastTraversableNode(node) {
  return ["html", "body", "#document"].includes(getNodeName(node));
}
function getComputedStyle$1(element) {
  return getWindow$1(element).getComputedStyle(element);
}
function getNodeScroll(element) {
  if (isElement$1(element)) {
    return {
      scrollLeft: element.scrollLeft,
      scrollTop: element.scrollTop
    };
  }
  return {
    scrollLeft: element.pageXOffset,
    scrollTop: element.pageYOffset
  };
}
function getParentNode(node) {
  if (getNodeName(node) === "html") {
    return node;
  }
  const result = (
    // Step into the shadow DOM of the parent of a slotted node.
    node.assignedSlot || // DOM Element detected.
    node.parentNode || // ShadowRoot detected.
    isShadowRoot$1(node) && node.host || // Fallback.
    getDocumentElement(node)
  );
  return isShadowRoot$1(result) ? result.host : result;
}
function getNearestOverflowAncestor(node) {
  const parentNode = getParentNode(node);
  if (isLastTraversableNode(parentNode)) {
    return node.ownerDocument ? node.ownerDocument.body : node.body;
  }
  if (isHTMLElement$1(parentNode) && isOverflowElement(parentNode)) {
    return parentNode;
  }
  return getNearestOverflowAncestor(parentNode);
}
function getOverflowAncestors(node, list, traverseIframes) {
  var _node$ownerDocument2;
  if (list === void 0) {
    list = [];
  }
  if (traverseIframes === void 0) {
    traverseIframes = true;
  }
  const scrollableAncestor = getNearestOverflowAncestor(node);
  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);
  const win = getWindow$1(scrollableAncestor);
  if (isBody) {
    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], win.frameElement && traverseIframes ? getOverflowAncestors(win.frameElement) : []);
  }
  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));
}
function getCssDimensions(element) {
  const css = getComputedStyle$1(element);
  let width = parseFloat(css.width) || 0;
  let height = parseFloat(css.height) || 0;
  const hasOffset = isHTMLElement$1(element);
  const offsetWidth = hasOffset ? element.offsetWidth : width;
  const offsetHeight = hasOffset ? element.offsetHeight : height;
  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;
  if (shouldFallback) {
    width = offsetWidth;
    height = offsetHeight;
  }
  return {
    width,
    height,
    $: shouldFallback
  };
}
function unwrapElement(element) {
  return !isElement$1(element) ? element.contextElement : element;
}
function getScale(element) {
  const domElement = unwrapElement(element);
  if (!isHTMLElement$1(domElement)) {
    return createCoords(1);
  }
  const rect = domElement.getBoundingClientRect();
  const {
    width,
    height,
    $: $2
  } = getCssDimensions(domElement);
  let x2 = ($2 ? round(rect.width) : rect.width) / width;
  let y2 = ($2 ? round(rect.height) : rect.height) / height;
  if (!x2 || !Number.isFinite(x2)) {
    x2 = 1;
  }
  if (!y2 || !Number.isFinite(y2)) {
    y2 = 1;
  }
  return {
    x: x2,
    y: y2
  };
}
const noOffsets = /* @__PURE__ */ createCoords(0);
function getVisualOffsets(element) {
  const win = getWindow$1(element);
  if (!isWebKit() || !win.visualViewport) {
    return noOffsets;
  }
  return {
    x: win.visualViewport.offsetLeft,
    y: win.visualViewport.offsetTop
  };
}
function shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {
  if (isFixed === void 0) {
    isFixed = false;
  }
  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow$1(element)) {
    return false;
  }
  return isFixed;
}
function getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {
  if (includeScale === void 0) {
    includeScale = false;
  }
  if (isFixedStrategy === void 0) {
    isFixedStrategy = false;
  }
  const clientRect = element.getBoundingClientRect();
  const domElement = unwrapElement(element);
  let scale = createCoords(1);
  if (includeScale) {
    if (offsetParent) {
      if (isElement$1(offsetParent)) {
        scale = getScale(offsetParent);
      }
    } else {
      scale = getScale(element);
    }
  }
  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);
  let x2 = (clientRect.left + visualOffsets.x) / scale.x;
  let y2 = (clientRect.top + visualOffsets.y) / scale.y;
  let width = clientRect.width / scale.x;
  let height = clientRect.height / scale.y;
  if (domElement) {
    const win = getWindow$1(domElement);
    const offsetWin = offsetParent && isElement$1(offsetParent) ? getWindow$1(offsetParent) : offsetParent;
    let currentIFrame = win.frameElement;
    while (currentIFrame && offsetParent && offsetWin !== win) {
      const iframeScale = getScale(currentIFrame);
      const iframeRect = currentIFrame.getBoundingClientRect();
      const css = getComputedStyle$1(currentIFrame);
      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;
      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;
      x2 *= iframeScale.x;
      y2 *= iframeScale.y;
      width *= iframeScale.x;
      height *= iframeScale.y;
      x2 += left;
      y2 += top;
      currentIFrame = getWindow$1(currentIFrame).frameElement;
    }
  }
  return rectToClientRect({
    width,
    height,
    x: x2,
    y: y2
  });
}
function convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {
  let {
    rect,
    offsetParent,
    strategy
  } = _ref;
  const isOffsetParentAnElement = isHTMLElement$1(offsetParent);
  const documentElement = getDocumentElement(offsetParent);
  if (offsetParent === documentElement) {
    return rect;
  }
  let scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  let scale = createCoords(1);
  const offsets = createCoords(0);
  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== "fixed") {
    if (getNodeName(offsetParent) !== "body" || isOverflowElement(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }
    if (isHTMLElement$1(offsetParent)) {
      const offsetRect = getBoundingClientRect(offsetParent);
      scale = getScale(offsetParent);
      offsets.x = offsetRect.x + offsetParent.clientLeft;
      offsets.y = offsetRect.y + offsetParent.clientTop;
    }
  }
  return {
    width: rect.width * scale.x,
    height: rect.height * scale.y,
    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,
    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y
  };
}
function getClientRects(element) {
  return Array.from(element.getClientRects());
}
function getWindowScrollBarX(element) {
  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;
}
function getDocumentRect(element) {
  const html = getDocumentElement(element);
  const scroll = getNodeScroll(element);
  const body = element.ownerDocument.body;
  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);
  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);
  let x2 = -scroll.scrollLeft + getWindowScrollBarX(element);
  const y2 = -scroll.scrollTop;
  if (getComputedStyle$1(body).direction === "rtl") {
    x2 += max(html.clientWidth, body.clientWidth) - width;
  }
  return {
    width,
    height,
    x: x2,
    y: y2
  };
}
function getViewportRect(element, strategy) {
  const win = getWindow$1(element);
  const html = getDocumentElement(element);
  const visualViewport = win.visualViewport;
  let width = html.clientWidth;
  let height = html.clientHeight;
  let x2 = 0;
  let y2 = 0;
  if (visualViewport) {
    width = visualViewport.width;
    height = visualViewport.height;
    const visualViewportBased = isWebKit();
    if (!visualViewportBased || visualViewportBased && strategy === "fixed") {
      x2 = visualViewport.offsetLeft;
      y2 = visualViewport.offsetTop;
    }
  }
  return {
    width,
    height,
    x: x2,
    y: y2
  };
}
function getInnerBoundingClientRect(element, strategy) {
  const clientRect = getBoundingClientRect(element, true, strategy === "fixed");
  const top = clientRect.top + element.clientTop;
  const left = clientRect.left + element.clientLeft;
  const scale = isHTMLElement$1(element) ? getScale(element) : createCoords(1);
  const width = element.clientWidth * scale.x;
  const height = element.clientHeight * scale.y;
  const x2 = left * scale.x;
  const y2 = top * scale.y;
  return {
    width,
    height,
    x: x2,
    y: y2
  };
}
function getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {
  let rect;
  if (clippingAncestor === "viewport") {
    rect = getViewportRect(element, strategy);
  } else if (clippingAncestor === "document") {
    rect = getDocumentRect(getDocumentElement(element));
  } else if (isElement$1(clippingAncestor)) {
    rect = getInnerBoundingClientRect(clippingAncestor, strategy);
  } else {
    const visualOffsets = getVisualOffsets(element);
    rect = {
      ...clippingAncestor,
      x: clippingAncestor.x - visualOffsets.x,
      y: clippingAncestor.y - visualOffsets.y
    };
  }
  return rectToClientRect(rect);
}
function hasFixedPositionAncestor(element, stopNode) {
  const parentNode = getParentNode(element);
  if (parentNode === stopNode || !isElement$1(parentNode) || isLastTraversableNode(parentNode)) {
    return false;
  }
  return getComputedStyle$1(parentNode).position === "fixed" || hasFixedPositionAncestor(parentNode, stopNode);
}
function getClippingElementAncestors(element, cache) {
  const cachedResult = cache.get(element);
  if (cachedResult) {
    return cachedResult;
  }
  let result = getOverflowAncestors(element, [], false).filter((el2) => isElement$1(el2) && getNodeName(el2) !== "body");
  let currentContainingBlockComputedStyle = null;
  const elementIsFixed = getComputedStyle$1(element).position === "fixed";
  let currentNode = elementIsFixed ? getParentNode(element) : element;
  while (isElement$1(currentNode) && !isLastTraversableNode(currentNode)) {
    const computedStyle = getComputedStyle$1(currentNode);
    const currentNodeIsContaining = isContainingBlock(currentNode);
    if (!currentNodeIsContaining && computedStyle.position === "fixed") {
      currentContainingBlockComputedStyle = null;
    }
    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === "static" && !!currentContainingBlockComputedStyle && ["absolute", "fixed"].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);
    if (shouldDropCurrentNode) {
      result = result.filter((ancestor) => ancestor !== currentNode);
    } else {
      currentContainingBlockComputedStyle = computedStyle;
    }
    currentNode = getParentNode(currentNode);
  }
  cache.set(element, result);
  return result;
}
function getClippingRect(_ref) {
  let {
    element,
    boundary,
    rootBoundary,
    strategy
  } = _ref;
  const elementClippingAncestors = boundary === "clippingAncestors" ? getClippingElementAncestors(element, this._c) : [].concat(boundary);
  const clippingAncestors = [...elementClippingAncestors, rootBoundary];
  const firstClippingAncestor = clippingAncestors[0];
  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {
    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);
    accRect.top = max(rect.top, accRect.top);
    accRect.right = min(rect.right, accRect.right);
    accRect.bottom = min(rect.bottom, accRect.bottom);
    accRect.left = max(rect.left, accRect.left);
    return accRect;
  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));
  return {
    width: clippingRect.right - clippingRect.left,
    height: clippingRect.bottom - clippingRect.top,
    x: clippingRect.left,
    y: clippingRect.top
  };
}
function getDimensions(element) {
  return getCssDimensions(element);
}
function getRectRelativeToOffsetParent(element, offsetParent, strategy) {
  const isOffsetParentAnElement = isHTMLElement$1(offsetParent);
  const documentElement = getDocumentElement(offsetParent);
  const isFixed = strategy === "fixed";
  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);
  let scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  const offsets = createCoords(0);
  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if (getNodeName(offsetParent) !== "body" || isOverflowElement(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }
    if (isOffsetParentAnElement) {
      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);
      offsets.x = offsetRect.x + offsetParent.clientLeft;
      offsets.y = offsetRect.y + offsetParent.clientTop;
    } else if (documentElement) {
      offsets.x = getWindowScrollBarX(documentElement);
    }
  }
  return {
    x: rect.left + scroll.scrollLeft - offsets.x,
    y: rect.top + scroll.scrollTop - offsets.y,
    width: rect.width,
    height: rect.height
  };
}
function getTrueOffsetParent(element, polyfill2) {
  if (!isHTMLElement$1(element) || getComputedStyle$1(element).position === "fixed") {
    return null;
  }
  if (polyfill2) {
    return polyfill2(element);
  }
  return element.offsetParent;
}
function getOffsetParent(element, polyfill2) {
  const window2 = getWindow$1(element);
  if (!isHTMLElement$1(element)) {
    return window2;
  }
  let offsetParent = getTrueOffsetParent(element, polyfill2);
  while (offsetParent && isTableElement(offsetParent) && getComputedStyle$1(offsetParent).position === "static") {
    offsetParent = getTrueOffsetParent(offsetParent, polyfill2);
  }
  if (offsetParent && (getNodeName(offsetParent) === "html" || getNodeName(offsetParent) === "body" && getComputedStyle$1(offsetParent).position === "static" && !isContainingBlock(offsetParent))) {
    return window2;
  }
  return offsetParent || getContainingBlock(element) || window2;
}
const getElementRects = async function(_ref) {
  let {
    reference,
    floating,
    strategy
  } = _ref;
  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;
  const getDimensionsFn = this.getDimensions;
  return {
    reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),
    floating: {
      x: 0,
      y: 0,
      ...await getDimensionsFn(floating)
    }
  };
};
function isRTL(element) {
  return getComputedStyle$1(element).direction === "rtl";
}
const platform = {
  convertOffsetParentRelativeRectToViewportRelativeRect,
  getDocumentElement,
  getClippingRect,
  getOffsetParent,
  getElementRects,
  getClientRects,
  getDimensions,
  getScale,
  isElement: isElement$1,
  isRTL
};
function observeMove(element, onMove) {
  let io = null;
  let timeoutId2;
  const root = getDocumentElement(element);
  function cleanup() {
    clearTimeout(timeoutId2);
    io && io.disconnect();
    io = null;
  }
  function refresh(skip2, threshold) {
    if (skip2 === void 0) {
      skip2 = false;
    }
    if (threshold === void 0) {
      threshold = 1;
    }
    cleanup();
    const {
      left,
      top,
      width,
      height
    } = element.getBoundingClientRect();
    if (!skip2) {
      onMove();
    }
    if (!width || !height) {
      return;
    }
    const insetTop = floor(top);
    const insetRight = floor(root.clientWidth - (left + width));
    const insetBottom = floor(root.clientHeight - (top + height));
    const insetLeft = floor(left);
    const rootMargin = -insetTop + "px " + -insetRight + "px " + -insetBottom + "px " + -insetLeft + "px";
    const options = {
      rootMargin,
      threshold: max(0, min(1, threshold)) || 1
    };
    let isFirstUpdate = true;
    function handleObserve(entries) {
      const ratio = entries[0].intersectionRatio;
      if (ratio !== threshold) {
        if (!isFirstUpdate) {
          return refresh();
        }
        if (!ratio) {
          timeoutId2 = setTimeout(() => {
            refresh(false, 1e-7);
          }, 100);
        } else {
          refresh(false, ratio);
        }
      }
      isFirstUpdate = false;
    }
    try {
      io = new IntersectionObserver(handleObserve, {
        ...options,
        // Handle <iframe>s
        root: root.ownerDocument
      });
    } catch (e2) {
      io = new IntersectionObserver(handleObserve, options);
    }
    io.observe(element);
  }
  refresh(true);
  return cleanup;
}
function autoUpdate(reference, floating, update, options) {
  if (options === void 0) {
    options = {};
  }
  const {
    ancestorScroll = true,
    ancestorResize = true,
    elementResize = typeof ResizeObserver === "function",
    layoutShift = typeof IntersectionObserver === "function",
    animationFrame = false
  } = options;
  const referenceEl = unwrapElement(reference);
  const ancestors = ancestorScroll || ancestorResize ? [...referenceEl ? getOverflowAncestors(referenceEl) : [], ...getOverflowAncestors(floating)] : [];
  ancestors.forEach((ancestor) => {
    ancestorScroll && ancestor.addEventListener("scroll", update, {
      passive: true
    });
    ancestorResize && ancestor.addEventListener("resize", update);
  });
  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;
  let reobserveFrame = -1;
  let resizeObserver = null;
  if (elementResize) {
    resizeObserver = new ResizeObserver((_ref) => {
      let [firstEntry] = _ref;
      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {
        resizeObserver.unobserve(floating);
        cancelAnimationFrame(reobserveFrame);
        reobserveFrame = requestAnimationFrame(() => {
          resizeObserver && resizeObserver.observe(floating);
        });
      }
      update();
    });
    if (referenceEl && !animationFrame) {
      resizeObserver.observe(referenceEl);
    }
    resizeObserver.observe(floating);
  }
  let frameId;
  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;
  if (animationFrame) {
    frameLoop();
  }
  function frameLoop() {
    const nextRefRect = getBoundingClientRect(reference);
    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {
      update();
    }
    prevRefRect = nextRefRect;
    frameId = requestAnimationFrame(frameLoop);
  }
  update();
  return () => {
    ancestors.forEach((ancestor) => {
      ancestorScroll && ancestor.removeEventListener("scroll", update);
      ancestorResize && ancestor.removeEventListener("resize", update);
    });
    cleanupIo && cleanupIo();
    resizeObserver && resizeObserver.disconnect();
    resizeObserver = null;
    if (animationFrame) {
      cancelAnimationFrame(frameId);
    }
  };
}
const computePosition = (reference, floating, options) => {
  const cache = /* @__PURE__ */ new Map();
  const mergedOptions = {
    platform,
    ...options
  };
  const platformWithCache = {
    ...mergedOptions.platform,
    _c: cache
  };
  return computePosition$1(reference, floating, {
    ...mergedOptions,
    platform: platformWithCache
  });
};
var index$1 = typeof document !== "undefined" ? reactExports.useLayoutEffect : reactExports.useEffect;
function deepEqual(a, b2) {
  if (a === b2) {
    return true;
  }
  if (typeof a !== typeof b2) {
    return false;
  }
  if (typeof a === "function" && a.toString() === b2.toString()) {
    return true;
  }
  let length, i, keys;
  if (a && b2 && typeof a == "object") {
    if (Array.isArray(a)) {
      length = a.length;
      if (length != b2.length)
        return false;
      for (i = length; i-- !== 0; ) {
        if (!deepEqual(a[i], b2[i])) {
          return false;
        }
      }
      return true;
    }
    keys = Object.keys(a);
    length = keys.length;
    if (length !== Object.keys(b2).length) {
      return false;
    }
    for (i = length; i-- !== 0; ) {
      if (!Object.prototype.hasOwnProperty.call(b2, keys[i])) {
        return false;
      }
    }
    for (i = length; i-- !== 0; ) {
      const key = keys[i];
      if (key === "_owner" && a.$$typeof) {
        continue;
      }
      if (!deepEqual(a[key], b2[key])) {
        return false;
      }
    }
    return true;
  }
  return a !== a && b2 !== b2;
}
function useLatestRef$1(value) {
  const ref = reactExports.useRef(value);
  index$1(() => {
    ref.current = value;
  });
  return ref;
}
function useFloating$1(options) {
  if (options === void 0) {
    options = {};
  }
  const {
    placement = "bottom",
    strategy = "absolute",
    middleware = [],
    platform: platform2,
    whileElementsMounted,
    open
  } = options;
  const [data, setData] = reactExports.useState({
    x: null,
    y: null,
    strategy,
    placement,
    middlewareData: {},
    isPositioned: false
  });
  const [latestMiddleware, setLatestMiddleware] = reactExports.useState(middleware);
  if (!deepEqual(latestMiddleware, middleware)) {
    setLatestMiddleware(middleware);
  }
  const referenceRef = reactExports.useRef(null);
  const floatingRef = reactExports.useRef(null);
  const dataRef = reactExports.useRef(data);
  const whileElementsMountedRef = useLatestRef$1(whileElementsMounted);
  const platformRef = useLatestRef$1(platform2);
  const [reference, _setReference] = reactExports.useState(null);
  const [floating, _setFloating] = reactExports.useState(null);
  const setReference = reactExports.useCallback((node) => {
    if (referenceRef.current !== node) {
      referenceRef.current = node;
      _setReference(node);
    }
  }, []);
  const setFloating = reactExports.useCallback((node) => {
    if (floatingRef.current !== node) {
      floatingRef.current = node;
      _setFloating(node);
    }
  }, []);
  const update = reactExports.useCallback(() => {
    if (!referenceRef.current || !floatingRef.current) {
      return;
    }
    const config2 = {
      placement,
      strategy,
      middleware: latestMiddleware
    };
    if (platformRef.current) {
      config2.platform = platformRef.current;
    }
    computePosition(referenceRef.current, floatingRef.current, config2).then((data2) => {
      const fullData = {
        ...data2,
        isPositioned: true
      };
      if (isMountedRef.current && !deepEqual(dataRef.current, fullData)) {
        dataRef.current = fullData;
        reactDomExports.flushSync(() => {
          setData(fullData);
        });
      }
    });
  }, [latestMiddleware, placement, strategy, platformRef]);
  index$1(() => {
    if (open === false && dataRef.current.isPositioned) {
      dataRef.current.isPositioned = false;
      setData((data2) => ({
        ...data2,
        isPositioned: false
      }));
    }
  }, [open]);
  const isMountedRef = reactExports.useRef(false);
  index$1(() => {
    isMountedRef.current = true;
    return () => {
      isMountedRef.current = false;
    };
  }, []);
  index$1(() => {
    if (reference && floating) {
      if (whileElementsMountedRef.current) {
        return whileElementsMountedRef.current(reference, floating, update);
      } else {
        update();
      }
    }
  }, [reference, floating, update, whileElementsMountedRef]);
  const refs = reactExports.useMemo(() => ({
    reference: referenceRef,
    floating: floatingRef,
    setReference,
    setFloating
  }), [setReference, setFloating]);
  const elements = reactExports.useMemo(() => ({
    reference,
    floating
  }), [reference, floating]);
  return reactExports.useMemo(() => ({
    ...data,
    update,
    refs,
    elements,
    reference: setReference,
    floating: setFloating
  }), [data, update, refs, elements, setReference, setFloating]);
}
var index = typeof document !== "undefined" ? reactExports.useLayoutEffect : reactExports.useEffect;
let serverHandoffComplete = false;
let count = 0;
const genId = () => "floating-ui-" + count++;
function useFloatingId() {
  const [id2, setId] = reactExports.useState(() => serverHandoffComplete ? genId() : void 0);
  index(() => {
    if (id2 == null) {
      setId(genId());
    }
  }, []);
  reactExports.useEffect(() => {
    if (!serverHandoffComplete) {
      serverHandoffComplete = true;
    }
  }, []);
  return id2;
}
const useReactId = React$1[/* @__PURE__ */ "useId".toString()];
const useId = useReactId || useFloatingId;
function createPubSub() {
  const map2 = /* @__PURE__ */ new Map();
  return {
    emit(event, data) {
      var _map$get;
      (_map$get = map2.get(event)) == null ? void 0 : _map$get.forEach((handler) => handler(data));
    },
    on(event, listener) {
      map2.set(event, [...map2.get(event) || [], listener]);
    },
    off(event, listener) {
      map2.set(event, (map2.get(event) || []).filter((l2) => l2 !== listener));
    }
  };
}
const FloatingNodeContext = /* @__PURE__ */ reactExports.createContext(null);
const FloatingTreeContext = /* @__PURE__ */ reactExports.createContext(null);
const useFloatingParentNodeId = () => {
  var _React$useContext;
  return ((_React$useContext = reactExports.useContext(FloatingNodeContext)) == null ? void 0 : _React$useContext.id) || null;
};
const useFloatingTree = () => reactExports.useContext(FloatingTreeContext);
function getDocument(node) {
  return (node == null ? void 0 : node.ownerDocument) || document;
}
function getPlatform() {
  const uaData = navigator.userAgentData;
  if (uaData != null && uaData.platform) {
    return uaData.platform;
  }
  return navigator.platform;
}
function getUserAgent() {
  const uaData = navigator.userAgentData;
  if (uaData && Array.isArray(uaData.brands)) {
    return uaData.brands.map((_ref) => {
      let {
        brand,
        version
      } = _ref;
      return brand + "/" + version;
    }).join(" ");
  }
  return navigator.userAgent;
}
function getWindow(value) {
  return getDocument(value).defaultView || window;
}
function isElement(value) {
  return value ? value instanceof getWindow(value).Element : false;
}
function isHTMLElement(value) {
  return value ? value instanceof getWindow(value).HTMLElement : false;
}
function isShadowRoot(node) {
  if (typeof ShadowRoot === "undefined") {
    return false;
  }
  const OwnElement = getWindow(node).ShadowRoot;
  return node instanceof OwnElement || node instanceof ShadowRoot;
}
function isVirtualClick(event) {
  if (event.mozInputSource === 0 && event.isTrusted) {
    return true;
  }
  const androidRe = /Android/i;
  if ((androidRe.test(getPlatform()) || androidRe.test(getUserAgent())) && event.pointerType) {
    return event.type === "click" && event.buttons === 1;
  }
  return event.detail === 0 && !event.pointerType;
}
function isVirtualPointerEvent(event) {
  return event.width === 0 && event.height === 0 || event.width === 1 && event.height === 1 && event.pressure === 0 && event.detail === 0 && event.pointerType !== "mouse" || // iOS VoiceOver returns 0.333• for width/height.
  event.width < 1 && event.height < 1 && event.pressure === 0 && event.detail === 0;
}
function isSafari() {
  return /apple/i.test(navigator.vendor);
}
function isMac() {
  return getPlatform().toLowerCase().startsWith("mac") && !navigator.maxTouchPoints;
}
function isMouseLikePointerType(pointerType, strict) {
  const values = ["mouse", "pen"];
  if (!strict) {
    values.push("", void 0);
  }
  return values.includes(pointerType);
}
function useLatestRef(value) {
  const ref = reactExports.useRef(value);
  index(() => {
    ref.current = value;
  });
  return ref;
}
function _extends() {
  _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function activeElement$1(doc) {
  let activeElement2 = doc.activeElement;
  while (((_activeElement = activeElement2) == null ? void 0 : (_activeElement$shadow = _activeElement.shadowRoot) == null ? void 0 : _activeElement$shadow.activeElement) != null) {
    var _activeElement, _activeElement$shadow;
    activeElement2 = activeElement2.shadowRoot.activeElement;
  }
  return activeElement2;
}
function contains(parent, child) {
  if (!parent || !child) {
    return false;
  }
  const rootNode = child.getRootNode && child.getRootNode();
  if (parent.contains(child)) {
    return true;
  } else if (rootNode && isShadowRoot(rootNode)) {
    let next = child;
    do {
      if (next && parent === next) {
        return true;
      }
      next = next.parentNode || next.host;
    } while (next);
  }
  return false;
}
let rafId = 0;
function enqueueFocus(el2, options) {
  if (options === void 0) {
    options = {};
  }
  const {
    preventScroll = false,
    cancelPrevious = true,
    sync = false
  } = options;
  cancelPrevious && cancelAnimationFrame(rafId);
  const exec = () => el2 == null ? void 0 : el2.focus({
    preventScroll
  });
  if (sync) {
    exec();
  } else {
    rafId = requestAnimationFrame(exec);
  }
}
function getAncestors(nodes, id2) {
  var _nodes$find;
  let allAncestors = [];
  let currentParentId = (_nodes$find = nodes.find((node) => node.id === id2)) == null ? void 0 : _nodes$find.parentId;
  while (currentParentId) {
    const currentNode = nodes.find((node) => node.id === currentParentId);
    currentParentId = currentNode == null ? void 0 : currentNode.parentId;
    if (currentNode) {
      allAncestors = allAncestors.concat(currentNode);
    }
  }
  return allAncestors;
}
function getChildren(nodes, id2) {
  let allChildren = nodes.filter((node) => {
    var _node$context;
    return node.parentId === id2 && ((_node$context = node.context) == null ? void 0 : _node$context.open);
  }) || [];
  let currentChildren = allChildren;
  while (currentChildren.length) {
    currentChildren = nodes.filter((node) => {
      var _currentChildren;
      return (_currentChildren = currentChildren) == null ? void 0 : _currentChildren.some((n2) => {
        var _node$context2;
        return node.parentId === n2.id && ((_node$context2 = node.context) == null ? void 0 : _node$context2.open);
      });
    }) || [];
    allChildren = allChildren.concat(currentChildren);
  }
  return allChildren;
}
function getTarget(event) {
  if ("composedPath" in event) {
    return event.composedPath()[0];
  }
  return event.target;
}
const TYPEABLE_SELECTOR = "input:not([type='hidden']):not([disabled]),[contenteditable]:not([contenteditable='false']),textarea:not([disabled])";
function isTypeableElement(element) {
  return isHTMLElement(element) && element.matches(TYPEABLE_SELECTOR);
}
function stopEvent(event) {
  event.preventDefault();
  event.stopPropagation();
}
const getTabbableOptions = () => ({
  getShadowRoot: true,
  displayCheck: (
    // JSDOM does not support the `tabbable` library. To solve this we can
    // check if `ResizeObserver` is a real function (not polyfilled), which
    // determines if the current environment is JSDOM-like.
    typeof ResizeObserver === "function" && ResizeObserver.toString().includes("[native code]") ? "full" : "none"
  )
});
function getTabbableIn(container, direction) {
  const allTabbable = tabbable(container, getTabbableOptions());
  if (direction === "prev") {
    allTabbable.reverse();
  }
  const activeIndex = allTabbable.indexOf(activeElement$1(getDocument(container)));
  const nextTabbableElements = allTabbable.slice(activeIndex + 1);
  return nextTabbableElements[0];
}
function getNextTabbable() {
  return getTabbableIn(document.body, "next");
}
function getPreviousTabbable() {
  return getTabbableIn(document.body, "prev");
}
function isOutsideEvent(event, container) {
  const containerElement = container || event.currentTarget;
  const relatedTarget = event.relatedTarget;
  return !relatedTarget || !contains(containerElement, relatedTarget);
}
function disableFocusInside(container) {
  const tabbableElements = tabbable(container, getTabbableOptions());
  tabbableElements.forEach((element) => {
    element.dataset.tabindex = element.getAttribute("tabindex") || "";
    element.setAttribute("tabindex", "-1");
  });
}
function enableFocusInside(container) {
  const elements = container.querySelectorAll("[data-tabindex]");
  elements.forEach((element) => {
    const tabindex = element.dataset.tabindex;
    delete element.dataset.tabindex;
    if (tabindex) {
      element.setAttribute("tabindex", tabindex);
    } else {
      element.removeAttribute("tabindex");
    }
  });
}
const useInsertionEffect = React$1[/* @__PURE__ */ "useInsertionEffect".toString()];
const useSafeInsertionEffect = useInsertionEffect || ((fn) => fn());
function useEvent(callback) {
  const ref = reactExports.useRef(() => {
  });
  useSafeInsertionEffect(() => {
    ref.current = callback;
  });
  return reactExports.useCallback(function() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    return ref.current == null ? void 0 : ref.current(...args);
  }, []);
}
const HIDDEN_STYLES = {
  border: 0,
  clip: "rect(0 0 0 0)",
  height: "1px",
  margin: "-1px",
  overflow: "hidden",
  padding: 0,
  position: "fixed",
  whiteSpace: "nowrap",
  width: "1px",
  top: 0,
  left: 0
};
let activeElement;
let timeoutId;
function setActiveElementOnTab(event) {
  if (event.key === "Tab") {
    activeElement = event.target;
    clearTimeout(timeoutId);
  }
}
function isTabFocus(event) {
  const result = activeElement === event.relatedTarget;
  activeElement = event.relatedTarget;
  clearTimeout(timeoutId);
  return result;
}
const FocusGuard = /* @__PURE__ */ reactExports.forwardRef(function FocusGuard2(props, ref) {
  const onFocus = useEvent(props.onFocus);
  const [role, setRole] = reactExports.useState();
  index(() => {
    if (isSafari()) {
      setRole("button");
    }
    document.addEventListener("keydown", setActiveElementOnTab);
    return () => {
      document.removeEventListener("keydown", setActiveElementOnTab);
    };
  }, []);
  return /* @__PURE__ */ reactExports.createElement("span", _extends({}, props, {
    ref,
    tabIndex: 0,
    role,
    "aria-hidden": role ? void 0 : true,
    "data-floating-ui-focus-guard": "",
    style: HIDDEN_STYLES,
    onFocus: (event) => {
      if (isSafari() && isMac() && !isTabFocus(event)) {
        event.persist();
        timeoutId = window.setTimeout(() => {
          onFocus(event);
        }, 50);
      } else {
        onFocus(event);
      }
    }
  }));
});
const PortalContext = /* @__PURE__ */ reactExports.createContext(null);
const useFloatingPortalNode = function(_temp) {
  let {
    id: id2,
    enabled = true
  } = _temp === void 0 ? {} : _temp;
  const [portalEl, setPortalEl] = reactExports.useState(null);
  const uniqueId = useId();
  const portalContext = usePortalContext();
  index(() => {
    if (!enabled) {
      return;
    }
    const rootNode = id2 ? document.getElementById(id2) : null;
    if (rootNode) {
      rootNode.setAttribute("data-floating-ui-portal", "");
      setPortalEl(rootNode);
    } else {
      const newPortalEl = document.createElement("div");
      if (id2 !== "") {
        newPortalEl.id = id2 || uniqueId;
      }
      newPortalEl.setAttribute("data-floating-ui-portal", "");
      setPortalEl(newPortalEl);
      const container = (portalContext == null ? void 0 : portalContext.portalNode) || document.body;
      container.appendChild(newPortalEl);
      return () => {
        container.removeChild(newPortalEl);
      };
    }
  }, [id2, portalContext, uniqueId, enabled]);
  return portalEl;
};
const FloatingPortal = (_ref) => {
  let {
    children,
    id: id2,
    root = null,
    preserveTabOrder = true
  } = _ref;
  const portalNode = useFloatingPortalNode({
    id: id2,
    enabled: !root
  });
  const [focusManagerState, setFocusManagerState] = reactExports.useState(null);
  const beforeOutsideRef = reactExports.useRef(null);
  const afterOutsideRef = reactExports.useRef(null);
  const beforeInsideRef = reactExports.useRef(null);
  const afterInsideRef = reactExports.useRef(null);
  const shouldRenderGuards = (
    // The FocusManager and therefore floating element are currently open/
    // rendered.
    !!focusManagerState && // Guards are only for non-modal focus management.
    !focusManagerState.modal && !!(root || portalNode) && preserveTabOrder
  );
  reactExports.useEffect(() => {
    if (!portalNode || !preserveTabOrder || focusManagerState != null && focusManagerState.modal) {
      return;
    }
    function onFocus(event) {
      if (portalNode && isOutsideEvent(event)) {
        const focusing = event.type === "focusin";
        const manageFocus = focusing ? enableFocusInside : disableFocusInside;
        manageFocus(portalNode);
      }
    }
    portalNode.addEventListener("focusin", onFocus, true);
    portalNode.addEventListener("focusout", onFocus, true);
    return () => {
      portalNode.removeEventListener("focusin", onFocus, true);
      portalNode.removeEventListener("focusout", onFocus, true);
    };
  }, [portalNode, preserveTabOrder, focusManagerState == null ? void 0 : focusManagerState.modal]);
  return /* @__PURE__ */ reactExports.createElement(PortalContext.Provider, {
    value: reactExports.useMemo(() => ({
      preserveTabOrder,
      beforeOutsideRef,
      afterOutsideRef,
      beforeInsideRef,
      afterInsideRef,
      portalNode,
      setFocusManagerState
    }), [preserveTabOrder, portalNode])
  }, shouldRenderGuards && portalNode && /* @__PURE__ */ reactExports.createElement(FocusGuard, {
    "data-type": "outside",
    ref: beforeOutsideRef,
    onFocus: (event) => {
      if (isOutsideEvent(event, portalNode)) {
        var _beforeInsideRef$curr;
        (_beforeInsideRef$curr = beforeInsideRef.current) == null ? void 0 : _beforeInsideRef$curr.focus();
      } else {
        const prevTabbable = getPreviousTabbable() || (focusManagerState == null ? void 0 : focusManagerState.refs.domReference.current);
        prevTabbable == null ? void 0 : prevTabbable.focus();
      }
    }
  }), shouldRenderGuards && portalNode && /* @__PURE__ */ reactExports.createElement("span", {
    "aria-owns": portalNode.id,
    style: HIDDEN_STYLES
  }), root ? /* @__PURE__ */ reactDomExports.createPortal(children, root) : portalNode ? /* @__PURE__ */ reactDomExports.createPortal(children, portalNode) : null, shouldRenderGuards && portalNode && /* @__PURE__ */ reactExports.createElement(FocusGuard, {
    "data-type": "outside",
    ref: afterOutsideRef,
    onFocus: (event) => {
      if (isOutsideEvent(event, portalNode)) {
        var _afterInsideRef$curre;
        (_afterInsideRef$curre = afterInsideRef.current) == null ? void 0 : _afterInsideRef$curre.focus();
      } else {
        const nextTabbable = getNextTabbable() || (focusManagerState == null ? void 0 : focusManagerState.refs.domReference.current);
        nextTabbable == null ? void 0 : nextTabbable.focus();
        (focusManagerState == null ? void 0 : focusManagerState.closeOnFocusOut) && (focusManagerState == null ? void 0 : focusManagerState.onOpenChange(false));
      }
    }
  }));
};
const usePortalContext = () => reactExports.useContext(PortalContext);
const VisuallyHiddenDismiss = /* @__PURE__ */ reactExports.forwardRef(function VisuallyHiddenDismiss2(props, ref) {
  return /* @__PURE__ */ reactExports.createElement("button", _extends({}, props, {
    type: "button",
    ref,
    tabIndex: -1,
    style: HIDDEN_STYLES
  }));
});
function FloatingFocusManager(_ref) {
  let {
    context,
    children,
    order = ["content"],
    guards = true,
    initialFocus = 0,
    returnFocus: returnFocus2 = true,
    modal = true,
    visuallyHiddenDismiss = false,
    closeOnFocusOut = true
  } = _ref;
  const {
    refs,
    nodeId,
    onOpenChange,
    events,
    dataRef,
    elements: {
      domReference,
      floating
    }
  } = context;
  const orderRef = useLatestRef(order);
  const tree = useFloatingTree();
  const portalContext = usePortalContext();
  const [tabbableContentLength, setTabbableContentLength] = reactExports.useState(null);
  const ignoreInitialFocus = typeof initialFocus === "number" && initialFocus < 0;
  const startDismissButtonRef = reactExports.useRef(null);
  const endDismissButtonRef = reactExports.useRef(null);
  const preventReturnFocusRef = reactExports.useRef(false);
  const previouslyFocusedElementRef = reactExports.useRef(null);
  const isPointerDownRef = reactExports.useRef(false);
  const isInsidePortal = portalContext != null;
  const isTypeableCombobox = domReference && domReference.getAttribute("role") === "combobox" && isTypeableElement(domReference);
  const getTabbableContent = reactExports.useCallback(function(container) {
    if (container === void 0) {
      container = floating;
    }
    return container ? tabbable(container, getTabbableOptions()) : [];
  }, [floating]);
  const getTabbableElements = reactExports.useCallback((container) => {
    const content = getTabbableContent(container);
    return orderRef.current.map((type2) => {
      if (domReference && type2 === "reference") {
        return domReference;
      }
      if (floating && type2 === "floating") {
        return floating;
      }
      return content;
    }).filter(Boolean).flat();
  }, [domReference, floating, orderRef, getTabbableContent]);
  reactExports.useEffect(() => {
    if (!modal) {
      return;
    }
    function onKeyDown(event) {
      if (event.key === "Tab") {
        if (getTabbableContent().length === 0 && !isTypeableCombobox) {
          stopEvent(event);
        }
        const els = getTabbableElements();
        const target = getTarget(event);
        if (orderRef.current[0] === "reference" && target === domReference) {
          stopEvent(event);
          if (event.shiftKey) {
            enqueueFocus(els[els.length - 1]);
          } else {
            enqueueFocus(els[1]);
          }
        }
        if (orderRef.current[1] === "floating" && target === floating && event.shiftKey) {
          stopEvent(event);
          enqueueFocus(els[0]);
        }
      }
    }
    const doc = getDocument(floating);
    doc.addEventListener("keydown", onKeyDown);
    return () => {
      doc.removeEventListener("keydown", onKeyDown);
    };
  }, [domReference, floating, modal, orderRef, refs, isTypeableCombobox, getTabbableContent, getTabbableElements]);
  reactExports.useEffect(() => {
    if (!closeOnFocusOut) {
      return;
    }
    function handlePointerDown() {
      isPointerDownRef.current = true;
      setTimeout(() => {
        isPointerDownRef.current = false;
      });
    }
    function handleFocusOutside(event) {
      const relatedTarget = event.relatedTarget;
      const movedToUnrelatedNode = !(contains(domReference, relatedTarget) || contains(floating, relatedTarget) || contains(relatedTarget, floating) || contains(portalContext == null ? void 0 : portalContext.portalNode, relatedTarget) || relatedTarget != null && relatedTarget.hasAttribute("data-floating-ui-focus-guard") || tree && (getChildren(tree.nodesRef.current, nodeId).find((node) => {
        var _node$context, _node$context2;
        return contains((_node$context = node.context) == null ? void 0 : _node$context.elements.floating, relatedTarget) || contains((_node$context2 = node.context) == null ? void 0 : _node$context2.elements.domReference, relatedTarget);
      }) || getAncestors(tree.nodesRef.current, nodeId).find((node) => {
        var _node$context3, _node$context4;
        return ((_node$context3 = node.context) == null ? void 0 : _node$context3.elements.floating) === relatedTarget || ((_node$context4 = node.context) == null ? void 0 : _node$context4.elements.domReference) === relatedTarget;
      })));
      if (relatedTarget && movedToUnrelatedNode && !isPointerDownRef.current && // Fix React 18 Strict Mode returnFocus due to double rendering.
      relatedTarget !== previouslyFocusedElementRef.current) {
        preventReturnFocusRef.current = true;
        setTimeout(() => onOpenChange(false));
      }
    }
    if (floating && isHTMLElement(domReference)) {
      domReference.addEventListener("focusout", handleFocusOutside);
      domReference.addEventListener("pointerdown", handlePointerDown);
      !modal && floating.addEventListener("focusout", handleFocusOutside);
      return () => {
        domReference.removeEventListener("focusout", handleFocusOutside);
        domReference.removeEventListener("pointerdown", handlePointerDown);
        !modal && floating.removeEventListener("focusout", handleFocusOutside);
      };
    }
  }, [domReference, floating, modal, nodeId, tree, portalContext, onOpenChange, closeOnFocusOut]);
  reactExports.useEffect(() => {
    var _portalContext$portal;
    const portalNodes = Array.from((portalContext == null ? void 0 : (_portalContext$portal = portalContext.portalNode) == null ? void 0 : _portalContext$portal.querySelectorAll("[data-floating-ui-portal]")) || []);
    function getDismissButtons() {
      return [startDismissButtonRef.current, endDismissButtonRef.current].filter(Boolean);
    }
    if (floating && modal) {
      const insideNodes = [floating, ...portalNodes, ...getDismissButtons()];
      const cleanup = hideOthers(orderRef.current.includes("reference") || isTypeableCombobox ? insideNodes.concat(domReference || []) : insideNodes);
      return () => {
        cleanup();
      };
    }
  }, [domReference, floating, modal, orderRef, portalContext, isTypeableCombobox]);
  reactExports.useEffect(() => {
    if (modal && !guards && floating) {
      const tabIndexValues = [];
      const options = getTabbableOptions();
      const allTabbable = tabbable(getDocument(floating).body, options);
      const floatingTabbable = getTabbableElements();
      const elements = allTabbable.filter((el2) => !floatingTabbable.includes(el2));
      elements.forEach((el2, i) => {
        tabIndexValues[i] = el2.getAttribute("tabindex");
        el2.setAttribute("tabindex", "-1");
      });
      return () => {
        elements.forEach((el2, i) => {
          const value = tabIndexValues[i];
          if (value == null) {
            el2.removeAttribute("tabindex");
          } else {
            el2.setAttribute("tabindex", value);
          }
        });
      };
    }
  }, [floating, modal, guards, getTabbableElements]);
  index(() => {
    if (!floating)
      return;
    const doc = getDocument(floating);
    let returnFocusValue = returnFocus2;
    let preventReturnFocusScroll = false;
    const previouslyFocusedElement = activeElement$1(doc);
    const contextData = dataRef.current;
    previouslyFocusedElementRef.current = previouslyFocusedElement;
    const focusableElements = getTabbableElements(floating);
    const elToFocus = (typeof initialFocus === "number" ? focusableElements[initialFocus] : initialFocus.current) || floating;
    !ignoreInitialFocus && enqueueFocus(elToFocus, {
      preventScroll: elToFocus === floating
    });
    function onDismiss(payload) {
      if (payload.type === "escapeKey" && refs.domReference.current) {
        previouslyFocusedElementRef.current = refs.domReference.current;
      }
      if (["referencePress", "escapeKey"].includes(payload.type)) {
        return;
      }
      const returnFocus3 = payload.data.returnFocus;
      if (typeof returnFocus3 === "object") {
        returnFocusValue = true;
        preventReturnFocusScroll = returnFocus3.preventScroll;
      } else {
        returnFocusValue = returnFocus3;
      }
    }
    events.on("dismiss", onDismiss);
    return () => {
      events.off("dismiss", onDismiss);
      if (contains(floating, activeElement$1(doc)) && refs.domReference.current) {
        previouslyFocusedElementRef.current = refs.domReference.current;
      }
      if (returnFocusValue && isHTMLElement(previouslyFocusedElementRef.current) && !preventReturnFocusRef.current) {
        if (!refs.domReference.current || isPointerDownRef.current) {
          enqueueFocus(previouslyFocusedElementRef.current, {
            // When dismissing nested floating elements, by the time the rAF has
            // executed, the menus will all have been unmounted. When they try
            // to get focused, the calls get ignored — leaving the root
            // reference focused as desired.
            cancelPrevious: false,
            preventScroll: preventReturnFocusScroll
          });
        } else {
          var _previouslyFocusedEle;
          contextData.__syncReturnFocus = true;
          (_previouslyFocusedEle = previouslyFocusedElementRef.current) == null ? void 0 : _previouslyFocusedEle.focus({
            preventScroll: preventReturnFocusScroll
          });
          setTimeout(() => {
            delete contextData.__syncReturnFocus;
          });
        }
      }
    };
  }, [floating, getTabbableElements, initialFocus, returnFocus2, dataRef, refs, events, ignoreInitialFocus]);
  index(() => {
    if (!portalContext)
      return;
    portalContext.setFocusManagerState({
      ...context,
      modal,
      closeOnFocusOut
      // Not concerned about the <RT> generic type.
    });
    return () => {
      portalContext.setFocusManagerState(null);
    };
  }, [portalContext, modal, closeOnFocusOut, context]);
  index(() => {
    if (ignoreInitialFocus || !floating)
      return;
    function setState() {
      setTabbableContentLength(getTabbableContent().length);
    }
    setState();
    if (typeof MutationObserver === "function") {
      const observer = new MutationObserver(setState);
      observer.observe(floating, {
        childList: true,
        subtree: true
      });
      return () => {
        observer.disconnect();
      };
    }
  }, [floating, getTabbableContent, ignoreInitialFocus, refs]);
  const shouldRenderGuards = guards && (isInsidePortal || modal) && !isTypeableCombobox;
  function renderDismissButton(location) {
    return visuallyHiddenDismiss && modal ? /* @__PURE__ */ reactExports.createElement(VisuallyHiddenDismiss, {
      ref: location === "start" ? startDismissButtonRef : endDismissButtonRef,
      onClick: () => onOpenChange(false)
    }, typeof visuallyHiddenDismiss === "string" ? visuallyHiddenDismiss : "Dismiss") : null;
  }
  return /* @__PURE__ */ reactExports.createElement(reactExports.Fragment, null, shouldRenderGuards && /* @__PURE__ */ reactExports.createElement(FocusGuard, {
    "data-type": "inside",
    ref: portalContext == null ? void 0 : portalContext.beforeInsideRef,
    onFocus: (event) => {
      if (modal) {
        const els = getTabbableElements();
        enqueueFocus(order[0] === "reference" ? els[0] : els[els.length - 1]);
      } else if (portalContext != null && portalContext.preserveTabOrder && portalContext.portalNode) {
        preventReturnFocusRef.current = false;
        if (isOutsideEvent(event, portalContext.portalNode)) {
          const nextTabbable = getNextTabbable() || domReference;
          nextTabbable == null ? void 0 : nextTabbable.focus();
        } else {
          var _portalContext$before;
          (_portalContext$before = portalContext.beforeOutsideRef.current) == null ? void 0 : _portalContext$before.focus();
        }
      }
    }
  }), isTypeableCombobox ? null : renderDismissButton("start"), /* @__PURE__ */ reactExports.cloneElement(children, tabbableContentLength === 0 || order.includes("floating") ? {
    tabIndex: 0
  } : {}), renderDismissButton("end"), shouldRenderGuards && /* @__PURE__ */ reactExports.createElement(FocusGuard, {
    "data-type": "inside",
    ref: portalContext == null ? void 0 : portalContext.afterInsideRef,
    onFocus: (event) => {
      if (modal) {
        enqueueFocus(getTabbableElements()[0]);
      } else if (portalContext != null && portalContext.preserveTabOrder && portalContext.portalNode) {
        preventReturnFocusRef.current = true;
        if (isOutsideEvent(event, portalContext.portalNode)) {
          const prevTabbable = getPreviousTabbable() || domReference;
          prevTabbable == null ? void 0 : prevTabbable.focus();
        } else {
          var _portalContext$afterO;
          (_portalContext$afterO = portalContext.afterOutsideRef.current) == null ? void 0 : _portalContext$afterO.focus();
        }
      }
    }
  }));
}
function isButtonTarget(event) {
  return isHTMLElement(event.target) && event.target.tagName === "BUTTON";
}
function isSpaceIgnored(element) {
  return isTypeableElement(element);
}
const useClick = function(_ref, _temp) {
  let {
    open,
    onOpenChange,
    dataRef,
    elements: {
      domReference
    }
  } = _ref;
  let {
    enabled = true,
    event: eventOption = "click",
    toggle = true,
    ignoreMouse = false,
    keyboardHandlers = true
  } = _temp === void 0 ? {} : _temp;
  const pointerTypeRef = reactExports.useRef();
  return reactExports.useMemo(() => {
    if (!enabled) {
      return {};
    }
    return {
      reference: {
        onPointerDown(event) {
          pointerTypeRef.current = event.pointerType;
        },
        onMouseDown(event) {
          if (event.button !== 0) {
            return;
          }
          if (isMouseLikePointerType(pointerTypeRef.current, true) && ignoreMouse) {
            return;
          }
          if (eventOption === "click") {
            return;
          }
          if (open) {
            if (toggle && (dataRef.current.openEvent ? dataRef.current.openEvent.type === "mousedown" : true)) {
              onOpenChange(false);
            }
          } else {
            event.preventDefault();
            onOpenChange(true);
          }
          dataRef.current.openEvent = event.nativeEvent;
        },
        onClick(event) {
          if (dataRef.current.__syncReturnFocus) {
            return;
          }
          if (eventOption === "mousedown" && pointerTypeRef.current) {
            pointerTypeRef.current = void 0;
            return;
          }
          if (isMouseLikePointerType(pointerTypeRef.current, true) && ignoreMouse) {
            return;
          }
          if (open) {
            if (toggle && (dataRef.current.openEvent ? dataRef.current.openEvent.type === "click" : true)) {
              onOpenChange(false);
            }
          } else {
            onOpenChange(true);
          }
          dataRef.current.openEvent = event.nativeEvent;
        },
        onKeyDown(event) {
          pointerTypeRef.current = void 0;
          if (!keyboardHandlers) {
            return;
          }
          if (isButtonTarget(event)) {
            return;
          }
          if (event.key === " " && !isSpaceIgnored(domReference)) {
            event.preventDefault();
          }
          if (event.key === "Enter") {
            if (open) {
              if (toggle) {
                onOpenChange(false);
              }
            } else {
              onOpenChange(true);
            }
          }
        },
        onKeyUp(event) {
          if (!keyboardHandlers) {
            return;
          }
          if (isButtonTarget(event) || isSpaceIgnored(domReference)) {
            return;
          }
          if (event.key === " ") {
            if (open) {
              if (toggle) {
                onOpenChange(false);
              }
            } else {
              onOpenChange(true);
            }
          }
        }
      }
    };
  }, [enabled, dataRef, eventOption, ignoreMouse, keyboardHandlers, domReference, toggle, open, onOpenChange]);
};
function isEventTargetWithin(event, node) {
  if (node == null) {
    return false;
  }
  if ("composedPath" in event) {
    return event.composedPath().includes(node);
  }
  const e2 = event;
  return e2.target != null && node.contains(e2.target);
}
const bubbleHandlerKeys = {
  pointerdown: "onPointerDown",
  mousedown: "onMouseDown",
  click: "onClick"
};
const captureHandlerKeys = {
  pointerdown: "onPointerDownCapture",
  mousedown: "onMouseDownCapture",
  click: "onClickCapture"
};
const normalizeBubblesProp = function(bubbles) {
  var _bubbles$escapeKey, _bubbles$outsidePress;
  if (bubbles === void 0) {
    bubbles = true;
  }
  return {
    escapeKeyBubbles: typeof bubbles === "boolean" ? bubbles : (_bubbles$escapeKey = bubbles.escapeKey) != null ? _bubbles$escapeKey : true,
    outsidePressBubbles: typeof bubbles === "boolean" ? bubbles : (_bubbles$outsidePress = bubbles.outsidePress) != null ? _bubbles$outsidePress : true
  };
};
const useDismiss = function(_ref, _temp) {
  let {
    open,
    onOpenChange,
    events,
    nodeId,
    elements: {
      reference,
      domReference,
      floating
    },
    dataRef
  } = _ref;
  let {
    enabled = true,
    escapeKey = true,
    outsidePress: unstable_outsidePress = true,
    outsidePressEvent = "pointerdown",
    referencePress = false,
    referencePressEvent = "pointerdown",
    ancestorScroll = false,
    bubbles = true
  } = _temp === void 0 ? {} : _temp;
  const tree = useFloatingTree();
  const nested = useFloatingParentNodeId() != null;
  const outsidePressFn = useEvent(typeof unstable_outsidePress === "function" ? unstable_outsidePress : () => false);
  const outsidePress = typeof unstable_outsidePress === "function" ? outsidePressFn : unstable_outsidePress;
  const insideReactTreeRef = reactExports.useRef(false);
  const {
    escapeKeyBubbles,
    outsidePressBubbles
  } = normalizeBubblesProp(bubbles);
  reactExports.useEffect(() => {
    if (!open || !enabled) {
      return;
    }
    dataRef.current.__escapeKeyBubbles = escapeKeyBubbles;
    dataRef.current.__outsidePressBubbles = outsidePressBubbles;
    function onKeyDown(event) {
      if (event.key === "Escape") {
        const children = tree ? getChildren(tree.nodesRef.current, nodeId) : [];
        if (children.length > 0) {
          let shouldDismiss = true;
          children.forEach((child) => {
            var _child$context;
            if ((_child$context = child.context) != null && _child$context.open && !child.context.dataRef.current.__escapeKeyBubbles) {
              shouldDismiss = false;
              return;
            }
          });
          if (!shouldDismiss) {
            return;
          }
        }
        events.emit("dismiss", {
          type: "escapeKey",
          data: {
            returnFocus: {
              preventScroll: false
            }
          }
        });
        onOpenChange(false);
      }
    }
    function onOutsidePress(event) {
      const insideReactTree = insideReactTreeRef.current;
      insideReactTreeRef.current = false;
      if (insideReactTree) {
        return;
      }
      if (typeof outsidePress === "function" && !outsidePress(event)) {
        return;
      }
      const target = getTarget(event);
      if (isHTMLElement(target) && floating) {
        const win = floating.ownerDocument.defaultView || window;
        const canScrollX = target.scrollWidth > target.clientWidth;
        const canScrollY = target.scrollHeight > target.clientHeight;
        let xCond = canScrollY && event.offsetX > target.clientWidth;
        if (canScrollY) {
          const isRTL2 = win.getComputedStyle(target).direction === "rtl";
          if (isRTL2) {
            xCond = event.offsetX <= target.offsetWidth - target.clientWidth;
          }
        }
        if (xCond || canScrollX && event.offsetY > target.clientHeight) {
          return;
        }
      }
      const targetIsInsideChildren = tree && getChildren(tree.nodesRef.current, nodeId).some((node) => {
        var _node$context;
        return isEventTargetWithin(event, (_node$context = node.context) == null ? void 0 : _node$context.elements.floating);
      });
      if (isEventTargetWithin(event, floating) || isEventTargetWithin(event, domReference) || targetIsInsideChildren) {
        return;
      }
      const children = tree ? getChildren(tree.nodesRef.current, nodeId) : [];
      if (children.length > 0) {
        let shouldDismiss = true;
        children.forEach((child) => {
          var _child$context2;
          if ((_child$context2 = child.context) != null && _child$context2.open && !child.context.dataRef.current.__outsidePressBubbles) {
            shouldDismiss = false;
            return;
          }
        });
        if (!shouldDismiss) {
          return;
        }
      }
      events.emit("dismiss", {
        type: "outsidePress",
        data: {
          returnFocus: nested ? {
            preventScroll: true
          } : isVirtualClick(event) || isVirtualPointerEvent(event)
        }
      });
      onOpenChange(false);
    }
    function onScroll() {
      onOpenChange(false);
    }
    const doc = getDocument(floating);
    escapeKey && doc.addEventListener("keydown", onKeyDown);
    outsidePress && doc.addEventListener(outsidePressEvent, onOutsidePress);
    let ancestors = [];
    if (ancestorScroll) {
      if (isElement(domReference)) {
        ancestors = getOverflowAncestors(domReference);
      }
      if (isElement(floating)) {
        ancestors = ancestors.concat(getOverflowAncestors(floating));
      }
      if (!isElement(reference) && reference && reference.contextElement) {
        ancestors = ancestors.concat(getOverflowAncestors(reference.contextElement));
      }
    }
    ancestors = ancestors.filter((ancestor) => {
      var _doc$defaultView;
      return ancestor !== ((_doc$defaultView = doc.defaultView) == null ? void 0 : _doc$defaultView.visualViewport);
    });
    ancestors.forEach((ancestor) => {
      ancestor.addEventListener("scroll", onScroll, {
        passive: true
      });
    });
    return () => {
      escapeKey && doc.removeEventListener("keydown", onKeyDown);
      outsidePress && doc.removeEventListener(outsidePressEvent, onOutsidePress);
      ancestors.forEach((ancestor) => {
        ancestor.removeEventListener("scroll", onScroll);
      });
    };
  }, [dataRef, floating, domReference, reference, escapeKey, outsidePress, outsidePressEvent, events, tree, nodeId, open, onOpenChange, ancestorScroll, enabled, escapeKeyBubbles, outsidePressBubbles, nested]);
  reactExports.useEffect(() => {
    insideReactTreeRef.current = false;
  }, [outsidePress, outsidePressEvent]);
  return reactExports.useMemo(() => {
    if (!enabled) {
      return {};
    }
    return {
      reference: {
        [bubbleHandlerKeys[referencePressEvent]]: () => {
          if (referencePress) {
            events.emit("dismiss", {
              type: "referencePress",
              data: {
                returnFocus: false
              }
            });
            onOpenChange(false);
          }
        }
      },
      floating: {
        [captureHandlerKeys[outsidePressEvent]]: () => {
          insideReactTreeRef.current = true;
        }
      }
    };
  }, [enabled, events, referencePress, outsidePressEvent, referencePressEvent, onOpenChange]);
};
function useMergeRefs(refs) {
  return reactExports.useMemo(() => {
    if (refs.every((ref) => ref == null)) {
      return null;
    }
    return (value) => {
      refs.forEach((ref) => {
        if (typeof ref === "function") {
          ref(value);
        } else if (ref != null) {
          ref.current = value;
        }
      });
    };
  }, refs);
}
const useRole = function(_ref, _temp) {
  let {
    open
  } = _ref;
  let {
    enabled = true,
    role = "dialog"
  } = _temp === void 0 ? {} : _temp;
  const rootId = useId();
  const referenceId = useId();
  return reactExports.useMemo(() => {
    const floatingProps = {
      id: rootId,
      role
    };
    if (!enabled) {
      return {};
    }
    if (role === "tooltip") {
      return {
        reference: {
          "aria-describedby": open ? rootId : void 0
        },
        floating: floatingProps
      };
    }
    return {
      reference: {
        "aria-expanded": open ? "true" : "false",
        "aria-haspopup": role === "alertdialog" ? "dialog" : role,
        "aria-controls": open ? rootId : void 0,
        ...role === "listbox" && {
          role: "combobox"
        },
        ...role === "menu" && {
          id: referenceId
        }
      },
      floating: {
        ...floatingProps,
        ...role === "menu" && {
          "aria-labelledby": referenceId
        }
      }
    };
  }, [enabled, role, open, rootId, referenceId]);
};
function useFloating(options) {
  if (options === void 0) {
    options = {};
  }
  const {
    open = false,
    onOpenChange: unstable_onOpenChange,
    nodeId
  } = options;
  const position = useFloating$1(options);
  const tree = useFloatingTree();
  const domReferenceRef = reactExports.useRef(null);
  const dataRef = reactExports.useRef({});
  const events = reactExports.useState(() => createPubSub())[0];
  const [domReference, setDomReference] = reactExports.useState(null);
  const setPositionReference = reactExports.useCallback((node) => {
    const positionReference = isElement(node) ? {
      getBoundingClientRect: () => node.getBoundingClientRect(),
      contextElement: node
    } : node;
    position.refs.setReference(positionReference);
  }, [position.refs]);
  const setReference = reactExports.useCallback((node) => {
    if (isElement(node) || node === null) {
      domReferenceRef.current = node;
      setDomReference(node);
    }
    if (isElement(position.refs.reference.current) || position.refs.reference.current === null || // Don't allow setting virtual elements using the old technique back to
    // `null` to support `positionReference` + an unstable `reference`
    // callback ref.
    node !== null && !isElement(node)) {
      position.refs.setReference(node);
    }
  }, [position.refs]);
  const refs = reactExports.useMemo(() => ({
    ...position.refs,
    setReference,
    setPositionReference,
    domReference: domReferenceRef
  }), [position.refs, setReference, setPositionReference]);
  const elements = reactExports.useMemo(() => ({
    ...position.elements,
    domReference
  }), [position.elements, domReference]);
  const onOpenChange = useEvent(unstable_onOpenChange);
  const context = reactExports.useMemo(() => ({
    ...position,
    refs,
    elements,
    dataRef,
    nodeId,
    events,
    open,
    onOpenChange
  }), [position, nodeId, events, open, onOpenChange, refs, elements]);
  index(() => {
    const node = tree == null ? void 0 : tree.nodesRef.current.find((node2) => node2.id === nodeId);
    if (node) {
      node.context = context;
    }
  });
  return reactExports.useMemo(() => ({
    ...position,
    context,
    refs,
    reference: setReference,
    positionReference: setPositionReference
  }), [position, refs, context, setReference, setPositionReference]);
}
function mergeProps(userProps, propsList, elementKey) {
  const map2 = /* @__PURE__ */ new Map();
  return {
    ...elementKey === "floating" && {
      tabIndex: -1
    },
    ...userProps,
    ...propsList.map((value) => value ? value[elementKey] : null).concat(userProps).reduce((acc, props) => {
      if (!props) {
        return acc;
      }
      Object.entries(props).forEach((_ref) => {
        let [key, value] = _ref;
        if (key.indexOf("on") === 0) {
          if (!map2.has(key)) {
            map2.set(key, []);
          }
          if (typeof value === "function") {
            var _map$get;
            (_map$get = map2.get(key)) == null ? void 0 : _map$get.push(value);
            acc[key] = function() {
              var _map$get2;
              for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
              }
              (_map$get2 = map2.get(key)) == null ? void 0 : _map$get2.forEach((fn) => fn(...args));
            };
          }
        } else {
          acc[key] = value;
        }
      });
      return acc;
    }, {})
  };
}
const useInteractions = function(propsList) {
  if (propsList === void 0) {
    propsList = [];
  }
  const deps = propsList;
  const getReferenceProps = reactExports.useCallback(
    (userProps) => mergeProps(userProps, propsList, "reference"),
    // eslint-disable-next-line react-hooks/exhaustive-deps
    deps
  );
  const getFloatingProps = reactExports.useCallback(
    (userProps) => mergeProps(userProps, propsList, "floating"),
    // eslint-disable-next-line react-hooks/exhaustive-deps
    deps
  );
  const getItemProps = reactExports.useCallback(
    (userProps) => mergeProps(userProps, propsList, "item"),
    // Granularly check for `item` changes, because the `getItemProps` getter
    // should be as referentially stable as possible since it may be passed as
    // a prop to many components. All `item` key values must therefore be
    // memoized.
    // eslint-disable-next-line react-hooks/exhaustive-deps
    propsList.map((key) => key == null ? void 0 : key.item)
  );
  return reactExports.useMemo(() => ({
    getReferenceProps,
    getFloatingProps,
    getItemProps
  }), [getReferenceProps, getFloatingProps, getItemProps]);
};
function usePopover({
  initialOpen = false,
  placement = "bottom",
  modal,
  open: controlledOpen,
  onOpenChange: setControlledOpen
} = {}) {
  const [uncontrolledOpen, setUncontrolledOpen] = React.useState(initialOpen);
  const [labelId, setLabelId] = React.useState();
  const [descriptionId, setDescriptionId] = React.useState();
  const open = controlledOpen ?? uncontrolledOpen;
  const setOpen = setControlledOpen ?? setUncontrolledOpen;
  const data = useFloating({
    placement,
    open,
    onOpenChange: setOpen,
    whileElementsMounted: autoUpdate,
    middleware: [
      offset(5),
      flip({
        fallbackAxisSideDirection: "end"
      }),
      shift({ padding: 5 })
    ]
  });
  const context = data.context;
  const click = useClick(context, {
    enabled: controlledOpen == null
  });
  const dismiss = useDismiss(context);
  const role = useRole(context);
  const interactions = useInteractions([click, dismiss, role]);
  return React.useMemo(
    () => ({
      open,
      setOpen,
      ...interactions,
      ...data,
      modal,
      labelId,
      descriptionId,
      setLabelId,
      setDescriptionId
    }),
    [open, setOpen, interactions, data, modal, labelId, descriptionId]
  );
}
const PopoverContext = React.createContext(null);
const usePopoverContext = () => {
  const context = React.useContext(PopoverContext);
  if (context == null) {
    throw new Error("Popover components must be wrapped in <Popover />");
  }
  return context;
};
function Popover({
  children,
  modal = false,
  ...restOptions
}) {
  const popover = usePopover({ modal, ...restOptions });
  return /* @__PURE__ */ jsxRuntimeExports.jsx(PopoverContext.Provider, { value: popover, children });
}
const PopoverTrigger = React.forwardRef(function PopoverTrigger2({ children, onClickWord, termStatus, asChild = false, ...props }, propRef) {
  const context = usePopoverContext();
  console.log(context.refs);
  const childrenRef = children.ref;
  const ref = useMergeRefs([context.refs.setReference, propRef, childrenRef]);
  const divRef = reactExports.useRef();
  if (asChild && React.isValidElement(children)) {
    return React.cloneElement(
      children,
      context.getReferenceProps({
        ref,
        ...props,
        ...children.props,
        "data-state": context.open ? "open" : "closed"
      })
    );
  }
  const { ...refProps } = context.getReferenceProps(props);
  if (context.open) {
    console.log("TRIGGER", context.open, refProps);
  }
  return /* @__PURE__ */ jsxRuntimeExports.jsx(
    "span",
    {
      className: `click word wsty${termStatus}`,
      ref: divRef,
      "data-state": context.open ? "open" : "closed",
      ...refProps,
      onClick: (event) => {
        context.refs.setPositionReference(divRef.current);
        onClickWord();
        event.stopPropagation();
      },
      children
    }
  );
});
const PopoverContent = React.forwardRef(function PopoverContent2(props, propRef) {
  const { context: floatingContext, ...context } = usePopoverContext();
  const ref = useMergeRefs([context.refs.setFloating, propRef]);
  console.log("POPOVER", context.open);
  return /* @__PURE__ */ jsxRuntimeExports.jsx(FloatingPortal, { children: context.open && /* @__PURE__ */ jsxRuntimeExports.jsx(FloatingFocusManager, { context: floatingContext, modal: context.modal, children: /* @__PURE__ */ jsxRuntimeExports.jsx(
    "div",
    {
      ref,
      id: "TEST123-TOOLTIP",
      style: {
        position: context.strategy,
        top: context.y ?? 0,
        left: context.x ?? 0,
        width: "max-content",
        ...props.style
      },
      "aria-labelledby": context.labelId,
      "aria-describedby": context.descriptionId,
      ...context.getFloatingProps(props),
      children: props.children
    }
  ) }) });
});
React.forwardRef(function PopoverHeading2({ children, ...props }, ref) {
  const { setLabelId } = usePopoverContext();
  const id2 = useId();
  React.useLayoutEffect(() => {
    setLabelId(id2);
    return () => setLabelId(void 0);
  }, [id2, setLabelId]);
  return /* @__PURE__ */ jsxRuntimeExports.jsx("h2", { ...props, ref, id: id2, children });
});
const PopoverBody = React.forwardRef(function PopoverBody2({ children, ...props }, ref) {
  const { setDescriptionId: setBodyId } = usePopoverContext();
  const id2 = useId();
  React.useLayoutEffect(() => {
    setBodyId(id2);
    return () => setBodyId(void 0);
  }, [id2, setBodyId]);
  return /* @__PURE__ */ jsxRuntimeExports.jsx("p", { ...props, ref, id: id2, children });
});
React.forwardRef(function PopoverClose2({ children, ...props }, ref) {
  const { setOpen } = usePopoverContext();
  return /* @__PURE__ */ jsxRuntimeExports.jsx("button", { type: "button", ...props, ref, onClick: () => setOpen(false), children });
});
function Reader({
  activeId,
  setActiveWord,
  activeWord
}) {
  const [{ texts: texts2, words: words2, parsedTexts }] = useData([
    "texts",
    "words",
    "parsedTexts"
  ]);
  const [tooltipOpen, setTooltipOpen] = reactExports.useState(null);
  const activeText = texts2.find((text) => text.TxID === activeId);
  const activeParsedText = parsedTexts[activeId];
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { id: "thetext", children: /* @__PURE__ */ jsxRuntimeExports.jsxs(
    "p",
    {
      onClick: () => setTooltipOpen(null),
      style: {
        // TODO
        // wordBreak: 'break-all',
        // whiteSpace: 'nowrap',
        fontSize: "200%",
        lineHeight: 1.4,
        marginBottom: "10px"
      },
      children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs(Popover, { open: tooltipOpen !== null, children: [
          tooltipOpen && activeWord !== null && /* @__PURE__ */ jsxRuntimeExports.jsx(PopoverContent, { className: "Popover", children: /* @__PURE__ */ jsxRuntimeExports.jsx(PopoverBody, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(
            AddNewTermTooltip,
            {
              word: "WoText" in activeWord ? activeWord : activeWord.newWord,
              sentence: "sentence",
              onClose: () => setTooltipOpen(null)
            }
          ) }) }),
          activeText && // TODO
          activeParsedText.map((term, ii2) => {
            const foundWord = words2.find(
              (word) => word.WoText.toLowerCase() === term.text.toLowerCase()
            );
            const termStatus = foundWord ? ` status${foundWord.WoStatus}` : " status0";
            const { isTerm } = term;
            return /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, { children: isTerm ? /* @__PURE__ */ jsxRuntimeExports.jsx(
              PopoverTrigger,
              {
                onClickWord: () => {
                  setActiveWord(
                    foundWord !== void 0 ? foundWord : { newWord: term.text }
                  );
                  setTooltipOpen(ii2);
                },
                termStatus,
                children: term.text
              }
            ) : /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, { children: term.text }) });
          })
        ] }),
        " "
      ]
    }
  ) });
}
function getStatusName(status) {
  return STATUSES[status] ? STATUSES[status]["name"] : "Unknown";
}
function getStatusAbbr(status) {
  return STATUSES[status] ? STATUSES[status]["abbr"] : "?";
}
function escape_html_chars(s) {
  return s.replace(/&/g, "%AMP%").replace(/</g, "&#060;").replace(/>/g, "&#062;").replace(/"/g, "&#034;").replace(/'/g, "&#039;").replace(/%AMP%/g, "&#038;").replace(/\x0d/g, "<br />");
}
function make_tooltip(word, trans2, roman2, status) {
  const nl2 = "\r";
  let title = word;
  if (roman2 != "") {
    if (title != "")
      title += nl2;
    title += "▶ " + roman2;
  }
  if (trans2 != "" && trans2 != "*") {
    if (title != "")
      title += nl2;
    title += "▶ " + trans2;
  }
  if (title != "")
    title += nl2;
  title += "▶ " + getStatusName(status) + " [" + getStatusAbbr(status) + "]";
  return title;
}
function Pane3() {
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { backgroundColor: "yellow", width: "100%", height: "100%" }, children: "TEST1" });
}
function ReaderPage({ textId }) {
  const [{ texts: texts2, words: words2 }] = useData(["texts", "words"]);
  const [activeWord, setActiveWord] = reactExports.useState(null);
  const text = texts2.find((text2) => text2.TxID === textId);
  const activeText = activeWord === null ? null : "newWord" in activeWord ? activeWord.newWord : activeWord.WoText;
  if (!text) {
    return /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, {});
  }
  return /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, { children: /* @__PURE__ */ jsxRuntimeExports.jsxs(SplitPane, { split: "vertical", minSize: 50, defaultSize: "55%", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs(
      SplitPane,
      {
        style: { overflowWrap: "break-word" },
        split: "horizontal",
        minSize: 50,
        defaultSize: "20%",
        children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            Header,
            {
              title: `READ ▶ ${text.TxTitle}`,
              readerProps: {
                // TODO getPreviousAndNextTextLinks
                nextTextID: "Test1",
                prevTextString: "test2",
                langID: text.TxLgID,
                textID: text.TxID
              }
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            Reader,
            {
              activeId: textId,
              setActiveWord,
              activeWord
            }
          )
        ]
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsxs(SplitPane, { split: "horizontal", minSize: 50, defaultSize: "60%", children: [
      activeWord && "newWord" in activeWord ? /* @__PURE__ */ jsxRuntimeExports.jsx(
        AddNewWordPane,
        {
          word: activeText,
          langId: text.TxLgID,
          existingTerm: words2.find(({ WoText }) => activeText === WoText)
        }
      ) : /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, {}),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Pane3, {})
    ] })
  ] }) });
}
function TesterPage({
  langId,
  textId
}) {
  const [{ texts: texts2, words: words2 }] = useData(["texts", "words"]);
  const [activeWord, setActiveWord] = reactExports.useState();
  const text = textId !== null ? texts2.find((text2) => text2.TxID === textId) : texts2.find((text2) => text2.TxLgID === langId);
  const [testModality, setTestModality] = reactExports.useState(null);
  if (!text) {
    return /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, {});
  }
  return /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, { children: /* @__PURE__ */ jsxRuntimeExports.jsxs(SplitPane, { split: "vertical", minSize: 50, defaultSize: "55%", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs(
      SplitPane,
      {
        style: { overflowWrap: "break-word" },
        split: "horizontal",
        minSize: 50,
        defaultSize: "20%",
        children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx(Header, { title: "" }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("p", { style: { marginBottom: 0 }, children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx(
                "input",
                {
                  type: "button",
                  value: "..[L2]..",
                  onClickCapture: () => setTestModality(1)
                }
              ),
              /* @__PURE__ */ jsxRuntimeExports.jsx(
                "input",
                {
                  type: "button",
                  value: "..[L1]..",
                  onClickCapture: () => setTestModality(2)
                }
              ),
              /* @__PURE__ */ jsxRuntimeExports.jsx(
                "input",
                {
                  type: "button",
                  value: "..[••]..",
                  onClickCapture: () => setTestModality(3)
                }
              ),
              " ",
              "  |  ",
              /* @__PURE__ */ jsxRuntimeExports.jsx(
                "input",
                {
                  type: "button",
                  value: "[L2]",
                  onClickCapture: () => setTestModality(4)
                }
              ),
              /* @__PURE__ */ jsxRuntimeExports.jsx(
                "input",
                {
                  type: "button",
                  value: "[L1]",
                  onClickCapture: () => setTestModality(5)
                }
              ),
              " ",
              "  |  ",
              /* @__PURE__ */ jsxRuntimeExports.jsx(
                "input",
                {
                  type: "button",
                  value: "Table",
                  onClickCapture: () => setTestModality("table")
                }
              )
            ] })
          ] }),
          testModality === null ? /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, {}) : /* @__PURE__ */ jsxRuntimeExports.jsx(Tester, { modality: testModality })
        ]
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsxs(SplitPane, { split: "horizontal", minSize: 50, defaultSize: "60%", children: [
      activeWord ? /* @__PURE__ */ jsxRuntimeExports.jsx(
        AddNewWordPane,
        {
          word: activeWord,
          langId: text.TxLgID,
          existingTerm: words2.find(({ WoText }) => activeWord === WoText)
        }
      ) : /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, {}),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Pane3, {})
    ] })
  ] }) });
}
function Tester({ modality }) {
  const [testingWord, setTestingWord] = reactExports.useState(null);
  const [numCorrect, setNumCorrect] = reactExports.useState(0);
  const [numWrong, setNumWrong] = reactExports.useState(0);
  const [numNotTested, setNumNotTested] = reactExports.useState(10);
  const timer2 = useTimer(1e3);
  const totalTests = numWrong + numCorrect + numNotTested;
  const l_notyet = Math.round(numNotTested * 100);
  const b_notyet = l_notyet == 0 ? "" : "borderl";
  const l_wrong = Math.round(numWrong * 100);
  const b_wrong = l_wrong == 0 ? "" : "borderl";
  const l_correct = Math.round(numCorrect * 100);
  const b_correct = l_correct == 0 ? "borderr" : "borderl borderr";
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    testingWord && /* @__PURE__ */ jsxRuntimeExports.jsx(RunTestForWord, { word: testingWord }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { id: "footer", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "clock", title: "Elapsed Time" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("span", { id: "timer", title: "Elapsed Time", children: timer2 }),
      "     ",
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        Icon,
        {
          className: b_notyet,
          src: "test_notyet",
          title: "Not yet tested",
          height: 10,
          width: l_notyet
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        Icon,
        {
          className: b_wrong,
          src: "test_wrong",
          title: "Wrong",
          height: 10,
          width: l_wrong
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        Icon,
        {
          className: b_correct,
          src: "test_correct",
          title: "Correct",
          height: 10,
          width: l_correct
        }
      ),
      "     ",
      /* @__PURE__ */ jsxRuntimeExports.jsx("span", { title: "Total number of tests", children: totalTests }),
      "=",
      /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "todosty", title: "Not yet tested", children: numNotTested }),
      "+",
      /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "donewrongsty", title: "Wrong", children: numWrong }),
      "+",
      /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "doneoksty", title: "Correct", children: numCorrect })
    ] })
  ] });
}
function useTimer(intervalInMs) {
  const [time, setTime] = reactExports.useState(0);
  reactExports.useEffect(() => {
    const interval2 = setInterval(
      () => setTime((/* @__PURE__ */ new Date()).getTime() - time),
      intervalInMs
    );
    return () => {
      clearInterval(interval2);
    };
  }, []);
  return time;
}
function RunTestForWord({ word: { WoStatus: status } }) {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("center", { children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("hr", { size: 1 }),
      status >= 1 && status <= 5 && /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "thumb-up", title: "Got it!" }),
        " Got it! [",
        `${status} ▶ ${status + 1}`,
        "]",
        /* @__PURE__ */ jsxRuntimeExports.jsx("hr", { size: 1 }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "thumb", title: "Oops!" }),
        " Oops! [",
        `${status} ▶ ${status - 1}`,
        "]",
        /* @__PURE__ */ jsxRuntimeExports.jsx("hr", { size: 1 }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("b", {}),
        /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
      ] })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("hr", { size: 1 }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: escape_html_chars(make_tooltip(txt, trans, roman, stat)) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
    /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: "edit_tword.php?wid=", target: "ro", children: "Edit term" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
    createTheDictLink(wblink1, txt, "Dict1", "Lookup Term: "),
    createTheDictLink(wblink2, txt, "Dict2", ""),
    createTheDictLink(wblink3, txt, "GTr", "")
  ] });
}
function createTheDictLink(u2, w2, t2, b2) {
  const url = u2.trim();
  const trm = w2.trim();
  const txt2 = t2.trim();
  const txtbefore = b2.trim();
  let r2 = "";
  if (url != "" && txt2 != "") {
    if (url.substr(0, 1) == "*") {
      r2 = " " + txtbefore + ` <span class="click" onclick="owin('` + createTheDictUrl(url.substring(1), escape_apostrophes(trm)) + `');">` + txt2 + "</span> ";
    } else {
      r2 = " " + txtbefore + ' <a href="' + createTheDictUrl(url, trm) + '" target="ru">' + txt2 + "</a> ";
    }
  }
  return r2;
}
function createTheDictUrl(u2, w2) {
  u2.trim();
  w2.trim();
  const r2 = "trans.php?x=2&i=" + escape(u2) + "&t=" + w2;
  return r2;
}
function escape_apostrophes(s) {
  return s.replace(/'/g, "\\'");
}
function SettingsComponent() {
  useData(["settings"]);
  const navigate = useInternalNavigate();
  const validator = SettingsValidator;
  const refMap = RefMap(validator);
  const StInput = buildFormInput(refMap);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(Header, { title: "Settings/Preferences" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("p", { children: " " }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("form", { className: "validate", action: "/settings", method: "post", children: /* @__PURE__ */ jsxRuntimeExports.jsx("table", { className: "tab3", cellSpacing: 0, cellPadding: 5, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("tbody", { children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1", children: "Group" }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1", children: "Description" }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1", colSpan: 2, children: "Value" })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1 center", rowSpan: 4, children: [
          "Read Text",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "Screen"
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center", children: [
          "Height of left top frame",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "without" }),
          " audioplayer"
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            StInput,
            {
              className: "notempty posintnumber right setfocus",
              type: "text",
              entryKey: "set-text-h-frameheight-no-audio",
              value: 140,
              maxLength: 3,
              size: 3
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "Pixel"
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx(RequiredLineButton, {}) })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center", children: [
          "Height of left top frame",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "with" }),
          " audioplayer"
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            StInput,
            {
              className: "notempty posintnumber right",
              type: "text",
              entryKey: "set-text-h-frameheight-with-audio",
              value: "200",
              maxLength: 3,
              size: 3
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "Pixel"
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx(RequiredLineButton, {}) })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: "Width of left frames" }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            StInput,
            {
              className: "notempty posintnumber right",
              type: "text",
              entryKey: "set-text-l-framewidth-percent",
              value: "50",
              maxLength: 2,
              size: 2
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "Percent"
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx(RequiredLineButton, {}) })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: "Height of right top frame" }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            StInput,
            {
              className: "notempty posintnumber right",
              type: "text",
              entryKey: "set-text-r-frameheight-percent",
              value: "50",
              maxLength: 2,
              size: 2
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "Percent"
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx(RequiredLineButton, {}) })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1 center middle", rowSpan: 5, children: [
          "Test",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "Screen"
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: "Height of left top frame" }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            StInput,
            {
              className: "notempty posintnumber right",
              type: "text",
              entryKey: "set-test-h-frameheight",
              value: "140",
              maxLength: 3,
              size: 3
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "Pixel"
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx(RequiredLineButton, {}) })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: "Width of left frames" }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            StInput,
            {
              className: "notempty posintnumber right",
              type: "text",
              entryKey: "set-test-l-framewidth-percent",
              value: "50",
              maxLength: 2,
              size: 2
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "Percent"
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx(RequiredLineButton, {}) })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: "Height of right top frame" }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            StInput,
            {
              className: "notempty posintnumber right",
              type: "text",
              entryKey: "set-test-r-frameheight-percent",
              value: "50",
              maxLength: 2,
              size: 2
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "Percent"
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx(RequiredLineButton, {}) })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center", children: [
          "Waiting time after assessment",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "to display next test",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            StInput,
            {
              className: "notempty zeroposintnumber right",
              type: "text",
              entryKey: "set-test-main-frame-waiting-time",
              value: "0",
              maxLength: 4,
              size: 4
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "Milliseconds"
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx(RequiredLineButton, {}) })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center", children: [
          "Waiting Time ",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "to clear the message/edit frame"
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            StInput,
            {
              className: "notempty zeroposintnumber right",
              type: "text",
              entryKey: "set-test-edit-frame-waiting-time",
              value: "500",
              maxLength: 8,
              size: 8
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "Milliseconds"
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx(RequiredLineButton, {}) })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1 center", children: [
          "Frame Set",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "Display Mode"
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center", children: [
          "Select how frame sets are",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "displayed on different devices"
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsxs("select", { name: "set-mobile-display-mode", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "0", selected: true, children: "Auto" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "1", children: "Force Non-Mobile" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "2", children: "Force Mobile" })
        ] }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx(RequiredLineButton, {}) })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1 center", children: "Reading" }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center", children: [
          "Visit only saved terms with status(es)...",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "(via keystrokes RIGHT, SPACE, LEFT, etc.)"
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsxs("select", { name: "set-text-visit-statuses-via-key", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "", selected: true, children: "[Filter off]" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "1", children: "Learning [1]" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "2", children: "Learning [2]" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "3", children: "Learning [3]" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "4", children: "Learning [4]" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "5", children: "Learned [5]" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("option", { disabled: true, children: "--------" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "12", children: "Learning [1..2]" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "13", children: "Learning [1..3]" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "14", children: "Learning [1..4]" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "15", children: "Learning/-ed [1..5]" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("option", { disabled: true, children: "--------" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "23", children: "Learning [2..3]" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "24", children: "Learning [2..4]" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "25", children: "Learning/-ed [2..5]" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("option", { disabled: true, children: "--------" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "34", children: "Learning [3..4]" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "35", children: "Learning/-ed [3..5]" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("option", { disabled: true, children: "--------" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "45", children: "Learning/-ed [4..5]" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("option", { disabled: true, children: "--------" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "599", children: "All known [5+WKn]" })
        ] }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx(RequiredLineButton, {}) })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("th", { className: "th1 center", children: "Testing" }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center", children: [
          "Number of sentences ",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "displayed from text, if available"
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsxs("select", { name: "set-test-sentence-count", className: "notempty", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "1", selected: true, children: "Just ONE" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "2", children: "TWO (+previous)" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "3", children: "THREE (+previous,+next)" })
        ] }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx(RequiredLineButton, {}) })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1 center", children: [
          "Term Sentence",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "Generation"
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center", children: [
          "Number of sentences ",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "generated from text, if available"
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsxs("select", { name: "set-term-sentence-count", className: "notempty", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "1", selected: true, children: "Just ONE" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "2", children: "TWO (+previous)" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "3", children: "THREE (+previous,+next)" })
        ] }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx(RequiredLineButton, {}) })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1 center", children: [
          "Similar",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "Terms"
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center", children: [
          "Similar terms to be displayed",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "while adding/editing a term"
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
          StInput,
          {
            className: "notempty zeroposintnumber right",
            type: "text",
            entryKey: "set-similar-terms-count",
            value: "0",
            maxLength: 1,
            size: 1
          }
        ) }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx(RequiredLineButton, {}) })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1 center", children: [
          "Term",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "Translations"
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center", children: [
          "List of characters that",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "delimit different translations",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "(used in annotation selection)"
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
          StInput,
          {
            className: "notempty center",
            type: "text",
            entryKey: "set-term-translation-delimiters",
            value: "/;|",
            maxLength: 8,
            size: 8
          }
        ) }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx(RequiredLineButton, {}) })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "th1 center", rowSpan: 5, children: [
          "Text, Term &",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "Tag Tables"
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: "Texts per Page" }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
          StInput,
          {
            className: "notempty posintnumber right",
            type: "text",
            entryKey: "set-texts-per-page",
            value: "10",
            maxLength: 4,
            size: 4
          }
        ) }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx(RequiredLineButton, {}) })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center", children: [
          "Show Word Counts of Texts immediately",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "(",
          /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: '"No"' }),
          " loads a long text table faster)"
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsxs("select", { name: "set-show-text-word-counts", className: "notempty", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "0", children: "No" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "1", selected: true, children: "Yes" })
        ] }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx(RequiredLineButton, {}) })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: "Archived Texts per Page" }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
          StInput,
          {
            className: "notempty posintnumber right",
            type: "text",
            entryKey: "set-archivedtexts-per-page",
            value: "100",
            maxLength: 4,
            size: 4
          }
        ) }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx(RequiredLineButton, {}) })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: "Terms per Page" }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
          StInput,
          {
            className: "notempty posintnumber right",
            type: "text",
            entryKey: "set-terms-per-page",
            value: "100",
            maxLength: 4,
            size: 4
          }
        ) }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx(RequiredLineButton, {}) })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: "Tags per Page" }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
          StInput,
          {
            className: "notempty posintnumber right",
            type: "text",
            entryKey: "set-tags-per-page",
            value: "100",
            maxLength: 4,
            size: 4
          }
        ) }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx(RequiredLineButton, {}) })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("tr", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 right", colSpan: 4, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "input",
          {
            type: "button",
            value: "<< Back",
            onClick: () => {
              navigate("/");
            }
          }
        ),
        "    |    ",
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "input",
          {
            type: "button",
            value: "Reset all settings to default",
            onClick: () => {
              navigate("/settings?op=reset");
            }
          }
        ),
        "    |    ",
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "input",
          {
            type: "button",
            value: "Save",
            onClick: () => {
              CheckAndSubmit(refMap, {}, validator, (val) => {
                console.log(val);
              });
            }
          }
        )
      ] }) })
    ] }) }) })
  ] });
}
function ImportShortText() {
  const [{ activeLanguage }] = useData(["activeLanguage"]);
  const validator = AddNewTextValidator;
  const refMap = RefMap(validator);
  const navigator2 = useInternalNavigate();
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      Header,
      {
        title: activeLanguage ? `My ${activeLanguage.LgName} Texts` : ""
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx("p", { children: " " }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("h4", { children: [
      "New Text",
      /* @__PURE__ */ jsxRuntimeExports.jsx("a", { target: "_blank", href: "info#howtotext", children: /* @__PURE__ */ jsxRuntimeExports.jsx(Icon, { src: "question-frame", title: "Help" }) })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("form", { className: "validate", children: /* @__PURE__ */ jsxRuntimeExports.jsx("table", { className: "tab3", cellSpacing: 0, cellPadding: 5, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("tbody", { children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Language:" }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            LanguageDropdown,
            {
              dropdownRef: refMap.TxLgID,
              defaultValue: activeLanguage ? activeLanguage.LgID : void 0,
              onChange: (val) => dataService.setActiveLanguage(val)
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsx(RequiredLineButton, {})
        ] })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Title:" }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "input",
            {
              type: "text",
              className: "notempty checkoutsidebmp",
              name: "TxTitle",
              ref: refMap.TxTitle,
              defaultValue: "",
              maxLength: 200,
              size: 60
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsx(RequiredLineButton, {})
        ] })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 right", children: [
          "Text:",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "(max.",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "65,000",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "bytes)"
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "textarea",
            {
              name: "TxText",
              ref: refMap.TxText,
              className: "notempty checkbytes checkoutsidebmp",
              maxLength: 65e3,
              cols: 60,
              rows: 20
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsx(RequiredLineButton, {})
        ] })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Source URI:" }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
          "input",
          {
            type: "text",
            className: "checkurl checkoutsidebmp",
            name: "TxSourceURI",
            ref: refMap.TxSourceURI,
            defaultValue: "",
            maxLength: 1e3,
            size: 60
          }
        ) })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Tags:" }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
          "ul",
          {
            id: "texttags",
            className: "tagit ui-widget ui-widget-content ui-corner-all",
            children: /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { className: "tagit-new", children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx(
                "span",
                {
                  role: "status",
                  "aria-live": "polite",
                  className: "ui-helper-hidden-accessible"
                }
              ),
              /* @__PURE__ */ jsxRuntimeExports.jsx(
                "input",
                {
                  type: "text",
                  maxLength: 20,
                  size: 20,
                  className: "ui-widget-content ui-autocomplete-input",
                  autoComplete: "off"
                }
              )
            ] })
          }
        ) })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 right", children: "Audio-URI:" }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "input",
            {
              type: "text",
              className: "checkoutsidebmp",
              name: "TxAudioURI",
              ref: refMap.TxAudioURI,
              defaultValue: "",
              maxLength: 200,
              size: 60
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("span", { id: "mediaselect", children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            'or choose a file in ".../lwt/media" (only mp3, ogg, wav files shown): ',
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            '[Directory ".../lwt/media" does not yet exist.]    ',
            /* @__PURE__ */ jsxRuntimeExports.jsxs(
              "span",
              {
                className: "click",
                onClick: "do_ajax_update_media_select();",
                children: [
                  /* @__PURE__ */ jsxRuntimeExports.jsx(
                    Icon,
                    {
                      src: "arrow-circle-135",
                      title: "Refresh Media Selection"
                    }
                  ),
                  "Refresh"
                ]
              }
            )
          ] })
        ] })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("tr", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 right", colSpan: 2, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "input",
          {
            type: "button",
            value: "Cancel",
            onClick: () => {
              ResetForm(refMap);
              navigator2(`/edit_texts`);
            }
          }
        ),
        /* @__PURE__ */ jsxRuntimeExports.jsx("input", { type: "submit", name: "op", value: "Check" }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "input",
          {
            type: "button",
            name: "op",
            value: "Save",
            onClick: () => {
              CheckAndSubmit(
                refMap,
                {
                  TxLgID: parseNumMap,
                  TxAudioURI: emptyToNullMap,
                  TxSourceURI: emptyToNullMap
                },
                validator,
                (value) => {
                  const textId = dataService.addText(value);
                  if (textId !== null) {
                    dataService.reparseText(textId);
                    navigator2(`/edit_texts`);
                  }
                }
              );
            }
          }
        ),
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "input",
          {
            type: "button",
            name: "op",
            value: "Save and Open",
            onClick: () => {
              CheckAndSubmit(
                refMap,
                {
                  TxLgID: parseNumMap,
                  TxAudioURI: emptyToNullMap,
                  TxSourceURI: emptyToNullMap
                },
                validator,
                (value) => {
                  const textId = dataService.addText(value);
                  if (textId !== null) {
                    dataService.reparseText(textId);
                    navigator2(`/do_text?start=${textId}`);
                  }
                }
              );
            }
          }
        )
      ] }) })
    ] }) }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("p", { className: "smallgray", children: [
      "Import of a ",
      /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "long text" }),
      ", without audio, with splitting it up into smaller texts:"
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("p", { children: /* @__PURE__ */ jsxRuntimeExports.jsx(
      "input",
      {
        type: "button",
        value: "Long Text Import",
        onClick: () => navigator2("/long_text_import")
      }
    ) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      "ul",
      {
        className: "\n        ui-autocomplete ui-front ui-menu ui-widget ui-widget-content ui-corner-all\n      ",
        id: "ui-id-1",
        tabIndex: 0
      }
    )
  ] });
}
var papaparse_min = { exports: {} };
/* @license
Papa Parse
v5.4.1
https://github.com/mholt/PapaParse
License: MIT
*/
(function(module, exports) {
  !function(e2, t2) {
    module.exports = t2();
  }(commonjsGlobal, function s() {
    var f2 = "undefined" != typeof self ? self : "undefined" != typeof window ? window : void 0 !== f2 ? f2 : {};
    var n2 = !f2.document && !!f2.postMessage, o = f2.IS_PAPA_WORKER || false, a = {}, u2 = 0, b2 = { parse: function(e2, t2) {
      var r3 = (t2 = t2 || {}).dynamicTyping || false;
      J2(r3) && (t2.dynamicTypingFunction = r3, r3 = {});
      if (t2.dynamicTyping = r3, t2.transform = !!J2(t2.transform) && t2.transform, t2.worker && b2.WORKERS_SUPPORTED) {
        var i = function() {
          if (!b2.WORKERS_SUPPORTED)
            return false;
          var e3 = (r4 = f2.URL || f2.webkitURL || null, i2 = s.toString(), b2.BLOB_URL || (b2.BLOB_URL = r4.createObjectURL(new Blob(["var global = (function() { if (typeof self !== 'undefined') { return self; } if (typeof window !== 'undefined') { return window; } if (typeof global !== 'undefined') { return global; } return {}; })(); global.IS_PAPA_WORKER=true; ", "(", i2, ")();"], { type: "text/javascript" })))), t3 = new f2.Worker(e3);
          var r4, i2;
          return t3.onmessage = _2, t3.id = u2++, a[t3.id] = t3;
        }();
        return i.userStep = t2.step, i.userChunk = t2.chunk, i.userComplete = t2.complete, i.userError = t2.error, t2.step = J2(t2.step), t2.chunk = J2(t2.chunk), t2.complete = J2(t2.complete), t2.error = J2(t2.error), delete t2.worker, void i.postMessage({ input: e2, config: t2, workerId: i.id });
      }
      var n3 = null;
      b2.NODE_STREAM_INPUT, "string" == typeof e2 ? (e2 = function(e3) {
        if (65279 === e3.charCodeAt(0))
          return e3.slice(1);
        return e3;
      }(e2), n3 = t2.download ? new l2(t2) : new p2(t2)) : true === e2.readable && J2(e2.read) && J2(e2.on) ? n3 = new g2(t2) : (f2.File && e2 instanceof File || e2 instanceof Object) && (n3 = new c2(t2));
      return n3.stream(e2);
    }, unparse: function(e2, t2) {
      var n3 = false, _3 = true, m3 = ",", y3 = "\r\n", s2 = '"', a2 = s2 + s2, r3 = false, i = null, o2 = false;
      !function() {
        if ("object" != typeof t2)
          return;
        "string" != typeof t2.delimiter || b2.BAD_DELIMITERS.filter(function(e3) {
          return -1 !== t2.delimiter.indexOf(e3);
        }).length || (m3 = t2.delimiter);
        ("boolean" == typeof t2.quotes || "function" == typeof t2.quotes || Array.isArray(t2.quotes)) && (n3 = t2.quotes);
        "boolean" != typeof t2.skipEmptyLines && "string" != typeof t2.skipEmptyLines || (r3 = t2.skipEmptyLines);
        "string" == typeof t2.newline && (y3 = t2.newline);
        "string" == typeof t2.quoteChar && (s2 = t2.quoteChar);
        "boolean" == typeof t2.header && (_3 = t2.header);
        if (Array.isArray(t2.columns)) {
          if (0 === t2.columns.length)
            throw new Error("Option columns is empty");
          i = t2.columns;
        }
        void 0 !== t2.escapeChar && (a2 = t2.escapeChar + s2);
        ("boolean" == typeof t2.escapeFormulae || t2.escapeFormulae instanceof RegExp) && (o2 = t2.escapeFormulae instanceof RegExp ? t2.escapeFormulae : /^[=+\-@\t\r].*$/);
      }();
      var u3 = new RegExp(Q2(s2), "g");
      "string" == typeof e2 && (e2 = JSON.parse(e2));
      if (Array.isArray(e2)) {
        if (!e2.length || Array.isArray(e2[0]))
          return h3(null, e2, r3);
        if ("object" == typeof e2[0])
          return h3(i || Object.keys(e2[0]), e2, r3);
      } else if ("object" == typeof e2)
        return "string" == typeof e2.data && (e2.data = JSON.parse(e2.data)), Array.isArray(e2.data) && (e2.fields || (e2.fields = e2.meta && e2.meta.fields || i), e2.fields || (e2.fields = Array.isArray(e2.data[0]) ? e2.fields : "object" == typeof e2.data[0] ? Object.keys(e2.data[0]) : []), Array.isArray(e2.data[0]) || "object" == typeof e2.data[0] || (e2.data = [e2.data])), h3(e2.fields || [], e2.data || [], r3);
      throw new Error("Unable to serialize unrecognized input");
      function h3(e3, t3, r4) {
        var i2 = "";
        "string" == typeof e3 && (e3 = JSON.parse(e3)), "string" == typeof t3 && (t3 = JSON.parse(t3));
        var n4 = Array.isArray(e3) && 0 < e3.length, s3 = !Array.isArray(t3[0]);
        if (n4 && _3) {
          for (var a3 = 0; a3 < e3.length; a3++)
            0 < a3 && (i2 += m3), i2 += v3(e3[a3], a3);
          0 < t3.length && (i2 += y3);
        }
        for (var o3 = 0; o3 < t3.length; o3++) {
          var u4 = n4 ? e3.length : t3[o3].length, h4 = false, f3 = n4 ? 0 === Object.keys(t3[o3]).length : 0 === t3[o3].length;
          if (r4 && !n4 && (h4 = "greedy" === r4 ? "" === t3[o3].join("").trim() : 1 === t3[o3].length && 0 === t3[o3][0].length), "greedy" === r4 && n4) {
            for (var d3 = [], l3 = 0; l3 < u4; l3++) {
              var c3 = s3 ? e3[l3] : l3;
              d3.push(t3[o3][c3]);
            }
            h4 = "" === d3.join("").trim();
          }
          if (!h4) {
            for (var p3 = 0; p3 < u4; p3++) {
              0 < p3 && !f3 && (i2 += m3);
              var g3 = n4 && s3 ? e3[p3] : p3;
              i2 += v3(t3[o3][g3], p3);
            }
            o3 < t3.length - 1 && (!r4 || 0 < u4 && !f3) && (i2 += y3);
          }
        }
        return i2;
      }
      function v3(e3, t3) {
        if (null == e3)
          return "";
        if (e3.constructor === Date)
          return JSON.stringify(e3).slice(1, 25);
        var r4 = false;
        o2 && "string" == typeof e3 && o2.test(e3) && (e3 = "'" + e3, r4 = true);
        var i2 = e3.toString().replace(u3, a2);
        return (r4 = r4 || true === n3 || "function" == typeof n3 && n3(e3, t3) || Array.isArray(n3) && n3[t3] || function(e4, t4) {
          for (var r5 = 0; r5 < t4.length; r5++)
            if (-1 < e4.indexOf(t4[r5]))
              return true;
          return false;
        }(i2, b2.BAD_DELIMITERS) || -1 < i2.indexOf(m3) || " " === i2.charAt(0) || " " === i2.charAt(i2.length - 1)) ? s2 + i2 + s2 : i2;
      }
    } };
    if (b2.RECORD_SEP = String.fromCharCode(30), b2.UNIT_SEP = String.fromCharCode(31), b2.BYTE_ORDER_MARK = "\uFEFF", b2.BAD_DELIMITERS = ["\r", "\n", '"', b2.BYTE_ORDER_MARK], b2.WORKERS_SUPPORTED = !n2 && !!f2.Worker, b2.NODE_STREAM_INPUT = 1, b2.LocalChunkSize = 10485760, b2.RemoteChunkSize = 5242880, b2.DefaultDelimiter = ",", b2.Parser = E2, b2.ParserHandle = r2, b2.NetworkStreamer = l2, b2.FileStreamer = c2, b2.StringStreamer = p2, b2.ReadableStreamStreamer = g2, f2.jQuery) {
      var d2 = f2.jQuery;
      d2.fn.parse = function(o2) {
        var r3 = o2.config || {}, u3 = [];
        return this.each(function(e3) {
          if (!("INPUT" === d2(this).prop("tagName").toUpperCase() && "file" === d2(this).attr("type").toLowerCase() && f2.FileReader) || !this.files || 0 === this.files.length)
            return true;
          for (var t2 = 0; t2 < this.files.length; t2++)
            u3.push({ file: this.files[t2], inputElem: this, instanceConfig: d2.extend({}, r3) });
        }), e2(), this;
        function e2() {
          if (0 !== u3.length) {
            var e3, t2, r4, i, n3 = u3[0];
            if (J2(o2.before)) {
              var s2 = o2.before(n3.file, n3.inputElem);
              if ("object" == typeof s2) {
                if ("abort" === s2.action)
                  return e3 = "AbortError", t2 = n3.file, r4 = n3.inputElem, i = s2.reason, void (J2(o2.error) && o2.error({ name: e3 }, t2, r4, i));
                if ("skip" === s2.action)
                  return void h3();
                "object" == typeof s2.config && (n3.instanceConfig = d2.extend(n3.instanceConfig, s2.config));
              } else if ("skip" === s2)
                return void h3();
            }
            var a2 = n3.instanceConfig.complete;
            n3.instanceConfig.complete = function(e4) {
              J2(a2) && a2(e4, n3.file, n3.inputElem), h3();
            }, b2.parse(n3.file, n3.instanceConfig);
          } else
            J2(o2.complete) && o2.complete();
        }
        function h3() {
          u3.splice(0, 1), e2();
        }
      };
    }
    function h2(e2) {
      this._handle = null, this._finished = false, this._completed = false, this._halted = false, this._input = null, this._baseIndex = 0, this._partialLine = "", this._rowCount = 0, this._start = 0, this._nextChunk = null, this.isFirstChunk = true, this._completeResults = { data: [], errors: [], meta: {} }, function(e3) {
        var t2 = w2(e3);
        t2.chunkSize = parseInt(t2.chunkSize), e3.step || e3.chunk || (t2.chunkSize = null);
        this._handle = new r2(t2), (this._handle.streamer = this)._config = t2;
      }.call(this, e2), this.parseChunk = function(e3, t2) {
        if (this.isFirstChunk && J2(this._config.beforeFirstChunk)) {
          var r3 = this._config.beforeFirstChunk(e3);
          void 0 !== r3 && (e3 = r3);
        }
        this.isFirstChunk = false, this._halted = false;
        var i = this._partialLine + e3;
        this._partialLine = "";
        var n3 = this._handle.parse(i, this._baseIndex, !this._finished);
        if (!this._handle.paused() && !this._handle.aborted()) {
          var s2 = n3.meta.cursor;
          this._finished || (this._partialLine = i.substring(s2 - this._baseIndex), this._baseIndex = s2), n3 && n3.data && (this._rowCount += n3.data.length);
          var a2 = this._finished || this._config.preview && this._rowCount >= this._config.preview;
          if (o)
            f2.postMessage({ results: n3, workerId: b2.WORKER_ID, finished: a2 });
          else if (J2(this._config.chunk) && !t2) {
            if (this._config.chunk(n3, this._handle), this._handle.paused() || this._handle.aborted())
              return void (this._halted = true);
            n3 = void 0, this._completeResults = void 0;
          }
          return this._config.step || this._config.chunk || (this._completeResults.data = this._completeResults.data.concat(n3.data), this._completeResults.errors = this._completeResults.errors.concat(n3.errors), this._completeResults.meta = n3.meta), this._completed || !a2 || !J2(this._config.complete) || n3 && n3.meta.aborted || (this._config.complete(this._completeResults, this._input), this._completed = true), a2 || n3 && n3.meta.paused || this._nextChunk(), n3;
        }
        this._halted = true;
      }, this._sendError = function(e3) {
        J2(this._config.error) ? this._config.error(e3) : o && this._config.error && f2.postMessage({ workerId: b2.WORKER_ID, error: e3, finished: false });
      };
    }
    function l2(e2) {
      var i;
      (e2 = e2 || {}).chunkSize || (e2.chunkSize = b2.RemoteChunkSize), h2.call(this, e2), this._nextChunk = n2 ? function() {
        this._readChunk(), this._chunkLoaded();
      } : function() {
        this._readChunk();
      }, this.stream = function(e3) {
        this._input = e3, this._nextChunk();
      }, this._readChunk = function() {
        if (this._finished)
          this._chunkLoaded();
        else {
          if (i = new XMLHttpRequest(), this._config.withCredentials && (i.withCredentials = this._config.withCredentials), n2 || (i.onload = v2(this._chunkLoaded, this), i.onerror = v2(this._chunkError, this)), i.open(this._config.downloadRequestBody ? "POST" : "GET", this._input, !n2), this._config.downloadRequestHeaders) {
            var e3 = this._config.downloadRequestHeaders;
            for (var t2 in e3)
              i.setRequestHeader(t2, e3[t2]);
          }
          if (this._config.chunkSize) {
            var r3 = this._start + this._config.chunkSize - 1;
            i.setRequestHeader("Range", "bytes=" + this._start + "-" + r3);
          }
          try {
            i.send(this._config.downloadRequestBody);
          } catch (e4) {
            this._chunkError(e4.message);
          }
          n2 && 0 === i.status && this._chunkError();
        }
      }, this._chunkLoaded = function() {
        4 === i.readyState && (i.status < 200 || 400 <= i.status ? this._chunkError() : (this._start += this._config.chunkSize ? this._config.chunkSize : i.responseText.length, this._finished = !this._config.chunkSize || this._start >= function(e3) {
          var t2 = e3.getResponseHeader("Content-Range");
          if (null === t2)
            return -1;
          return parseInt(t2.substring(t2.lastIndexOf("/") + 1));
        }(i), this.parseChunk(i.responseText)));
      }, this._chunkError = function(e3) {
        var t2 = i.statusText || e3;
        this._sendError(new Error(t2));
      };
    }
    function c2(e2) {
      var i, n3;
      (e2 = e2 || {}).chunkSize || (e2.chunkSize = b2.LocalChunkSize), h2.call(this, e2);
      var s2 = "undefined" != typeof FileReader;
      this.stream = function(e3) {
        this._input = e3, n3 = e3.slice || e3.webkitSlice || e3.mozSlice, s2 ? ((i = new FileReader()).onload = v2(this._chunkLoaded, this), i.onerror = v2(this._chunkError, this)) : i = new FileReaderSync(), this._nextChunk();
      }, this._nextChunk = function() {
        this._finished || this._config.preview && !(this._rowCount < this._config.preview) || this._readChunk();
      }, this._readChunk = function() {
        var e3 = this._input;
        if (this._config.chunkSize) {
          var t2 = Math.min(this._start + this._config.chunkSize, this._input.size);
          e3 = n3.call(e3, this._start, t2);
        }
        var r3 = i.readAsText(e3, this._config.encoding);
        s2 || this._chunkLoaded({ target: { result: r3 } });
      }, this._chunkLoaded = function(e3) {
        this._start += this._config.chunkSize, this._finished = !this._config.chunkSize || this._start >= this._input.size, this.parseChunk(e3.target.result);
      }, this._chunkError = function() {
        this._sendError(i.error);
      };
    }
    function p2(e2) {
      var r3;
      h2.call(this, e2 = e2 || {}), this.stream = function(e3) {
        return r3 = e3, this._nextChunk();
      }, this._nextChunk = function() {
        if (!this._finished) {
          var e3, t2 = this._config.chunkSize;
          return t2 ? (e3 = r3.substring(0, t2), r3 = r3.substring(t2)) : (e3 = r3, r3 = ""), this._finished = !r3, this.parseChunk(e3);
        }
      };
    }
    function g2(e2) {
      h2.call(this, e2 = e2 || {});
      var t2 = [], r3 = true, i = false;
      this.pause = function() {
        h2.prototype.pause.apply(this, arguments), this._input.pause();
      }, this.resume = function() {
        h2.prototype.resume.apply(this, arguments), this._input.resume();
      }, this.stream = function(e3) {
        this._input = e3, this._input.on("data", this._streamData), this._input.on("end", this._streamEnd), this._input.on("error", this._streamError);
      }, this._checkIsFinished = function() {
        i && 1 === t2.length && (this._finished = true);
      }, this._nextChunk = function() {
        this._checkIsFinished(), t2.length ? this.parseChunk(t2.shift()) : r3 = true;
      }, this._streamData = v2(function(e3) {
        try {
          t2.push("string" == typeof e3 ? e3 : e3.toString(this._config.encoding)), r3 && (r3 = false, this._checkIsFinished(), this.parseChunk(t2.shift()));
        } catch (e4) {
          this._streamError(e4);
        }
      }, this), this._streamError = v2(function(e3) {
        this._streamCleanUp(), this._sendError(e3);
      }, this), this._streamEnd = v2(function() {
        this._streamCleanUp(), i = true, this._streamData("");
      }, this), this._streamCleanUp = v2(function() {
        this._input.removeListener("data", this._streamData), this._input.removeListener("end", this._streamEnd), this._input.removeListener("error", this._streamError);
      }, this);
    }
    function r2(m3) {
      var a2, o2, u3, i = Math.pow(2, 53), n3 = -i, s2 = /^\s*-?(\d+\.?|\.\d+|\d+\.\d+)([eE][-+]?\d+)?\s*$/, h3 = /^((\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+([+-][0-2]\d:[0-5]\d|Z))|(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d([+-][0-2]\d:[0-5]\d|Z))|(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d([+-][0-2]\d:[0-5]\d|Z)))$/, t2 = this, r3 = 0, f3 = 0, d3 = false, e2 = false, l3 = [], c3 = { data: [], errors: [], meta: {} };
      if (J2(m3.step)) {
        var p3 = m3.step;
        m3.step = function(e3) {
          if (c3 = e3, _3())
            g3();
          else {
            if (g3(), 0 === c3.data.length)
              return;
            r3 += e3.data.length, m3.preview && r3 > m3.preview ? o2.abort() : (c3.data = c3.data[0], p3(c3, t2));
          }
        };
      }
      function y3(e3) {
        return "greedy" === m3.skipEmptyLines ? "" === e3.join("").trim() : 1 === e3.length && 0 === e3[0].length;
      }
      function g3() {
        return c3 && u3 && (k2("Delimiter", "UndetectableDelimiter", "Unable to auto-detect delimiting character; defaulted to '" + b2.DefaultDelimiter + "'"), u3 = false), m3.skipEmptyLines && (c3.data = c3.data.filter(function(e3) {
          return !y3(e3);
        })), _3() && function() {
          if (!c3)
            return;
          function e3(e4, t4) {
            J2(m3.transformHeader) && (e4 = m3.transformHeader(e4, t4)), l3.push(e4);
          }
          if (Array.isArray(c3.data[0])) {
            for (var t3 = 0; _3() && t3 < c3.data.length; t3++)
              c3.data[t3].forEach(e3);
            c3.data.splice(0, 1);
          } else
            c3.data.forEach(e3);
        }(), function() {
          if (!c3 || !m3.header && !m3.dynamicTyping && !m3.transform)
            return c3;
          function e3(e4, t4) {
            var r4, i2 = m3.header ? {} : [];
            for (r4 = 0; r4 < e4.length; r4++) {
              var n4 = r4, s3 = e4[r4];
              m3.header && (n4 = r4 >= l3.length ? "__parsed_extra" : l3[r4]), m3.transform && (s3 = m3.transform(s3, n4)), s3 = v3(n4, s3), "__parsed_extra" === n4 ? (i2[n4] = i2[n4] || [], i2[n4].push(s3)) : i2[n4] = s3;
            }
            return m3.header && (r4 > l3.length ? k2("FieldMismatch", "TooManyFields", "Too many fields: expected " + l3.length + " fields but parsed " + r4, f3 + t4) : r4 < l3.length && k2("FieldMismatch", "TooFewFields", "Too few fields: expected " + l3.length + " fields but parsed " + r4, f3 + t4)), i2;
          }
          var t3 = 1;
          !c3.data.length || Array.isArray(c3.data[0]) ? (c3.data = c3.data.map(e3), t3 = c3.data.length) : c3.data = e3(c3.data, 0);
          m3.header && c3.meta && (c3.meta.fields = l3);
          return f3 += t3, c3;
        }();
      }
      function _3() {
        return m3.header && 0 === l3.length;
      }
      function v3(e3, t3) {
        return r4 = e3, m3.dynamicTypingFunction && void 0 === m3.dynamicTyping[r4] && (m3.dynamicTyping[r4] = m3.dynamicTypingFunction(r4)), true === (m3.dynamicTyping[r4] || m3.dynamicTyping) ? "true" === t3 || "TRUE" === t3 || "false" !== t3 && "FALSE" !== t3 && (function(e4) {
          if (s2.test(e4)) {
            var t4 = parseFloat(e4);
            if (n3 < t4 && t4 < i)
              return true;
          }
          return false;
        }(t3) ? parseFloat(t3) : h3.test(t3) ? new Date(t3) : "" === t3 ? null : t3) : t3;
        var r4;
      }
      function k2(e3, t3, r4, i2) {
        var n4 = { type: e3, code: t3, message: r4 };
        void 0 !== i2 && (n4.row = i2), c3.errors.push(n4);
      }
      this.parse = function(e3, t3, r4) {
        var i2 = m3.quoteChar || '"';
        if (m3.newline || (m3.newline = function(e4, t4) {
          e4 = e4.substring(0, 1048576);
          var r5 = new RegExp(Q2(t4) + "([^]*?)" + Q2(t4), "gm"), i3 = (e4 = e4.replace(r5, "")).split("\r"), n5 = e4.split("\n"), s4 = 1 < n5.length && n5[0].length < i3[0].length;
          if (1 === i3.length || s4)
            return "\n";
          for (var a3 = 0, o3 = 0; o3 < i3.length; o3++)
            "\n" === i3[o3][0] && a3++;
          return a3 >= i3.length / 2 ? "\r\n" : "\r";
        }(e3, i2)), u3 = false, m3.delimiter)
          J2(m3.delimiter) && (m3.delimiter = m3.delimiter(e3), c3.meta.delimiter = m3.delimiter);
        else {
          var n4 = function(e4, t4, r5, i3, n5) {
            var s4, a3, o3, u4;
            n5 = n5 || [",", "	", "|", ";", b2.RECORD_SEP, b2.UNIT_SEP];
            for (var h4 = 0; h4 < n5.length; h4++) {
              var f4 = n5[h4], d4 = 0, l4 = 0, c4 = 0;
              o3 = void 0;
              for (var p4 = new E2({ comments: i3, delimiter: f4, newline: t4, preview: 10 }).parse(e4), g4 = 0; g4 < p4.data.length; g4++)
                if (r5 && y3(p4.data[g4]))
                  c4++;
                else {
                  var _4 = p4.data[g4].length;
                  l4 += _4, void 0 !== o3 ? 0 < _4 && (d4 += Math.abs(_4 - o3), o3 = _4) : o3 = _4;
                }
              0 < p4.data.length && (l4 /= p4.data.length - c4), (void 0 === a3 || d4 <= a3) && (void 0 === u4 || u4 < l4) && 1.99 < l4 && (a3 = d4, s4 = f4, u4 = l4);
            }
            return { successful: !!(m3.delimiter = s4), bestDelimiter: s4 };
          }(e3, m3.newline, m3.skipEmptyLines, m3.comments, m3.delimitersToGuess);
          n4.successful ? m3.delimiter = n4.bestDelimiter : (u3 = true, m3.delimiter = b2.DefaultDelimiter), c3.meta.delimiter = m3.delimiter;
        }
        var s3 = w2(m3);
        return m3.preview && m3.header && s3.preview++, a2 = e3, o2 = new E2(s3), c3 = o2.parse(a2, t3, r4), g3(), d3 ? { meta: { paused: true } } : c3 || { meta: { paused: false } };
      }, this.paused = function() {
        return d3;
      }, this.pause = function() {
        d3 = true, o2.abort(), a2 = J2(m3.chunk) ? "" : a2.substring(o2.getCharIndex());
      }, this.resume = function() {
        t2.streamer._halted ? (d3 = false, t2.streamer.parseChunk(a2, true)) : setTimeout(t2.resume, 3);
      }, this.aborted = function() {
        return e2;
      }, this.abort = function() {
        e2 = true, o2.abort(), c3.meta.aborted = true, J2(m3.complete) && m3.complete(c3), a2 = "";
      };
    }
    function Q2(e2) {
      return e2.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
    }
    function E2(j2) {
      var z2, M2 = (j2 = j2 || {}).delimiter, P2 = j2.newline, U2 = j2.comments, q2 = j2.step, N2 = j2.preview, B2 = j2.fastMode, K2 = z2 = void 0 === j2.quoteChar || null === j2.quoteChar ? '"' : j2.quoteChar;
      if (void 0 !== j2.escapeChar && (K2 = j2.escapeChar), ("string" != typeof M2 || -1 < b2.BAD_DELIMITERS.indexOf(M2)) && (M2 = ","), U2 === M2)
        throw new Error("Comment character same as delimiter");
      true === U2 ? U2 = "#" : ("string" != typeof U2 || -1 < b2.BAD_DELIMITERS.indexOf(U2)) && (U2 = false), "\n" !== P2 && "\r" !== P2 && "\r\n" !== P2 && (P2 = "\n");
      var W2 = 0, H2 = false;
      this.parse = function(i, t2, r3) {
        if ("string" != typeof i)
          throw new Error("Input must be a string");
        var n3 = i.length, e2 = M2.length, s2 = P2.length, a2 = U2.length, o2 = J2(q2), u3 = [], h3 = [], f3 = [], d3 = W2 = 0;
        if (!i)
          return L2();
        if (j2.header && !t2) {
          var l3 = i.split(P2)[0].split(M2), c3 = [], p3 = {}, g3 = false;
          for (var _3 in l3) {
            var m3 = l3[_3];
            J2(j2.transformHeader) && (m3 = j2.transformHeader(m3, _3));
            var y3 = m3, v3 = p3[m3] || 0;
            for (0 < v3 && (g3 = true, y3 = m3 + "_" + v3), p3[m3] = v3 + 1; c3.includes(y3); )
              y3 = y3 + "_" + v3;
            c3.push(y3);
          }
          if (g3) {
            var k2 = i.split(P2);
            k2[0] = c3.join(M2), i = k2.join(P2);
          }
        }
        if (B2 || false !== B2 && -1 === i.indexOf(z2)) {
          for (var b3 = i.split(P2), E3 = 0; E3 < b3.length; E3++) {
            if (f3 = b3[E3], W2 += f3.length, E3 !== b3.length - 1)
              W2 += P2.length;
            else if (r3)
              return L2();
            if (!U2 || f3.substring(0, a2) !== U2) {
              if (o2) {
                if (u3 = [], I2(f3.split(M2)), F2(), H2)
                  return L2();
              } else
                I2(f3.split(M2));
              if (N2 && N2 <= E3)
                return u3 = u3.slice(0, N2), L2(true);
            }
          }
          return L2();
        }
        for (var w3 = i.indexOf(M2, W2), R2 = i.indexOf(P2, W2), C2 = new RegExp(Q2(K2) + Q2(z2), "g"), S2 = i.indexOf(z2, W2); ; )
          if (i[W2] !== z2)
            if (U2 && 0 === f3.length && i.substring(W2, W2 + a2) === U2) {
              if (-1 === R2)
                return L2();
              W2 = R2 + s2, R2 = i.indexOf(P2, W2), w3 = i.indexOf(M2, W2);
            } else if (-1 !== w3 && (w3 < R2 || -1 === R2))
              f3.push(i.substring(W2, w3)), W2 = w3 + e2, w3 = i.indexOf(M2, W2);
            else {
              if (-1 === R2)
                break;
              if (f3.push(i.substring(W2, R2)), D2(R2 + s2), o2 && (F2(), H2))
                return L2();
              if (N2 && u3.length >= N2)
                return L2(true);
            }
          else
            for (S2 = W2, W2++; ; ) {
              if (-1 === (S2 = i.indexOf(z2, S2 + 1)))
                return r3 || h3.push({ type: "Quotes", code: "MissingQuotes", message: "Quoted field unterminated", row: u3.length, index: W2 }), T2();
              if (S2 === n3 - 1)
                return T2(i.substring(W2, S2).replace(C2, z2));
              if (z2 !== K2 || i[S2 + 1] !== K2) {
                if (z2 === K2 || 0 === S2 || i[S2 - 1] !== K2) {
                  -1 !== w3 && w3 < S2 + 1 && (w3 = i.indexOf(M2, S2 + 1)), -1 !== R2 && R2 < S2 + 1 && (R2 = i.indexOf(P2, S2 + 1));
                  var O2 = A2(-1 === R2 ? w3 : Math.min(w3, R2));
                  if (i.substr(S2 + 1 + O2, e2) === M2) {
                    f3.push(i.substring(W2, S2).replace(C2, z2)), i[W2 = S2 + 1 + O2 + e2] !== z2 && (S2 = i.indexOf(z2, W2)), w3 = i.indexOf(M2, W2), R2 = i.indexOf(P2, W2);
                    break;
                  }
                  var x2 = A2(R2);
                  if (i.substring(S2 + 1 + x2, S2 + 1 + x2 + s2) === P2) {
                    if (f3.push(i.substring(W2, S2).replace(C2, z2)), D2(S2 + 1 + x2 + s2), w3 = i.indexOf(M2, W2), S2 = i.indexOf(z2, W2), o2 && (F2(), H2))
                      return L2();
                    if (N2 && u3.length >= N2)
                      return L2(true);
                    break;
                  }
                  h3.push({ type: "Quotes", code: "InvalidQuotes", message: "Trailing quote on quoted field is malformed", row: u3.length, index: W2 }), S2++;
                }
              } else
                S2++;
            }
        return T2();
        function I2(e3) {
          u3.push(e3), d3 = W2;
        }
        function A2(e3) {
          var t3 = 0;
          if (-1 !== e3) {
            var r4 = i.substring(S2 + 1, e3);
            r4 && "" === r4.trim() && (t3 = r4.length);
          }
          return t3;
        }
        function T2(e3) {
          return r3 || (void 0 === e3 && (e3 = i.substring(W2)), f3.push(e3), W2 = n3, I2(f3), o2 && F2()), L2();
        }
        function D2(e3) {
          W2 = e3, I2(f3), f3 = [], R2 = i.indexOf(P2, W2);
        }
        function L2(e3) {
          return { data: u3, errors: h3, meta: { delimiter: M2, linebreak: P2, aborted: H2, truncated: !!e3, cursor: d3 + (t2 || 0) } };
        }
        function F2() {
          q2(L2()), u3 = [], h3 = [];
        }
      }, this.abort = function() {
        H2 = true;
      }, this.getCharIndex = function() {
        return W2;
      };
    }
    function _2(e2) {
      var t2 = e2.data, r3 = a[t2.workerId], i = false;
      if (t2.error)
        r3.userError(t2.error, t2.file);
      else if (t2.results && t2.results.data) {
        var n3 = { abort: function() {
          i = true, m2(t2.workerId, { data: [], errors: [], meta: { aborted: true } });
        }, pause: y2, resume: y2 };
        if (J2(r3.userStep)) {
          for (var s2 = 0; s2 < t2.results.data.length && (r3.userStep({ data: t2.results.data[s2], errors: t2.results.errors, meta: t2.results.meta }, n3), !i); s2++)
            ;
          delete t2.results;
        } else
          J2(r3.userChunk) && (r3.userChunk(t2.results, n3, t2.file), delete t2.results);
      }
      t2.finished && !i && m2(t2.workerId, t2.results);
    }
    function m2(e2, t2) {
      var r3 = a[e2];
      J2(r3.userComplete) && r3.userComplete(t2), r3.terminate(), delete a[e2];
    }
    function y2() {
      throw new Error("Not implemented.");
    }
    function w2(e2) {
      if ("object" != typeof e2 || null === e2)
        return e2;
      var t2 = Array.isArray(e2) ? [] : {};
      for (var r3 in e2)
        t2[r3] = w2(e2[r3]);
      return t2;
    }
    function v2(e2, t2) {
      return function() {
        e2.apply(t2, arguments);
      };
    }
    function J2(e2) {
      return "function" == typeof e2;
    }
    return o && (f2.onmessage = function(e2) {
      var t2 = e2.data;
      void 0 === b2.WORKER_ID && t2 && (b2.WORKER_ID = t2.workerId);
      if ("string" == typeof t2.input)
        f2.postMessage({ workerId: b2.WORKER_ID, results: b2.parse(t2.input, t2.config), finished: true });
      else if (f2.File && t2.input instanceof File || t2.input instanceof Object) {
        var r3 = b2.parse(t2.input, t2.config);
        r3 && f2.postMessage({ workerId: b2.WORKER_ID, results: r3, finished: true });
      }
    }), (l2.prototype = Object.create(h2.prototype)).constructor = l2, (c2.prototype = Object.create(h2.prototype)).constructor = c2, (p2.prototype = Object.create(p2.prototype)).constructor = p2, (g2.prototype = Object.create(h2.prototype)).constructor = g2, b2;
  });
})(papaparse_min);
var papaparse_minExports = papaparse_min.exports;
const ColumnImportMode = {
  w: { termParam: "WoText", txt: "Term" },
  t: { termParam: "WoTranslation", txt: "Translation" },
  r: { termParam: "WoRomanization", txt: "Romanization" },
  s: { termParam: "WoSentence", txt: "Sentence" },
  g: { termParam: "TODO", txt: "Tag List" },
  x: { termParam: "TODO", txt: "Don't Import" }
};
function UploadWords() {
  const navigator2 = useInternalNavigate();
  const refMap = {
    status: reactExports.useRef(null),
    file: reactExports.useRef(null),
    lang: reactExports.useRef(null),
    c1: reactExports.useRef(null),
    c2: reactExports.useRef(null),
    c3: reactExports.useRef(null),
    c4: reactExports.useRef(null),
    c5: reactExports.useRef(null)
  };
  const fileValidator = object({ files: array(any()) });
  const validator = object({
    // TODO at least has term, no dupes
    columns: nonempty(array()),
    file: fileValidator,
    TxLgId: languagesId
  });
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(Header, { title: "" }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("form", { encType: "multipart/form-data", className: "validate", children: /* @__PURE__ */ jsxRuntimeExports.jsxs("table", { className: "tab3", cellSpacing: 0, cellPadding: 5, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("td", { className: "td1 center", children: /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "Language:" }) }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(LanguageDropdown, { dropdownRef: refMap.lang }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(RequiredLineButton, {})
        ] })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "Import Data:" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "Format per line:",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "C1 D C2 D C3 D C4 D C5",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: 'Field Delimiter "D":' }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("select", { name: "Tab", children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "c", selected: true, children: 'Comma "," [CSV File, LingQ]' }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "t", children: "TAB (ASCII 9) [TSV File]" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "h", children: 'Hash "#" [Direct Input]' })
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "Column Assignment:" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          '"C1":',
          " ",
          /* @__PURE__ */ jsxRuntimeExports.jsxs("select", { ref: refMap.c1, name: "Col1", children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "w", selected: true, children: "Term" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "t", children: "Translation" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "r", children: "Romanization" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "s", children: "Sentence" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "g", children: "Tag List" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "x", children: "Don't import" })
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          '"C2":',
          " ",
          /* @__PURE__ */ jsxRuntimeExports.jsxs("select", { ref: refMap.c2, name: "Col2", children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "w", children: "Term" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "t", selected: true, children: "Translation" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "r", children: "Romanization" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "s", children: "Sentence" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "g", children: "Tag List" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "x", children: "Don't import" })
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          '"C3":',
          " ",
          /* @__PURE__ */ jsxRuntimeExports.jsxs("select", { ref: refMap.c3, name: "Col3", children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "w", children: "Term" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "t", children: "Translation" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "r", children: "Romanization" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "s", children: "Sentence" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "g", children: "Tag List" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "x", selected: true, children: "Don't import" })
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          '"C4":',
          " ",
          /* @__PURE__ */ jsxRuntimeExports.jsxs("select", { ref: refMap.c4, name: "Col4", children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "w", children: "Term" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "t", children: "Translation" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "r", children: "Romanization" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "s", children: "Sentence" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "g", children: "Tag List" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "x", selected: true, children: "Don't import" })
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          '"C5":',
          " ",
          /* @__PURE__ */ jsxRuntimeExports.jsxs("select", { ref: refMap.c5, name: "Col5", children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "w", children: "Term" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "t", children: "Translation" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "r", children: "Romanization" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "s", children: "Sentence" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "g", children: "Tag List" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "x", selected: true, children: "Don't import" })
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("b", { children: [
            "Overwrite existent",
            /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
            "terms"
          ] }),
          ":",
          /* @__PURE__ */ jsxRuntimeExports.jsxs("select", { name: "Over", children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "0", selected: true, children: "No" }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "1", children: "Yes" })
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "Important:" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "You must specify the term.",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "Translation, romanization, ",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "sentence and tag list",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "are optional. The tag list ",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "must be separated either",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "by spaces or commas."
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1", children: [
          "Either specify a ",
          /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "File to upload" }),
          ":",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx("input", { ref: refMap.file, name: "thefile", type: "file" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "Or" }),
          " type in or paste from clipboard (do ",
          /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "NOT" }),
          " specify file):",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "textarea",
            {
              className: "checkoutsidebmp",
              name: "Upload",
              cols: 60,
              rows: 25
            }
          )
        ] })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("b", { children: "Status" }),
          " for all uploaded terms:"
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("select", { ref: refMap.status, className: "notempty", name: "WoStatus", children: Object.keys(StrengthMap).filter((val) => val !== "0").map((key) => /* @__PURE__ */ jsxRuntimeExports.jsxs("option", { value: StrengthMap[key].classKey, children: [
            StrengthMap[key].status,
            " [",
            key,
            "]"
          ] })) }),
          " ",
          /* @__PURE__ */ jsxRuntimeExports.jsx(RequiredLineButton, {})
        ] })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("tr", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { className: "td1 center", colSpan: 2, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("span", { className: "red2", children: [
          "A DATABASE",
          " ",
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "input",
            {
              type: "button",
              value: "BACKUP",
              onClickCapture: () => navigator2("/backup_restore")
            }
          ),
          " ",
          "MAY BE ADVISABLE!",
          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
          "PLEASE DOUBLE-CHECK EVERYTHING!"
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "input",
          {
            type: "button",
            value: "<< Back",
            onClickCapture: () => navigator2("/")
          }
        ),
        " ",
        "      |      ",
        " ",
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "input",
          {
            type: "button",
            name: "op",
            value: "Import",
            onClick: async () => {
              if (!window.confirm(
                "Did you double-check everything?\nAre you sure?"
              )) {
                return;
              }
              CheckAndSubmit(
                refMap,
                {
                  file: (val) => {
                    console.log("submit file", val);
                    return val;
                  }
                },
                validator,
                async (value) => {
                  const fileBlob = value.file.files[0];
                  const stringdata = await fileBlob?.text();
                  const data = papaparse_minExports.parse(stringdata);
                  const colVals = [
                    refMap.c1.current.value,
                    refMap.c2.current.value,
                    refMap.c3.current.value,
                    refMap.c4.current.value,
                    refMap.c5.current.value
                  ];
                  const colIndsToCareAbout = colVals.reduce(
                    (prev, curr, currInd) => {
                      return curr !== "x" ? [
                        ...prev,
                        [currInd, curr]
                      ] : prev;
                    },
                    []
                  );
                  const parsedTerms = data.data.map((row) => {
                    const term = Object.fromEntries(
                      colIndsToCareAbout.map(([ind, colKey]) => {
                        return [
                          ColumnImportMode[colKey].termParam,
                          row[ind]
                        ];
                      })
                    );
                    return term;
                  });
                  dataService.addMultipleTerms(parsedTerms);
                }
              );
            }
          }
        )
      ] }) })
    ] }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("p", { children: [
      "Sentences should contain the term in curly brackets ",
      '"... {term} ..."',
      ".",
      /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
      "If not, such sentences can be automatically created later with the",
      " ",
      /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
      '"Set Term Sentences" action in the',
      " ",
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        "input",
        {
          type: "button",
          value: "My Texts",
          onClick: () => navigator2("/edit_texts")
        }
      ),
      " ",
      "screen."
    ] })
  ] });
}
const DefaultColors = {
  // nonsaturated
  lum0: "#000000",
  lum1: "#808080",
  lum2: "#999999",
  lum3: "#DDDDDD",
  lum4: "#EEEEEE",
  lum5: "#F8F8F8",
  lum6: "#FFFFFF",
  //   right/wrong
  right: "#006400",
  wrong: "#C00000",
  //   value colors
  str0: "#ADDFFF",
  str1: "#F5B8A9",
  str2: "#F5CCA9",
  str3: "#F5E1A9",
  str4: "#F5F3A9",
  str5: "#A9F5A9",
  //   offwhites
  off0: "#FFFFD0",
  off1: "#FFFFE0",
  off2: "#FFFACD",
  // highlight
  highlightColor0: "#0000FF",
  highlightColor1: "#FF0000",
  //   etc
  test7: "#006699",
  test8: "#0099CC",
  test9: "#BBFFBB",
  test10: "#CCFFCC",
  test11: "#DDFFDD"
};
const DarkColors = {
  // nonsaturated
  lum0: "#FFFFFF",
  lum1: "#F8F8F8",
  lum2: "#EEEEEE",
  lum4: "#999999",
  lum5: "#808080",
  lum3: "#555555",
  lum6: "#000000",
  //   value colors
  str0: "#004ED2",
  str1: "#B200DB",
  str2: "#D31700",
  str3: "#FF7900",
  str4: "#6BC837",
  str5: "#117433",
  //   right/wrong
  right: "#006400",
  wrong: "#C00000",
  //   offwhites
  off0: "#FFFFD0",
  off1: "#FFFFE0",
  // wizard color
  off2: "#4400AA",
  // highlight
  highlightColor0: "#0000FF",
  highlightColor1: "#FF0000",
  //   etc
  test7: "#006699",
  test8: "#0099CC",
  test9: "#BBFFBB",
  test10: "#CCFFCC",
  test11: "#DDFFDD"
};
const VariantMap = {
  dark: DarkColors,
  light: DefaultColors
};
const createColors = (variant) => {
  const Colors = VariantMap[variant];
  return {
    hr: {
      border: "1px solid rgb(128, 128, 128)"
    },
    input: {
      backgroundColor: `${Colors.lum6}`,
      color: `${Colors.lum0}`
    },
    select: {
      backgroundColor: `${Colors.lum6}`,
      color: `${Colors.lum0}`
    },
    textArea: {
      backgroundColor: `${Colors.lum6}`,
      color: `${Colors.lum0}`
    },
    body: {
      backgroundColor: Colors.lum6,
      color: Colors.lum0,
      font: '100%/1.25 "Lucida Grande",Arial,sans-serif,STHeiti,"Arial Unicode MS",MingLiu',
      margin: "20px",
      padding: "0px"
    },
    "input[type=text]": {
      font: '85% "Lucida Grande",Arial,sans-serif,STHeiti,"Arial Unicode MS",MingLiu',
      border: `1px solid ${Colors.lum0}`,
      padding: "3px"
    },
    p: {
      margin: "5px 0 5px 0",
      padding: 0
    },
    h3: {
      margin: "0px 0 0px 0",
      padding: "0"
    },
    h4: {
      margin: "5px 0 10px 0",
      padding: "0"
    },
    "span.status0": {
      backgroundColor: Colors.str0,
      color: Colors.lum0
    },
    "span.status1": {
      backgroundColor: Colors.str1,
      color: Colors.lum0
    },
    "span.status2": {
      backgroundColor: Colors.str2,
      color: Colors.lum0
    },
    "span.status3": {
      backgroundColor: Colors.str3,
      color: Colors.lum0
    },
    "span.status4": {
      backgroundColor: Colors.str4,
      color: Colors.lum0
    },
    "span.status5": {
      backgroundColor: Colors.test11,
      color: Colors.lum0
    },
    "span.status99": {
      backgroundColor: Colors.lum5,
      borderBottom: `solid 2px ${Colors.test10}`,
      color: Colors.lum0
    },
    "span.status98": {
      backgroundColor: Colors.lum5,
      borderBottom: `dashed 1px ${Colors.test10}`,
      color: Colors.lum0
    },
    "span.mwsty": {
      marginRight: "2px",
      fontSize: "60%",
      fontWeight: "bold",
      color: Colors.lum0,
      verticalAlign: "top,"
    },
    "span.wsty": {
      marginRight: "2px",
      color: Colors.lum0
    },
    "span.todosty": {
      backgroundColor: Colors.str3
    },
    "span.doneoksty": {
      backgroundColor: Colors.str5
    },
    "span.donewrongsty": {
      backgroundColor: Colors.str1
    },
    "span.status5stat": {
      backgroundColor: Colors.test9,
      color: Colors.lum0
    },
    textarea: {
      font: '85% "Lucida Grande",Arial,sans-serif,STHeiti,"Arial Unicode MS",MingLiu',
      border: `1px solid ${Colors.lum0}`,
      padding: "3px"
    },
    "table.tab1": {
      backgroundColor: Colors.lum5,
      marginBottom: "10px",
      marginTop: "10px",
      borderTop: `1px solid ${Colors.lum0}`,
      borderLeft: `1px solid ${Colors.lum0}`,
      width: "850px"
    },
    "table.tab2": {
      backgroundColor: Colors.lum5,
      marginBottom: "10px",
      marginTop: "10px",
      borderTop: `1px solid ${Colors.lum0}`,
      borderLeft: `1px solid ${Colors.lum0}`,
      width: "100%"
    },
    "table.tab3": {
      backgroundColor: Colors.lum5,
      marginBottom: "10px",
      marginTop: "10px",
      borderTop: `1px solid ${Colors.lum0}`,
      borderLeft: `1px solid ${Colors.lum0}`,
      width: "auto"
    },
    "td.td1": {
      borderBottom: `1px solid ${Colors.lum0}`,
      borderRight: `1px solid ${Colors.lum0}`,
      verticalAlign: "top,"
    },
    "td.td1bot": {
      borderBottom: `1px solid ${Colors.lum0}`,
      borderRight: `1px solid ${Colors.lum0}`,
      verticalAlign: "bottom,"
    },
    "th.th1": {
      borderBottom: `1px solid ${Colors.lum0}`,
      borderRight: `1px solid ${Colors.lum0}`,
      backgroundColor: Colors.lum3,
      verticalAlign: "top,"
    },
    "th.clickable": {
      cursor: "pointer"
    },
    ".click": {
      cursor: "pointer",
      color: Colors.wrong
    },
    ".clickedit": {
      cursor: "pointer"
    },
    ".hide": {
      display: "none"
    },
    a: {
      textDecoration: "none"
    },
    "a:link": {
      color: Colors.wrong
    },
    "a:visited": {
      color: Colors.wrong
    },
    "a:active": {
      color: Colors.wrong
    },
    "a:focus": {
      color: Colors.wrong
    },
    "a:hover": {
      color: Colors.wrong
    },
    ".a": {
      textDecoration: "none",
      cursor: "pointer",
      color: Colors.wrong
    },
    ".a:focus": {
      color: Colors.str3
    },
    ".a:hover": {
      color: Colors.str3
    },
    img: {
      border: "0pt none"
    },
    ".red": {
      color: Colors.highlightColor1,
      fontWeight: "bold",
      backgroundColor: Colors.off0,
      textAlign: "center",
      fontSize: "120%"
    },
    ".msgblue": {
      color: Colors.highlightColor0,
      fontWeight: "bold",
      padding: "3px",
      backgroundColor: Colors.off1,
      textAlign: "center",
      fontSize: "120%"
    },
    ".red2": {
      color: Colors.highlightColor1,
      fontWeight: "bold"
    },
    ".red3": {
      color: Colors.highlightColor1
    },
    ".scorered": {
      fontWeight: "bold",
      color: Colors.highlightColor1
    },
    ".scoregreen": {
      color: Colors.right
    },
    ".left": {
      textAlign: "left"
    },
    ".right": {
      textAlign: "right"
    },
    ".center": {
      textAlign: "center"
    },
    ".bigger": {
      fontSize: "130%"
    },
    ".smaller": {
      fontSize: "80%"
    },
    ".backgray": {
      backgroundColor: Colors.lum3
    },
    ".backlightyellow": {
      backgroundColor: Colors.off2
    },
    ".small": {
      color: Colors.lum0,
      fontSize: "60%"
    },
    ".smallgray": {
      color: `${Colors.lum1}`,
      fontSize: "60%"
    },
    ".smallgray2": {
      color: `${Colors.lum1}`,
      fontSize: "80%"
    },
    ".smallgray3": {
      color: `${Colors.lum1}`,
      fontSize: "70%",
      width: "850px",
      marginBottom: "20px"
    },
    "#learnstatus": {
      color: Colors.lum0,
      fontSize: "120%",
      fontWeight: "bold"
    },
    "#iknowall": {
      backgroundColor: Colors.str0,
      cursor: "pointer",
      color: Colors.wrong,
      padding: "5px",
      border: `1px solid ${Colors.lum0}`,
      textAlign: "center"
    },
    "img.lwtlogo": {
      marginRight: "15px",
      float: "left"
    },
    "img.lwtlogoright": {
      marginLeft: "30px",
      float: "right"
    },
    ".inline": {
      display: "inline"
    },
    ".grayborder": {
      border: "1pt solid #808080"
    },
    ".graydotted": {
      marginTop: "30px",
      paddingTop: "5px",
      borderTop: `1px dotted ${Colors.lum0}`
    },
    "#printoptions": {
      marginBottom: "15px",
      paddingBottom: "15px",
      borderBottom: `1px dotted ${Colors.lum0}`,
      lineHeight: 1.8,
      marginTop: "20px"
    },
    ".width50px": {
      width: "50px"
    },
    ".width99pc": {
      width: "99%"
    },
    ".width45pc": {
      width: "45%"
    },
    dd: {
      marginTop: "10pt"
    },
    dt: {
      marginTop: "10pt"
    },
    ".annterm": {
      fontWeight: "bold",
      borderBottom: `2px solid ${Colors.lum0}`
    },
    ".anntermruby": {
      fontWeight: "normal",
      borderBottom: `2px solid ${Colors.lum0}`
    },
    ".annrom": {
      color: Colors.lum2,
      fontSize: "60%",
      fontStyle: "italic"
    },
    ".annromruby": {
      color: Colors.lum0,
      fontSize: "100%",
      fontStyle: "italic"
    },
    ".annromrubysolo": {
      color: Colors.lum0,
      fontSize: "100%",
      fontStyle: "normal"
    },
    ".anntrans": {
      color: Colors.test8,
      fontSize: "60%",
      fontStyle: "normal"
    },
    ".anntransruby": {
      color: Colors.test8,
      fontSize: "100%",
      fontStyle: "normal"
    },
    ".anntransruby2": {
      color: Colors.test7,
      fontSize: "125%",
      fontStyle: "normal"
    },
    "#footer": {
      bottom: 0,
      position: "absolute",
      width: "100%",
      height: "45px",
      lineHeight: "30px",
      background: Colors.lum3,
      fontSize: "14px",
      textAlign: "center",
      borderTop: `1px solid ${Colors.lum0}`
    },
    ".borderl": {
      borderLeft: `1px solid ${Colors.lum0}`,
      borderTop: `1px solid ${Colors.lum0}`,
      borderBottom: `1px solid ${Colors.lum0}`
    },
    ".borderr": {
      borderTop: `1px solid ${Colors.lum0}`,
      borderBottom: `1px solid ${Colors.lum0}`,
      borderRight: `1px solid ${Colors.lum0}`
    },
    ".uwordmarked": {
      fontWeight: "bold",
      borderTop: `3px solid ${Colors.highlightColor1}`,
      borderBottom: `3px solid ${Colors.highlightColor1}`,
      borderRight: `3px solid ${Colors.highlightColor1}`,
      borderLeft: `3px solid ${Colors.highlightColor1}`
    },
    ".kwordmarked": {
      fontWeight: "bold",
      borderTop: `3px solid ${Colors.lum6}`,
      borderBottom: `3px solid ${Colors.lum6}`,
      borderLeft: `3px solid ${Colors.lum6}`,
      borderRight: `3px solid ${Colors.lum6}`
    },
    "#termtags": {
      width: "340px",
      marginTop: "0px",
      marginBottom: "0px",
      marginLeft: "2px"
    },
    "#texttags": {
      width: "340px",
      marginTop: "0px",
      marginBottom: "0px",
      marginLeft: "2px"
    },
    ".editable_textarea": {
      display: "inline"
    },
    ".nowrap": {
      whiteSpace: "nowrap",
      marginLeft: "20pt"
    },
    ".borderleft": {
      borderLeft: `1px solid ${Colors.lum6}`,
      borderTop: `1px solid ${Colors.lum6}`,
      borderBottom: `1px solid ${Colors.lum6}`,
      backgroundColor: Colors.lum4
    },
    ".bordermiddle": {
      borderTop: `1px solid ${Colors.lum6}`,
      borderBottom: `1px solid ${Colors.lum6}`,
      backgroundColor: Colors.lum4
    },
    ".borderright": {
      borderRight: `1px solid ${Colors.lum6}`,
      borderTop: `1px solid ${Colors.lum6}`,
      borderBottom: `1px solid ${Colors.lum6}`,
      backgroundColor: Colors.lum4
    },
    ".wizard": {
      margin: "20px 0 5px 0"
    },
    /**************************************************************
    Additional styles for printing
    ***************************************************************/
    "@media print": {
      ".noprint": {
        display: "none"
      },
      "#print": {
        fontSize: "75%"
      }
    },
    /*************************************************************
    Split View
    ***************************************************************/
    ".Resizer": {
      position: "relative",
      background: "darkGray",
      "-moz-box-sizing": "border-box",
      "-webkit-box-sizing": "border-box",
      "box-sizing": "border-box",
      "-moz-background-clip": "padding",
      "-webkit-background-clip": "padding",
      "background-clip": "padding-box"
    },
    /*
     .Resizer:hover,
     .Resizer:active {
    -webkit-transition: all 2s ease,
    transition: all 2s ease,
     }*/
    ".Resizer.horizontal": {
      height: "20px",
      margin: "-5px 0",
      "border-top": "5px solid rgba(255, 255, 255, 0)",
      "border-bottom": "5px solid rgba(255, 255, 255, 0)",
      cursor: "row-resize",
      width: "100%"
    },
    /*   
     .Resizer.horizontal:hover,
     .Resizer.Resizer.horizontal:active {
    border-top: 5px solid rgba(0, 0, 0, 0.5),
    border-bottom: 5px solid rgba(0, 0, 0, 0.5),
     }
      */
    ".Resizer.vertical": {
      width: "20px",
      margin: "0 -5px",
      "border-left": "5px solid rgba(255, 255, 255, 0)",
      "border-right": "5px solid rgba(255, 255, 255, 0)",
      cursor: "col-resize"
    },
    /*
     .Resizer.vertical:hover,
     .Resizer.vertical:active {
    border-left: 5px solid rgba(0, 0, 0, 0.5),
    border-right: 5px solid rgba(0, 0, 0, 0.5),
     }
     */
    ".Resizer.disabled": {
      cursor: "notAllowed"
    },
    // '.Resizer.disabled':hover,
    ".Resizer.disabled:active": {
      borderColor: "transparent"
    },
    // '.Resizer::after',
    ".Resizer::before": {
      content: "",
      "border-left": "1px solid #333",
      position: "absolute",
      top: "50%",
      transform: "translateY(-100%)",
      right: 0,
      display: "inline-block",
      height: "20px",
      margin: "0 2px"
    },
    " .Resizer::before": {
      left: 0
    }
  };
};
function GlobalStyle() {
  const { styleVariant } = useAppContext();
  const style = createColors(styleVariant);
  const StyleHeader = $e(style);
  return /* @__PURE__ */ jsxRuntimeExports.jsx(StyleHeader, {});
}
function App() {
  const [{ notificationMessageDisplay, notificationMessage }] = useData([
    "notificationMessageDisplay",
    "notificationMessage"
  ]);
  console.log("msg", { notificationMessage });
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(AppContext.Provider, { value: AppVariables, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(GlobalStyle, {}),
    notificationMessage && /* @__PURE__ */ jsxRuntimeExports.jsxs(
      "p",
      {
        id: "hide3",
        className: "msgblue",
        style: {
          display: notificationMessageDisplay === 0 ? "none" : void 0,
          maxHeight: 100,
          height: `${notificationMessageDisplay}%`
        },
        children: [
          "+++ ",
          notificationMessage?.txt,
          " +++"
        ]
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(BrowserRouter, { children: /* @__PURE__ */ jsxRuntimeExports.jsxs(Routes, { children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(Route, { path: "/", element: /* @__PURE__ */ jsxRuntimeExports.jsx(LandingPage, {}) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Route, { path: "/index", element: /* @__PURE__ */ jsxRuntimeExports.jsx(LandingPage, {}) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Route, { path: "/check_text", element: /* @__PURE__ */ jsxRuntimeExports.jsx(CheckText, {}) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Route, { path: "/backup_restore", element: /* @__PURE__ */ jsxRuntimeExports.jsx(BackupScreen, {}) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Route, { path: "/info", element: /* @__PURE__ */ jsxRuntimeExports.jsx(InfoPage, {}) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Route, { path: "/edit_words", element: /* @__PURE__ */ jsxRuntimeExports.jsx(TermsWrapper, {}) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Route, { path: "/edit_texts", element: /* @__PURE__ */ jsxRuntimeExports.jsx(LibraryWrapper, {}) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        Route,
        {
          path: "/edit_archivedtexts",
          element: /* @__PURE__ */ jsxRuntimeExports.jsx(EditArchivedTextsWrapper, {})
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Route, { path: "/edit_tags", element: /* @__PURE__ */ jsxRuntimeExports.jsx(EditTagsWrapper, {}) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Route, { path: "/edit_texttags", element: /* @__PURE__ */ jsxRuntimeExports.jsx(EditTextTagsWrapper, {}) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Route, { path: "/edit_languages", element: /* @__PURE__ */ jsxRuntimeExports.jsx(LanguagesWrapper, {}) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Route, { path: "/long_text_import", element: /* @__PURE__ */ jsxRuntimeExports.jsx(LongText, {}) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Route, { path: "/statistics", element: /* @__PURE__ */ jsxRuntimeExports.jsx(StatisticsComponent, {}) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Route, { path: "/new_word", element: /* @__PURE__ */ jsxRuntimeExports.jsx(AddNewWordWrapper, {}) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Route, { path: "/settings", element: /* @__PURE__ */ jsxRuntimeExports.jsx(SettingsComponent, {}) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Route, { path: "/do_text", element: /* @__PURE__ */ jsxRuntimeExports.jsx(ReaderWrapper, {}) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Route, { path: "/do_test", element: /* @__PURE__ */ jsxRuntimeExports.jsx(TestWrapper, {}) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Route, { path: "/print_text", element: /* @__PURE__ */ jsxRuntimeExports.jsx(PrintTextWrapper, {}) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Route, { path: "/upload_words", element: /* @__PURE__ */ jsxRuntimeExports.jsx(UploadWordsWrapper, {}) })
    ] }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, {})
  ] });
}
function Switch({
  on,
  children
}) {
  const [firstChild, secondChild] = React.Children.toArray(children);
  return on ? secondChild : firstChild;
}
function useInternalParams(pageKey) {
  const [searchParams] = useSearchParams();
  return Object.fromEntries(
    headerValuesTemp[pageKey].params.map((val) => {
      return [val, searchParams.get(val)];
    })
  );
}
function TermsWrapper() {
  const {
    filterlang,
    new: newVal,
    page,
    sort,
    chg,
    tag1,
    status,
    tag12,
    tag2,
    text,
    lang
  } = useInternalParams("edit_words");
  const [{ activeLanguageId }] = useData(["activeLanguageId"]);
  const isNew = newVal === "1";
  if (filterlang === "") {
    if (activeLanguageId !== null) {
      dataService.setActiveLanguage(null);
    }
  } else if (filterlang !== null && Number.parseInt(filterlang) !== activeLanguageId) {
    dataService.setActiveLanguage(Number.parseInt(filterlang));
  }
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(Switch, { on: isNew, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs(Switch, { on: chg !== null, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        Terms,
        {
          pageNum: page !== null ? Number.parseInt(page) : 1,
          sort: sort ? Number.parseInt(sort) : null,
          status: status ? Number.parseInt(status) : null,
          textFilter: text === null ? null : Number.parseInt(text),
          tag1: tag1 === null ? null : Number.parseInt(tag1),
          tag12: tag12 === null || !["0", "1"].includes(tag12) ? null : Number.parseInt(tag12),
          tag2: tag2 === null ? null : Number.parseInt(tag2)
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports.jsx(ChangeTerm, { chgID: Number.parseInt(chg) })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(AddTerm, { langId: Number.parseInt(lang) })
  ] });
}
function UploadWordsWrapper() {
  return /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(UploadWords, {}) });
}
function PrintTextWrapper() {
  const { text } = useInternalParams("print_text");
  if (text === null) {
    throw new Error("Need To Specify Text ID");
  }
  return /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(PrintText, { textID: Number.parseInt(text) }) });
}
function LanguagesWrapper() {
  const [searchParams] = useSearchParams();
  const isNew = searchParams.get("new") === "1";
  const chgID = searchParams.get("chg");
  const refreshID = searchParams.get("refresh");
  if (refreshID !== null) {
    dataService.reparseText(Number.parseInt(refreshID));
  }
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(Switch, { on: isNew, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs(Switch, { on: chgID !== null, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(LanguagesPage, {}),
      /* @__PURE__ */ jsxRuntimeExports.jsx(EditLanguage, { chgID: Number.parseInt(chgID) })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(NewLanguage, {})
  ] });
}
function AddNewWordWrapper() {
  const [searchParams] = useSearchParams();
  const langID = searchParams.get("lang");
  if (langID === null) {
    throw new Error("Need To Specify Language ID");
  }
  return /* @__PURE__ */ jsxRuntimeExports.jsx(AddNewWordPane, { langId: Number.parseInt(langID) });
}
function LibraryWrapper() {
  const {
    chg,
    arch,
    page,
    query,
    tag1,
    tag2,
    new: newVal
  } = useInternalParams("edit_texts");
  const isNew = newVal === "1";
  if (arch !== null) {
    dataService.archiveText(Number.parseInt(arch));
  }
  console.log("new", isNew);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(Switch, { on: isNew, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs(Switch, { on: chg !== null, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        Library,
        {
          currentPage: page !== null ? Number.parseInt(page) : 1,
          query,
          filterTag1: tag1 !== null ? Number.parseInt(tag1) : null,
          filterTag2: tag2 !== null ? Number.parseInt(tag2) : null
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports.jsx(EditText, { chgID: Number.parseInt(chg) })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(ImportShortText, {})
  ] });
}
function EditArchivedTextsWrapper() {
  const [searchParams] = useSearchParams();
  const query = searchParams.get("query");
  const page = searchParams.get("page");
  return /* @__PURE__ */ jsxRuntimeExports.jsx(
    EditArchivedTexts,
    {
      query: query || "",
      currentPage: page !== null ? Number.parseInt(page) : 1
    }
  );
}
function EditTextTagsWrapper() {
  const [searchParams] = useSearchParams();
  const query = searchParams.get("query");
  const isNew = searchParams.get("new") === "1";
  const chgID = searchParams.get("chg");
  const page = searchParams.get("page");
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(Switch, { on: isNew, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs(Switch, { on: chgID !== null, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        DisplayTextTags,
        {
          page: page !== null ? Number.parseInt(page) : void 0,
          query: query || ""
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports.jsx(EditTextTag, { chgID: Number.parseInt(chgID) })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(NewTextTag, {})
  ] });
}
function EditTagsWrapper() {
  const [searchParams] = useSearchParams();
  const query = searchParams.get("query");
  const isNew = searchParams.get("new") === "1";
  const page = searchParams.get("page");
  const chgId = searchParams.get("chg");
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(Switch, { on: chgId !== null, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs(Switch, { on: isNew, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        DisplayTags,
        {
          query: query || "",
          currentPage: page !== null ? Number.parseInt(page) : 1
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports.jsx(NewTag, {})
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(EditTag, { chgId: Number.parseInt(chgId) })
  ] });
}
function ReaderWrapper() {
  const [searchParams] = useSearchParams();
  const start = searchParams.get("start");
  return /* @__PURE__ */ jsxRuntimeExports.jsx(ReaderPage, { textId: Number.parseInt(start) });
}
function TestWrapper() {
  const [searchParams] = useSearchParams();
  const textID = searchParams.get("text");
  const lang = searchParams.get("lang");
  return /* @__PURE__ */ jsxRuntimeExports.jsx(
    TesterPage,
    {
      langId: lang !== null ? Number.parseInt(lang) : null,
      textId: textID !== null ? Number.parseInt(textID) : null
    }
  );
}
client.createRoot(document.getElementById("root")).render(/* @__PURE__ */ jsxRuntimeExports.jsx(App, {}));
